                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
                        .area vector(rom, abs)
                        .org 4
 0004 0C940000          jmp _int0_isr
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0000                   .dbfunc e int0_isr _int0_isr fV
                        .even
 0000           _int0_isr::
 0000 2A92              st -y,R2
 0002 3A92              st -y,R3
 0004 8A93              st -y,R24
 0006 9A93              st -y,R25
 0008 AA93              st -y,R26
 000A EA93              st -y,R30
 000C FA93              st -y,R31
 000E 2FB6              IN R2,63
 0010 2A92              st -y,R2
 0012                   .dbline -1
 0012                   .dbline 149
 0012           ;  /**************************************************
 0012           ; CTZK
 0012           ; //20161110 增加了全部采样的CRC16校验
 0012           ; //20161113 改进了流量数据中时间和相位由无符号短整型转为浮点数时的转换方法，以防上位机软件出现相位超大值
 0012           ; //20161224 将电机断流判断值由26mA改为13mA，因为目前调节电机工作时空载电流值仅为23~28mA，升级版本为V4.0
 0012           ; //20161229 修改收张电机的本电机同向和反向判断，修改调节电机的电机方向控制（与原来相反）
 0012           ; //20170308 流量采样增加校验帧，升级版本为V4.2
 0012           ; //20170607 电机断路电流由原来的13mA改为26mA 升级版本为V4.3
 0012           ; //20170608 改动电机过流档位并把最大档位提升到250mA，升级版本为V4.4
 0012           ; //20170609 加入调节电机微调功能，升级版本为V4.5
 0012           ; //20170613 增加电机断路电流上位机可设定(共6档)，增加调节电机微调时间由电机命令中自带参数，改上传电流由数字量为工程量（单位mA），堵转电流上传改为档位，版本升为V4.6
 0012           ; //20170614 上传的电缆电压也改为工程量，全部采样增加电缆电压
 0012           ; //20170622  为适应新高压电机驱动的电路板而改进一些功能，版本回退到V3.0
 0012           ; //20170701 为适应新电路板CT_MAIN_V30
 0012           ; //20170703 增加独立压力短节单芯内部总线通讯功能
 0012           ; //20170703 版本从6.0起步，为了与前一阶段的硬件相区别
 0012           ; //20170705 压力短节功能调通 V6.1
 0012           ; //20170711  版本回退到V1.0，方便以后的功能扩展
 0012           ; **************************************************/
 0012           ; #include <iom128v.h>                                                                  
 0012           ; #include <macros.h>
 0012           ; #include <stdio.h>
 0012           ; 
 0012           ;  
 0012           ; #define Debug 0
 0012           ; #define  BB     0x10       //固件版本号
 0012           ; 
 0012           ; 
 0012           ; #define M1_L     {PORTG&=0xf7;}
 0012           ; #define M1_H     {PORTG|=0x08;}
 0012           ; #define M2_L     {PORTG&=0xef;}
 0012           ; #define M2_H     {PORTG|=0x10;}
 0012           ; 
 0012           ;  
 0012           ; 
 0012           ; 
 0012           ; #define MANINT_CLR    { EIFR|=0x01; }
 0012           ; #define MANINT_EN     { EIMSK |= 0x01; }
 0012           ; #define MANINT_DIS    { EIMSK &= 0xFE; }
 0012           ; 
 0012           ; #define INT_EN                        { SEI(); }
 0012           ; #define INT_DIS               { CLI(); }
 0012           ; 
 0012           ;  
 0012           ;     
 0012           ; #define TPSBAUD  {TCNT3H = 0xFE;TCNT3L = 0x60;}
 0012           ;  
 0012           ; 
 0012           ; #define DELAY10 for(Tt=0;Tt<4;Tt++);
 0012           ; #define DELAY20 for(Tt=0;Tt<4;Tt++);
 0012           ; #define DELAY40 for(Tt=0;Tt<16;Tt++); 
 0012           ; #define DELAY50 for(Tt=0;Tt<21;Tt++); 
 0012           ; #define DELAY80 for(Tt=0;Tt<32;Tt++); 
 0012           ; #define DELAY89 for(Tt=0;Tt<36;Tt++); 
 0012           ; #define DELAY100 for(Tt=0;Tt<42;Tt++); 
 0012           ; #define DELAY170 for(Tt=0;Tt<72;Tt++);
 0012           ; #define DELAY268 for(Tt=0;Tt<113;Tt++);
 0012           ; #define DELAY397 for(Tt=0;Tt<165;Tt++);
 0012           ; #define DELAY400 for(Tt=0;Tt<168;Tt++);
 0012           ; 
 0012           ; /* 接收电平值 */
 0012           ; #define GET_RX() (PIND & (1<<PIND1))  
 0012           ; /* 发送高电平 */   
 0012           ; #define SET_TX() (PORTD |= 0x40)
 0012           ; /* 发送低电平 */ 
 0012           ; #define CLR_TX() (PORTD &= 0xbf)
 0012           ;         
 0012           ; 
 0012           ;  
 0012           ; 
 0012           ; /* 定时器中断发生时的读写周期 */
 0012           ; enum timer_turn {   
 0012           ;  RX_TURN = 0,                /* 读周期 */    
 0012           ;  TX_TURN,                    /* 写周期 */
 0012           ;  };
 0012           ;  
 0012           ; /* 数据帧结构 */
 0012           ; __flash enum frame_bit {    BIT_0 = 0,    BIT_1,    BIT_2,    BIT_3,    BIT_4,    BIT_5,    BIT_6,    BIT_7,    BIT_STOP,    BIT_IDLE,    BIT_START,};
 0012           ; 
 0012           ; union FIB
 0012           ; {
 0012           ;  float f;
 0012           ;  unsigned int i[2];
 0012           ;  unsigned char b[4];
 0012           ; }myFIB;
 0012           ; 
 0012           ;  
 0012           ;  
 0012           ;  
 0012           ; 
 0012           ; unsigned char T_Flag;
 0012           ; 
 0012           ; unsigned int Timer0Counter;//定时器0超过4ms时的计数
 0012           ; 
 0012           ; unsigned char Uart0RxData[74];//串口0接收数据缓存
 0012           ; unsigned char Uart0RxCounter;
 0012           ; 
 0012           ; unsigned char Uart1RxData[4];//串口1接收数据缓存
 0012           ; unsigned char Uart1RxCounter;
 0012           ; 
 0012           ; unsigned char Rx[18];//解码接收9位共18个半位
 0012           ; int  T_dat,R_dat;//曼码发送数据
 0012           ; int TPS_PData,TPS_TData;
 0012           ; unsigned char T_com;//曼码发送命令
 0012           ; 
 0012           ; unsigned char TimeOutFlag;//发送超时标志
 0012           ; 
 0012           ; unsigned char T_dat_buf[22];//曼码发送缓冲 
 0012           ; 
 0012           ; unsigned int DataFlag;//下发标定系数开始标志
 0012           ; unsigned char Int_count;
 0012           ; unsigned char IntFlag;//接收帧状态
 0012           ; 
 0012           ; unsigned int Tt,k;
 0012           ; unsigned int T2cn;
 0012           ; unsigned char coeffdata[320];
 0012           ; 
 0012           ; unsigned char Uart0TxData[74];//串口发送数据缓存
 0012           ; 
 0012           ; unsigned char EEPAdd;//接收系数存放地址索引
 0012           ; unsigned int coeff_len,coeff_count;//接收系数长度，接收系数计数
 0012           ; unsigned int CompCounter;
 0012           ; 
 0012           ; unsigned int bf;
 0012           ; 
 0012           ; unsigned long lfib;//短整型转浮点数时用的临时变量
 0012           ; unsigned char crc16hi,crc16lo,crc16array[32];
 0012           ; 
 0012           ; 
 0012           ; 
 0012           ; 
 0012           ; void InitialIO(void);
 0012           ; void init_USART0(void);
 0012           ; void SendUart0_2(unsigned char len,unsigned int s);
 0012           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn);
 0012           ; void Pwm_startup(unsigned char motor);
 0012           ; void Start(void);
 0012           ; void SendManchester(void); 
 0012           ; unsigned char SampleADC(unsigned char ch);
 0012           ; void EEPROM_write(unsigned int Address,unsigned char Data);
 0012           ; unsigned char EEPROM_read(unsigned int Address);
 0012           ; void Delay_ms(unsigned int t);
 0012           ; void crc16(unsigned char r_data[],unsigned int length);
 0012           ;  
 0012           ; void int0_isr(void);
 0012           ; 
 0012           ; #pragma interrupt_handler int0_isr:iv_INT0
 0012           ; void int0_isr(void)//外部中断0
 0012           ; { 
 0012                   .dbline 150
 0012           ;    TCCR2 = 0x00; //stop
 0012 2224              clr R2
 0014 25BC              out 0x25,R2
 0016                   .dbline 152
 0016           ;    
 0016           ;     INT_DIS
 0016                   .dbline 152
 0016 F894              cli
 0018                   .dbline 152
 0018                   .dbline 153
 0018           ;       MANINT_DIS
 0018                   .dbline 153
 0018 89B7              in R24,0x39
 001A 8E7F              andi R24,254
 001C 89BF              out 0x39,R24
 001E                   .dbline 153
 001E                   .dbline 155
 001E           ;    
 001E           ;   DELAY10
 001E 3324              clr R3
 0020 3092BE01          sts _Tt+1,R3
 0024 2092BD01          sts _Tt,R2
 0028 09C0              xjmp L5
 002A           L2:
 002A                   .dbline 155
 002A           L3:
 002A                   .dbline 155
 002A 8091BD01          lds R24,_Tt
 002E 9091BE01          lds R25,_Tt+1
 0032 0196              adiw R24,1
 0034 9093BE01          sts _Tt+1,R25
 0038 8093BD01          sts _Tt,R24
 003C           L5:
 003C                   .dbline 155
 003C 8091BD01          lds R24,_Tt
 0040 9091BE01          lds R25,_Tt+1
 0044 8430              cpi R24,4
 0046 E0E0              ldi R30,0
 0048 9E07              cpc R25,R30
 004A 78F3              brlo L2
 004C           X0:
 004C                   .dbline 156
 004C           ;   EIFR|=0x01;//清INT0中断标志 
 004C 88B7              in R24,0x38
 004E 8160              ori R24,1
 0050 88BF              out 0x38,R24
 0052                   .dbline 157
 0052           ;   if((PIND&0x01)==0x00)//高脉冲不足10us则直接跳出
 0052 8099              sbic 0x10,0
 0054 01C0              rjmp L6
 0056           X1:
 0056                   .dbline 158
 0056           ;   {
 0056                   .dbline 159
 0056           ;    goto End;
 0056 C0C1              xjmp L8
 0058           L6:
 0058                   .dbline 162
 0058           ;   }
 0058           ;    
 0058           ;    TCNT2 = 0x00;  
 0058 2224              clr R2
 005A 24BC              out 0x24,R2
 005C                   .dbline 163
 005C           ;    TCCR2 = 0x03; //64分频,8M时钟，每个CLOCK耗时8us，最大定时2048us，每周期10个计数
 005C 83E0              ldi R24,3
 005E 85BD              out 0x25,R24
 0060 29C0              xjmp L10
 0062           L9:
 0062                   .dbline 166
 0062           ;    
 0062           ;    while(1)
 0062           ;    {
 0062                   .dbline 167
 0062           ;      T2cn=TCNT2;
 0062 24B4              in R2,0x24
 0064 3324              clr R3
 0066 3092BA01          sts _T2cn+1,R3
 006A 2092B901          sts _T2cn,R2
 006E                   .dbline 168
 006E           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 006E 80E5              ldi R24,80
 0070 90E0              ldi R25,0
 0072 8215              cp R24,R2
 0074 9305              cpc R25,R3
 0076 08F4              brsh L12
 0078           X2:
 0078                   .dbline 169
 0078           ;         {
 0078                   .dbline 170
 0078           ;           goto End;
 0078 AFC1              xjmp L8
 007A           L12:
 007A                   .dbline 172
 007A           ;         }
 007A           ;      if((PIND&0x01)==0x00)
 007A 8099              sbic 0x10,0
 007C 1BC0              rjmp L14
 007E           X3:
 007E                   .dbline 173
 007E           ;        {
 007E                   .dbline 174
 007E           ;          DELAY20
 007E 2224              clr R2
 0080 3324              clr R3
 0082 3092BE01          sts _Tt+1,R3
 0086 2092BD01          sts _Tt,R2
 008A 09C0              xjmp L19
 008C           L16:
 008C                   .dbline 174
 008C           L17:
 008C                   .dbline 174
 008C 8091BD01          lds R24,_Tt
 0090 9091BE01          lds R25,_Tt+1
 0094 0196              adiw R24,1
 0096 9093BE01          sts _Tt+1,R25
 009A 8093BD01          sts _Tt,R24
 009E           L19:
 009E                   .dbline 174
 009E 8091BD01          lds R24,_Tt
 00A2 9091BE01          lds R25,_Tt+1
 00A6 8430              cpi R24,4
 00A8 E0E0              ldi R30,0
 00AA 9E07              cpc R25,R30
 00AC 78F3              brlo L16
 00AE           X4:
 00AE                   .dbline 175
 00AE           ;          if((PIND&0x01)==0x00)
 00AE 8099              sbic 0x10,0
 00B0 01C0              rjmp L20
 00B2           X5:
 00B2                   .dbline 176
 00B2           ;           {
 00B2                   .dbline 177
 00B2           ;             break;
 00B2 31C0              xjmp L23
 00B4           L20:
 00B4                   .dbline 179
 00B4           ;           }
 00B4           ;        }
 00B4           L14:
 00B4                   .dbline 180
 00B4           ;    }
 00B4           L10:
 00B4                   .dbline 165
 00B4 D6CF              xjmp L9
 00B6           L22:
 00B6                   .dbline 184
 00B6           ;                  
 00B6           ;     //开始判断同步头  
 00B6           ;       while(1)//还没有上升沿到来,死等
 00B6           ;       {
 00B6                   .dbline 185
 00B6           ;         T2cn=TCNT2;
 00B6 24B4              in R2,0x24
 00B8 3324              clr R3
 00BA 3092BA01          sts _T2cn+1,R3
 00BE 2092B901          sts _T2cn,R2
 00C2                   .dbline 186
 00C2           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 00C2 80E5              ldi R24,80
 00C4 90E0              ldi R25,0
 00C6 8215              cp R24,R2
 00C8 9305              cpc R25,R3
 00CA 08F4              brsh L25
 00CC           X6:
 00CC                   .dbline 187
 00CC           ;         {
 00CC                   .dbline 188
 00CC           ;           goto End;
 00CC 85C1              xjmp L8
 00CE           L25:
 00CE                   .dbline 190
 00CE           ;         }
 00CE           ;         if((EIFR&0x01)==0x01)
 00CE 88B7              in R24,0x38
 00D0 8170              andi R24,1
 00D2 8130              cpi R24,1
 00D4 01F5              brne L27
 00D6           X7:
 00D6                   .dbline 191
 00D6           ;         {
 00D6                   .dbline 192
 00D6           ;          DELAY10
 00D6 2224              clr R2
 00D8 3324              clr R3
 00DA 3092BE01          sts _Tt+1,R3
 00DE 2092BD01          sts _Tt,R2
 00E2 09C0              xjmp L32
 00E4           L29:
 00E4                   .dbline 192
 00E4           L30:
 00E4                   .dbline 192
 00E4 8091BD01          lds R24,_Tt
 00E8 9091BE01          lds R25,_Tt+1
 00EC 0196              adiw R24,1
 00EE 9093BE01          sts _Tt+1,R25
 00F2 8093BD01          sts _Tt,R24
 00F6           L32:
 00F6                   .dbline 192
 00F6 8091BD01          lds R24,_Tt
 00FA 9091BE01          lds R25,_Tt+1
 00FE 8430              cpi R24,4
 0100 E0E0              ldi R30,0
 0102 9E07              cpc R25,R30
 0104 78F3              brlo L29
 0106           X8:
 0106                   .dbline 193
 0106           ;          EIFR|=0x01;//清INT0中断标志 
 0106 88B7              in R24,0x38
 0108 8160              ori R24,1
 010A 88BF              out 0x38,R24
 010C                   .dbline 194
 010C           ;          if((PIND&0x01)==0x01)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 010C 80B3              in R24,0x10
 010E 8170              andi R24,1
 0110 8130              cpi R24,1
 0112 09F4              brne L33
 0114           X9:
 0114                   .dbline 195
 0114           ;            {
 0114                   .dbline 196
 0114           ;            break;
 0114 01C0              xjmp L24
 0116           L33:
 0116                   .dbline 198
 0116           ;                }
 0116           ;         }  
 0116           L27:
 0116                   .dbline 199
 0116           ;       }
 0116           L23:
 0116                   .dbline 183
 0116 CFCF              xjmp L22
 0118           L24:
 0118                   .dbline 200
 0118           ;       T2cn=TCNT2;
 0118 24B4              in R2,0x24
 011A 3324              clr R3
 011C 3092BA01          sts _T2cn+1,R3
 0120 2092B901          sts _T2cn,R2
 0124                   .dbline 201
 0124           ;       TCNT2=0;
 0124 2224              clr R2
 0126 24BC              out 0x24,R2
 0128                   .dbline 202
 0128           ;       if((T2cn<60)||(T2cn>80))//同步头本应是7个周期，但收到的结果为6~8个周期内都认可
 0128 2090B901          lds R2,_T2cn
 012C 3090BA01          lds R3,_T2cn+1
 0130 C101              movw R24,R2
 0132 8C33              cpi R24,60
 0134 E0E0              ldi R30,0
 0136 9E07              cpc R25,R30
 0138 28F0              brlo L37
 013A           X10:
 013A 80E5              ldi R24,80
 013C 90E0              ldi R25,0
 013E 8215              cp R24,R2
 0140 9305              cpc R25,R3
 0142 08F4              brsh L35
 0144           X11:
 0144           L37:
 0144                   .dbline 203
 0144           ;       {
 0144                   .dbline 204
 0144           ;        goto End;//没有收到正确的同步头，直接跳出
 0144 49C1              xjmp L8
 0146           L35:
 0146           L38:
 0146                   .dbline 208
 0146           ;       }
 0146           ;  
 0146           ; Start:        //同步头解码正确，下面开始接收9位数据位 //按位从高到低接收数据位，8位数据加1位校验共9位                         
 0146           ;   for(Int_count=9;Int_count>0;Int_count--)
 0146 89E0              ldi R24,9
 0148 8093C001          sts _Int_count,R24
 014C A6C0              xjmp L42
 014E           L43:
 014E                   .dbline 211
 014E           ;   {   
 014E           ;    while(1)
 014E           ;    {
 014E                   .dbline 212
 014E           ;      T2cn=TCNT2;
 014E 24B4              in R2,0x24
 0150 3324              clr R3
 0152 3092BA01          sts _T2cn+1,R3
 0156 2092B901          sts _T2cn,R2
 015A                   .dbline 213
 015A           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 015A 80E5              ldi R24,80
 015C 90E0              ldi R25,0
 015E 8215              cp R24,R2
 0160 9305              cpc R25,R3
 0162 08F4              brsh L46
 0164           X12:
 0164                   .dbline 214
 0164           ;         {
 0164                   .dbline 215
 0164           ;           goto End;
 0164 39C1              xjmp L8
 0166           L46:
 0166                   .dbline 217
 0166           ;         }
 0166           ;      if((PIND&0x01)==0x00)
 0166 8099              sbic 0x10,0
 0168 1BC0              rjmp L48
 016A           X13:
 016A                   .dbline 218
 016A           ;        {
 016A                   .dbline 219
 016A           ;          DELAY20
 016A 2224              clr R2
 016C 3324              clr R3
 016E 3092BE01          sts _Tt+1,R3
 0172 2092BD01          sts _Tt,R2
 0176 09C0              xjmp L53
 0178           L50:
 0178                   .dbline 219
 0178           L51:
 0178                   .dbline 219
 0178 8091BD01          lds R24,_Tt
 017C 9091BE01          lds R25,_Tt+1
 0180 0196              adiw R24,1
 0182 9093BE01          sts _Tt+1,R25
 0186 8093BD01          sts _Tt,R24
 018A           L53:
 018A                   .dbline 219
 018A 8091BD01          lds R24,_Tt
 018E 9091BE01          lds R25,_Tt+1
 0192 8430              cpi R24,4
 0194 E0E0              ldi R30,0
 0196 9E07              cpc R25,R30
 0198 78F3              brlo L50
 019A           X14:
 019A                   .dbline 220
 019A           ;          if((PIND&0x01)==0x00)
 019A 8099              sbic 0x10,0
 019C 01C0              rjmp L54
 019E           X15:
 019E                   .dbline 221
 019E           ;           {
 019E                   .dbline 222
 019E           ;             break;
 019E 31C0              xjmp L57
 01A0           L54:
 01A0                   .dbline 224
 01A0           ;           }
 01A0           ;        }
 01A0           L48:
 01A0                   .dbline 225
 01A0           ;    } 
 01A0           L44:
 01A0                   .dbline 210
 01A0 D6CF              xjmp L43
 01A2           L56:
 01A2                   .dbline 227
 01A2           ;    while(1)//还没有上升沿到来,死等
 01A2           ;       {
 01A2                   .dbline 228
 01A2           ;         T2cn=TCNT2;
 01A2 24B4              in R2,0x24
 01A4 3324              clr R3
 01A6 3092BA01          sts _T2cn+1,R3
 01AA 2092B901          sts _T2cn,R2
 01AE                   .dbline 229
 01AE           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 01AE 80E5              ldi R24,80
 01B0 90E0              ldi R25,0
 01B2 8215              cp R24,R2
 01B4 9305              cpc R25,R3
 01B6 08F4              brsh L59
 01B8           X16:
 01B8                   .dbline 230
 01B8           ;         {
 01B8                   .dbline 231
 01B8           ;           goto End;
 01B8 0FC1              xjmp L8
 01BA           L59:
 01BA                   .dbline 233
 01BA           ;         }
 01BA           ;         if((EIFR&0x01)==0x01)
 01BA 88B7              in R24,0x38
 01BC 8170              andi R24,1
 01BE 8130              cpi R24,1
 01C0 01F5              brne L61
 01C2           X17:
 01C2                   .dbline 234
 01C2           ;         {
 01C2                   .dbline 235
 01C2           ;          DELAY10
 01C2 2224              clr R2
 01C4 3324              clr R3
 01C6 3092BE01          sts _Tt+1,R3
 01CA 2092BD01          sts _Tt,R2
 01CE 09C0              xjmp L66
 01D0           L63:
 01D0                   .dbline 235
 01D0           L64:
 01D0                   .dbline 235
 01D0 8091BD01          lds R24,_Tt
 01D4 9091BE01          lds R25,_Tt+1
 01D8 0196              adiw R24,1
 01DA 9093BE01          sts _Tt+1,R25
 01DE 8093BD01          sts _Tt,R24
 01E2           L66:
 01E2                   .dbline 235
 01E2 8091BD01          lds R24,_Tt
 01E6 9091BE01          lds R25,_Tt+1
 01EA 8430              cpi R24,4
 01EC E0E0              ldi R30,0
 01EE 9E07              cpc R25,R30
 01F0 78F3              brlo L63
 01F2           X18:
 01F2                   .dbline 236
 01F2           ;          EIFR|=0x01;//清INT0中断标志 
 01F2 88B7              in R24,0x38
 01F4 8160              ori R24,1
 01F6 88BF              out 0x38,R24
 01F8                   .dbline 237
 01F8           ;          if((PIND&0x01)==0x01)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 01F8 80B3              in R24,0x10
 01FA 8170              andi R24,1
 01FC 8130              cpi R24,1
 01FE 09F4              brne L67
 0200           X19:
 0200                   .dbline 238
 0200           ;            {
 0200                   .dbline 239
 0200           ;            break;
 0200 01C0              xjmp L58
 0202           L67:
 0202                   .dbline 241
 0202           ;                }
 0202           ;         }  
 0202           L61:
 0202                   .dbline 242
 0202           ;       }
 0202           L57:
 0202                   .dbline 226
 0202 CFCF              xjmp L56
 0204           L58:
 0204                   .dbline 243
 0204           ;       T2cn=TCNT2;
 0204 24B4              in R2,0x24
 0206 3324              clr R3
 0208 3092BA01          sts _T2cn+1,R3
 020C 2092B901          sts _T2cn,R2
 0210                   .dbline 244
 0210           ;       TCNT2=0;
 0210 2224              clr R2
 0212 24BC              out 0x24,R2
 0214                   .dbline 245
 0214           ;       if(T2cn<20)//数据位最小是3位，可放宽到2位
 0214 8091B901          lds R24,_T2cn
 0218 9091BA01          lds R25,_T2cn+1
 021C 8431              cpi R24,20
 021E E0E0              ldi R30,0
 0220 9E07              cpc R25,R30
 0222 20F4              brsh L69
 0224           X20:
 0224                   .dbline 246
 0224           ;       {
 0224                   .dbline 247
 0224           ;        IntFlag=3;//接收数据位不完整
 0224 83E0              ldi R24,3
 0226 8093BF01          sts _IntFlag,R24
 022A                   .dbline 248
 022A           ;        goto End;//数据位来得太早，退出
 022A D6C0              xjmp L8
 022C           L69:
 022C                   .dbline 250
 022C           ;       }
 022C           ;       else if(T2cn<40)//数据位1本应是3个周期，在此我们认为2~4个周期都是可以的
 022C 8091B901          lds R24,_T2cn
 0230 9091BA01          lds R25,_T2cn+1
 0234 8832              cpi R24,40
 0236 E0E0              ldi R30,0
 0238 9E07              cpc R25,R30
 023A 50F4              brsh L71
 023C           X21:
 023C                   .dbline 251
 023C           ;       {
 023C                   .dbline 252
 023C           ;        Rx[Int_count]=1;
 023C 80E0              ldi R24,<_Rx
 023E 90E0              ldi R25,>_Rx
 0240 E091C001          lds R30,_Int_count
 0244 FF27              clr R31
 0246 E80F              add R30,R24
 0248 F91F              adc R31,R25
 024A 81E0              ldi R24,1
 024C 8083              std z+0,R24
 024E                   .dbline 253
 024E           ;       }
 024E 20C0              xjmp L72
 0250           L71:
 0250                   .dbline 254
 0250           ;       else if(T2cn<60)//数据位0本应是5个周期，在此我们认为4~6个周期都是可以的
 0250 8091B901          lds R24,_T2cn
 0254 9091BA01          lds R25,_T2cn+1
 0258 8C33              cpi R24,60
 025A E0E0              ldi R30,0
 025C 9E07              cpc R25,R30
 025E 50F4              brsh L73
 0260           X22:
 0260                   .dbline 255
 0260           ;       {
 0260                   .dbline 256
 0260           ;        Rx[Int_count]=0;
 0260 80E0              ldi R24,<_Rx
 0262 90E0              ldi R25,>_Rx
 0264 E091C001          lds R30,_Int_count
 0268 FF27              clr R31
 026A E80F              add R30,R24
 026C F91F              adc R31,R25
 026E 2224              clr R2
 0270 2082              std z+0,R2
 0272                   .dbline 257
 0272           ;       }
 0272 0EC0              xjmp L74
 0274           L73:
 0274                   .dbline 258
 0274           ;       else if(T2cn<=80)//同步位本应是7周期，在此我们认为6~8周期都是可以的
 0274 80E5              ldi R24,80
 0276 90E0              ldi R25,0
 0278 2090B901          lds R2,_T2cn
 027C 3090BA01          lds R3,_T2cn+1
 0280 8215              cp R24,R2
 0282 9305              cpc R25,R3
 0284 08F0              brlo L75
 0286           X23:
 0286                   .dbline 259
 0286           ;       {
 0286                   .dbline 260
 0286           ;        goto Start;//在接收数据位时收到了同步位，跳到数据位解码起始位处
 0286 5FCF              xjmp L38
 0288           L75:
 0288                   .dbline 263
 0288           ;       }
 0288           ;       else 
 0288           ;       {
 0288                   .dbline 264
 0288           ;        IntFlag=3;//接收数据位不完整
 0288 83E0              ldi R24,3
 028A 8093BF01          sts _IntFlag,R24
 028E                   .dbline 265
 028E           ;        goto End;//数据位来得太迟，退出
 028E A4C0              xjmp L8
 0290           L74:
 0290           L72:
 0290                   .dbline 267
 0290           ;       }
 0290           ;   }   
 0290           L40:
 0290                   .dbline 208
 0290 8091C001          lds R24,_Int_count
 0294 8150              subi R24,1
 0296 8093C001          sts _Int_count,R24
 029A           L42:
 029A                   .dbline 208
 029A 80E0              ldi R24,0
 029C 2090C001          lds R2,_Int_count
 02A0 8215              cp R24,R2
 02A2 08F4              brsh X35
 02A4 7DCF              xjmp L44
 02A6           X35:
 02A6           X24:
 02A6                   .dbline 269
 02A6           ;       
 02A6           ;     R_dat=0;
 02A6 2224              clr R2
 02A8 3324              clr R3
 02AA 3092E001          sts _R_dat+1,R3
 02AE 2092DF01          sts _R_dat,R2
 02B2                   .dbline 270
 02B2           ;     if(Rx[2])
 02B2 2090E501          lds R2,_Rx+2
 02B6 2220              tst R2
 02B8 49F0              breq L77
 02BA           X25:
 02BA                   .dbline 271
 02BA           ;           R_dat|=0x01;
 02BA 8091DF01          lds R24,_R_dat
 02BE 9091E001          lds R25,_R_dat+1
 02C2 8160              ori R24,1
 02C4 9093E001          sts _R_dat+1,R25
 02C8 8093DF01          sts _R_dat,R24
 02CC           L77:
 02CC                   .dbline 272
 02CC           ;     if(Rx[3])
 02CC 2090E601          lds R2,_Rx+3
 02D0 2220              tst R2
 02D2 49F0              breq L80
 02D4           X26:
 02D4                   .dbline 273
 02D4           ;           R_dat|=0x02;
 02D4 8091DF01          lds R24,_R_dat
 02D8 9091E001          lds R25,_R_dat+1
 02DC 8260              ori R24,2
 02DE 9093E001          sts _R_dat+1,R25
 02E2 8093DF01          sts _R_dat,R24
 02E6           L80:
 02E6                   .dbline 274
 02E6           ;     if(Rx[4])
 02E6 2090E701          lds R2,_Rx+4
 02EA 2220              tst R2
 02EC 49F0              breq L83
 02EE           X27:
 02EE                   .dbline 275
 02EE           ;           R_dat|=0x04;
 02EE 8091DF01          lds R24,_R_dat
 02F2 9091E001          lds R25,_R_dat+1
 02F6 8460              ori R24,4
 02F8 9093E001          sts _R_dat+1,R25
 02FC 8093DF01          sts _R_dat,R24
 0300           L83:
 0300                   .dbline 276
 0300           ;     if(Rx[5])
 0300 2090E801          lds R2,_Rx+5
 0304 2220              tst R2
 0306 49F0              breq L86
 0308           X28:
 0308                   .dbline 277
 0308           ;           R_dat|=0x08;
 0308 8091DF01          lds R24,_R_dat
 030C 9091E001          lds R25,_R_dat+1
 0310 8860              ori R24,8
 0312 9093E001          sts _R_dat+1,R25
 0316 8093DF01          sts _R_dat,R24
 031A           L86:
 031A                   .dbline 278
 031A           ;     if(Rx[6])
 031A 2090E901          lds R2,_Rx+6
 031E 2220              tst R2
 0320 49F0              breq L89
 0322           X29:
 0322                   .dbline 279
 0322           ;           R_dat|=0x10;
 0322 8091DF01          lds R24,_R_dat
 0326 9091E001          lds R25,_R_dat+1
 032A 8061              ori R24,16
 032C 9093E001          sts _R_dat+1,R25
 0330 8093DF01          sts _R_dat,R24
 0334           L89:
 0334                   .dbline 280
 0334           ;     if(Rx[7])
 0334 2090EA01          lds R2,_Rx+7
 0338 2220              tst R2
 033A 49F0              breq L92
 033C           X30:
 033C                   .dbline 281
 033C           ;           R_dat|=0x20;
 033C 8091DF01          lds R24,_R_dat
 0340 9091E001          lds R25,_R_dat+1
 0344 8062              ori R24,32
 0346 9093E001          sts _R_dat+1,R25
 034A 8093DF01          sts _R_dat,R24
 034E           L92:
 034E                   .dbline 282
 034E           ;     if(Rx[8])
 034E 2090EB01          lds R2,_Rx+8
 0352 2220              tst R2
 0354 49F0              breq L95
 0356           X31:
 0356                   .dbline 283
 0356           ;           R_dat|=0x40;
 0356 8091DF01          lds R24,_R_dat
 035A 9091E001          lds R25,_R_dat+1
 035E 8064              ori R24,64
 0360 9093E001          sts _R_dat+1,R25
 0364 8093DF01          sts _R_dat,R24
 0368           L95:
 0368                   .dbline 284
 0368           ;     if(Rx[9])
 0368 2090EC01          lds R2,_Rx+9
 036C 2220              tst R2
 036E 49F0              breq L98
 0370           X32:
 0370                   .dbline 285
 0370           ;           R_dat|=0x80;
 0370 8091DF01          lds R24,_R_dat
 0374 9091E001          lds R25,_R_dat+1
 0378 8068              ori R24,128
 037A 9093E001          sts _R_dat+1,R25
 037E 8093DF01          sts _R_dat,R24
 0382           L98:
 0382                   .dbline 287
 0382           ;       
 0382           ;       Rx[0]=1;  
 0382 81E0              ldi R24,1
 0384 8093E301          sts _Rx,R24
 0388                   .dbline 288
 0388           ;       for(Int_count=2;Int_count<10;Int_count++)  
 0388 82E0              ldi R24,2
 038A 8093C001          sts _Int_count,R24
 038E 12C0              xjmp L104
 0390           L101:
 0390                   .dbline 289
 0390           ;        Rx[0]^=Rx[Int_count];  
 0390 80E0              ldi R24,<_Rx
 0392 90E0              ldi R25,>_Rx
 0394 E091C001          lds R30,_Int_count
 0398 FF27              clr R31
 039A E80F              add R30,R24
 039C F91F              adc R31,R25
 039E 2080              ldd R2,z+0
 03A0 3090E301          lds R3,_Rx
 03A4 3224              eor R3,R2
 03A6 3092E301          sts _Rx,R3
 03AA           L102:
 03AA                   .dbline 288
 03AA 8091C001          lds R24,_Int_count
 03AE 8F5F              subi R24,255    ; addi 1
 03B0 8093C001          sts _Int_count,R24
 03B4           L104:
 03B4                   .dbline 288
 03B4 8091C001          lds R24,_Int_count
 03B8 8A30              cpi R24,10
 03BA 50F3              brlo L101
 03BC           X33:
 03BC                   .dbline 291
 03BC           ;          
 03BC           ;       if(Rx[0]==Rx[1])
 03BC 2090E401          lds R2,_Rx+1
 03C0 3090E301          lds R3,_Rx
 03C4 3214              cp R3,R2
 03C6 21F4              brne L105
 03C8           X34:
 03C8                   .dbline 292
 03C8           ;        {
 03C8                   .dbline 293
 03C8           ;                IntFlag=1;//接收帧正常 
 03C8 81E0              ldi R24,1
 03CA 8093BF01          sts _IntFlag,R24
 03CE                   .dbline 294
 03CE           ;        }
 03CE 0AC0              xjmp L108
 03D0           L105:
 03D0                   .dbline 296
 03D0           ;       else           
 03D0           ;        {
 03D0                   .dbline 297
 03D0           ;                IntFlag=2;//接收帧校验错
 03D0 82E0              ldi R24,2
 03D2 8093BF01          sts _IntFlag,R24
 03D6                   .dbline 298
 03D6           ;        }
 03D6                   .dbline 300
 03D6           ;  
 03D6           ;    goto End1;//只要接收到正常的同步头，不管校验位是对是错，都暂时不开放INT0中断
 03D6 06C0              xjmp L108
 03D8           L8:
 03D8                   .dbline 303
 03D8           ;      
 03D8           ; End:
 03D8           ;               MANINT_CLR
 03D8                   .dbline 303
 03D8 88B7              in R24,0x38
 03DA 8160              ori R24,1
 03DC 88BF              out 0x38,R24
 03DE                   .dbline 303
 03DE                   .dbline 304
 03DE           ;               MANINT_EN
 03DE                   .dbline 304
 03DE 89B7              in R24,0x39
 03E0 8160              ori R24,1
 03E2 89BF              out 0x39,R24
 03E4                   .dbline 304
 03E4           L108:
 03E4                   .dbline 306
 03E4           ; End1:
 03E4           ;    TCCR2 = 0x00; //stop
 03E4 2224              clr R2
 03E6 25BC              out 0x25,R2
 03E8                   .dbline 307
 03E8           ;    INT_EN
 03E8                   .dbline 307
 03E8 7894              sei
 03EA                   .dbline 307
 03EA                   .dbline -2
 03EA           L1:
 03EA                   .dbline 0 ; func end
 03EA 2990              ld R2,y+
 03EC 2FBE              OUT 63,R2
 03EE F991              ld R31,y+
 03F0 E991              ld R30,y+
 03F2 A991              ld R26,y+
 03F4 9991              ld R25,y+
 03F6 8991              ld R24,y+
 03F8 3990              ld R3,y+
 03FA 2990              ld R2,y+
 03FC 1895              reti
 03FE                   .dbend
 03FE                   .dbfunc e InitialIO _InitialIO fV
                        .even
 03FE           _InitialIO::
 03FE                   .dbline -1
 03FE                   .dbline 311
 03FE           ; }
 03FE           ; 
 03FE           ; void InitialIO(void)
 03FE           ; {//1输出，0输入
 03FE                   .dbline 312
 03FE           ;  PORTG&=0xe7; 
 03FE 80916500          lds R24,101
 0402 877E              andi R24,231
 0404 80936500          sts 101,R24
 0408                   .dbline 313
 0408           ;  DDRG|=0x18; 
 0408 80916400          lds R24,100
 040C 8861              ori R24,24
 040E 80936400          sts 100,R24
 0412                   .dbline 315
 0412           ;  
 0412           ;  PORTD&=0xBF;
 0412 82B3              in R24,0x12
 0414 8F7B              andi R24,191
 0416 82BB              out 0x12,R24
 0418                   .dbline 316
 0418           ;  DDRD|=0x40;
 0418 8E9A              sbi 0x11,6
 041A                   .dbline -2
 041A           L109:
 041A                   .dbline 0 ; func end
 041A 0895              ret
 041C                   .dbend
 041C                   .dbfunc e uart1_init _uart1_init fV
                        .even
 041C           _uart1_init::
 041C                   .dbline -1
 041C                   .dbline 326
 041C           ; }
 041C           ; 
 041C           ; 
 041C           ; //UART1 initialize
 041C           ; // desired baud rate:9600
 041C           ; // actual baud rate:9615 (0.2%)
 041C           ; // char size: 8 bit
 041C           ; // parity: Disabled
 041C           ; void uart1_init(void)
 041C           ; {
 041C                   .dbline 327
 041C           ;  UCSR1B = 0x00; //disable while setting baud rate
 041C 2224              clr R2
 041E 20929A00          sts 154,R2
 0422                   .dbline 328
 0422           ;  UCSR1A = 0x02;
 0422 82E0              ldi R24,2
 0424 80939B00          sts 155,R24
 0428                   .dbline 329
 0428           ;  UCSR1C = 0x06;
 0428 86E0              ldi R24,6
 042A 80939D00          sts 157,R24
 042E                   .dbline 330
 042E           ;  UBRR1L = 0x67; //set baud rate lo
 042E 87E6              ldi R24,103
 0430 80939900          sts 153,R24
 0434                   .dbline 331
 0434           ;  UBRR1H = 0x00; //set baud rate hi
 0434 20929800          sts 152,R2
 0438                   .dbline 332
 0438           ;  UCSR1B = 0x98;
 0438 88E9              ldi R24,152
 043A 80939A00          sts 154,R24
 043E                   .dbline -2
 043E           L110:
 043E                   .dbline 0 ; func end
 043E 0895              ret
 0440                   .dbend
                        .area vector(rom, abs)
                        .org 120
 0078 0C942002          jmp _uart1_rx_isr
                        .area text(rom, con, rel)
 0440                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0440                   .dbfunc e uart1_rx_isr _uart1_rx_isr fV
                        .even
 0440           _uart1_rx_isr::
 0440 2A92              st -y,R2
 0442 8A93              st -y,R24
 0444 9A93              st -y,R25
 0446 EA93              st -y,R30
 0448 FA93              st -y,R31
 044A 2FB6              IN R2,63
 044C 2A92              st -y,R2
 044E                   .dbline -1
 044E                   .dbline 337
 044E           ; }
 044E           ; 
 044E           ; #pragma interrupt_handler uart1_rx_isr:iv_USART1_RXC
 044E           ; void uart1_rx_isr(void)//串口1接收中断
 044E           ; {
 044E                   .dbline 338
 044E           ;   if(Uart1RxCounter<4)
 044E 8091F501          lds R24,_Uart1RxCounter
 0452 8430              cpi R24,4
 0454 78F4              brsh L112
 0456           X36:
 0456                   .dbline 339
 0456           ;       {
 0456                   .dbline 340
 0456           ;     Uart1RxData[Uart1RxCounter]=UDR1;//接收串口数据,同时清空串口接收中断标志
 0456 80E0              ldi R24,<_Uart1RxData
 0458 90E0              ldi R25,>_Uart1RxData
 045A E091F501          lds R30,_Uart1RxCounter
 045E FF27              clr R31
 0460 E80F              add R30,R24
 0462 F91F              adc R31,R25
 0464 20909C00          lds R2,156
 0468 2082              std z+0,R2
 046A                   .dbline 341
 046A           ;       Uart1RxCounter++;
 046A 8091F501          lds R24,_Uart1RxCounter
 046E 8F5F              subi R24,255    ; addi 1
 0470 8093F501          sts _Uart1RxCounter,R24
 0474                   .dbline 342
 0474           ;       }
 0474           L112:
 0474                   .dbline -2
 0474           L111:
 0474                   .dbline 0 ; func end
 0474 2990              ld R2,y+
 0476 2FBE              OUT 63,R2
 0478 F991              ld R31,y+
 047A E991              ld R30,y+
 047C 9991              ld R25,y+
 047E 8991              ld R24,y+
 0480 2990              ld R2,y+
 0482 1895              reti
 0484                   .dbend
 0484                   .dbfunc e SendUart1 _SendUart1 fV
 0484           ;              i -> <dead>
 0484           ;              t -> R20
 0484           ;              s -> R18,R19
 0484           ;            dat -> R16
                        .even
 0484           _SendUart1::
 0484 4A93              st -y,R20
 0486                   .dbline -1
 0486                   .dbline 347
 0486           ; }
 0486           ; 
 0486           ; 
 0486           ; void SendUart1(unsigned char dat,unsigned int s)   //串口发送数据
 0486           ; {//要求流量板在s个8ms内通过串口返回数据
 0486                   .dbline 350
 0486           ; unsigned char t,i;    
 0486           ; 
 0486           ; for(t=0;t<4;t++)
 0486 4427              clr R20
 0488 09C0              xjmp L118
 048A           L115:
 048A                   .dbline 351
 048A           ;   Uart1RxData[t]=0xff;
 048A 80E0              ldi R24,<_Uart1RxData
 048C 90E0              ldi R25,>_Uart1RxData
 048E E42F              mov R30,R20
 0490 FF27              clr R31
 0492 E80F              add R30,R24
 0494 F91F              adc R31,R25
 0496 8FEF              ldi R24,255
 0498 8083              std z+0,R24
 049A           L116:
 049A                   .dbline 350
 049A 4395              inc R20
 049C           L118:
 049C                   .dbline 350
 049C 4430              cpi R20,4
 049E A8F3              brlo L115
 04A0           X37:
 04A0                   .dbline 353
 04A0           ;   
 04A0           ; Uart1RxCounter=0; //清串口接受计数  
 04A0 2224              clr R2
 04A2 2092F501          sts _Uart1RxCounter,R2
 04A6           L119:
 04A6                   .dbline 355
 04A6           ; 
 04A6           ; while(!(UCSR1A&(1<<UDRE1)));   // 等待发送缓冲器为空
 04A6           L120:
 04A6                   .dbline 355
 04A6 20909B00          lds R2,155
 04AA 25FE              sbrs R2,5
 04AC FCCF              rjmp L119
 04AE           X38:
 04AE                   .dbline 356
 04AE           ; UDR1=dat;  
 04AE 00939C00          sts 156,R16
 04B2                   .dbline 358
 04B2           ; 
 04B2           ; t=UDR1;//开串口接收中断前读空缓存
 04B2 40919C00          lds R20,156
 04B6                   .dbline 359
 04B6           ; UCSR1B|=0x80;//开串口接收中断
 04B6 80919A00          lds R24,154
 04BA 8068              ori R24,128
 04BC 80939A00          sts 154,R24
 04C0                   .dbline 361
 04C0           ;                   
 04C0           ; if(s>0)
 04C0 2030              cpi R18,0
 04C2 2307              cpc R18,R19
 04C4 C9F0              breq L122
 04C6           X39:
 04C6                   .dbline 362
 04C6           ; {
 04C6                   .dbline 364
 04C6           ;  //超时设定
 04C6           ; TimeOutFlag=0; //超时标志置0
 04C6 2224              clr R2
 04C8 2092D901          sts _TimeOutFlag,R2
 04CC                   .dbline 365
 04CC           ; Timer0Counter=s; //8ms定时循环次数
 04CC 30934602          sts _Timer0Counter+1,R19
 04D0 20934502          sts _Timer0Counter,R18
 04D4                   .dbline 366
 04D4           ; TCNT0=0x06;//定时8ms
 04D4 86E0              ldi R24,6
 04D6 82BF              out 0x32,R24
 04D8                   .dbline 367
 04D8           ; TCCR0|=0x06;//256分频
 04D8 83B7              in R24,0x33
 04DA 8660              ori R24,6
 04DC 83BF              out 0x33,R24
 04DE                   .dbline 368
 04DE           ; TIFR|=0x01; //清定时器0中断标志
 04DE 86B7              in R24,0x36
 04E0 8160              ori R24,1
 04E2 86BF              out 0x36,R24
 04E4                   .dbline 369
 04E4           ; TIMSK|=0x01;//使能定时器0中断
 04E4 87B7              in R24,0x37
 04E6 8160              ori R24,1
 04E8 87BF              out 0x37,R24
 04EA           L124:
 04EA                   .dbline 370
 04EA           ; while(TimeOutFlag==0);
 04EA           L125:
 04EA                   .dbline 370
 04EA 2090D901          lds R2,_TimeOutFlag
 04EE 2220              tst R2
 04F0 E1F3              breq L124
 04F2           X40:
 04F2                   .dbline 371
 04F2           ; TIMSK&=0xFE;//关定时器0中断
 04F2 87B7              in R24,0x37
 04F4 8E7F              andi R24,254
 04F6 87BF              out 0x37,R24
 04F8                   .dbline 373
 04F8           ; 
 04F8           ; }
 04F8           L122:
 04F8                   .dbline 375
 04F8           ; 
 04F8           ; UCSR1B&=0x7f;//关串口接收中断
 04F8 80919A00          lds R24,154
 04FC 8F77              andi R24,127
 04FE 80939A00          sts 154,R24
 0502                   .dbline -2
 0502           L114:
 0502                   .dbline 0 ; func end
 0502 4991              ld R20,y+
 0504 0895              ret
 0506                   .dbsym l i 1 c
 0506                   .dbsym r t 20 c
 0506                   .dbsym r s 18 i
 0506                   .dbsym r dat 16 c
 0506                   .dbend
 0506                   .dbfunc e timer3_init _timer3_init fV
                        .even
 0506           _timer3_init::
 0506                   .dbline -1
 0506                   .dbline 386
 0506           ; }
 0506           ; 
 0506           ; 
 0506           ; 
 0506           ; 
 0506           ; //TIMER3 initialize - prescale:1
 0506           ; // WGM: 0) Normal, TOP=0xFFFF
 0506           ; // desired value: 19200Hz
 0506           ; // actual value: 19230.769Hz (0.2%)
 0506           ; void timer3_init(void)
 0506           ; {
 0506                   .dbline 388
 0506           ;  
 0506           ;  ETIMSK&=0xfb;//禁止time3溢出中断   
 0506 80917D00          lds R24,125
 050A 8B7F              andi R24,251
 050C 80937D00          sts 125,R24
 0510                   .dbline 389
 0510           ;  ETIFR&=0xfb;  //清timer3中断标志  
 0510 80917C00          lds R24,124
 0514 8B7F              andi R24,251
 0516 80937C00          sts 124,R24
 051A                   .dbline 390
 051A           ;  TCCR3B = 0x00; //stop
 051A 2224              clr R2
 051C 20928A00          sts 138,R2
 0520                   .dbline 391
 0520           ;  TPSBAUD
 0520                   .dbline 391
 0520 8EEF              ldi R24,254
 0522 80938900          sts 137,R24
 0526                   .dbline 391
 0526 80E6              ldi R24,96
 0528 80938800          sts 136,R24
 052C                   .dbline 391
 052C                   .dbline 392
 052C           ;  TCCR3B = 0x01; //start Timer
 052C 81E0              ldi R24,1
 052E 80938A00          sts 138,R24
 0532                   .dbline 393
 0532           ;  ETIFR&=0xfb;           //清timer3中断标志
 0532 80917C00          lds R24,124
 0536 8B7F              andi R24,251
 0538 80937C00          sts 124,R24
 053C                   .dbline -2
 053C           L127:
 053C                   .dbline 0 ; func end
 053C 0895              ret
 053E                   .dbend
 053E                   .dbfunc e SendTPS _SendTPS fV
 053E           ;              i -> R20
 053E           ;         tx_buf -> R10
                        .even
 053E           _SendTPS::
 053E AA92              st -y,R10
 0540 4A93              st -y,R20
 0542 A02E              mov R10,R16
 0544                   .dbline -1
 0544                   .dbline 397
 0544           ; }
 0544           ; 
 0544           ; void SendTPS(unsigned char tx_buf)
 0544           ; {
 0544                   .dbline 400
 0544           ;     unsigned char i;
 0544           ;       
 0544           ;     timer3_init();   
 0544 E0DF              xcall _timer3_init
 0546           L129:
 0546                   .dbline 402
 0546           ;       
 0546           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0546           L130:
 0546                   .dbline 402
 0546 80917C00          lds R24,124
 054A 8B7F              andi R24,251
 054C E1F3              breq L129
 054E           X41:
 054E                   .dbline 403
 054E           ;       TPSBAUD
 054E                   .dbline 403
 054E 8EEF              ldi R24,254
 0550 80938900          sts 137,R24
 0554                   .dbline 403
 0554 80E6              ldi R24,96
 0556 80938800          sts 136,R24
 055A                   .dbline 403
 055A                   .dbline 404
 055A           ;       ETIFR&=0xfb;           //清timer3中断标志
 055A 80917C00          lds R24,124
 055E 8B7F              andi R24,251
 0560 80937C00          sts 124,R24
 0564                   .dbline 405
 0564           ;     SET_TX();//同步位
 0564 969A              sbi 0x12,6
 0566                   .dbline 407
 0566           ;       
 0566           ;       for(i=0; i<8;i++)
 0566 4427              clr R20
 0568 1CC0              xjmp L135
 056A           L136:
 056A                   .dbline 409
 056A           ;       {
 056A           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 056A           L137:
 056A                   .dbline 409
 056A 80917C00          lds R24,124
 056E 8B7F              andi R24,251
 0570 E1F3              breq L136
 0572           X42:
 0572                   .dbline 410
 0572           ;       TPSBAUD
 0572                   .dbline 410
 0572 8EEF              ldi R24,254
 0574 80938900          sts 137,R24
 0578                   .dbline 410
 0578 80E6              ldi R24,96
 057A 80938800          sts 136,R24
 057E                   .dbline 410
 057E                   .dbline 411
 057E           ;       ETIFR&=0xfb;           //清timer3中断标志
 057E 80917C00          lds R24,124
 0582 8B7F              andi R24,251
 0584 80937C00          sts 124,R24
 0588                   .dbline 412
 0588           ;       if (tx_buf & (1 << i))  
 0588 01E0              ldi R16,1
 058A 142F              mov R17,R20
 058C 0E940000          xcall lsl8
 0590 2A2C              mov R2,R10
 0592 2022              and R2,R16
 0594 21F0              breq L139
 0596           X43:
 0596                   .dbline 413
 0596           ;        {CLR_TX();}
 0596                   .dbline 413
 0596 82B3              in R24,0x12
 0598 8F7B              andi R24,191
 059A 82BB              out 0x12,R24
 059C                   .dbline 413
 059C 01C0              xjmp L140
 059E           L139:
 059E                   .dbline 415
 059E           ;     else
 059E           ;        {SET_TX();}
 059E                   .dbline 415
 059E 969A              sbi 0x12,6
 05A0                   .dbline 415
 05A0           L140:
 05A0                   .dbline 416
 05A0           ;       }
 05A0           L133:
 05A0                   .dbline 407
 05A0 4395              inc R20
 05A2           L135:
 05A2                   .dbline 407
 05A2 4830              cpi R20,8
 05A4 10F3              brlo L137
 05A6           X44:
 05A6           L141:
 05A6                   .dbline 418
 05A6           ;         
 05A6           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05A6           L142:
 05A6                   .dbline 418
 05A6 80917C00          lds R24,124
 05AA 8B7F              andi R24,251
 05AC E1F3              breq L141
 05AE           X45:
 05AE                   .dbline 419
 05AE           ;       TPSBAUD
 05AE                   .dbline 419
 05AE 8EEF              ldi R24,254
 05B0 80938900          sts 137,R24
 05B4                   .dbline 419
 05B4 80E6              ldi R24,96
 05B6 80938800          sts 136,R24
 05BA                   .dbline 419
 05BA                   .dbline 420
 05BA           ;       CLR_TX();//结束位
 05BA 82B3              in R24,0x12
 05BC 8F7B              andi R24,191
 05BE 82BB              out 0x12,R24
 05C0           L144:
 05C0                   .dbline 423
 05C0           ;       
 05C0           ;       //以下是等结束位结束后，再多等待2位，防止连续发送时接收方忙不过来
 05C0           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05C0           L145:
 05C0                   .dbline 423
 05C0 80917C00          lds R24,124
 05C4 8B7F              andi R24,251
 05C6 E1F3              breq L144
 05C8           X46:
 05C8                   .dbline 424
 05C8           ;       TPSBAUD
 05C8                   .dbline 424
 05C8 8EEF              ldi R24,254
 05CA 80938900          sts 137,R24
 05CE                   .dbline 424
 05CE 80E6              ldi R24,96
 05D0 80938800          sts 136,R24
 05D4                   .dbline 424
 05D4           L147:
 05D4                   .dbline 425
 05D4           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05D4           L148:
 05D4                   .dbline 425
 05D4 80917C00          lds R24,124
 05D8 8B7F              andi R24,251
 05DA E1F3              breq L147
 05DC           X47:
 05DC                   .dbline 426
 05DC           ;       TPSBAUD
 05DC                   .dbline 426
 05DC 8EEF              ldi R24,254
 05DE 80938900          sts 137,R24
 05E2                   .dbline 426
 05E2 80E6              ldi R24,96
 05E4 80938800          sts 136,R24
 05E8                   .dbline 426
 05E8           L150:
 05E8                   .dbline 427
 05E8           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05E8           L151:
 05E8                   .dbline 427
 05E8 80917C00          lds R24,124
 05EC 8B7F              andi R24,251
 05EE E1F3              breq L150
 05F0           X48:
 05F0                   .dbline 428
 05F0           ;       TPSBAUD
 05F0                   .dbline 428
 05F0 8EEF              ldi R24,254
 05F2 80938900          sts 137,R24
 05F6                   .dbline 428
 05F6 80E6              ldi R24,96
 05F8 80938800          sts 136,R24
 05FC                   .dbline 428
 05FC                   .dbline 430
 05FC           ;       
 05FC           ;       TCCR3B = 0x00; //stop  
 05FC 2224              clr R2
 05FE 20928A00          sts 138,R2
 0602                   .dbline 431
 0602           ;       ETIFR&=0xfb;           //清timer3中断标志
 0602 80917C00          lds R24,124
 0606 8B7F              andi R24,251
 0608 80937C00          sts 124,R24
 060C                   .dbline -2
 060C           L128:
 060C                   .dbline 0 ; func end
 060C 4991              ld R20,y+
 060E A990              ld R10,y+
 0610 0895              ret
 0612                   .dbsym r i 20 c
 0612                   .dbsym r tx_buf 10 c
 0612                   .dbend
 0612                   .dbfunc e ReceiveTPS _ReceiveTPS fc
 0612           ;              i -> <dead>
 0612           ;         rx_buf -> R20
                        .even
 0612           _ReceiveTPS::
 0612 4A93              st -y,R20
 0614                   .dbline -1
 0614                   .dbline 436
 0614           ;     
 0614           ; }
 0614           ; 
 0614           ; unsigned char ReceiveTPS(void)
 0614           ; {
 0614                   .dbline 439
 0614           ;     unsigned char i,rx_buf;
 0614           ;       
 0614           ;       rx_buf=0xff;
 0614 4FEF              ldi R20,255
 0616                   .dbline 440
 0616           ;       TCCR1B = 0x00; //stop
 0616 2224              clr R2
 0618 2EBC              out 0x2e,R2
 061A                   .dbline 441
 061A           ;     TCNT1 = 65380;  //定时20ms，9600波特率下接收一个字节实际只需耗时1.04ms，压力板返回时故意延迟了2ms，但有时遇到采集中断则需要10ms以上
 061A 84E6              ldi R24,65380
 061C 9FEF              ldi R25,255
 061E 9DBD              out 0x2d,R25
 0620 8CBD              out 0x2c,R24
 0622                   .dbline 442
 0622           ;       TIFR|=0x04; //清定时器1中断标志 
 0622 86B7              in R24,0x36
 0624 8460              ori R24,4
 0626 86BF              out 0x36,R24
 0628                   .dbline 443
 0628           ;       TCCR1B = 0x05; //1024分频
 0628 85E0              ldi R24,5
 062A 8EBD              out 0x2e,R24
 062C C2C0              xjmp L155
 062E           L154:
 062E                   .dbline 449
 062E           ;       
 062E           ;       //DDRG|=0x01;
 062E           ;       //PORTG|=0x01;  
 062E           ;       //PORTG&=0xfe; 
 062E           ;     while((TIFR&0x04)==0x00) 
 062E           ;       {
 062E                   .dbline 450
 062E           ;          if (!GET_RX())//检测到了低电平的起始位
 062E 8199              sbic 0x10,1
 0630 C0C0              rjmp L157
 0632           X49:
 0632                   .dbline 451
 0632           ;            {  PORTG|=0x01;    
 0632                   .dbline 451
 0632 80916500          lds R24,101
 0636 8160              ori R24,1
 0638 80936500          sts 101,R24
 063C                   .dbline 452
 063C           ;             timer3_init(); 
 063C 64DF              xcall _timer3_init
 063E           L159:
 063E                   .dbline 467
 063E           ;        /*
 063E           ;                       for(i=0; i<8;i++)
 063E           ;                       {
 063E           ;                         while((ETIFR&0xfb)==0);//等待 timer3中断标志
 063E           ;                         PORTG&=0xfe;
 063E           ;                         TPSBAUD
 063E           ;                         ETIFR&=0xfb;           //清timer3中断标志
 063E           ;                         if (GET_RX())           //根据端口电平, 写接收缓冲相应位 
 063E           ;                 {rx_buf |= (1 << i);}
 063E           ;               else
 063E           ;                 {rx_buf &= ~(1 << i);}
 063E           ;                   }
 063E           ;                       */
 063E           ;                       
 063E           ;                        while((ETIFR&0xfb)==0);//等待 timer3中断标志
 063E           L160:
 063E                   .dbline 467
 063E 80917C00          lds R24,124
 0642 8B7F              andi R24,251
 0644 E1F3              breq L159
 0646           X50:
 0646                   .dbline 469
 0646           ;                        // PORTG&=0xfe;
 0646           ;                         TPSBAUD
 0646                   .dbline 469
 0646 8EEF              ldi R24,254
 0648 80938900          sts 137,R24
 064C                   .dbline 469
 064C 80E6              ldi R24,96
 064E 80938800          sts 136,R24
 0652                   .dbline 469
 0652                   .dbline 470
 0652           ;                         ETIFR&=0xfb;           //清timer3中断标志
 0652 80917C00          lds R24,124
 0656 8B7F              andi R24,251
 0658 80937C00          sts 124,R24
 065C                   .dbline 471
 065C           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 065C 819B              sbis 0x10,1
 065E 02C0              rjmp L162
 0660           X51:
 0660                   .dbline 472
 0660           ;                 {rx_buf |= (1 << 0);}
 0660                   .dbline 472
 0660 4160              ori R20,1
 0662                   .dbline 472
 0662 01C0              xjmp L165
 0664           L162:
 0664                   .dbline 474
 0664           ;               else
 0664           ;                 {rx_buf &= ~(1 << 0);}
 0664                   .dbline 474
 0664 4E7F              andi R20,254
 0666                   .dbline 474
 0666           L164:
 0666                   .dbline 476
 0666           ;                       
 0666           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0666           L165:
 0666                   .dbline 476
 0666 80917C00          lds R24,124
 066A 8B7F              andi R24,251
 066C E1F3              breq L164
 066E           X52:
 066E                   .dbline 478
 066E           ;                       //  PORTG|=0x01; 
 066E           ;                         TPSBAUD
 066E                   .dbline 478
 066E 8EEF              ldi R24,254
 0670 80938900          sts 137,R24
 0674                   .dbline 478
 0674 80E6              ldi R24,96
 0676 80938800          sts 136,R24
 067A                   .dbline 478
 067A                   .dbline 479
 067A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 067A 80917C00          lds R24,124
 067E 8B7F              andi R24,251
 0680 80937C00          sts 124,R24
 0684                   .dbline 480
 0684           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0684 819B              sbis 0x10,1
 0686 02C0              rjmp L167
 0688           X53:
 0688                   .dbline 481
 0688           ;                 {rx_buf |= (1 << 1);}
 0688                   .dbline 481
 0688 4260              ori R20,2
 068A                   .dbline 481
 068A 01C0              xjmp L170
 068C           L167:
 068C                   .dbline 483
 068C           ;               else
 068C           ;                 {rx_buf &= ~(1 << 1);}
 068C                   .dbline 483
 068C 4D7F              andi R20,253
 068E                   .dbline 483
 068E           L169:
 068E                   .dbline 485
 068E           ;                               
 068E           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 068E           L170:
 068E                   .dbline 485
 068E 80917C00          lds R24,124
 0692 8B7F              andi R24,251
 0694 E1F3              breq L169
 0696           X54:
 0696                   .dbline 487
 0696           ;                       //  PORTG&=0xfe;
 0696           ;                         TPSBAUD
 0696                   .dbline 487
 0696 8EEF              ldi R24,254
 0698 80938900          sts 137,R24
 069C                   .dbline 487
 069C 80E6              ldi R24,96
 069E 80938800          sts 136,R24
 06A2                   .dbline 487
 06A2                   .dbline 488
 06A2           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06A2 80917C00          lds R24,124
 06A6 8B7F              andi R24,251
 06A8 80937C00          sts 124,R24
 06AC                   .dbline 489
 06AC           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06AC 819B              sbis 0x10,1
 06AE 02C0              rjmp L172
 06B0           X55:
 06B0                   .dbline 490
 06B0           ;                 {rx_buf |= (1 << 2);}
 06B0                   .dbline 490
 06B0 4460              ori R20,4
 06B2                   .dbline 490
 06B2 01C0              xjmp L175
 06B4           L172:
 06B4                   .dbline 492
 06B4           ;               else
 06B4           ;                 {rx_buf &= ~(1 << 2);}
 06B4                   .dbline 492
 06B4 4B7F              andi R20,251
 06B6                   .dbline 492
 06B6           L174:
 06B6                   .dbline 494
 06B6           ;                       
 06B6           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 06B6           L175:
 06B6                   .dbline 494
 06B6 80917C00          lds R24,124
 06BA 8B7F              andi R24,251
 06BC E1F3              breq L174
 06BE           X56:
 06BE                   .dbline 496
 06BE           ;                        // PORTG|=0x01; 
 06BE           ;                         TPSBAUD
 06BE                   .dbline 496
 06BE 8EEF              ldi R24,254
 06C0 80938900          sts 137,R24
 06C4                   .dbline 496
 06C4 80E6              ldi R24,96
 06C6 80938800          sts 136,R24
 06CA                   .dbline 496
 06CA                   .dbline 497
 06CA           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06CA 80917C00          lds R24,124
 06CE 8B7F              andi R24,251
 06D0 80937C00          sts 124,R24
 06D4                   .dbline 498
 06D4           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06D4 819B              sbis 0x10,1
 06D6 02C0              rjmp L177
 06D8           X57:
 06D8                   .dbline 499
 06D8           ;                 {rx_buf |= (1 << 3);}
 06D8                   .dbline 499
 06D8 4860              ori R20,8
 06DA                   .dbline 499
 06DA 01C0              xjmp L180
 06DC           L177:
 06DC                   .dbline 501
 06DC           ;               else
 06DC           ;                 {rx_buf &= ~(1 << 3);}
 06DC                   .dbline 501
 06DC 477F              andi R20,247
 06DE                   .dbline 501
 06DE           L179:
 06DE                   .dbline 503
 06DE           ;                       
 06DE           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 06DE           L180:
 06DE                   .dbline 503
 06DE 80917C00          lds R24,124
 06E2 8B7F              andi R24,251
 06E4 E1F3              breq L179
 06E6           X58:
 06E6                   .dbline 505
 06E6           ;                       //  PORTG&=0xfe;
 06E6           ;                         TPSBAUD
 06E6                   .dbline 505
 06E6 8EEF              ldi R24,254
 06E8 80938900          sts 137,R24
 06EC                   .dbline 505
 06EC 80E6              ldi R24,96
 06EE 80938800          sts 136,R24
 06F2                   .dbline 505
 06F2                   .dbline 506
 06F2           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06F2 80917C00          lds R24,124
 06F6 8B7F              andi R24,251
 06F8 80937C00          sts 124,R24
 06FC                   .dbline 507
 06FC           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06FC 819B              sbis 0x10,1
 06FE 02C0              rjmp L182
 0700           X59:
 0700                   .dbline 508
 0700           ;                 {rx_buf |= (1 << 4);}
 0700                   .dbline 508
 0700 4061              ori R20,16
 0702                   .dbline 508
 0702 01C0              xjmp L185
 0704           L182:
 0704                   .dbline 510
 0704           ;               else
 0704           ;                 {rx_buf &= ~(1 << 4);}
 0704                   .dbline 510
 0704 4F7E              andi R20,239
 0706                   .dbline 510
 0706           L184:
 0706                   .dbline 512
 0706           ;                       
 0706           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0706           L185:
 0706                   .dbline 512
 0706 80917C00          lds R24,124
 070A 8B7F              andi R24,251
 070C E1F3              breq L184
 070E           X60:
 070E                   .dbline 514
 070E           ;                        // PORTG|=0x01; 
 070E           ;                         TPSBAUD
 070E                   .dbline 514
 070E 8EEF              ldi R24,254
 0710 80938900          sts 137,R24
 0714                   .dbline 514
 0714 80E6              ldi R24,96
 0716 80938800          sts 136,R24
 071A                   .dbline 514
 071A                   .dbline 515
 071A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 071A 80917C00          lds R24,124
 071E 8B7F              andi R24,251
 0720 80937C00          sts 124,R24
 0724                   .dbline 516
 0724           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0724 819B              sbis 0x10,1
 0726 02C0              rjmp L187
 0728           X61:
 0728                   .dbline 517
 0728           ;                 {rx_buf |= (1 << 5);}
 0728                   .dbline 517
 0728 4062              ori R20,32
 072A                   .dbline 517
 072A 01C0              xjmp L190
 072C           L187:
 072C                   .dbline 519
 072C           ;               else
 072C           ;                 {rx_buf &= ~(1 << 5);}
 072C                   .dbline 519
 072C 4F7D              andi R20,223
 072E                   .dbline 519
 072E           L189:
 072E                   .dbline 521
 072E           ;                       
 072E           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 072E           L190:
 072E                   .dbline 521
 072E 80917C00          lds R24,124
 0732 8B7F              andi R24,251
 0734 E1F3              breq L189
 0736           X62:
 0736                   .dbline 523
 0736           ;                        // PORTG&=0xfe;
 0736           ;                         TPSBAUD
 0736                   .dbline 523
 0736 8EEF              ldi R24,254
 0738 80938900          sts 137,R24
 073C                   .dbline 523
 073C 80E6              ldi R24,96
 073E 80938800          sts 136,R24
 0742                   .dbline 523
 0742                   .dbline 524
 0742           ;                         ETIFR&=0xfb;           //清timer3中断标志
 0742 80917C00          lds R24,124
 0746 8B7F              andi R24,251
 0748 80937C00          sts 124,R24
 074C                   .dbline 525
 074C           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 074C 819B              sbis 0x10,1
 074E 02C0              rjmp L192
 0750           X63:
 0750                   .dbline 526
 0750           ;                 {rx_buf |= (1 << 6);}
 0750                   .dbline 526
 0750 4064              ori R20,64
 0752                   .dbline 526
 0752 01C0              xjmp L195
 0754           L192:
 0754                   .dbline 528
 0754           ;               else
 0754           ;                 {rx_buf &= ~(1 << 6);}
 0754                   .dbline 528
 0754 4F7B              andi R20,191
 0756                   .dbline 528
 0756           L194:
 0756                   .dbline 530
 0756           ;                       
 0756           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0756           L195:
 0756                   .dbline 530
 0756 80917C00          lds R24,124
 075A 8B7F              andi R24,251
 075C E1F3              breq L194
 075E           X64:
 075E                   .dbline 532
 075E           ;                        // PORTG|=0x01; 
 075E           ;                         TPSBAUD
 075E                   .dbline 532
 075E 8EEF              ldi R24,254
 0760 80938900          sts 137,R24
 0764                   .dbline 532
 0764 80E6              ldi R24,96
 0766 80938800          sts 136,R24
 076A                   .dbline 532
 076A                   .dbline 533
 076A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 076A 80917C00          lds R24,124
 076E 8B7F              andi R24,251
 0770 80937C00          sts 124,R24
 0774                   .dbline 534
 0774           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0774 819B              sbis 0x10,1
 0776 02C0              rjmp L197
 0778           X65:
 0778                   .dbline 535
 0778           ;                 {rx_buf |= (1 << 7);}
 0778                   .dbline 535
 0778 4068              ori R20,128
 077A                   .dbline 535
 077A 01C0              xjmp L200
 077C           L197:
 077C                   .dbline 537
 077C           ;               else
 077C           ;                 {rx_buf &= ~(1 << 7);}
 077C                   .dbline 537
 077C 4F77              andi R20,127
 077E                   .dbline 537
 077E           L199:
 077E                   .dbline 539
 077E           ;                                               
 077E           ;                        while((ETIFR&0xfb)==0);//等待 timer3中断标志
 077E           L200:
 077E                   .dbline 539
 077E 80917C00          lds R24,124
 0782 8B7F              andi R24,251
 0784 E1F3              breq L199
 0786           X66:
 0786                   .dbline 541
 0786           ;                       // PORTG&=0xfe; 
 0786           ;                        TPSBAUD
 0786                   .dbline 541
 0786 8EEF              ldi R24,254
 0788 80938900          sts 137,R24
 078C                   .dbline 541
 078C 80E6              ldi R24,96
 078E 80938800          sts 136,R24
 0792                   .dbline 541
 0792                   .dbline 542
 0792           ;                        ETIFR&=0xfb;           //清timer3中断标志
 0792 80917C00          lds R24,124
 0796 8B7F              andi R24,251
 0798 80937C00          sts 124,R24
 079C                   .dbline 544
 079C           ;                        
 079C           ;                        TCCR3B = 0x00; //stop  
 079C 2224              clr R2
 079E 20928A00          sts 138,R2
 07A2                   .dbline 545
 07A2           ;                ETIFR&=0xfb;           //清timer3中断标志
 07A2 80917C00          lds R24,124
 07A6 8B7F              andi R24,251
 07A8 80937C00          sts 124,R24
 07AC                   .dbline 547
 07AC           ;                         
 07AC           ;                       if (GET_RX()) //检测到了高电平结束位
 07AC 819B              sbis 0x10,1
 07AE 01C0              rjmp L202
 07B0           X67:
 07B0                   .dbline 548
 07B0           ;                        {break;}
 07B0                   .dbline 548
 07B0 03C0              xjmp L156
 07B2           L202:
 07B2                   .dbline 549
 07B2           ;                }
 07B2           L157:
 07B2                   .dbline 550
 07B2           ;       }
 07B2           L155:
 07B2                   .dbline 448
 07B2 26B6              in R2,0x36
 07B4 22FE              sbrs R2,2
 07B6 3BCF              rjmp L154
 07B8           X68:
 07B8           L156:
 07B8                   .dbline 551
 07B8           ;       TCCR1B = 0x00; //stop
 07B8 2224              clr R2
 07BA 2EBC              out 0x2e,R2
 07BC                   .dbline 552
 07BC           ;       TIFR|=0x04; //清定时器1中断标志 
 07BC 86B7              in R24,0x36
 07BE 8460              ori R24,4
 07C0 86BF              out 0x36,R24
 07C2                   .dbline 554
 07C2           ;       
 07C2           ;       return rx_buf;
 07C2 042F              mov R16,R20
 07C4                   .dbline -2
 07C4           L153:
 07C4                   .dbline 0 ; func end
 07C4 4991              ld R20,y+
 07C6 0895              ret
 07C8                   .dbsym l i 1 c
 07C8                   .dbsym r rx_buf 20 c
 07C8                   .dbend
 07C8                   .dbfunc e SampleTPS _SampleTPS fV
 07C8           ;        rx_fifo -> y+0
 07C8           ;            cmd -> R10
                        .even
 07C8           _SampleTPS::
 07C8 AA92              st -y,R10
 07CA A02E              mov R10,R16
 07CC 2497              sbiw R28,4
 07CE                   .dbline -1
 07CE                   .dbline 558
 07CE           ; }
 07CE           ; 
 07CE           ; void SampleTPS(unsigned char cmd)
 07CE           ; {   
 07CE                   .dbline 561
 07CE           ;     unsigned char rx_fifo[4];
 07CE           ;    
 07CE           ;       SendTPS(cmd);  //采样第2路压力温度，数字量或工程量
 07CE 0A2D              mov R16,R10
 07D0 B6DE              xcall _SendTPS
 07D2                   .dbline 563
 07D2           ; 
 07D2           ;       rx_fifo[0]=ReceiveTPS();
 07D2 1FDF              xcall _ReceiveTPS
 07D4 0883              std y+0,R16
 07D6                   .dbline 564
 07D6           ;       rx_fifo[1]=ReceiveTPS();
 07D6 1DDF              xcall _ReceiveTPS
 07D8 0983              std y+1,R16
 07DA                   .dbline 565
 07DA           ;       rx_fifo[2]=ReceiveTPS();
 07DA 1BDF              xcall _ReceiveTPS
 07DC A02E              mov R10,R16
 07DE AA82              std y+2,R10
 07E0                   .dbline 566
 07E0           ;       rx_fifo[3]=ReceiveTPS();
 07E0 18DF              xcall _ReceiveTPS
 07E2 A02E              mov R10,R16
 07E4 AB82              std y+3,R10
 07E6                   .dbline 568
 07E6           ;       
 07E6           ;       TPS_PData=rx_fifo[1];
 07E6 2980              ldd R2,y+1
 07E8 3324              clr R3
 07EA 3092DE01          sts _TPS_PData+1,R3
 07EE 2092DD01          sts _TPS_PData,R2
 07F2                   .dbline 569
 07F2           ;       TPS_PData<<=8;
 07F2 322C              mov R3,R2
 07F4 2224              clr R2
 07F6 3092DE01          sts _TPS_PData+1,R3
 07FA 2092DD01          sts _TPS_PData,R2
 07FE                   .dbline 570
 07FE           ;       TPS_PData|=rx_fifo[0];
 07FE 2880              ldd R2,y+0
 0800 3324              clr R3
 0802 4090DD01          lds R4,_TPS_PData
 0806 5090DE01          lds R5,_TPS_PData+1
 080A 4228              or R4,R2
 080C 5328              or R5,R3
 080E 5092DE01          sts _TPS_PData+1,R5
 0812 4092DD01          sts _TPS_PData,R4
 0816                   .dbline 571
 0816           ;       TPS_TData=rx_fifo[3];
 0816 2A2C              mov R2,R10
 0818 3324              clr R3
 081A 3092DC01          sts _TPS_TData+1,R3
 081E 2092DB01          sts _TPS_TData,R2
 0822                   .dbline 572
 0822           ;       TPS_TData<<=8;
 0822 322C              mov R3,R2
 0824 2224              clr R2
 0826 3092DC01          sts _TPS_TData+1,R3
 082A 2092DB01          sts _TPS_TData,R2
 082E                   .dbline 573
 082E           ;       TPS_TData|=rx_fifo[2];
 082E 2A80              ldd R2,y+2
 0830 3324              clr R3
 0832 4090DB01          lds R4,_TPS_TData
 0836 5090DC01          lds R5,_TPS_TData+1
 083A 4228              or R4,R2
 083C 5328              or R5,R3
 083E 5092DC01          sts _TPS_TData+1,R5
 0842 4092DB01          sts _TPS_TData,R4
 0846                   .dbline -2
 0846           L204:
 0846                   .dbline 0 ; func end
 0846 2496              adiw R28,4
 0848 A990              ld R10,y+
 084A 0895              ret
 084C                   .dbsym l rx_fifo 0 A[4:4]c
 084C                   .dbsym r cmd 10 c
 084C                   .dbend
 084C                   .dbfunc e uart0_init _uart0_init fV
                        .even
 084C           _uart0_init::
 084C                   .dbline -1
 084C                   .dbline 583
 084C           ; }
 084C           ; 
 084C           ; 
 084C           ; //UART0 initialize
 084C           ; // desired baud rate: 57600
 084C           ; // actual: baud rate:58824 (2.1%)
 084C           ; // char size: 8 bit
 084C           ; // parity: Disabled
 084C           ; void uart0_init(void)
 084C           ; {
 084C                   .dbline 584
 084C           ;  UCSR0B = 0x00; //disable while setting baud rate
 084C 2224              clr R2
 084E 2AB8              out 0xa,R2
 0850                   .dbline 585
 0850           ;  UCSR0A = 0x02;
 0850 82E0              ldi R24,2
 0852 8BB9              out 0xb,R24
 0854                   .dbline 586
 0854           ;  UCSR0C = 0x06;
 0854 86E0              ldi R24,6
 0856 80939500          sts 149,R24
 085A                   .dbline 587
 085A           ;  UBRR0L = 0x10; //set baud rate lo 57600
 085A 80E1              ldi R24,16
 085C 89B9              out 0x9,R24
 085E                   .dbline 588
 085E           ;  UBRR0H = 0x00; //set baud rate hi
 085E 20929000          sts 144,R2
 0862                   .dbline 589
 0862           ;  UCSR0B = 0x98;
 0862 88E9              ldi R24,152
 0864 8AB9              out 0xa,R24
 0866                   .dbline -2
 0866           L211:
 0866                   .dbline 0 ; func end
 0866 0895              ret
 0868                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C943404          jmp _uart0_rx_isr
                        .area text(rom, con, rel)
 0868                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0868                   .dbfunc e uart0_rx_isr _uart0_rx_isr fV
                        .even
 0868           _uart0_rx_isr::
 0868 2A92              st -y,R2
 086A 8A93              st -y,R24
 086C 9A93              st -y,R25
 086E EA93              st -y,R30
 0870 FA93              st -y,R31
 0872 2FB6              IN R2,63
 0874 2A92              st -y,R2
 0876                   .dbline -1
 0876                   .dbline 594
 0876           ; }
 0876           ; 
 0876           ; #pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
 0876           ; void uart0_rx_isr(void)//串口0接收中断
 0876           ; {
 0876                   .dbline 595
 0876           ;     if(Uart0RxCounter<74)
 0876 8091FA01          lds R24,_Uart0RxCounter
 087A 8A34              cpi R24,74
 087C 70F4              brsh L213
 087E           X69:
 087E                   .dbline 596
 087E           ;       {
 087E                   .dbline 597
 087E           ;     Uart0RxData[Uart0RxCounter]=UDR0;//接收串口数据,同时清空串口接收中断标志
 087E 80E0              ldi R24,<_Uart0RxData
 0880 90E0              ldi R25,>_Uart0RxData
 0882 E091FA01          lds R30,_Uart0RxCounter
 0886 FF27              clr R31
 0888 E80F              add R30,R24
 088A F91F              adc R31,R25
 088C 2CB0              in R2,0xc
 088E 2082              std z+0,R2
 0890                   .dbline 598
 0890           ;       Uart0RxCounter++;
 0890 8091FA01          lds R24,_Uart0RxCounter
 0894 8F5F              subi R24,255    ; addi 1
 0896 8093FA01          sts _Uart0RxCounter,R24
 089A                   .dbline 599
 089A           ;       }
 089A           L213:
 089A                   .dbline -2
 089A           L212:
 089A                   .dbline 0 ; func end
 089A 2990              ld R2,y+
 089C 2FBE              OUT 63,R2
 089E F991              ld R31,y+
 08A0 E991              ld R30,y+
 08A2 9991              ld R25,y+
 08A4 8991              ld R24,y+
 08A6 2990              ld R2,y+
 08A8 1895              reti
 08AA                   .dbend
                        .area vector(rom, abs)
                        .org 64
 0040 0C945504          jmp _timer0_ovf_isr
                        .area text(rom, con, rel)
 08AA                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 08AA                   .dbfunc e timer0_ovf_isr _timer0_ovf_isr fV
                        .even
 08AA           _timer0_ovf_isr::
 08AA 2A92              st -y,R2
 08AC 8A93              st -y,R24
 08AE 9A93              st -y,R25
 08B0 2FB6              IN R2,63
 08B2 2A92              st -y,R2
 08B4                   .dbline -1
 08B4                   .dbline 604
 08B4           ; }
 08B4           ; 
 08B4           ; #pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
 08B4           ; void timer0_ovf_isr(void)
 08B4           ; {
 08B4                   .dbline 605
 08B4           ; Timer0Counter--;
 08B4 80914502          lds R24,_Timer0Counter
 08B8 90914602          lds R25,_Timer0Counter+1
 08BC 0197              sbiw R24,1
 08BE 90934602          sts _Timer0Counter+1,R25
 08C2 80934502          sts _Timer0Counter,R24
 08C6                   .dbline 606
 08C6           ; if(Timer0Counter==0)
 08C6 8030              cpi R24,0
 08C8 8907              cpc R24,R25
 08CA 61F4              brne L216
 08CC           X70:
 08CC                   .dbline 607
 08CC           ; {
 08CC                   .dbline 608
 08CC           ;  TCNT0=0;
 08CC 2224              clr R2
 08CE 22BE              out 0x32,R2
 08D0                   .dbline 609
 08D0           ;  TimeOutFlag=1;
 08D0 81E0              ldi R24,1
 08D2 8093D901          sts _TimeOutFlag,R24
 08D6                   .dbline 610
 08D6           ;  TIMSK&=0xFE;//关定时器0中断
 08D6 87B7              in R24,0x37
 08D8 8E7F              andi R24,254
 08DA 87BF              out 0x37,R24
 08DC                   .dbline 611
 08DC           ;  UCSR0B&=0x7f;//关串口接收中断
 08DC 8AB1              in R24,0xa
 08DE 8F77              andi R24,127
 08E0 8AB9              out 0xa,R24
 08E2                   .dbline 612
 08E2           ;  }
 08E2 02C0              xjmp L217
 08E4           L216:
 08E4                   .dbline 614
 08E4           ;  else
 08E4           ;  {
 08E4                   .dbline 615
 08E4           ;  TCNT0=0x06;//定时8ms
 08E4 86E0              ldi R24,6
 08E6 82BF              out 0x32,R24
 08E8                   .dbline 616
 08E8           ;  }
 08E8           L217:
 08E8                   .dbline -2
 08E8           L215:
 08E8                   .dbline 0 ; func end
 08E8 2990              ld R2,y+
 08EA 2FBE              OUT 63,R2
 08EC 9991              ld R25,y+
 08EE 8991              ld R24,y+
 08F0 2990              ld R2,y+
 08F2 1895              reti
 08F4                   .dbend
 08F4                   .dbfunc e SendUart0_2 _SendUart0_2 fV
 08F4           ;              t -> R20
 08F4           ;              i -> R22
 08F4           ;              s -> R18,R19
 08F4           ;            len -> R16
                        .even
 08F4           _SendUart0_2::
 08F4 4A93              st -y,R20
 08F6 6A93              st -y,R22
 08F8                   .dbline -1
 08F8                   .dbline 622
 08F8           ; }
 08F8           ; 
 08F8           ;  
 08F8           ; 
 08F8           ; void SendUart0_2(unsigned char len,unsigned int s)   //串口发送数据
 08F8           ; {//要求流量板在s个8ms内通过串口返回数据
 08F8                   .dbline 625
 08F8           ; unsigned char t,i;    
 08F8           ; 
 08F8           ; for(t=0;t<74;t++)
 08F8 4427              clr R20
 08FA 09C0              xjmp L222
 08FC           L219:
 08FC                   .dbline 626
 08FC           ;   Uart0RxData[t]=0xff;
 08FC 80E0              ldi R24,<_Uart0RxData
 08FE 90E0              ldi R25,>_Uart0RxData
 0900 E42F              mov R30,R20
 0902 FF27              clr R31
 0904 E80F              add R30,R24
 0906 F91F              adc R31,R25
 0908 8FEF              ldi R24,255
 090A 8083              std z+0,R24
 090C           L220:
 090C                   .dbline 625
 090C 4395              inc R20
 090E           L222:
 090E                   .dbline 625
 090E 4A34              cpi R20,74
 0910 A8F3              brlo L219
 0912           X71:
 0912                   .dbline 628
 0912           ;   
 0912           ; Uart0RxCounter=0; //清串口接受计数  
 0912 2224              clr R2
 0914 2092FA01          sts _Uart0RxCounter,R2
 0918                   .dbline 630
 0918           ; 
 0918           ; for(t=0;t<len;t++)
 0918 4427              clr R20
 091A 10C0              xjmp L226
 091C           L227:
 091C                   .dbline 632
 091C           ; {
 091C           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 091C           L228:
 091C                   .dbline 632
 091C 5D9B              sbis 0xb,5
 091E FECF              rjmp L227
 0920           X72:
 0920                   .dbline 633
 0920           ; for(i=0;i<200;i++);
 0920 6627              clr R22
 0922 01C0              xjmp L233
 0924           L230:
 0924                   .dbline 633
 0924           L231:
 0924                   .dbline 633
 0924 6395              inc R22
 0926           L233:
 0926                   .dbline 633
 0926 683C              cpi R22,200
 0928 E8F3              brlo L230
 092A           X73:
 092A                   .dbline 634
 092A           ; UDR0=Uart0TxData[t];  
 092A 80E0              ldi R24,<_Uart0TxData
 092C 90E0              ldi R25,>_Uart0TxData
 092E E42F              mov R30,R20
 0930 FF27              clr R31
 0932 E80F              add R30,R24
 0934 F91F              adc R31,R25
 0936 2080              ldd R2,z+0
 0938 2CB8              out 0xc,R2
 093A                   .dbline 635
 093A           ; }
 093A           L224:
 093A                   .dbline 630
 093A 4395              inc R20
 093C           L226:
 093C                   .dbline 630
 093C 4017              cp R20,R16
 093E 70F3              brlo L228
 0940           X74:
 0940                   .dbline 637
 0940           ;                   
 0940           ; if(s>0)
 0940 2030              cpi R18,0
 0942 2307              cpc R18,R19
 0944 F1F0              breq L234
 0946           X75:
 0946                   .dbline 638
 0946           ; {
 0946                   .dbline 640
 0946           ;  //超时设定
 0946           ; TimeOutFlag=0; //超时标志置0
 0946 2224              clr R2
 0948 2092D901          sts _TimeOutFlag,R2
 094C                   .dbline 641
 094C           ; Timer0Counter=s; //8ms定时循环次数
 094C 30934602          sts _Timer0Counter+1,R19
 0950 20934502          sts _Timer0Counter,R18
 0954                   .dbline 642
 0954           ; TCNT0=0x06;//定时8ms
 0954 86E0              ldi R24,6
 0956 82BF              out 0x32,R24
 0958                   .dbline 643
 0958           ; TCCR0|=0x06;//256分频
 0958 83B7              in R24,0x33
 095A 8660              ori R24,6
 095C 83BF              out 0x33,R24
 095E                   .dbline 644
 095E           ; TIFR|=0x01; //清定时器0中断标志
 095E 86B7              in R24,0x36
 0960 8160              ori R24,1
 0962 86BF              out 0x36,R24
 0964                   .dbline 645
 0964           ; TIMSK|=0x01;//使能定时器0中断
 0964 87B7              in R24,0x37
 0966 8160              ori R24,1
 0968 87BF              out 0x37,R24
 096A                   .dbline 646
 096A           ; t=UDR0;//开串口接收中断前读空缓存
 096A 4CB1              in R20,0xc
 096C                   .dbline 647
 096C           ; UCSR0B|=0x80;//开串口接收中断
 096C 579A              sbi 0xa,7
 096E           L236:
 096E                   .dbline 648
 096E           ; while(TimeOutFlag==0);
 096E           L237:
 096E                   .dbline 648
 096E 2090D901          lds R2,_TimeOutFlag
 0972 2220              tst R2
 0974 E1F3              breq L236
 0976           X76:
 0976                   .dbline 649
 0976           ; TIMSK&=0xFE;//关定时器0中断
 0976 87B7              in R24,0x37
 0978 8E7F              andi R24,254
 097A 87BF              out 0x37,R24
 097C                   .dbline 650
 097C           ; UCSR0B&=0x7f;//关串口接收中断
 097C 8AB1              in R24,0xa
 097E 8F77              andi R24,127
 0980 8AB9              out 0xa,R24
 0982                   .dbline 651
 0982           ; }
 0982           L234:
 0982                   .dbline -2
 0982           L218:
 0982                   .dbline 0 ; func end
 0982 6991              ld R22,y+
 0984 4991              ld R20,y+
 0986 0895              ret
 0988                   .dbsym r t 20 c
 0988                   .dbsym r i 22 c
 0988                   .dbsym r s 18 i
 0988                   .dbsym r len 16 c
 0988                   .dbend
 0988                   .dbfunc e SendUart0_3 _SendUart0_3 fV
 0988           ;              t -> R20
 0988           ;              i -> R22
 0988           ;             cn -> R10
 0988           ;              s -> R18,R19
 0988           ;            len -> R16
                        .even
 0988           _SendUart0_3::
 0988 0E940000          xcall push_xgsetF00C
 098C AE80              ldd R10,y+6
 098E                   .dbline -1
 098E                   .dbline 655
 098E           ; }
 098E           ; 
 098E           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn)   //串口发送数据，不死等，收到采集板返回的cn个字节后即退出，如一直没收到cn个字节，则超时时间s*8ms到后也退出
 098E           ; {//要求流量板在s个8ms内通过串口返回数据
 098E                   .dbline 658
 098E           ; unsigned char t,i;    
 098E           ; 
 098E           ; for(t=0;t<74;t++)
 098E 4427              clr R20
 0990 09C0              xjmp L243
 0992           L240:
 0992                   .dbline 659
 0992           ;   Uart0RxData[t]=0xff;
 0992 80E0              ldi R24,<_Uart0RxData
 0994 90E0              ldi R25,>_Uart0RxData
 0996 E42F              mov R30,R20
 0998 FF27              clr R31
 099A E80F              add R30,R24
 099C F91F              adc R31,R25
 099E 8FEF              ldi R24,255
 09A0 8083              std z+0,R24
 09A2           L241:
 09A2                   .dbline 658
 09A2 4395              inc R20
 09A4           L243:
 09A4                   .dbline 658
 09A4 4A34              cpi R20,74
 09A6 A8F3              brlo L240
 09A8           X77:
 09A8                   .dbline 661
 09A8           ;   
 09A8           ; Uart0RxCounter=0; //清串口接受计数  
 09A8 2224              clr R2
 09AA 2092FA01          sts _Uart0RxCounter,R2
 09AE                   .dbline 663
 09AE           ; 
 09AE           ; for(t=0;t<len;t++)
 09AE 4427              clr R20
 09B0 10C0              xjmp L247
 09B2           L248:
 09B2                   .dbline 665
 09B2           ; {
 09B2           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 09B2           L249:
 09B2                   .dbline 665
 09B2 5D9B              sbis 0xb,5
 09B4 FECF              rjmp L248
 09B6           X78:
 09B6                   .dbline 666
 09B6           ; for(i=0;i<200;i++);
 09B6 6627              clr R22
 09B8 01C0              xjmp L254
 09BA           L251:
 09BA                   .dbline 666
 09BA           L252:
 09BA                   .dbline 666
 09BA 6395              inc R22
 09BC           L254:
 09BC                   .dbline 666
 09BC 683C              cpi R22,200
 09BE E8F3              brlo L251
 09C0           X79:
 09C0                   .dbline 667
 09C0           ; UDR0=Uart0TxData[t];  
 09C0 80E0              ldi R24,<_Uart0TxData
 09C2 90E0              ldi R25,>_Uart0TxData
 09C4 E42F              mov R30,R20
 09C6 FF27              clr R31
 09C8 E80F              add R30,R24
 09CA F91F              adc R31,R25
 09CC 2080              ldd R2,z+0
 09CE 2CB8              out 0xc,R2
 09D0                   .dbline 668
 09D0           ; }
 09D0           L245:
 09D0                   .dbline 663
 09D0 4395              inc R20
 09D2           L247:
 09D2                   .dbline 663
 09D2 4017              cp R20,R16
 09D4 70F3              brlo L249
 09D6           X80:
 09D6                   .dbline 670
 09D6           ;                   
 09D6           ; if(s>0)
 09D6 2030              cpi R18,0
 09D8 2307              cpc R18,R19
 09DA 21F1              breq L255
 09DC           X81:
 09DC                   .dbline 671
 09DC           ; {
 09DC                   .dbline 673
 09DC           ;  //超时设定
 09DC           ; TimeOutFlag=0; //超时标志置0
 09DC 2224              clr R2
 09DE 2092D901          sts _TimeOutFlag,R2
 09E2                   .dbline 674
 09E2           ; Timer0Counter=s; //8ms定时循环次数
 09E2 30934602          sts _Timer0Counter+1,R19
 09E6 20934502          sts _Timer0Counter,R18
 09EA                   .dbline 675
 09EA           ; TCNT0=0x06;//定时8ms
 09EA 86E0              ldi R24,6
 09EC 82BF              out 0x32,R24
 09EE                   .dbline 676
 09EE           ; TCCR0|=0x06;//256分频
 09EE 83B7              in R24,0x33
 09F0 8660              ori R24,6
 09F2 83BF              out 0x33,R24
 09F4                   .dbline 677
 09F4           ; TIFR|=0x01; //清定时器0中断标志
 09F4 86B7              in R24,0x36
 09F6 8160              ori R24,1
 09F8 86BF              out 0x36,R24
 09FA                   .dbline 678
 09FA           ; TIMSK|=0x01;//使能定时器0中断
 09FA 87B7              in R24,0x37
 09FC 8160              ori R24,1
 09FE 87BF              out 0x37,R24
 0A00                   .dbline 679
 0A00           ; t=UDR0;//开串口接收中断前读空缓存
 0A00 4CB1              in R20,0xc
 0A02                   .dbline 680
 0A02           ; UCSR0B|=0x80;//开串口接收中断
 0A02 579A              sbi 0xa,7
 0A04 05C0              xjmp L258
 0A06           L257:
 0A06                   .dbline 682
 0A06           ; while(TimeOutFlag==0)
 0A06           ; {
 0A06                   .dbline 683
 0A06           ;  if(Uart0RxCounter>=cn)
 0A06 2090FA01          lds R2,_Uart0RxCounter
 0A0A 2A14              cp R2,R10
 0A0C 08F0              brlo L260
 0A0E           X82:
 0A0E                   .dbline 684
 0A0E           ;    break;
 0A0E 04C0              xjmp L259
 0A10           L260:
 0A10                   .dbline 685
 0A10           ; }
 0A10           L258:
 0A10                   .dbline 681
 0A10 2090D901          lds R2,_TimeOutFlag
 0A14 2220              tst R2
 0A16 B9F3              breq L257
 0A18           X83:
 0A18           L259:
 0A18                   .dbline 686
 0A18           ; TIMSK&=0xFE;//关定时器0中断
 0A18 87B7              in R24,0x37
 0A1A 8E7F              andi R24,254
 0A1C 87BF              out 0x37,R24
 0A1E                   .dbline 687
 0A1E           ; UCSR0B&=0x7f;//关串口接收中断
 0A1E 8AB1              in R24,0xa
 0A20 8F77              andi R24,127
 0A22 8AB9              out 0xa,R24
 0A24                   .dbline 688
 0A24           ; }
 0A24           L255:
 0A24                   .dbline -2
 0A24           L239:
 0A24                   .dbline 0 ; func end
 0A24 0C940000          xjmp pop_xgsetF00C
 0A28                   .dbsym r t 20 c
 0A28                   .dbsym r i 22 c
 0A28                   .dbsym r cn 10 c
 0A28                   .dbsym r s 18 i
 0A28                   .dbsym r len 16 c
 0A28                   .dbend
 0A28                   .dbfunc e SampleADC _SampleADC fc
 0A28           ;           adcl -> y+0
 0A28           ;              c -> R10
 0A28           ;         ADdata -> R12,R13
 0A28           ;             ch -> R10
                        .even
 0A28           _SampleADC::
 0A28 0E940000          xcall push_xgsetF03C
 0A2C A02E              mov R10,R16
 0A2E 2497              sbiw R28,4
 0A30                   .dbline -1
 0A30                   .dbline 694
 0A30           ; }
 0A30           ; 
 0A30           ;  
 0A30           ;    
 0A30           ; unsigned char SampleADC(unsigned char ch)//耗时约5ms
 0A30           ; {     unsigned char c;
 0A30                   .dbline 698
 0A30           ;       unsigned long adcl;
 0A30           ;         unsigned int ADdata;
 0A30           ; 
 0A30           ;         ADMUX  = (0xc0+ch);//片内2.56V基准，选择单端输入通道 
 0A30 8A2D              mov R24,R10
 0A32 8054              subi R24,64    ; addi 192
 0A34 87B9              out 0x7,R24
 0A36                   .dbline 699
 0A36           ;         ADCSRA =0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0A36 83EC              ldi R24,195
 0A38 86B9              out 0x6,R24
 0A3A                   .dbline 702
 0A3A           ;    
 0A3A           ;         //第一次采样值不要
 0A3A           ;         for(ADdata=0;ADdata<100;ADdata++);
 0A3A CC24              clr R12
 0A3C DD24              clr R13
 0A3E 03C0              xjmp L266
 0A40           L263:
 0A40                   .dbline 702
 0A40           L264:
 0A40                   .dbline 702
 0A40 C601              movw R24,R12
 0A42 0196              adiw R24,1
 0A44 6C01              movw R12,R24
 0A46           L266:
 0A46                   .dbline 702
 0A46 C601              movw R24,R12
 0A48 8436              cpi R24,100
 0A4A E0E0              ldi R30,0
 0A4C 9E07              cpc R25,R30
 0A4E C0F3              brlo L263
 0A50           X84:
 0A50           L267:
 0A50                   .dbline 703
 0A50           ;         while((ADCSRA&0x40)==0x40);//等待转换完成
 0A50           L268:
 0A50                   .dbline 703
 0A50 86B1              in R24,0x6
 0A52 8074              andi R24,64
 0A54 8034              cpi R24,64
 0A56 E1F3              breq L267
 0A58           X85:
 0A58                   .dbline 704
 0A58           ;         ADdata=ADCL;
 0A58 C4B0              in R12,0x4
 0A5A DD24              clr R13
 0A5C                   .dbline 705
 0A5C           ;         ADdata=ADCH;  
 0A5C C5B0              in R12,0x5
 0A5E DD24              clr R13
 0A60                   .dbline 707
 0A60           ;   
 0A60           ;         adcl=0;
 0A60 80E0              ldi R24,0
 0A62 8883              std y+0,R24
 0A64 8983              std y+1,R24
 0A66 8A83              std y+2,R24
 0A68 8B83              std y+3,R24
 0A6A                   .dbline 708
 0A6A           ;         for(c=0;c<32;c++)//32次值取平均
 0A6A AA24              clr R10
 0A6C 2CC0              xjmp L273
 0A6E           L270:
 0A6E                   .dbline 709
 0A6E           ;         {
 0A6E                   .dbline 710
 0A6E           ;          ADCSRA = 0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0A6E 83EC              ldi R24,195
 0A70 86B9              out 0x6,R24
 0A72                   .dbline 711
 0A72           ;          for(ADdata=0;ADdata<100;ADdata++);
 0A72 CC24              clr R12
 0A74 DD24              clr R13
 0A76 03C0              xjmp L277
 0A78           L274:
 0A78                   .dbline 711
 0A78           L275:
 0A78                   .dbline 711
 0A78 C601              movw R24,R12
 0A7A 0196              adiw R24,1
 0A7C 6C01              movw R12,R24
 0A7E           L277:
 0A7E                   .dbline 711
 0A7E C601              movw R24,R12
 0A80 8436              cpi R24,100
 0A82 E0E0              ldi R30,0
 0A84 9E07              cpc R25,R30
 0A86 C0F3              brlo L274
 0A88           X86:
 0A88           L278:
 0A88                   .dbline 712
 0A88           ;          while((ADCSRA&0x40)==0x40);//等待转换完成    
 0A88           L279:
 0A88                   .dbline 712
 0A88 86B1              in R24,0x6
 0A8A 8074              andi R24,64
 0A8C 8034              cpi R24,64
 0A8E E1F3              breq L278
 0A90           X87:
 0A90                   .dbline 713
 0A90           ;          ADdata=ADCL;   
 0A90 C4B0              in R12,0x4
 0A92 DD24              clr R13
 0A94                   .dbline 714
 0A94           ;          ADdata|=(ADCH<<8);
 0A94 25B0              in R2,0x5
 0A96 3324              clr R3
 0A98 322C              mov R3,R2
 0A9A 2224              clr R2
 0A9C C228              or R12,R2
 0A9E D328              or R13,R3
 0AA0                   .dbline 715
 0AA0           ;          ADdata&=0x03ff;//10位有效转换结果
 0AA0 C601              movw R24,R12
 0AA2 9370              andi R25,3
 0AA4 6C01              movw R12,R24
 0AA6                   .dbline 716
 0AA6           ;          adcl+=ADdata;
 0AA6 1C01              movw R2,R24
 0AA8 4424              clr R4
 0AAA 5524              clr R5
 0AAC 6880              ldd R6,y+0
 0AAE 7980              ldd R7,y+1
 0AB0 8A80              ldd R8,y+2
 0AB2 9B80              ldd R9,y+3
 0AB4 620C              add R6,R2
 0AB6 731C              adc R7,R3
 0AB8 841C              adc R8,R4
 0ABA 951C              adc R9,R5
 0ABC 6882              std y+0,R6
 0ABE 7982              std y+1,R7
 0AC0 8A82              std y+2,R8
 0AC2 9B82              std y+3,R9
 0AC4                   .dbline 717
 0AC4           ;         }
 0AC4           L271:
 0AC4                   .dbline 708
 0AC4 A394              inc R10
 0AC6           L273:
 0AC6                   .dbline 708
 0AC6 8A2D              mov R24,R10
 0AC8 8032              cpi R24,32
 0ACA 88F2              brlo L270
 0ACC           X88:
 0ACC                   .dbline 719
 0ACC           ; 
 0ACC           ;         adcl>>=7;//除以32，再除以4，相当于8位AD
 0ACC 87E0              ldi R24,7
 0ACE 90E0              ldi R25,0
 0AD0 0881              ldd R16,y+0
 0AD2 1981              ldd R17,y+1
 0AD4 2A81              ldd R18,y+2
 0AD6 3B81              ldd R19,y+3
 0AD8 8A93              st -y,R24
 0ADA 0E940000          xcall lsr32
 0ADE 0883              std y+0,R16
 0AE0 1983              std y+1,R17
 0AE2 2A83              std y+2,R18
 0AE4 3B83              std y+3,R19
 0AE6                   .dbline 720
 0AE6           ;         return (adcl&0x000000ff);//取8位有效位
 0AE6 4FEF              ldi R20,255
 0AE8 50E0              ldi R21,0
 0AEA 60E0              ldi R22,0
 0AEC 70E0              ldi R23,0
 0AEE 2880              ldd R2,y+0
 0AF0 3980              ldd R3,y+1
 0AF2 4A80              ldd R4,y+2
 0AF4 5B80              ldd R5,y+3
 0AF6 2422              and R2,R20
 0AF8 3522              and R3,R21
 0AFA 4622              and R4,R22
 0AFC 5722              and R5,R23
 0AFE 022D              mov R16,R2
 0B00                   .dbline -2
 0B00           L262:
 0B00                   .dbline 0 ; func end
 0B00 2496              adiw R28,4
 0B02 0C940000          xjmp pop_xgsetF03C
 0B06                   .dbsym l adcl 0 l
 0B06                   .dbsym r c 10 c
 0B06                   .dbsym r ADdata 12 i
 0B06                   .dbsym r ch 10 c
 0B06                   .dbend
 0B06                   .dbfunc e Delay_ms _Delay_ms fV
 0B06           ;              a -> <dead>
 0B06           ;              n -> R10,R11
 0B06           ;              f -> y+0
 0B06           ;              t -> R10,R11
                        .even
 0B06           _Delay_ms::
 0B06 0E940000          xcall push_xgsetF00C
 0B0A 5801              movw R10,R16
 0B0C 2497              sbiw R28,4
 0B0E                   .dbline -1
 0B0E                   .dbline 724
 0B0E           ; }
 0B0E           ; 
 0B0E           ; void Delay_ms(unsigned int t)//最大定时8388ms
 0B0E           ; {   
 0B0E                   .dbline 729
 0B0E           ;     float f;
 0B0E           ;       unsigned char a;
 0B0E           ;     unsigned int n;
 0B0E           ;       
 0B0E           ;       if(t==0){return;}
 0B0E AA20              tst R10
 0B10 19F4              brne L282
 0B12 BB20              tst R11
 0B14 09F4              brne L282
 0B16           X89:
 0B16                   .dbline 729
 0B16                   .dbline 729
 0B16 3AC0              xjmp L281
 0B18           L282:
 0B18                   .dbline 731
 0B18           ;       
 0B18           ;     TCCR1B = 0x00; //stop
 0B18 2224              clr R2
 0B1A 2EBC              out 0x2e,R2
 0B1C                   .dbline 732
 0B1C           ;       if(t>8388)
 0B1C 84EC              ldi R24,8388
 0B1E 90E2              ldi R25,32
 0B20 8A15              cp R24,R10
 0B22 9B05              cpc R25,R11
 0B24 08F4              brsh L284
 0B26           X90:
 0B26                   .dbline 733
 0B26           ;          t=8388;
 0B26 5C01              movw R10,R24
 0B28           L284:
 0B28                   .dbline 734
 0B28           ;       f=t;
 0B28 8501              movw R16,R10
 0B2A 0E940000          xcall uint2fp
 0B2E 0883              std y+0,R16
 0B30 1983              std y+1,R17
 0B32 2A83              std y+2,R18
 0B34 3B83              std y+3,R19
 0B36                   .dbline 735
 0B36           ;       f*=7.8125;
 0B36 00E0              ldi R16,<L286
 0B38 10E0              ldi R17,>L286
 0B3A 0E940000          xcall elpm32
 0B3E CE01              movw R24,R28
 0B40 9A93              st -y,R25
 0B42 8A93              st -y,R24
 0B44 0E940000          xcall fpmule1
 0B48 0883              std y+0,R16
 0B4A 1983              std y+1,R17
 0B4C 2A83              std y+2,R18
 0B4E 3B83              std y+3,R19
 0B50                   .dbline 736
 0B50           ;       n=f;
 0B50 0881              ldd R16,y+0
 0B52 1981              ldd R17,y+1
 0B54 2A81              ldd R18,y+2
 0B56 3B81              ldd R19,y+3
 0B58 0E940000          xcall fpint
 0B5C 5801              movw R10,R16
 0B5E                   .dbline 737
 0B5E           ;     TCNT1 = 65535-n;  
 0B5E 1501              movw R2,R10
 0B60 4424              clr R4
 0B62 5524              clr R5
 0B64 4FEF              ldi R20,255
 0B66 5FEF              ldi R21,255
 0B68 60E0              ldi R22,0
 0B6A 70E0              ldi R23,0
 0B6C 4219              sub R20,R2
 0B6E 5309              sbc R21,R3
 0B70 6409              sbc R22,R4
 0B72 7509              sbc R23,R5
 0B74 5DBD              out 0x2d,R21
 0B76 4CBD              out 0x2c,R20
 0B78                   .dbline 738
 0B78           ;       TIFR|=0x04; //清定时器1中断标志 
 0B78 86B7              in R24,0x36
 0B7A 8460              ori R24,4
 0B7C 86BF              out 0x36,R24
 0B7E                   .dbline 739
 0B7E           ;       TCCR1B = 0x05; //1024分频
 0B7E 85E0              ldi R24,5
 0B80 8EBD              out 0x2e,R24
 0B82           L287:
 0B82                   .dbline 740
 0B82           ;     while((TIFR&0x04)==0x00) ; 
 0B82           L288:
 0B82                   .dbline 740
 0B82 26B6              in R2,0x36
 0B84 22FE              sbrs R2,2
 0B86 FDCF              rjmp L287
 0B88           X91:
 0B88                   .dbline 741
 0B88           ;     TCCR1B = 0x00; //stop
 0B88 2224              clr R2
 0B8A 2EBC              out 0x2e,R2
 0B8C                   .dbline -2
 0B8C           L281:
 0B8C                   .dbline 0 ; func end
 0B8C 2496              adiw R28,4
 0B8E 0C940000          xjmp pop_xgsetF00C
 0B92                   .dbsym l a 1 c
 0B92                   .dbsym r n 10 i
 0B92                   .dbsym l f 0 D
 0B92                   .dbsym r t 10 i
 0B92                   .dbend
 0B92                   .dbfunc e Start _Start fV
                        .even
 0B92           _Start::
 0B92                   .dbline -1
 0B92                   .dbline 746
 0B92           ; }
 0B92           ; 
 0B92           ; 
 0B92           ; void Start(void)
 0B92           ; {
 0B92                   .dbline 747
 0B92           ;  InitialIO();
 0B92 35DC              xcall _InitialIO
 0B94                   .dbline 748
 0B94           ;  uart0_init();
 0B94 5BDE              xcall _uart0_init
 0B96                   .dbline 749
 0B96           ;  uart1_init();
 0B96 42DC              xcall _uart1_init
 0B98                   .dbline 751
 0B98           ; 
 0B98           ;  IntFlag=0;//无接收帧中断
 0B98 2224              clr R2
 0B9A 2092BF01          sts _IntFlag,R2
 0B9E                   .dbline 752
 0B9E           ;  DataFlag=0;//无标定系数下发 
 0B9E 3324              clr R3
 0BA0 3092C201          sts _DataFlag+1,R3
 0BA4 2092C101          sts _DataFlag,R2
 0BA8                   .dbline 753
 0BA8           ;  coeff_len=0;
 0BA8 30922D00          sts _coeff_len+1,R3
 0BAC 20922C00          sts _coeff_len,R2
 0BB0                   .dbline 754
 0BB0           ;  coeff_count=0;//标定系数计数
 0BB0 30922B00          sts _coeff_count+1,R3
 0BB4 20922A00          sts _coeff_count,R2
 0BB8                   .dbline 758
 0BB8           ;  
 0BB8           ; 
 0BB8           ;  
 0BB8           ;       EICRA|=0x03; //INT0上升沿触发 ，每2位控制一个中断，共4个中断，0-低电平触发，1-保留，2-下降沿触发，3-上升沿触发 
 0BB8 80916A00          lds R24,106
 0BBC 8360              ori R24,3
 0BBE 80936A00          sts 106,R24
 0BC2                   .dbline 759
 0BC2           ;       MANINT_CLR
 0BC2                   .dbline 759
 0BC2 88B7              in R24,0x38
 0BC4 8160              ori R24,1
 0BC6 88BF              out 0x38,R24
 0BC8                   .dbline 759
 0BC8                   .dbline 760
 0BC8           ;       MANINT_EN
 0BC8                   .dbline 760
 0BC8 89B7              in R24,0x39
 0BCA 8160              ori R24,1
 0BCC 89BF              out 0x39,R24
 0BCE                   .dbline 760
 0BCE                   .dbline 761
 0BCE           ;       INT_EN
 0BCE                   .dbline 761
 0BCE 7894              sei
 0BD0                   .dbline 761
 0BD0                   .dbline -2
 0BD0           L290:
 0BD0                   .dbline 0 ; func end
 0BD0 0895              ret
 0BD2                   .dbend
 0BD2                   .dbfunc e main _main fV
 0BD2           ;             pt -> <dead>
 0BD2           ;             mk -> <dead>
 0BD2           ;             at -> <dead>
 0BD2           ;            add -> <dead>
 0BD2           ;              f -> y+5
 0BD2           ; TestDataBlockCount -> R12,R13
 0BD2           ; TestDataBlockIndex -> R10,R11
 0BD2           ;              i -> R10
 0BD2           ;              l -> y+1
 0BD2           ;              j -> R10,R11
                        .even
 0BD2           _main::
 0BD2 2997              sbiw R28,9
 0BD4                   .dbline -1
 0BD4                   .dbline 767
 0BD4           ; }
 0BD4           ; 
 0BD4           ;  
 0BD4           ; 
 0BD4           ; void main(void)
 0BD4           ; { 
 0BD4                   .dbline 774
 0BD4           ;   unsigned char i;
 0BD4           ;   unsigned int add,at,mk,pt,j;
 0BD4           ;   unsigned long l;
 0BD4           ;   unsigned int TestDataBlockIndex,TestDataBlockCount;
 0BD4           ;   float f;
 0BD4           ;  
 0BD4           ;       for(l=0;l<1000;l++)
 0BD4 80E0              ldi R24,0
 0BD6 8983              std y+1+0,R24
 0BD8 8A83              std y+1+1,R24
 0BDA 8B83              std y+1+2,R24
 0BDC 8C83              std y+1+3,R24
 0BDE 1BC0              xjmp L295
 0BE0           L292:
 0BE0                   .dbline 775
 0BE0           ;       {
 0BE0                   .dbline 776
 0BE0           ;               for(j=0;j<1000;j++);
 0BE0 AA24              clr R10
 0BE2 BB24              clr R11
 0BE4 03C0              xjmp L299
 0BE6           L296:
 0BE6                   .dbline 776
 0BE6           L297:
 0BE6                   .dbline 776
 0BE6 C501              movw R24,R10
 0BE8 0196              adiw R24,1
 0BEA 5C01              movw R10,R24
 0BEC           L299:
 0BEC                   .dbline 776
 0BEC C501              movw R24,R10
 0BEE 883E              cpi R24,232
 0BF0 E3E0              ldi R30,3
 0BF2 9E07              cpc R25,R30
 0BF4 C0F3              brlo L296
 0BF6           X92:
 0BF6                   .dbline 777
 0BF6           ;       }
 0BF6           L293:
 0BF6                   .dbline 774
 0BF6 41E0              ldi R20,1
 0BF8 50E0              ldi R21,0
 0BFA 60E0              ldi R22,0
 0BFC 70E0              ldi R23,0
 0BFE 2980              ldd R2,y+1
 0C00 3A80              ldd R3,y+2
 0C02 4B80              ldd R4,y+3
 0C04 5C80              ldd R5,y+4
 0C06 240E              add R2,R20
 0C08 351E              adc R3,R21
 0C0A 461E              adc R4,R22
 0C0C 571E              adc R5,R23
 0C0E 2982              std y+1,R2
 0C10 3A82              std y+2,R3
 0C12 4B82              std y+3,R4
 0C14 5C82              std y+4,R5
 0C16           L295:
 0C16                   .dbline 774
 0C16 48EE              ldi R20,232
 0C18 53E0              ldi R21,3
 0C1A 60E0              ldi R22,0
 0C1C 70E0              ldi R23,0
 0C1E 2980              ldd R2,y+1
 0C20 3A80              ldd R3,y+2
 0C22 4B80              ldd R4,y+3
 0C24 5C80              ldd R5,y+4
 0C26 2416              cp R2,R20
 0C28 3506              cpc R3,R21
 0C2A 4606              cpc R4,R22
 0C2C 5706              cpc R5,R23
 0C2E C0F2              brlo L292
 0C30           X93:
 0C30                   .dbline 779
 0C30           ; 
 0C30           ;       Start();
 0C30 B0DF              xcall _Start
 0C32                   .dbline 781
 0C32           ; 
 0C32           ;    Delay_ms(50); 
 0C32 02E3              ldi R16,50
 0C34 10E0              ldi R17,0
 0C36 67DF              xcall _Delay_ms
 0C38                   .dbline 786
 0C38           ; 
 0C38           ; 
 0C38           ;    
 0C38           ;       //采集总线电压，判断是否进入存储状态  
 0C38           ;       if(SampleADC(0)<30)//Cable端的电压低于30V 
 0C38 0027              clr R16
 0C3A F6DE              xcall _SampleADC
 0C3C 0E31              cpi R16,30
 0C3E 10F0              brlo X238
 0C40 0C944C18          xjmp L306
 0C44           X238:
 0C44           X94:
 0C44                   .dbline 787
 0C44           ;       {         
 0C44                   .dbline 788
 0C44           ;               UCSR0B = 0x00;
 0C44 2224              clr R2
 0C46 2AB8              out 0xa,R2
 0C48                   .dbline 789
 0C48           ;               PORTE&=0xFD;
 0C48 83B1              in R24,0x3
 0C4A 8D7F              andi R24,253
 0C4C 83B9              out 0x3,R24
 0C4E                   .dbline 790
 0C4E           ;               DDRE|=0x02;
 0C4E 119A              sbi 0x2,1
 0C50                   .dbline 791
 0C50           ;               PORTE&=0xFD;     
 0C50 83B1              in R24,0x3
 0C52 8D7F              andi R24,253
 0C54 83B9              out 0x3,R24
 0C56           L302:
 0C56                   .dbline 792
 0C56           ;               while(1); 
 0C56           L303:
 0C56                   .dbline 792
 0C56 FFCF              xjmp L302
 0C58           L305:
 0C58                   .dbline 796
 0C58           ;       }
 0C58           ;            
 0C58           ;       while(1)//若Cable端为高电压，则进入正常的通讯状态
 0C58           ;       { 
 0C58                   .dbline 799
 0C58           ;                
 0C58           ; 
 0C58           ;               if(IntFlag==2)//校验位错误，不上传任何响应，上位机按超时处理
 0C58 8091BF01          lds R24,_IntFlag
 0C5C 8230              cpi R24,2
 0C5E 59F4              brne L308
 0C60           X95:
 0C60                   .dbline 800
 0C60           ;               { 
 0C60                   .dbline 801
 0C60           ;                       IntFlag=0;//无命令帧
 0C60 2224              clr R2
 0C62 2092BF01          sts _IntFlag,R2
 0C66                   .dbline 802
 0C66           ;                       EIFR|=0x01;//清INT0中断标志
 0C66 88B7              in R24,0x38
 0C68 8160              ori R24,1
 0C6A 88BF              out 0x38,R24
 0C6C                   .dbline 803
 0C6C           ;                       EIMSK|=0x01;//使能INT0中断       
 0C6C 89B7              in R24,0x39
 0C6E 8160              ori R24,1
 0C70 89BF              out 0x39,R24
 0C72                   .dbline 804
 0C72           ;               }
 0C72 0C944C18          xjmp L309
 0C76           L308:
 0C76                   .dbline 805
 0C76           ;               else if(IntFlag==1)//接收到了正常命令帧
 0C76 8091BF01          lds R24,_IntFlag
 0C7A 8130              cpi R24,1
 0C7C 11F0              breq X239
 0C7E 0C944C18          xjmp L310
 0C82           X239:
 0C82           X96:
 0C82                   .dbline 806
 0C82           ;               {
 0C82                   .dbline 807
 0C82           ;                       if(DataFlag)
 0C82 2090C101          lds R2,_DataFlag
 0C86 3090C201          lds R3,_DataFlag+1
 0C8A 2220              tst R2
 0C8C 19F4              brne X97
 0C8E 3320              tst R3
 0C90 09F4              brne X240
 0C92 B4C4              xjmp L312
 0C94           X240:
 0C94           X97:
 0C94                   .dbline 808
 0C94           ;                       {                 
 0C94                   .dbline 809
 0C94           ;                               coeffdata[coeff_count]=R_dat;
 0C94 80E0              ldi R24,<_coeffdata
 0C96 90E0              ldi R25,>_coeffdata
 0C98 E0912A00          lds R30,_coeff_count
 0C9C F0912B00          lds R31,_coeff_count+1
 0CA0 E80F              add R30,R24
 0CA2 F91F              adc R31,R25
 0CA4 2090DF01          lds R2,_R_dat
 0CA8 3090E001          lds R3,_R_dat+1
 0CAC 2082              std z+0,R2
 0CAE                   .dbline 810
 0CAE           ;                               coeff_count++;    
 0CAE 80912A00          lds R24,_coeff_count
 0CB2 90912B00          lds R25,_coeff_count+1
 0CB6 0196              adiw R24,1
 0CB8 90932B00          sts _coeff_count+1,R25
 0CBC 80932A00          sts _coeff_count,R24
 0CC0                   .dbline 812
 0CC0           ; 
 0CC0           ;                               if(coeff_count==coeff_len)
 0CC0 20902C00          lds R2,_coeff_len
 0CC4 30902D00          lds R3,_coeff_len+1
 0CC8 8215              cp R24,R2
 0CCA 9305              cpc R25,R3
 0CCC 11F0              breq X241
 0CCE 0C944318          xjmp L313
 0CD2           X241:
 0CD2           X98:
 0CD2                   .dbline 813
 0CD2           ;                               {
 0CD2                   .dbline 814
 0CD2           ;                                       if(DataFlag==1)//下发压力温度系数
 0CD2 8091C101          lds R24,_DataFlag
 0CD6 9091C201          lds R25,_DataFlag+1
 0CDA 8130              cpi R24,1
 0CDC E0E0              ldi R30,0
 0CDE 9E07              cpc R25,R30
 0CE0 09F0              breq X242
 0CE2 E5C0              xjmp L316
 0CE4           X242:
 0CE4           X99:
 0CE4                   .dbline 815
 0CE4           ;                                       {
 0CE4                   .dbline 816
 0CE4           ;                                               Uart0TxData[0]=0xE8;
 0CE4 88EE              ldi R24,232
 0CE6 80932F00          sts _Uart0TxData,R24
 0CEA                   .dbline 817
 0CEA           ;                                               Uart0TxData[1]=0x40;
 0CEA 80E4              ldi R24,64
 0CEC 80933000          sts _Uart0TxData+1,R24
 0CF0                   .dbline 818
 0CF0           ;                                               Uart0TxData[2]=0x88;
 0CF0 88E8              ldi R24,136
 0CF2 80933100          sts _Uart0TxData+2,R24
 0CF6                   .dbline 819
 0CF6           ;                                               Uart0TxData[3]=0;//压力温度系数包0
 0CF6 2224              clr R2
 0CF8 20923200          sts _Uart0TxData+3,R2
 0CFC                   .dbline 820
 0CFC           ;                                               Uart0TxData[4]=0x21;
 0CFC 81E2              ldi R24,33
 0CFE 80933300          sts _Uart0TxData+4,R24
 0D02                   .dbline 821
 0D02           ;                                               Uart0TxData[5]=0x22;
 0D02 82E2              ldi R24,34
 0D04 80933400          sts _Uart0TxData+5,R24
 0D08                   .dbline 822
 0D08           ;                                               Uart0TxData[6]=0x23;
 0D08 83E2              ldi R24,35
 0D0A 80933500          sts _Uart0TxData+6,R24
 0D0E                   .dbline 823
 0D0E           ;                                               Uart0TxData[7]=0x24;
 0D0E 84E2              ldi R24,36
 0D10 80933600          sts _Uart0TxData+7,R24
 0D14                   .dbline 824
 0D14           ;                                               Uart0TxData[8]=0x32;     
 0D14 82E3              ldi R24,50
 0D16 80933700          sts _Uart0TxData+8,R24
 0D1A                   .dbline 825
 0D1A           ;                                               for(k=0;k<64;k++)
 0D1A 3324              clr R3
 0D1C 3092BC01          sts _k+1,R3
 0D20 2092BB01          sts _k,R2
 0D24 1AC0              xjmp L329
 0D26           L326:
 0D26                   .dbline 826
 0D26           ;                                               {
 0D26                   .dbline 827
 0D26           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 0D26 4090BB01          lds R4,_k
 0D2A 5090BC01          lds R5,_k+1
 0D2E 80E0              ldi R24,<_coeffdata
 0D30 90E0              ldi R25,>_coeffdata
 0D32 F201              movw R30,R4
 0D34 E80F              add R30,R24
 0D36 F91F              adc R31,R25
 0D38 2080              ldd R2,z+0
 0D3A 80E0              ldi R24,<_Uart0TxData
 0D3C 90E0              ldi R25,>_Uart0TxData
 0D3E F201              movw R30,R4
 0D40 3996              adiw R30,9
 0D42 E80F              add R30,R24
 0D44 F91F              adc R31,R25
 0D46 2082              std z+0,R2
 0D48                   .dbline 828
 0D48           ;                                               }                
 0D48           L327:
 0D48                   .dbline 825
 0D48 8091BB01          lds R24,_k
 0D4C 9091BC01          lds R25,_k+1
 0D50 0196              adiw R24,1
 0D52 9093BC01          sts _k+1,R25
 0D56 8093BB01          sts _k,R24
 0D5A           L329:
 0D5A                   .dbline 825
 0D5A 8091BB01          lds R24,_k
 0D5E 9091BC01          lds R25,_k+1
 0D62 8034              cpi R24,64
 0D64 E0E0              ldi R30,0
 0D66 9E07              cpc R25,R30
 0D68 F0F2              brlo L326
 0D6A           X100:
 0D6A                   .dbline 829
 0D6A           ;                                               SendUart0_2(74,20);//超时160ms
 0D6A 24E1              ldi R18,20
 0D6C 30E0              ldi R19,0
 0D6E 0AE4              ldi R16,74
 0D70 C1DD              xcall _SendUart0_2
 0D72                   .dbline 830
 0D72           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0D72 8091FA01          lds R24,_Uart0RxCounter
 0D76 8930              cpi R24,9
 0D78 B1F4              brne L330
 0D7A           X101:
 0D7A 8091FB01          lds R24,_Uart0RxData
 0D7E 8535              cpi R24,85
 0D80 91F4              brne L330
 0D82           X102:
 0D82 8091FC01          lds R24,_Uart0RxData+1
 0D86 8034              cpi R24,64
 0D88 71F4              brne L330
 0D8A           X103:
 0D8A 8091FD01          lds R24,_Uart0RxData+2
 0D8E 8838              cpi R24,136
 0D90 51F4              brne L330
 0D92           X104:
 0D92                   .dbline 831
 0D92           ;                                               {T_dat&=0xff00; }
 0D92                   .dbline 831
 0D92 8091E101          lds R24,_T_dat
 0D96 9091E201          lds R25,_T_dat+1
 0D9A 8070              andi R24,0
 0D9C 9093E201          sts _T_dat+1,R25
 0DA0 8093E101          sts _T_dat,R24
 0DA4                   .dbline 831
 0DA4 06C0              xjmp L331
 0DA6           L330:
 0DA6                   .dbline 833
 0DA6           ;                                               else
 0DA6           ;                                               {T_dat=0x00aa; }
 0DA6                   .dbline 833
 0DA6 8AEA              ldi R24,170
 0DA8 90E0              ldi R25,0
 0DAA 9093E201          sts _T_dat+1,R25
 0DAE 8093E101          sts _T_dat,R24
 0DB2                   .dbline 833
 0DB2           L331:
 0DB2                   .dbline 835
 0DB2           ; 
 0DB2           ;                                               Uart0TxData[0]=0xE8;
 0DB2 88EE              ldi R24,232
 0DB4 80932F00          sts _Uart0TxData,R24
 0DB8                   .dbline 836
 0DB8           ;                                               Uart0TxData[1]=0x40;
 0DB8 80E4              ldi R24,64
 0DBA 80933000          sts _Uart0TxData+1,R24
 0DBE                   .dbline 837
 0DBE           ;                                               Uart0TxData[2]=0x88;
 0DBE 88E8              ldi R24,136
 0DC0 80933100          sts _Uart0TxData+2,R24
 0DC4                   .dbline 838
 0DC4           ;                                               Uart0TxData[3]=1;//压力温度系数包1
 0DC4 81E0              ldi R24,1
 0DC6 80933200          sts _Uart0TxData+3,R24
 0DCA                   .dbline 839
 0DCA           ;                                               Uart0TxData[4]=0x21;
 0DCA 81E2              ldi R24,33
 0DCC 80933300          sts _Uart0TxData+4,R24
 0DD0                   .dbline 840
 0DD0           ;                                               Uart0TxData[5]=0x22;
 0DD0 82E2              ldi R24,34
 0DD2 80933400          sts _Uart0TxData+5,R24
 0DD6                   .dbline 841
 0DD6           ;                                               Uart0TxData[6]=0x23;
 0DD6 83E2              ldi R24,35
 0DD8 80933500          sts _Uart0TxData+6,R24
 0DDC                   .dbline 842
 0DDC           ;                                               Uart0TxData[7]=0x24;
 0DDC 84E2              ldi R24,36
 0DDE 80933600          sts _Uart0TxData+7,R24
 0DE2                   .dbline 843
 0DE2           ;                                               Uart0TxData[8]=0x32;     
 0DE2 82E3              ldi R24,50
 0DE4 80933700          sts _Uart0TxData+8,R24
 0DE8                   .dbline 844
 0DE8           ;                                               for(k=0;k<64;k++)
 0DE8 2224              clr R2
 0DEA 3324              clr R3
 0DEC 3092BC01          sts _k+1,R3
 0DF0 2092BB01          sts _k,R2
 0DF4 1CC0              xjmp L345
 0DF6           L342:
 0DF6                   .dbline 845
 0DF6           ;                                               {
 0DF6                   .dbline 846
 0DF6           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 0DF6 A090BB01          lds R10,_k
 0DFA B090BC01          lds R11,_k+1
 0DFE 80E0              ldi R24,<_coeffdata
 0E00 90E0              ldi R25,>_coeffdata
 0E02 F501              movw R30,R10
 0E04 E05C              subi R30,192  ; offset = 64
 0E06 FF4F              sbci R31,255
 0E08 E80F              add R30,R24
 0E0A F91F              adc R31,R25
 0E0C 2080              ldd R2,z+0
 0E0E 80E0              ldi R24,<_Uart0TxData
 0E10 90E0              ldi R25,>_Uart0TxData
 0E12 F501              movw R30,R10
 0E14 3996              adiw R30,9
 0E16 E80F              add R30,R24
 0E18 F91F              adc R31,R25
 0E1A 2082              std z+0,R2
 0E1C                   .dbline 847
 0E1C           ;                                               }                
 0E1C           L343:
 0E1C                   .dbline 844
 0E1C 8091BB01          lds R24,_k
 0E20 9091BC01          lds R25,_k+1
 0E24 0196              adiw R24,1
 0E26 9093BC01          sts _k+1,R25
 0E2A 8093BB01          sts _k,R24
 0E2E           L345:
 0E2E                   .dbline 844
 0E2E 8091BB01          lds R24,_k
 0E32 9091BC01          lds R25,_k+1
 0E36 8034              cpi R24,64
 0E38 E0E0              ldi R30,0
 0E3A 9E07              cpc R25,R30
 0E3C E0F2              brlo L342
 0E3E           X105:
 0E3E                   .dbline 848
 0E3E           ;                                               SendUart0_2(74,20);//超时160ms
 0E3E 24E1              ldi R18,20
 0E40 30E0              ldi R19,0
 0E42 0AE4              ldi R16,74
 0E44 57DD              xcall _SendUart0_2
 0E46                   .dbline 849
 0E46           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0E46 8091FA01          lds R24,_Uart0RxCounter
 0E4A 8930              cpi R24,9
 0E4C B1F4              brne L346
 0E4E           X106:
 0E4E 8091FB01          lds R24,_Uart0RxData
 0E52 8535              cpi R24,85
 0E54 91F4              brne L346
 0E56           X107:
 0E56 8091FC01          lds R24,_Uart0RxData+1
 0E5A 8034              cpi R24,64
 0E5C 71F4              brne L346
 0E5E           X108:
 0E5E 8091FD01          lds R24,_Uart0RxData+2
 0E62 8838              cpi R24,136
 0E64 51F4              brne L346
 0E66           X109:
 0E66                   .dbline 850
 0E66           ;                                               {T_dat&=0x00ff; }
 0E66                   .dbline 850
 0E66 8091E101          lds R24,_T_dat
 0E6A 9091E201          lds R25,_T_dat+1
 0E6E 9070              andi R25,0
 0E70 9093E201          sts _T_dat+1,R25
 0E74 8093E101          sts _T_dat,R24
 0E78                   .dbline 850
 0E78 09C0              xjmp L347
 0E7A           L346:
 0E7A                   .dbline 852
 0E7A           ;                                               else
 0E7A           ;                                               {T_dat|=0x5500; }
 0E7A                   .dbline 852
 0E7A 8091E101          lds R24,_T_dat
 0E7E 9091E201          lds R25,_T_dat+1
 0E82 9565              ori R25,85
 0E84 9093E201          sts _T_dat+1,R25
 0E88 8093E101          sts _T_dat,R24
 0E8C                   .dbline 852
 0E8C           L347:
 0E8C                   .dbline 854
 0E8C           ; 
 0E8C           ;                                               DataFlag=0;
 0E8C 2224              clr R2
 0E8E 3324              clr R3
 0E90 3092C201          sts _DataFlag+1,R3
 0E94 2092C101          sts _DataFlag,R2
 0E98                   .dbline 855
 0E98           ;                                               coeff_len=0;    
 0E98 30922D00          sts _coeff_len+1,R3
 0E9C 20922C00          sts _coeff_len,R2
 0EA0                   .dbline 856
 0EA0           ;                                               T_com=0x0A;
 0EA0 8AE0              ldi R24,10
 0EA2 8093DA01          sts _T_com,R24
 0EA6                   .dbline 857
 0EA6           ;                                               SendManchester();               
 0EA6 0E945018          xcall _SendManchester
 0EAA                   .dbline 858
 0EAA           ;                                       }
 0EAA 0C944318          xjmp L313
 0EAE           L316:
 0EAE                   .dbline 859
 0EAE           ;                                       else if(DataFlag==2)//下发流量系数
 0EAE 8091C101          lds R24,_DataFlag
 0EB2 9091C201          lds R25,_DataFlag+1
 0EB6 8230              cpi R24,2
 0EB8 E0E0              ldi R30,0
 0EBA 9E07              cpc R25,R30
 0EBC 09F0              breq X243
 0EBE E6C0              xjmp L350
 0EC0           X243:
 0EC0           X110:
 0EC0                   .dbline 860
 0EC0           ;                                       {
 0EC0                   .dbline 861
 0EC0           ;                                               Uart0TxData[0]=0xE8;
 0EC0 88EE              ldi R24,232
 0EC2 80932F00          sts _Uart0TxData,R24
 0EC6                   .dbline 862
 0EC6           ;                                               Uart0TxData[1]=0x40;
 0EC6 80E4              ldi R24,64
 0EC8 80933000          sts _Uart0TxData+1,R24
 0ECC                   .dbline 863
 0ECC           ;                                               Uart0TxData[2]=0x88;
 0ECC 88E8              ldi R24,136
 0ECE 80933100          sts _Uart0TxData+2,R24
 0ED2                   .dbline 864
 0ED2           ;                                               Uart0TxData[3]=2;//流量系数包2
 0ED2 82E0              ldi R24,2
 0ED4 80933200          sts _Uart0TxData+3,R24
 0ED8                   .dbline 865
 0ED8           ;                                               Uart0TxData[4]=0x21;
 0ED8 81E2              ldi R24,33
 0EDA 80933300          sts _Uart0TxData+4,R24
 0EDE                   .dbline 866
 0EDE           ;                                               Uart0TxData[5]=0x22;
 0EDE 82E2              ldi R24,34
 0EE0 80933400          sts _Uart0TxData+5,R24
 0EE4                   .dbline 867
 0EE4           ;                                               Uart0TxData[6]=0x23;
 0EE4 83E2              ldi R24,35
 0EE6 80933500          sts _Uart0TxData+6,R24
 0EEA                   .dbline 868
 0EEA           ;                                               Uart0TxData[7]=0x24;
 0EEA 84E2              ldi R24,36
 0EEC 80933600          sts _Uart0TxData+7,R24
 0EF0                   .dbline 869
 0EF0           ;                                               Uart0TxData[8]=0x32;     
 0EF0 82E3              ldi R24,50
 0EF2 80933700          sts _Uart0TxData+8,R24
 0EF6                   .dbline 870
 0EF6           ;                                               for(k=0;k<64;k++)
 0EF6 2224              clr R2
 0EF8 3324              clr R3
 0EFA 3092BC01          sts _k+1,R3
 0EFE 2092BB01          sts _k,R2
 0F02 1AC0              xjmp L363
 0F04           L360:
 0F04                   .dbline 871
 0F04           ;                                               {
 0F04                   .dbline 872
 0F04           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 0F04 A090BB01          lds R10,_k
 0F08 B090BC01          lds R11,_k+1
 0F0C 80E0              ldi R24,<_coeffdata
 0F0E 90E0              ldi R25,>_coeffdata
 0F10 F501              movw R30,R10
 0F12 E80F              add R30,R24
 0F14 F91F              adc R31,R25
 0F16 2080              ldd R2,z+0
 0F18 80E0              ldi R24,<_Uart0TxData
 0F1A 90E0              ldi R25,>_Uart0TxData
 0F1C F501              movw R30,R10
 0F1E 3996              adiw R30,9
 0F20 E80F              add R30,R24
 0F22 F91F              adc R31,R25
 0F24 2082              std z+0,R2
 0F26                   .dbline 873
 0F26           ;                                               }                
 0F26           L361:
 0F26                   .dbline 870
 0F26 8091BB01          lds R24,_k
 0F2A 9091BC01          lds R25,_k+1
 0F2E 0196              adiw R24,1
 0F30 9093BC01          sts _k+1,R25
 0F34 8093BB01          sts _k,R24
 0F38           L363:
 0F38                   .dbline 870
 0F38 8091BB01          lds R24,_k
 0F3C 9091BC01          lds R25,_k+1
 0F40 8034              cpi R24,64
 0F42 E0E0              ldi R30,0
 0F44 9E07              cpc R25,R30
 0F46 F0F2              brlo L360
 0F48           X111:
 0F48                   .dbline 874
 0F48           ;                                               SendUart0_2(74,20);//超时160ms
 0F48 24E1              ldi R18,20
 0F4A 30E0              ldi R19,0
 0F4C 0AE4              ldi R16,74
 0F4E D2DC              xcall _SendUart0_2
 0F50                   .dbline 875
 0F50           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0F50 8091FA01          lds R24,_Uart0RxCounter
 0F54 8930              cpi R24,9
 0F56 B1F4              brne L364
 0F58           X112:
 0F58 8091FB01          lds R24,_Uart0RxData
 0F5C 8535              cpi R24,85
 0F5E 91F4              brne L364
 0F60           X113:
 0F60 8091FC01          lds R24,_Uart0RxData+1
 0F64 8034              cpi R24,64
 0F66 71F4              brne L364
 0F68           X114:
 0F68 8091FD01          lds R24,_Uart0RxData+2
 0F6C 8838              cpi R24,136
 0F6E 51F4              brne L364
 0F70           X115:
 0F70                   .dbline 876
 0F70           ;                                               {T_dat&=0xff00; }
 0F70                   .dbline 876
 0F70 8091E101          lds R24,_T_dat
 0F74 9091E201          lds R25,_T_dat+1
 0F78 8070              andi R24,0
 0F7A 9093E201          sts _T_dat+1,R25
 0F7E 8093E101          sts _T_dat,R24
 0F82                   .dbline 876
 0F82 06C0              xjmp L365
 0F84           L364:
 0F84                   .dbline 878
 0F84           ;                                               else
 0F84           ;                                               {T_dat=0x00aa; }
 0F84                   .dbline 878
 0F84 8AEA              ldi R24,170
 0F86 90E0              ldi R25,0
 0F88 9093E201          sts _T_dat+1,R25
 0F8C 8093E101          sts _T_dat,R24
 0F90                   .dbline 878
 0F90           L365:
 0F90                   .dbline 880
 0F90           ; 
 0F90           ;                                               Uart0TxData[0]=0xE8;
 0F90 88EE              ldi R24,232
 0F92 80932F00          sts _Uart0TxData,R24
 0F96                   .dbline 881
 0F96           ;                                               Uart0TxData[1]=0x40;
 0F96 80E4              ldi R24,64
 0F98 80933000          sts _Uart0TxData+1,R24
 0F9C                   .dbline 882
 0F9C           ;                                               Uart0TxData[2]=0x88;
 0F9C 88E8              ldi R24,136
 0F9E 80933100          sts _Uart0TxData+2,R24
 0FA2                   .dbline 883
 0FA2           ;                                               Uart0TxData[3]=3;//流量系数包3
 0FA2 83E0              ldi R24,3
 0FA4 80933200          sts _Uart0TxData+3,R24
 0FA8                   .dbline 884
 0FA8           ;                                               Uart0TxData[4]=0x21;
 0FA8 81E2              ldi R24,33
 0FAA 80933300          sts _Uart0TxData+4,R24
 0FAE                   .dbline 885
 0FAE           ;                                               Uart0TxData[5]=0x22;
 0FAE 82E2              ldi R24,34
 0FB0 80933400          sts _Uart0TxData+5,R24
 0FB4                   .dbline 886
 0FB4           ;                                               Uart0TxData[6]=0x23;
 0FB4 83E2              ldi R24,35
 0FB6 80933500          sts _Uart0TxData+6,R24
 0FBA                   .dbline 887
 0FBA           ;                                               Uart0TxData[7]=0x24;
 0FBA 84E2              ldi R24,36
 0FBC 80933600          sts _Uart0TxData+7,R24
 0FC0                   .dbline 888
 0FC0           ;                                               Uart0TxData[8]=0x32;     
 0FC0 82E3              ldi R24,50
 0FC2 80933700          sts _Uart0TxData+8,R24
 0FC6                   .dbline 889
 0FC6           ;                                               for(k=0;k<64;k++)
 0FC6 2224              clr R2
 0FC8 3324              clr R3
 0FCA 3092BC01          sts _k+1,R3
 0FCE 2092BB01          sts _k,R2
 0FD2 1CC0              xjmp L379
 0FD4           L376:
 0FD4                   .dbline 890
 0FD4           ;                                               {
 0FD4                   .dbline 891
 0FD4           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 0FD4 A090BB01          lds R10,_k
 0FD8 B090BC01          lds R11,_k+1
 0FDC 80E0              ldi R24,<_coeffdata
 0FDE 90E0              ldi R25,>_coeffdata
 0FE0 F501              movw R30,R10
 0FE2 E05C              subi R30,192  ; offset = 64
 0FE4 FF4F              sbci R31,255
 0FE6 E80F              add R30,R24
 0FE8 F91F              adc R31,R25
 0FEA 2080              ldd R2,z+0
 0FEC 80E0              ldi R24,<_Uart0TxData
 0FEE 90E0              ldi R25,>_Uart0TxData
 0FF0 F501              movw R30,R10
 0FF2 3996              adiw R30,9
 0FF4 E80F              add R30,R24
 0FF6 F91F              adc R31,R25
 0FF8 2082              std z+0,R2
 0FFA                   .dbline 892
 0FFA           ;                                               }                
 0FFA           L377:
 0FFA                   .dbline 889
 0FFA 8091BB01          lds R24,_k
 0FFE 9091BC01          lds R25,_k+1
 1002 0196              adiw R24,1
 1004 9093BC01          sts _k+1,R25
 1008 8093BB01          sts _k,R24
 100C           L379:
 100C                   .dbline 889
 100C 8091BB01          lds R24,_k
 1010 9091BC01          lds R25,_k+1
 1014 8034              cpi R24,64
 1016 E0E0              ldi R30,0
 1018 9E07              cpc R25,R30
 101A E0F2              brlo L376
 101C           X116:
 101C                   .dbline 893
 101C           ;                                               SendUart0_2(74,20);//超时160ms
 101C 24E1              ldi R18,20
 101E 30E0              ldi R19,0
 1020 0AE4              ldi R16,74
 1022 68DC              xcall _SendUart0_2
 1024                   .dbline 894
 1024           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 1024 8091FA01          lds R24,_Uart0RxCounter
 1028 8930              cpi R24,9
 102A B1F4              brne L380
 102C           X117:
 102C 8091FB01          lds R24,_Uart0RxData
 1030 8535              cpi R24,85
 1032 91F4              brne L380
 1034           X118:
 1034 8091FC01          lds R24,_Uart0RxData+1
 1038 8034              cpi R24,64
 103A 71F4              brne L380
 103C           X119:
 103C 8091FD01          lds R24,_Uart0RxData+2
 1040 8838              cpi R24,136
 1042 51F4              brne L380
 1044           X120:
 1044                   .dbline 895
 1044           ;                                               {T_dat&=0x00ff; }
 1044                   .dbline 895
 1044 8091E101          lds R24,_T_dat
 1048 9091E201          lds R25,_T_dat+1
 104C 9070              andi R25,0
 104E 9093E201          sts _T_dat+1,R25
 1052 8093E101          sts _T_dat,R24
 1056                   .dbline 895
 1056 09C0              xjmp L381
 1058           L380:
 1058                   .dbline 897
 1058           ;                                               else
 1058           ;                                               {T_dat|=0x5500; }
 1058                   .dbline 897
 1058 8091E101          lds R24,_T_dat
 105C 9091E201          lds R25,_T_dat+1
 1060 9565              ori R25,85
 1062 9093E201          sts _T_dat+1,R25
 1066 8093E101          sts _T_dat,R24
 106A                   .dbline 897
 106A           L381:
 106A                   .dbline 899
 106A           ; 
 106A           ;                                               DataFlag=0;
 106A 2224              clr R2
 106C 3324              clr R3
 106E 3092C201          sts _DataFlag+1,R3
 1072 2092C101          sts _DataFlag,R2
 1076                   .dbline 900
 1076           ;                                               coeff_len=0;    
 1076 30922D00          sts _coeff_len+1,R3
 107A 20922C00          sts _coeff_len,R2
 107E                   .dbline 901
 107E           ;                                               T_com=0x0B;
 107E 8BE0              ldi R24,11
 1080 8093DA01          sts _T_com,R24
 1084                   .dbline 902
 1084           ;                                               SendManchester();               
 1084 0E945018          xcall _SendManchester
 1088                   .dbline 903
 1088           ;                                       }       
 1088 0C944318          xjmp L313
 108C           L350:
 108C                   .dbline 904
 108C           ;                                       else if(DataFlag==3)//提取测试数据
 108C 8091C101          lds R24,_DataFlag
 1090 9091C201          lds R25,_DataFlag+1
 1094 8330              cpi R24,3
 1096 E0E0              ldi R30,0
 1098 9E07              cpc R25,R30
 109A 09F0              breq X244
 109C A4C0              xjmp L384
 109E           X244:
 109E           X121:
 109E                   .dbline 905
 109E           ;                                       {
 109E                   .dbline 906
 109E           ;                                               DataFlag=0;
 109E 2224              clr R2
 10A0 3324              clr R3
 10A2 3092C201          sts _DataFlag+1,R3
 10A6 2092C101          sts _DataFlag,R2
 10AA                   .dbline 907
 10AA           ;                                               coeff_len=0;    
 10AA 30922D00          sts _coeff_len+1,R3
 10AE 20922C00          sts _coeff_len,R2
 10B2                   .dbline 908
 10B2           ;                                               T_com=0x09;
 10B2 89E0              ldi R24,9
 10B4 8093DA01          sts _T_com,R24
 10B8                   .dbline 909
 10B8           ;                                               TestDataBlockIndex=coeffdata[1];
 10B8 A0907A00          lds R10,_coeffdata+1
 10BC BB24              clr R11
 10BE                   .dbline 910
 10BE           ;                                               TestDataBlockIndex<<=8;
 10BE BA2C              mov R11,R10
 10C0 AA24              clr R10
 10C2                   .dbline 911
 10C2           ;                                               TestDataBlockIndex|=coeffdata[0];//首块地址/索引
 10C2 20907900          lds R2,_coeffdata
 10C6 3324              clr R3
 10C8 A228              or R10,R2
 10CA B328              or R11,R3
 10CC                   .dbline 912
 10CC           ;                                               TestDataBlockCount=coeffdata[3];
 10CC C0907C00          lds R12,_coeffdata+3
 10D0 DD24              clr R13
 10D2                   .dbline 913
 10D2           ;                                               TestDataBlockCount<<=8;
 10D2 DC2C              mov R13,R12
 10D4 CC24              clr R12
 10D6                   .dbline 914
 10D6           ;                                               TestDataBlockCount|=coeffdata[2];//需提取的总包数，每包64字节，每块4096字节共64包
 10D6 20907B00          lds R2,_coeffdata+2
 10DA 3324              clr R3
 10DC C228              or R12,R2
 10DE D328              or R13,R3
 10E0                   .dbline 916
 10E0           ; 
 10E0           ;                                               for(k=0;k<TestDataBlockCount;k++)//按用户要求分包进行上传，每包64字节传32帧
 10E0 2224              clr R2
 10E2 3092BC01          sts _k+1,R3
 10E6 2092BB01          sts _k,R2
 10EA 73C0              xjmp L392
 10EC           L389:
 10EC                   .dbline 917
 10EC           ;                                               {
 10EC                   .dbline 918
 10EC           ;                                                       Uart0TxData[0]=0xE8;
 10EC 88EE              ldi R24,232
 10EE 80932F00          sts _Uart0TxData,R24
 10F2                   .dbline 919
 10F2           ;                                                       Uart0TxData[1]=0x40;
 10F2 80E4              ldi R24,64
 10F4 80933000          sts _Uart0TxData+1,R24
 10F8                   .dbline 920
 10F8           ;                                                       Uart0TxData[2]=0x9A;//读测试数据
 10F8 8AE9              ldi R24,154
 10FA 80933100          sts _Uart0TxData+2,R24
 10FE                   .dbline 921
 10FE           ;                                                       Uart0TxData[3]=8;
 10FE 88E0              ldi R24,8
 1100 80933200          sts _Uart0TxData+3,R24
 1104                   .dbline 924
 1104           ; 
 1104           ;                                                       //统一块索引
 1104           ;                                                       Uart0TxData[4]=(k);     
 1104 2090BB01          lds R2,_k
 1108 3090BC01          lds R3,_k+1
 110C 20923300          sts _Uart0TxData+4,R2
 1110                   .dbline 925
 1110           ;                                                       Uart0TxData[5]=(k>>8);  //包索引        
 1110 232C              mov R2,R3
 1112 3324              clr R3
 1114 20923400          sts _Uart0TxData+5,R2
 1118                   .dbline 926
 1118           ;                                                       Uart0TxData[6]=(TestDataBlockIndex);
 1118 A0923500          sts _Uart0TxData+6,R10
 111C                   .dbline 927
 111C           ;                                                       Uart0TxData[7]=(TestDataBlockIndex>>8);//首块索引
 111C 1501              movw R2,R10
 111E 232C              mov R2,R3
 1120 3324              clr R3
 1122 20923600          sts _Uart0TxData+7,R2
 1126                   .dbline 937
 1126           ; 
 1126           ;                                                       /*
 1126           ;                                                       // 单独块索引
 1126           ;                                                       Uart0TxData[4]=(k%8);   
 1126           ;                                                       Uart0TxData[5]=0;       //包索引        
 1126           ;                                                       Uart0TxData[6]=(TestDataBlockIndex+k/8);
 1126           ;                                                       Uart0TxData[7]=((TestDataBlockIndex+k/8)>>8);//首块索引
 1126           ;                                                       */
 1126           ; 
 1126           ;                                                       SendUart0_2(9,6);//超时48ms
 1126 26E0              ldi R18,6
 1128 30E0              ldi R19,0
 112A 09E0              ldi R16,9
 112C E3DB              xcall _SendUart0_2
 112E                   .dbline 938
 112E           ;                                                       for(bf=0;bf<32;bf++)
 112E 2224              clr R2
 1130 3324              clr R3
 1132 30922700          sts _bf+1,R3
 1136 20922600          sts _bf,R2
 113A 39C0              xjmp L403
 113C           L400:
 113C                   .dbline 939
 113C           ;                                                       {               
 113C                   .dbline 940
 113C           ;                                                               T_dat=Uart0RxData[bf*2+1];//高字节
 113C 80E0              ldi R24,<_Uart0RxData
 113E 90E0              ldi R25,>_Uart0RxData
 1140 E0912600          lds R30,_bf
 1144 F0912700          lds R31,_bf+1
 1148 EE0F              lsl R30
 114A FF1F              rol R31
 114C 3196              adiw R30,1
 114E E80F              add R30,R24
 1150 F91F              adc R31,R25
 1152 2080              ldd R2,z+0
 1154 3324              clr R3
 1156 3092E201          sts _T_dat+1,R3
 115A 2092E101          sts _T_dat,R2
 115E                   .dbline 941
 115E           ;                                                               T_dat<<=8;
 115E 322C              mov R3,R2
 1160 2224              clr R2
 1162 3092E201          sts _T_dat+1,R3
 1166 2092E101          sts _T_dat,R2
 116A                   .dbline 942
 116A           ;                                                               T_dat|=Uart0RxData[bf*2+0];//低字节
 116A E0912600          lds R30,_bf
 116E F0912700          lds R31,_bf+1
 1172 EE0F              lsl R30
 1174 FF1F              rol R31
 1176 E80F              add R30,R24
 1178 F91F              adc R31,R25
 117A 2080              ldd R2,z+0
 117C 3324              clr R3
 117E 4090E101          lds R4,_T_dat
 1182 5090E201          lds R5,_T_dat+1
 1186 4228              or R4,R2
 1188 5328              or R5,R3
 118A 5092E201          sts _T_dat+1,R5
 118E 4092E101          sts _T_dat,R4
 1192                   .dbline 943
 1192           ;                                                               SendManchester();       
 1192 0E945018          xcall _SendManchester
 1196                   .dbline 944
 1196           ;                                                               Delay_ms(10);    
 1196 0AE0              ldi R16,10
 1198 10E0              ldi R17,0
 119A B5DC              xcall _Delay_ms
 119C                   .dbline 945
 119C           ;                                                       }               
 119C           L401:
 119C                   .dbline 938
 119C 80912600          lds R24,_bf
 11A0 90912700          lds R25,_bf+1
 11A4 0196              adiw R24,1
 11A6 90932700          sts _bf+1,R25
 11AA 80932600          sts _bf,R24
 11AE           L403:
 11AE                   .dbline 938
 11AE 80912600          lds R24,_bf
 11B2 90912700          lds R25,_bf+1
 11B6 8032              cpi R24,32
 11B8 E0E0              ldi R30,0
 11BA 9E07              cpc R25,R30
 11BC 08F4              brsh X245
 11BE BECF              xjmp L400
 11C0           X245:
 11C0           X122:
 11C0                   .dbline 946
 11C0           ;                                               }
 11C0           L390:
 11C0                   .dbline 916
 11C0 8091BB01          lds R24,_k
 11C4 9091BC01          lds R25,_k+1
 11C8 0196              adiw R24,1
 11CA 9093BC01          sts _k+1,R25
 11CE 8093BB01          sts _k,R24
 11D2           L392:
 11D2                   .dbline 916
 11D2 2090BB01          lds R2,_k
 11D6 3090BC01          lds R3,_k+1
 11DA 2C14              cp R2,R12
 11DC 3D04              cpc R3,R13
 11DE 08F4              brsh X246
 11E0 85CF              xjmp L389
 11E2           X246:
 11E2           X123:
 11E2                   .dbline 947
 11E2           ;                                       } 
 11E2 0C944318          xjmp L313
 11E6           L384:
 11E6                   .dbline 948
 11E6           ;                                       else if(DataFlag==4)//下发仪器信息
 11E6 8091C101          lds R24,_DataFlag
 11EA 9091C201          lds R25,_DataFlag+1
 11EE 8430              cpi R24,4
 11F0 E0E0              ldi R30,0
 11F2 9E07              cpc R25,R30
 11F4 11F0              breq X247
 11F6 0C944318          xjmp L313
 11FA           X247:
 11FA           X124:
 11FA                   .dbline 949
 11FA           ;                                       {
 11FA                   .dbline 950
 11FA           ;                                               T_dat=0x0000;
 11FA 2224              clr R2
 11FC 3324              clr R3
 11FE 3092E201          sts _T_dat+1,R3
 1202 2092E101          sts _T_dat,R2
 1206                   .dbline 952
 1206           ; 
 1206           ;                                               Uart0TxData[0]=0xE8;
 1206 88EE              ldi R24,232
 1208 80932F00          sts _Uart0TxData,R24
 120C                   .dbline 953
 120C           ;                                               Uart0TxData[1]=0x40;
 120C 80E4              ldi R24,64
 120E 80933000          sts _Uart0TxData+1,R24
 1212                   .dbline 954
 1212           ;                                               Uart0TxData[2]=0x84;
 1212 84E8              ldi R24,132
 1214 80933100          sts _Uart0TxData+2,R24
 1218                   .dbline 955
 1218           ;                                               Uart0TxData[3]=0;//包0
 1218 20923200          sts _Uart0TxData+3,R2
 121C                   .dbline 956
 121C           ;                                               Uart0TxData[4]=0x21;
 121C 81E2              ldi R24,33
 121E 80933300          sts _Uart0TxData+4,R24
 1222                   .dbline 957
 1222           ;                                               Uart0TxData[5]=0x22;
 1222 82E2              ldi R24,34
 1224 80933400          sts _Uart0TxData+5,R24
 1228                   .dbline 958
 1228           ;                                               Uart0TxData[6]=0x23;
 1228 83E2              ldi R24,35
 122A 80933500          sts _Uart0TxData+6,R24
 122E                   .dbline 959
 122E           ;                                               Uart0TxData[7]=0x24;
 122E 84E2              ldi R24,36
 1230 80933600          sts _Uart0TxData+7,R24
 1234                   .dbline 960
 1234           ;                                               Uart0TxData[8]=0x32;     
 1234 82E3              ldi R24,50
 1236 80933700          sts _Uart0TxData+8,R24
 123A                   .dbline 961
 123A           ;                                               for(k=0;k<64;k++)
 123A 3092BC01          sts _k+1,R3
 123E 2092BB01          sts _k,R2
 1242 1AC0              xjmp L417
 1244           L414:
 1244                   .dbline 962
 1244           ;                                               {
 1244                   .dbline 963
 1244           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 1244 A090BB01          lds R10,_k
 1248 B090BC01          lds R11,_k+1
 124C 80E0              ldi R24,<_coeffdata
 124E 90E0              ldi R25,>_coeffdata
 1250 F501              movw R30,R10
 1252 E80F              add R30,R24
 1254 F91F              adc R31,R25
 1256 2080              ldd R2,z+0
 1258 80E0              ldi R24,<_Uart0TxData
 125A 90E0              ldi R25,>_Uart0TxData
 125C F501              movw R30,R10
 125E 3996              adiw R30,9
 1260 E80F              add R30,R24
 1262 F91F              adc R31,R25
 1264 2082              std z+0,R2
 1266                   .dbline 964
 1266           ;                                               }                
 1266           L415:
 1266                   .dbline 961
 1266 8091BB01          lds R24,_k
 126A 9091BC01          lds R25,_k+1
 126E 0196              adiw R24,1
 1270 9093BC01          sts _k+1,R25
 1274 8093BB01          sts _k,R24
 1278           L417:
 1278                   .dbline 961
 1278 8091BB01          lds R24,_k
 127C 9091BC01          lds R25,_k+1
 1280 8034              cpi R24,64
 1282 E0E0              ldi R30,0
 1284 9E07              cpc R25,R30
 1286 F0F2              brlo L414
 1288           X125:
 1288                   .dbline 965
 1288           ;                                               SendUart0_2(74,20);//超时160ms
 1288 24E1              ldi R18,20
 128A 30E0              ldi R19,0
 128C 0AE4              ldi R16,74
 128E 32DB              xcall _SendUart0_2
 1290                   .dbline 966
 1290           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1290 8091FA01          lds R24,_Uart0RxCounter
 1294 8930              cpi R24,9
 1296 61F4              brne L424
 1298           X126:
 1298 8091FB01          lds R24,_Uart0RxData
 129C 8535              cpi R24,85
 129E 41F4              brne L424
 12A0           X127:
 12A0 8091FC01          lds R24,_Uart0RxData+1
 12A4 8034              cpi R24,64
 12A6 21F4              brne L424
 12A8           X128:
 12A8 8091FD01          lds R24,_Uart0RxData+2
 12AC 8438              cpi R24,132
 12AE 49F0              breq L418
 12B0           X129:
 12B0           L424:
 12B0                   .dbline 967
 12B0           ;                                               {T_dat|=0x0001; }
 12B0                   .dbline 967
 12B0 8091E101          lds R24,_T_dat
 12B4 9091E201          lds R25,_T_dat+1
 12B8 8160              ori R24,1
 12BA 9093E201          sts _T_dat+1,R25
 12BE 8093E101          sts _T_dat,R24
 12C2                   .dbline 967
 12C2           L418:
 12C2                   .dbline 969
 12C2           ; 
 12C2           ;                                               Uart0TxData[0]=0xE8;
 12C2 88EE              ldi R24,232
 12C4 80932F00          sts _Uart0TxData,R24
 12C8                   .dbline 970
 12C8           ;                                               Uart0TxData[1]=0x40;
 12C8 80E4              ldi R24,64
 12CA 80933000          sts _Uart0TxData+1,R24
 12CE                   .dbline 971
 12CE           ;                                               Uart0TxData[2]=0x84;
 12CE 84E8              ldi R24,132
 12D0 80933100          sts _Uart0TxData+2,R24
 12D4                   .dbline 972
 12D4           ;                                               Uart0TxData[3]=1;//包1
 12D4 81E0              ldi R24,1
 12D6 80933200          sts _Uart0TxData+3,R24
 12DA                   .dbline 973
 12DA           ;                                               Uart0TxData[4]=0x21;
 12DA 81E2              ldi R24,33
 12DC 80933300          sts _Uart0TxData+4,R24
 12E0                   .dbline 974
 12E0           ;                                               Uart0TxData[5]=0x22;
 12E0 82E2              ldi R24,34
 12E2 80933400          sts _Uart0TxData+5,R24
 12E6                   .dbline 975
 12E6           ;                                               Uart0TxData[6]=0x23;
 12E6 83E2              ldi R24,35
 12E8 80933500          sts _Uart0TxData+6,R24
 12EC                   .dbline 976
 12EC           ;                                               Uart0TxData[7]=0x24;
 12EC 84E2              ldi R24,36
 12EE 80933600          sts _Uart0TxData+7,R24
 12F2                   .dbline 977
 12F2           ;                                               Uart0TxData[8]=0x32;     
 12F2 82E3              ldi R24,50
 12F4 80933700          sts _Uart0TxData+8,R24
 12F8                   .dbline 978
 12F8           ;                                               for(k=0;k<64;k++)
 12F8 2224              clr R2
 12FA 3324              clr R3
 12FC 3092BC01          sts _k+1,R3
 1300 2092BB01          sts _k,R2
 1304 1CC0              xjmp L436
 1306           L433:
 1306                   .dbline 979
 1306           ;                                               {
 1306                   .dbline 980
 1306           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 1306 A090BB01          lds R10,_k
 130A B090BC01          lds R11,_k+1
 130E 80E0              ldi R24,<_coeffdata
 1310 90E0              ldi R25,>_coeffdata
 1312 F501              movw R30,R10
 1314 E05C              subi R30,192  ; offset = 64
 1316 FF4F              sbci R31,255
 1318 E80F              add R30,R24
 131A F91F              adc R31,R25
 131C 2080              ldd R2,z+0
 131E 80E0              ldi R24,<_Uart0TxData
 1320 90E0              ldi R25,>_Uart0TxData
 1322 F501              movw R30,R10
 1324 3996              adiw R30,9
 1326 E80F              add R30,R24
 1328 F91F              adc R31,R25
 132A 2082              std z+0,R2
 132C                   .dbline 981
 132C           ;                                               }                
 132C           L434:
 132C                   .dbline 978
 132C 8091BB01          lds R24,_k
 1330 9091BC01          lds R25,_k+1
 1334 0196              adiw R24,1
 1336 9093BC01          sts _k+1,R25
 133A 8093BB01          sts _k,R24
 133E           L436:
 133E                   .dbline 978
 133E 8091BB01          lds R24,_k
 1342 9091BC01          lds R25,_k+1
 1346 8034              cpi R24,64
 1348 E0E0              ldi R30,0
 134A 9E07              cpc R25,R30
 134C E0F2              brlo L433
 134E           X130:
 134E                   .dbline 982
 134E           ;                                               SendUart0_2(74,20);//超时160ms
 134E 24E1              ldi R18,20
 1350 30E0              ldi R19,0
 1352 0AE4              ldi R16,74
 1354 CFDA              xcall _SendUart0_2
 1356                   .dbline 983
 1356           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1356 8091FA01          lds R24,_Uart0RxCounter
 135A 8930              cpi R24,9
 135C 61F4              brne L443
 135E           X131:
 135E 8091FB01          lds R24,_Uart0RxData
 1362 8535              cpi R24,85
 1364 41F4              brne L443
 1366           X132:
 1366 8091FC01          lds R24,_Uart0RxData+1
 136A 8034              cpi R24,64
 136C 21F4              brne L443
 136E           X133:
 136E 8091FD01          lds R24,_Uart0RxData+2
 1372 8438              cpi R24,132
 1374 49F0              breq L437
 1376           X134:
 1376           L443:
 1376                   .dbline 984
 1376           ;                                               {T_dat|=0x0002; }
 1376                   .dbline 984
 1376 8091E101          lds R24,_T_dat
 137A 9091E201          lds R25,_T_dat+1
 137E 8260              ori R24,2
 1380 9093E201          sts _T_dat+1,R25
 1384 8093E101          sts _T_dat,R24
 1388                   .dbline 984
 1388           L437:
 1388                   .dbline 986
 1388           ; 
 1388           ;                                               Uart0TxData[0]=0xE8;
 1388 88EE              ldi R24,232
 138A 80932F00          sts _Uart0TxData,R24
 138E                   .dbline 987
 138E           ;                                               Uart0TxData[1]=0x40;
 138E 80E4              ldi R24,64
 1390 80933000          sts _Uart0TxData+1,R24
 1394                   .dbline 988
 1394           ;                                               Uart0TxData[2]=0x84;
 1394 84E8              ldi R24,132
 1396 80933100          sts _Uart0TxData+2,R24
 139A                   .dbline 989
 139A           ;                                               Uart0TxData[3]=2;//包2
 139A 82E0              ldi R24,2
 139C 80933200          sts _Uart0TxData+3,R24
 13A0                   .dbline 990
 13A0           ;                                               Uart0TxData[4]=0x21;
 13A0 81E2              ldi R24,33
 13A2 80933300          sts _Uart0TxData+4,R24
 13A6                   .dbline 991
 13A6           ;                                               Uart0TxData[5]=0x22;
 13A6 82E2              ldi R24,34
 13A8 80933400          sts _Uart0TxData+5,R24
 13AC                   .dbline 992
 13AC           ;                                               Uart0TxData[6]=0x23;
 13AC 83E2              ldi R24,35
 13AE 80933500          sts _Uart0TxData+6,R24
 13B2                   .dbline 993
 13B2           ;                                               Uart0TxData[7]=0x24;
 13B2 84E2              ldi R24,36
 13B4 80933600          sts _Uart0TxData+7,R24
 13B8                   .dbline 994
 13B8           ;                                               Uart0TxData[8]=0x32;     
 13B8 82E3              ldi R24,50
 13BA 80933700          sts _Uart0TxData+8,R24
 13BE                   .dbline 995
 13BE           ;                                               for(k=0;k<64;k++)
 13BE 2224              clr R2
 13C0 3324              clr R3
 13C2 3092BC01          sts _k+1,R3
 13C6 2092BB01          sts _k,R2
 13CA 1CC0              xjmp L455
 13CC           L452:
 13CC                   .dbline 996
 13CC           ;                                               {
 13CC                   .dbline 997
 13CC           ;                                                       Uart0TxData[9+k]=coeffdata[k+128];  
 13CC A090BB01          lds R10,_k
 13D0 B090BC01          lds R11,_k+1
 13D4 80E0              ldi R24,<_coeffdata
 13D6 90E0              ldi R25,>_coeffdata
 13D8 F501              movw R30,R10
 13DA E058              subi R30,128  ; offset = 128
 13DC FF4F              sbci R31,255
 13DE E80F              add R30,R24
 13E0 F91F              adc R31,R25
 13E2 2080              ldd R2,z+0
 13E4 80E0              ldi R24,<_Uart0TxData
 13E6 90E0              ldi R25,>_Uart0TxData
 13E8 F501              movw R30,R10
 13EA 3996              adiw R30,9
 13EC E80F              add R30,R24
 13EE F91F              adc R31,R25
 13F0 2082              std z+0,R2
 13F2                   .dbline 998
 13F2           ;                                               }                
 13F2           L453:
 13F2                   .dbline 995
 13F2 8091BB01          lds R24,_k
 13F6 9091BC01          lds R25,_k+1
 13FA 0196              adiw R24,1
 13FC 9093BC01          sts _k+1,R25
 1400 8093BB01          sts _k,R24
 1404           L455:
 1404                   .dbline 995
 1404 8091BB01          lds R24,_k
 1408 9091BC01          lds R25,_k+1
 140C 8034              cpi R24,64
 140E E0E0              ldi R30,0
 1410 9E07              cpc R25,R30
 1412 E0F2              brlo L452
 1414           X135:
 1414                   .dbline 999
 1414           ;                                               SendUart0_2(74,20);//超时160ms
 1414 24E1              ldi R18,20
 1416 30E0              ldi R19,0
 1418 0AE4              ldi R16,74
 141A 6CDA              xcall _SendUart0_2
 141C                   .dbline 1000
 141C           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 141C 8091FA01          lds R24,_Uart0RxCounter
 1420 8930              cpi R24,9
 1422 61F4              brne L462
 1424           X136:
 1424 8091FB01          lds R24,_Uart0RxData
 1428 8535              cpi R24,85
 142A 41F4              brne L462
 142C           X137:
 142C 8091FC01          lds R24,_Uart0RxData+1
 1430 8034              cpi R24,64
 1432 21F4              brne L462
 1434           X138:
 1434 8091FD01          lds R24,_Uart0RxData+2
 1438 8438              cpi R24,132
 143A 49F0              breq L456
 143C           X139:
 143C           L462:
 143C                   .dbline 1001
 143C           ;                                               {T_dat|=0x0004; }
 143C                   .dbline 1001
 143C 8091E101          lds R24,_T_dat
 1440 9091E201          lds R25,_T_dat+1
 1444 8460              ori R24,4
 1446 9093E201          sts _T_dat+1,R25
 144A 8093E101          sts _T_dat,R24
 144E                   .dbline 1001
 144E           L456:
 144E                   .dbline 1003
 144E           ; 
 144E           ;                                               Uart0TxData[0]=0xE8;
 144E 88EE              ldi R24,232
 1450 80932F00          sts _Uart0TxData,R24
 1454                   .dbline 1004
 1454           ;                                               Uart0TxData[1]=0x40;
 1454 80E4              ldi R24,64
 1456 80933000          sts _Uart0TxData+1,R24
 145A                   .dbline 1005
 145A           ;                                               Uart0TxData[2]=0x84;
 145A 84E8              ldi R24,132
 145C 80933100          sts _Uart0TxData+2,R24
 1460                   .dbline 1006
 1460           ;                                               Uart0TxData[3]=3;//包3
 1460 83E0              ldi R24,3
 1462 80933200          sts _Uart0TxData+3,R24
 1466                   .dbline 1007
 1466           ;                                               Uart0TxData[4]=0x21;
 1466 81E2              ldi R24,33
 1468 80933300          sts _Uart0TxData+4,R24
 146C                   .dbline 1008
 146C           ;                                               Uart0TxData[5]=0x22;
 146C 82E2              ldi R24,34
 146E 80933400          sts _Uart0TxData+5,R24
 1472                   .dbline 1009
 1472           ;                                               Uart0TxData[6]=0x23;
 1472 83E2              ldi R24,35
 1474 80933500          sts _Uart0TxData+6,R24
 1478                   .dbline 1010
 1478           ;                                               Uart0TxData[7]=0x24;
 1478 84E2              ldi R24,36
 147A 80933600          sts _Uart0TxData+7,R24
 147E                   .dbline 1011
 147E           ;                                               Uart0TxData[8]=0x32;     
 147E 82E3              ldi R24,50
 1480 80933700          sts _Uart0TxData+8,R24
 1484                   .dbline 1012
 1484           ;                                               for(k=0;k<64;k++)
 1484 2224              clr R2
 1486 3324              clr R3
 1488 3092BC01          sts _k+1,R3
 148C 2092BB01          sts _k,R2
 1490 1CC0              xjmp L474
 1492           L471:
 1492                   .dbline 1013
 1492           ;                                               {
 1492                   .dbline 1014
 1492           ;                                                       Uart0TxData[9+k]=coeffdata[k+192];  
 1492 A090BB01          lds R10,_k
 1496 B090BC01          lds R11,_k+1
 149A 80E0              ldi R24,<_coeffdata
 149C 90E0              ldi R25,>_coeffdata
 149E F501              movw R30,R10
 14A0 E054              subi R30,64  ; offset = 192
 14A2 FF4F              sbci R31,255
 14A4 E80F              add R30,R24
 14A6 F91F              adc R31,R25
 14A8 2080              ldd R2,z+0
 14AA 80E0              ldi R24,<_Uart0TxData
 14AC 90E0              ldi R25,>_Uart0TxData
 14AE F501              movw R30,R10
 14B0 3996              adiw R30,9
 14B2 E80F              add R30,R24
 14B4 F91F              adc R31,R25
 14B6 2082              std z+0,R2
 14B8                   .dbline 1015
 14B8           ;                                               }                
 14B8           L472:
 14B8                   .dbline 1012
 14B8 8091BB01          lds R24,_k
 14BC 9091BC01          lds R25,_k+1
 14C0 0196              adiw R24,1
 14C2 9093BC01          sts _k+1,R25
 14C6 8093BB01          sts _k,R24
 14CA           L474:
 14CA                   .dbline 1012
 14CA 8091BB01          lds R24,_k
 14CE 9091BC01          lds R25,_k+1
 14D2 8034              cpi R24,64
 14D4 E0E0              ldi R30,0
 14D6 9E07              cpc R25,R30
 14D8 E0F2              brlo L471
 14DA           X140:
 14DA                   .dbline 1016
 14DA           ;                                               SendUart0_2(74,20);//超时160ms
 14DA 24E1              ldi R18,20
 14DC 30E0              ldi R19,0
 14DE 0AE4              ldi R16,74
 14E0 09DA              xcall _SendUart0_2
 14E2                   .dbline 1017
 14E2           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 14E2 8091FA01          lds R24,_Uart0RxCounter
 14E6 8930              cpi R24,9
 14E8 61F4              brne L481
 14EA           X141:
 14EA 8091FB01          lds R24,_Uart0RxData
 14EE 8535              cpi R24,85
 14F0 41F4              brne L481
 14F2           X142:
 14F2 8091FC01          lds R24,_Uart0RxData+1
 14F6 8034              cpi R24,64
 14F8 21F4              brne L481
 14FA           X143:
 14FA 8091FD01          lds R24,_Uart0RxData+2
 14FE 8438              cpi R24,132
 1500 49F0              breq L475
 1502           X144:
 1502           L481:
 1502                   .dbline 1018
 1502           ;                                               {T_dat|=0x0008; }
 1502                   .dbline 1018
 1502 8091E101          lds R24,_T_dat
 1506 9091E201          lds R25,_T_dat+1
 150A 8860              ori R24,8
 150C 9093E201          sts _T_dat+1,R25
 1510 8093E101          sts _T_dat,R24
 1514                   .dbline 1018
 1514           L475:
 1514                   .dbline 1020
 1514           ; 
 1514           ;                                               Uart0TxData[0]=0xE8;
 1514 88EE              ldi R24,232
 1516 80932F00          sts _Uart0TxData,R24
 151A                   .dbline 1021
 151A           ;                                               Uart0TxData[1]=0x40;
 151A 80E4              ldi R24,64
 151C 80933000          sts _Uart0TxData+1,R24
 1520                   .dbline 1022
 1520           ;                                               Uart0TxData[2]=0x84;
 1520 84E8              ldi R24,132
 1522 80933100          sts _Uart0TxData+2,R24
 1526                   .dbline 1023
 1526           ;                                               Uart0TxData[3]=4;//包4
 1526 84E0              ldi R24,4
 1528 80933200          sts _Uart0TxData+3,R24
 152C                   .dbline 1024
 152C           ;                                               Uart0TxData[4]=0x21;
 152C 81E2              ldi R24,33
 152E 80933300          sts _Uart0TxData+4,R24
 1532                   .dbline 1025
 1532           ;                                               Uart0TxData[5]=0x22;
 1532 82E2              ldi R24,34
 1534 80933400          sts _Uart0TxData+5,R24
 1538                   .dbline 1026
 1538           ;                                               Uart0TxData[6]=0x23;
 1538 83E2              ldi R24,35
 153A 80933500          sts _Uart0TxData+6,R24
 153E                   .dbline 1027
 153E           ;                                               Uart0TxData[7]=0x24;
 153E 84E2              ldi R24,36
 1540 80933600          sts _Uart0TxData+7,R24
 1544                   .dbline 1028
 1544           ;                                               Uart0TxData[8]=0x32;     
 1544 82E3              ldi R24,50
 1546 80933700          sts _Uart0TxData+8,R24
 154A                   .dbline 1029
 154A           ;                                               for(k=0;k<64;k++)
 154A 2224              clr R2
 154C 3324              clr R3
 154E 3092BC01          sts _k+1,R3
 1552 2092BB01          sts _k,R2
 1556 1CC0              xjmp L493
 1558           L490:
 1558                   .dbline 1030
 1558           ;                                               {
 1558                   .dbline 1031
 1558           ;                                                       Uart0TxData[9+k]=coeffdata[k+256];  
 1558 A090BB01          lds R10,_k
 155C B090BC01          lds R11,_k+1
 1560 80E0              ldi R24,<_coeffdata
 1562 90E0              ldi R25,>_coeffdata
 1564 F501              movw R30,R10
 1566 E050              subi R30,0  ; offset = 256
 1568 FF4F              sbci R31,255
 156A E80F              add R30,R24
 156C F91F              adc R31,R25
 156E 2080              ldd R2,z+0
 1570 80E0              ldi R24,<_Uart0TxData
 1572 90E0              ldi R25,>_Uart0TxData
 1574 F501              movw R30,R10
 1576 3996              adiw R30,9
 1578 E80F              add R30,R24
 157A F91F              adc R31,R25
 157C 2082              std z+0,R2
 157E                   .dbline 1032
 157E           ;                                               }                
 157E           L491:
 157E                   .dbline 1029
 157E 8091BB01          lds R24,_k
 1582 9091BC01          lds R25,_k+1
 1586 0196              adiw R24,1
 1588 9093BC01          sts _k+1,R25
 158C 8093BB01          sts _k,R24
 1590           L493:
 1590                   .dbline 1029
 1590 8091BB01          lds R24,_k
 1594 9091BC01          lds R25,_k+1
 1598 8034              cpi R24,64
 159A E0E0              ldi R30,0
 159C 9E07              cpc R25,R30
 159E E0F2              brlo L490
 15A0           X145:
 15A0                   .dbline 1033
 15A0           ;                                               SendUart0_2(74,20);//超时160ms
 15A0 24E1              ldi R18,20
 15A2 30E0              ldi R19,0
 15A4 0AE4              ldi R16,74
 15A6 A6D9              xcall _SendUart0_2
 15A8                   .dbline 1034
 15A8           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 15A8 8091FA01          lds R24,_Uart0RxCounter
 15AC 8930              cpi R24,9
 15AE 61F4              brne L500
 15B0           X146:
 15B0 8091FB01          lds R24,_Uart0RxData
 15B4 8535              cpi R24,85
 15B6 41F4              brne L500
 15B8           X147:
 15B8 8091FC01          lds R24,_Uart0RxData+1
 15BC 8034              cpi R24,64
 15BE 21F4              brne L500
 15C0           X148:
 15C0 8091FD01          lds R24,_Uart0RxData+2
 15C4 8438              cpi R24,132
 15C6 49F0              breq L494
 15C8           X149:
 15C8           L500:
 15C8                   .dbline 1035
 15C8           ;                                               {T_dat|=0x0010; }
 15C8                   .dbline 1035
 15C8 8091E101          lds R24,_T_dat
 15CC 9091E201          lds R25,_T_dat+1
 15D0 8061              ori R24,16
 15D2 9093E201          sts _T_dat+1,R25
 15D6 8093E101          sts _T_dat,R24
 15DA                   .dbline 1035
 15DA           L494:
 15DA                   .dbline 1037
 15DA           ; 
 15DA           ;                                               DataFlag=0;
 15DA 2224              clr R2
 15DC 3324              clr R3
 15DE 3092C201          sts _DataFlag+1,R3
 15E2 2092C101          sts _DataFlag,R2
 15E6                   .dbline 1038
 15E6           ;                                               coeff_len=0;    
 15E6 30922D00          sts _coeff_len+1,R3
 15EA 20922C00          sts _coeff_len,R2
 15EE                   .dbline 1039
 15EE           ;                                               T_com=0x0C;
 15EE 8CE0              ldi R24,12
 15F0 8093DA01          sts _T_com,R24
 15F4                   .dbline 1040
 15F4           ;                                               SendManchester();               
 15F4 0E945018          xcall _SendManchester
 15F8                   .dbline 1041
 15F8           ;                                       }     
 15F8                   .dbline 1042
 15F8           ;                               }        
 15F8                   .dbline 1043
 15F8           ;                       }
 15F8 0C944318          xjmp L313
 15FC           L312:
 15FC                   .dbline 1046
 15FC           ; 
 15FC           ;                       else//若不是下发标定系数，则进入以下各个命令的子语句
 15FC           ;                       { 
 15FC                   .dbline 1047
 15FC           ;                               T_com=(R_dat>>4);
 15FC 2090DF01          lds R2,_R_dat
 1600 3090E001          lds R3,_R_dat+1
 1604 3594              asr R3
 1606 2794              ror R2
 1608 3594              asr R3
 160A 2794              ror R2
 160C 3594              asr R3
 160E 2794              ror R2
 1610 3594              asr R3
 1612 2794              ror R2
 1614 2092DA01          sts _T_com,R2
 1618                   .dbline 1048
 1618           ;                               switch(R_dat&0xf0)
 1618 8091DF01          lds R24,_R_dat
 161C 9091E001          lds R25,_R_dat+1
 1620 807F              andi R24,240
 1622 9070              andi R25,0
 1624 5C01              movw R10,R24
 1626 8037              cpi R24,112
 1628 E0E0              ldi R30,0
 162A 9E07              cpc R25,R30
 162C 09F4              brne X248
 162E 63C3              xjmp L555
 1630           X248:
 1630           X150:
 1630 80E7              ldi R24,112
 1632 90E0              ldi R25,0
 1634 8A15              cp R24,R10
 1636 9B05              cpc R25,R11
 1638 0CF4              brge X249
 163A 3AC0              xjmp L819
 163C           X249:
 163C           X151:
 163C           L818:
 163C C501              movw R24,R10
 163E 8033              cpi R24,48
 1640 E0E0              ldi R30,0
 1642 9E07              cpc R25,R30
 1644 09F4              brne X250
 1646 F1C0              xjmp L521
 1648           X250:
 1648           X152:
 1648 80E3              ldi R24,48
 164A 90E0              ldi R25,0
 164C 8A15              cp R24,R10
 164E 9B05              cpc R25,R11
 1650 A4F0              brlt L821
 1652           X153:
 1652           L820:
 1652 C501              movw R24,R10
 1654 8031              cpi R24,16
 1656 E0E0              ldi R30,0
 1658 9E07              cpc R25,R30
 165A 09F4              brne X251
 165C 65C0              xjmp L504
 165E           X251:
 165E           X154:
 165E 8031              cpi R24,16
 1660 E0E0              ldi R30,0
 1662 9E07              cpc R25,R30
 1664 14F4              brge X252
 1666 0C944318          xjmp L502
 166A           X252:
 166A           X155:
 166A           L822:
 166A C501              movw R24,R10
 166C 8032              cpi R24,32
 166E E0E0              ldi R30,0
 1670 9E07              cpc R25,R30
 1672 09F4              brne X253
 1674 98C0              xjmp L512
 1676           X253:
 1676           X156:
 1676 0C944318          xjmp L502
 167A           L821:
 167A C501              movw R24,R10
 167C 8035              cpi R24,80
 167E E0E0              ldi R30,0
 1680 9E07              cpc R25,R30
 1682 09F4              brne X254
 1684 B9C1              xjmp L534
 1686           X254:
 1686           X157:
 1686 80E5              ldi R24,80
 1688 90E0              ldi R25,0
 168A 8A15              cp R24,R10
 168C 9B05              cpc R25,R11
 168E 44F0              brlt L824
 1690           X158:
 1690           L823:
 1690 C501              movw R24,R10
 1692 8034              cpi R24,64
 1694 E0E0              ldi R30,0
 1696 9E07              cpc R25,R30
 1698 09F4              brne X255
 169A 2BC1              xjmp L525
 169C           X255:
 169C           X159:
 169C 0C944318          xjmp L502
 16A0           L824:
 16A0 C501              movw R24,R10
 16A2 8036              cpi R24,96
 16A4 E0E0              ldi R30,0
 16A6 9E07              cpc R25,R30
 16A8 09F4              brne X256
 16AA ECC2              xjmp L551
 16AC           X256:
 16AC           X160:
 16AC 0C944318          xjmp L502
 16B0           L819:
 16B0 C501              movw R24,R10
 16B2 803A              cpi R24,160
 16B4 E0E0              ldi R30,0
 16B6 9E07              cpc R25,R30
 16B8 09F4              brne X257
 16BA F3C6              xjmp L669
 16BC           X257:
 16BC           X161:
 16BC 80EA              ldi R24,160
 16BE 90E0              ldi R25,0
 16C0 8A15              cp R24,R10
 16C2 9B05              cpc R25,R11
 16C4 A4F0              brlt L826
 16C6           X162:
 16C6           L825:
 16C6 C501              movw R24,R10
 16C8 8038              cpi R24,128
 16CA E0E0              ldi R30,0
 16CC 9E07              cpc R25,R30
 16CE 09F4              brne X258
 16D0 4CC3              xjmp L560
 16D2           X258:
 16D2           X163:
 16D2 8038              cpi R24,128
 16D4 E0E0              ldi R30,0
 16D6 9E07              cpc R25,R30
 16D8 14F4              brge X259
 16DA 0C944318          xjmp L502
 16DE           X259:
 16DE           X164:
 16DE           L827:
 16DE C501              movw R24,R10
 16E0 8039              cpi R24,144
 16E2 E0E0              ldi R30,0
 16E4 9E07              cpc R25,R30
 16E6 09F4              brne X260
 16E8 0EC4              xjmp L575
 16EA           X260:
 16EA           X165:
 16EA 0C944318          xjmp L502
 16EE           L826:
 16EE C501              movw R24,R10
 16F0 803C              cpi R24,192
 16F2 E0E0              ldi R30,0
 16F4 9E07              cpc R25,R30
 16F6 11F4              brne X261
 16F8 0C94E113          xjmp L719
 16FC           X261:
 16FC           X166:
 16FC 80EC              ldi R24,192
 16FE 90E0              ldi R25,0
 1700 8A15              cp R24,R10
 1702 9B05              cpc R25,R11
 1704 44F0              brlt L829
 1706           X167:
 1706           L828:
 1706 C501              movw R24,R10
 1708 803B              cpi R24,176
 170A E0E0              ldi R30,0
 170C 9E07              cpc R25,R30
 170E 09F4              brne X262
 1710 90C7              xjmp L694
 1712           X262:
 1712           X168:
 1712 0C944318          xjmp L502
 1716           L829:
 1716 C501              movw R24,R10
 1718 803D              cpi R24,208
 171A E0E0              ldi R30,0
 171C 9E07              cpc R25,R30
 171E 11F4              brne X263
 1720 0C941218          xjmp L815
 1724           X263:
 1724           X169:
 1724 0C944318          xjmp L502
 1728           L504:
 1728                   .dbline 1051
 1728           ;                               { 
 1728           ;                                       case 0x10://复位        
 1728           ;                                               Uart0TxData[0]=0xE8;
 1728 88EE              ldi R24,232
 172A 80932F00          sts _Uart0TxData,R24
 172E                   .dbline 1052
 172E           ;                                               Uart0TxData[1]=0x40;
 172E 80E4              ldi R24,64
 1730 80933000          sts _Uart0TxData+1,R24
 1734                   .dbline 1053
 1734           ;                                               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 1734 8DE8              ldi R24,141
 1736 80933100          sts _Uart0TxData+2,R24
 173A                   .dbline 1054
 173A           ;                                               Uart0TxData[3]=31;
 173A 8FE1              ldi R24,31
 173C 80933200          sts _Uart0TxData+3,R24
 1740                   .dbline 1055
 1740           ;                                               SendUart0_2(9,5); 
 1740 25E0              ldi R18,5
 1742 30E0              ldi R19,0
 1744 09E0              ldi R16,9
 1746 D6D8              xcall _SendUart0_2
 1748                   .dbline 1056
 1748           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 1748 8091FA01          lds R24,_Uart0RxCounter
 174C 8930              cpi R24,9
 174E 99F4              brne L508
 1750           X170:
 1750 8091FB01          lds R24,_Uart0RxData
 1754 8535              cpi R24,85
 1756 79F4              brne L508
 1758           X171:
 1758 8091FC01          lds R24,_Uart0RxData+1
 175C 8034              cpi R24,64
 175E 59F4              brne L508
 1760           X172:
 1760 8091FD01          lds R24,_Uart0RxData+2
 1764 8D38              cpi R24,141
 1766 39F4              brne L508
 1768           X173:
 1768                   .dbline 1057
 1768           ;                                               {T_dat=0x00;}
 1768                   .dbline 1057
 1768 2224              clr R2
 176A 3324              clr R3
 176C 3092E201          sts _T_dat+1,R3
 1770 2092E101          sts _T_dat,R2
 1774                   .dbline 1057
 1774 06C0              xjmp L509
 1776           L508:
 1776                   .dbline 1059
 1776           ;                                               else
 1776           ;                                               {T_dat=0xff;}
 1776                   .dbline 1059
 1776 8FEF              ldi R24,255
 1778 90E0              ldi R25,0
 177A 9093E201          sts _T_dat+1,R25
 177E 8093E101          sts _T_dat,R24
 1782                   .dbline 1059
 1782           L509:
 1782                   .dbline 1060
 1782           ;                                               T_dat<<=8;
 1782 2090E101          lds R2,_T_dat
 1786 3090E201          lds R3,_T_dat+1
 178A 322C              mov R3,R2
 178C 2224              clr R2
 178E 3092E201          sts _T_dat+1,R3
 1792 2092E101          sts _T_dat,R2
 1796                   .dbline 1061
 1796           ;                                               T_dat|=0x00;
 1796 3092E201          sts _T_dat+1,R3
 179A 2092E101          sts _T_dat,R2
 179E                   .dbline 1062
 179E           ;                                               SendManchester();       
 179E 0E945018          xcall _SendManchester
 17A2                   .dbline 1063
 17A2           ;                                               break;
 17A2 0C944318          xjmp L502
 17A6           L512:
 17A6                   .dbline 1066
 17A6           ; 
 17A6           ;                                       case 0x20://主控板与采集板版本号
 17A6           ;                                               Uart0TxData[0]=0xE8;
 17A6 88EE              ldi R24,232
 17A8 80932F00          sts _Uart0TxData,R24
 17AC                   .dbline 1067
 17AC           ;                                               Uart0TxData[1]=0x40;
 17AC 80E4              ldi R24,64
 17AE 80933000          sts _Uart0TxData+1,R24
 17B2                   .dbline 1068
 17B2           ;                                               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 17B2 8DE8              ldi R24,141
 17B4 80933100          sts _Uart0TxData+2,R24
 17B8                   .dbline 1069
 17B8           ;                                               Uart0TxData[3]=31;
 17B8 8FE1              ldi R24,31
 17BA 80933200          sts _Uart0TxData+3,R24
 17BE                   .dbline 1070
 17BE           ;                                               SendUart0_2(9,5); 
 17BE 25E0              ldi R18,5
 17C0 30E0              ldi R19,0
 17C2 09E0              ldi R16,9
 17C4 97D8              xcall _SendUart0_2
 17C6                   .dbline 1071
 17C6           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 17C6 8091FA01          lds R24,_Uart0RxCounter
 17CA 8930              cpi R24,9
 17CC A1F4              brne L516
 17CE           X174:
 17CE 8091FB01          lds R24,_Uart0RxData
 17D2 8535              cpi R24,85
 17D4 81F4              brne L516
 17D6           X175:
 17D6 8091FC01          lds R24,_Uart0RxData+1
 17DA 8034              cpi R24,64
 17DC 61F4              brne L516
 17DE           X176:
 17DE 8091FD01          lds R24,_Uart0RxData+2
 17E2 8D38              cpi R24,141
 17E4 41F4              brne L516
 17E6           X177:
 17E6                   .dbline 1072
 17E6           ;                                                       {T_dat=Uart0RxData[3];}
 17E6                   .dbline 1072
 17E6 2090FE01          lds R2,_Uart0RxData+3
 17EA 3324              clr R3
 17EC 3092E201          sts _T_dat+1,R3
 17F0 2092E101          sts _T_dat,R2
 17F4                   .dbline 1072
 17F4 06C0              xjmp L517
 17F6           L516:
 17F6                   .dbline 1074
 17F6           ;                                               else
 17F6           ;                                                       {T_dat=0xff;}    
 17F6                   .dbline 1074
 17F6 8FEF              ldi R24,255
 17F8 90E0              ldi R25,0
 17FA 9093E201          sts _T_dat+1,R25
 17FE 8093E101          sts _T_dat,R24
 1802                   .dbline 1074
 1802           L517:
 1802                   .dbline 1075
 1802           ;                                               T_dat<<=8;
 1802 2090E101          lds R2,_T_dat
 1806 3090E201          lds R3,_T_dat+1
 180A 322C              mov R3,R2
 180C 2224              clr R2
 180E 3092E201          sts _T_dat+1,R3
 1812 2092E101          sts _T_dat,R2
 1816                   .dbline 1076
 1816           ;                                               T_dat|=BB;
 1816 C101              movw R24,R2
 1818 8061              ori R24,16
 181A 9093E201          sts _T_dat+1,R25
 181E 8093E101          sts _T_dat,R24
 1822                   .dbline 1077
 1822           ;                                               SendManchester();                               
 1822 0E945018          xcall _SendManchester
 1826                   .dbline 1078
 1826           ;                                               break;
 1826 0C944318          xjmp L502
 182A           L521:
 182A                   .dbline 1081
 182A           ; 
 182A           ;                                       case 0x30://Cable电压,电机电压
 182A           ;                                               Delay_ms(30);   
 182A 0EE1              ldi R16,30
 182C 10E0              ldi R17,0
 182E 6BD9              xcall _Delay_ms
 1830                   .dbline 1082
 1830           ;                                               f=SampleADC(0);//Cable 
 1830 0027              clr R16
 1832 FAD8              xcall _SampleADC
 1834 A02E              mov R10,R16
 1836 1127              clr R17
 1838 0E940000          xcall int2fp
 183C 0D83              std y+5,R16
 183E 1E83              std y+6,R17
 1840 2F83              std y+7,R18
 1842 3887              std y+8,R19
 1844                   .dbline 1083
 1844           ;                                               f=f*2.56;
 1844 00E0              ldi R16,<L522
 1846 10E0              ldi R17,>L522
 1848 0E940000          xcall elpm32
 184C CE01              movw R24,R28
 184E 0596              adiw R24,5
 1850 9A93              st -y,R25
 1852 8A93              st -y,R24
 1854 0E940000          xcall fpmule1
 1858 0D83              std y+5,R16
 185A 1E83              std y+6,R17
 185C 2F83              std y+7,R18
 185E 3887              std y+8,R19
 1860                   .dbline 1084
 1860           ;                                               f=f*101;
 1860 00E0              ldi R16,<L523
 1862 10E0              ldi R17,>L523
 1864 0E940000          xcall elpm32
 1868 CE01              movw R24,R28
 186A 0596              adiw R24,5
 186C 9A93              st -y,R25
 186E 8A93              st -y,R24
 1870 0E940000          xcall fpmule1
 1874 0D83              std y+5,R16
 1876 1E83              std y+6,R17
 1878 2F83              std y+7,R18
 187A 3887              std y+8,R19
 187C                   .dbline 1085
 187C           ;                                               f=f/256;
 187C 2D80              ldd R2,y+5
 187E 3E80              ldd R3,y+6
 1880 4F80              ldd R4,y+7
 1882 5884              ldd R5,y+8
 1884 00E0              ldi R16,<L524
 1886 10E0              ldi R17,>L524
 1888 0E940000          xcall elpm32
 188C 3A93              st -y,R19
 188E 2A93              st -y,R18
 1890 1A93              st -y,R17
 1892 0A93              st -y,R16
 1894 8101              movw R16,R2
 1896 9201              movw R18,R4
 1898 0E940000          xcall fpdiv2
 189C 0D83              std y+5,R16
 189E 1E83              std y+6,R17
 18A0 2F83              std y+7,R18
 18A2 3887              std y+8,R19
 18A4                   .dbline 1086
 18A4           ;                                               T_dat=f;
 18A4 0D81              ldd R16,y+5
 18A6 1E81              ldd R17,y+6
 18A8 2F81              ldd R18,y+7
 18AA 3885              ldd R19,y+8
 18AC 0E940000          xcall fpint
 18B0 1093E201          sts _T_dat+1,R17
 18B4 0093E101          sts _T_dat,R16
 18B8                   .dbline 1087
 18B8           ;                                               T_dat<<=8;  
 18B8 1801              movw R2,R16
 18BA 322C              mov R3,R2
 18BC 2224              clr R2
 18BE 3092E201          sts _T_dat+1,R3
 18C2 2092E101          sts _T_dat,R2
 18C6                   .dbline 1089
 18C6           ;                                               
 18C6           ;                                               SendUart1(0x30,4);//读电机电压，32ms超时
 18C6 24E0              ldi R18,4
 18C8 30E0              ldi R19,0
 18CA 00E3              ldi R16,48
 18CC 0E944202          xcall _SendUart1
 18D0                   .dbline 1090
 18D0           ;                                               T_dat|=Uart1RxData[0];
 18D0 2090F601          lds R2,_Uart1RxData
 18D4 3324              clr R3
 18D6 4090E101          lds R4,_T_dat
 18DA 5090E201          lds R5,_T_dat+1
 18DE 4228              or R4,R2
 18E0 5328              or R5,R3
 18E2 5092E201          sts _T_dat+1,R5
 18E6 4092E101          sts _T_dat,R4
 18EA                   .dbline 1092
 18EA           ; 
 18EA           ;                                               SendManchester();   
 18EA 0E945018          xcall _SendManchester
 18EE                   .dbline 1093
 18EE           ;                                               break;
 18EE 0C944318          xjmp L502
 18F2           L525:
 18F2                   .dbline 1096
 18F2           ; 
 18F2           ;                                       case 0x40: //采集板压力和温度
 18F2           ;                                           if(R_dat==0x4f)// 采集第2个压力温度的数字量，再多发2帧共4字节
 18F2 8091DF01          lds R24,_R_dat
 18F6 9091E001          lds R25,_R_dat+1
 18FA 8F34              cpi R24,79
 18FC E0E0              ldi R30,0
 18FE 9E07              cpc R25,R30
 1900 29F5              brne L526
 1902           X178:
 1902                   .dbline 1097
 1902           ;                                               {
 1902                   .dbline 1098
 1902           ;                                                 Delay_ms(30);//等总线稳定，否则会影响到内部总线，则第一个字节收不正常
 1902 0EE1              ldi R16,30
 1904 10E0              ldi R17,0
 1906 FFD8              xcall _Delay_ms
 1908                   .dbline 1100
 1908           ;                                                 
 1908           ;                                                 SampleTPS(R_dat);//最快5ms返回，没有挂压力短节时最多20ms返回
 1908 0091DF01          lds R16,_R_dat
 190C 1091E001          lds R17,_R_dat+1
 1910 0E94E403          xcall _SampleTPS
 1914                   .dbline 1102
 1914           ;                                                 
 1914           ;                                                 Delay_ms(30); 
 1914 0EE1              ldi R16,30
 1916 10E0              ldi R17,0
 1918 F6D8              xcall _Delay_ms
 191A                   .dbline 1103
 191A           ;                                                 T_dat=TPS_PData;
 191A 2090DD01          lds R2,_TPS_PData
 191E 3090DE01          lds R3,_TPS_PData+1
 1922 3092E201          sts _T_dat+1,R3
 1926 2092E101          sts _T_dat,R2
 192A                   .dbline 1104
 192A           ;                                                 SendManchester();//压力2
 192A 0E945018          xcall _SendManchester
 192E                   .dbline 1106
 192E           ;                                                 
 192E           ;                                                 Delay_ms(30); 
 192E 0EE1              ldi R16,30
 1930 10E0              ldi R17,0
 1932 E9D8              xcall _Delay_ms
 1934                   .dbline 1107
 1934           ;                                                 T_dat=TPS_TData;
 1934 2090DB01          lds R2,_TPS_TData
 1938 3090DC01          lds R3,_TPS_TData+1
 193C 3092E201          sts _T_dat+1,R3
 1940 2092E101          sts _T_dat,R2
 1944                   .dbline 1108
 1944           ;                                                 SendManchester();//温度2
 1944 0E945018          xcall _SendManchester
 1948                   .dbline 1109
 1948           ;                                               }
 1948 0C944318          xjmp L502
 194C           L526:
 194C                   .dbline 1111
 194C           ;                                               else
 194C           ;                                               {
 194C                   .dbline 1112
 194C           ;                                               Uart0TxData[0]=0xE8;
 194C 88EE              ldi R24,232
 194E 80932F00          sts _Uart0TxData,R24
 1952                   .dbline 1113
 1952           ;                                               Uart0TxData[1]=0x40;
 1952 80E4              ldi R24,64
 1954 80933000          sts _Uart0TxData+1,R24
 1958                   .dbline 1114
 1958           ;                                               Uart0TxData[2]=0x89;
 1958 89E8              ldi R24,137
 195A 80933100          sts _Uart0TxData+2,R24
 195E                   .dbline 1115
 195E           ;                                               Uart0TxData[3]=9;
 195E 89E0              ldi R24,9
 1960 80933200          sts _Uart0TxData+3,R24
 1964                   .dbline 1116
 1964           ;                                               SendUart0_2(9,50);//流量板直读检测，超时400ms
 1964 22E3              ldi R18,50
 1966 30E0              ldi R19,0
 1968 09E0              ldi R16,9
 196A 0E947A04          xcall _SendUart0_2
 196E                   .dbline 1118
 196E           ; 
 196E           ;                                               T_dat=Uart0RxData[1];
 196E 2090FC01          lds R2,_Uart0RxData+1
 1972 3324              clr R3
 1974 3092E201          sts _T_dat+1,R3
 1978 2092E101          sts _T_dat,R2
 197C                   .dbline 1119
 197C           ;                                               T_dat<<=8;
 197C 2090E101          lds R2,_T_dat
 1980 3090E201          lds R3,_T_dat+1
 1984 322C              mov R3,R2
 1986 2224              clr R2
 1988 3092E201          sts _T_dat+1,R3
 198C 2092E101          sts _T_dat,R2
 1990                   .dbline 1120
 1990           ;                                               T_dat|=Uart0RxData[0];
 1990 2090FB01          lds R2,_Uart0RxData
 1994 3324              clr R3
 1996 4090E101          lds R4,_T_dat
 199A 5090E201          lds R5,_T_dat+1
 199E 4228              or R4,R2
 19A0 5328              or R5,R3
 19A2 5092E201          sts _T_dat+1,R5
 19A6 4092E101          sts _T_dat,R4
 19AA                   .dbline 1121
 19AA           ;                                               SendManchester();//压力
 19AA 0E945018          xcall _SendManchester
 19AE                   .dbline 1123
 19AE           ; 
 19AE           ;                                               Delay_ms(30);   
 19AE 0EE1              ldi R16,30
 19B0 10E0              ldi R17,0
 19B2 A9D8              xcall _Delay_ms
 19B4                   .dbline 1124
 19B4           ;                                               T_dat=Uart0RxData[3];
 19B4 2090FE01          lds R2,_Uart0RxData+3
 19B8 3324              clr R3
 19BA 3092E201          sts _T_dat+1,R3
 19BE 2092E101          sts _T_dat,R2
 19C2                   .dbline 1125
 19C2           ;                                               T_dat<<=8;
 19C2 2090E101          lds R2,_T_dat
 19C6 3090E201          lds R3,_T_dat+1
 19CA 322C              mov R3,R2
 19CC 2224              clr R2
 19CE 3092E201          sts _T_dat+1,R3
 19D2 2092E101          sts _T_dat,R2
 19D6                   .dbline 1126
 19D6           ;                                               T_dat|=Uart0RxData[2];
 19D6 2090FD01          lds R2,_Uart0RxData+2
 19DA 3324              clr R3
 19DC 4090E101          lds R4,_T_dat
 19E0 5090E201          lds R5,_T_dat+1
 19E4 4228              or R4,R2
 19E6 5328              or R5,R3
 19E8 5092E201          sts _T_dat+1,R5
 19EC 4092E101          sts _T_dat,R4
 19F0                   .dbline 1127
 19F0           ;                                               SendManchester();//温度
 19F0 0E945018          xcall _SendManchester
 19F4                   .dbline 1128
 19F4           ;                                               }
 19F4                   .dbline 1130
 19F4           ;                                               
 19F4           ;                                               break;
 19F4 0C944318          xjmp L502
 19F8           L534:
 19F8                   .dbline 1150
 19F8           ; 
 19F8           ;                                       case 0x50://流量采样                                                     
 19F8           ;                                               /*      
 19F8           ;                                               Delay_ms(40); //40ms定时                
 19F8           ;                                               myFIB.f=123.456; 
 19F8           ;                                               T_dat=myFIB.i[1];
 19F8           ;                                               SendManchester();
 19F8           ;                                               Delay_ms(40);
 19F8           ;                                               T_dat=myFIB.i[0];
 19F8           ;                                               SendManchester();
 19F8           ;                                               Delay_ms(40);
 19F8           ;                                               myFIB.f=789.012; 
 19F8           ;                                               T_dat=myFIB.i[1];
 19F8           ;                                               SendManchester();
 19F8           ;                                               Delay_ms(40);
 19F8           ;                                               T_dat=myFIB.i[0];
 19F8           ;                                               SendManchester();
 19F8           ;                                               Delay_ms(40);
 19F8           ;                                               */
 19F8           ;                                               Uart0TxData[0]=0xE8;
 19F8 88EE              ldi R24,232
 19FA 80932F00          sts _Uart0TxData,R24
 19FE                   .dbline 1151
 19FE           ;                                               Uart0TxData[1]=0x40;
 19FE 80E4              ldi R24,64
 1A00 80933000          sts _Uart0TxData+1,R24
 1A04                   .dbline 1152
 1A04           ;                                               Uart0TxData[2]=0x89;
 1A04 89E8              ldi R24,137
 1A06 80933100          sts _Uart0TxData+2,R24
 1A0A                   .dbline 1153
 1A0A           ;                                               Uart0TxData[3]=9;
 1A0A 89E0              ldi R24,9
 1A0C 80933200          sts _Uart0TxData+3,R24
 1A10                   .dbline 1154
 1A10           ;                                               SendUart0_2(9,50);//流量板直读检测，超时400ms
 1A10 22E3              ldi R18,50
 1A12 30E0              ldi R19,0
 1A14 09E0              ldi R16,9
 1A16 0E947A04          xcall _SendUart0_2
 1A1A                   .dbline 1156
 1A1A           ; 
 1A1A           ;                                               lfib=Uart0RxData[5];
 1A1A 20900002          lds R2,_Uart0RxData+5
 1A1E 3324              clr R3
 1A20 4424              clr R4
 1A22 5524              clr R5
 1A24 30922300          sts _lfib+1,R3
 1A28 20922200          sts _lfib,R2
 1A2C 50922500          sts _lfib+2+1,R5
 1A30 40922400          sts _lfib+2,R4
 1A34                   .dbline 1157
 1A34           ;                                               lfib<<=8;
 1A34 88E0              ldi R24,8
 1A36 90E0              ldi R25,0
 1A38 20912400          lds R18,_lfib+2
 1A3C 30912500          lds R19,_lfib+2+1
 1A40 00912200          lds R16,_lfib
 1A44 10912300          lds R17,_lfib+1
 1A48 8A93              st -y,R24
 1A4A 0E940000          xcall lsl32
 1A4E 10932300          sts _lfib+1,R17
 1A52 00932200          sts _lfib,R16
 1A56 30932500          sts _lfib+2+1,R19
 1A5A 20932400          sts _lfib+2,R18
 1A5E                   .dbline 1158
 1A5E           ;                                               lfib|=Uart0RxData[4];
 1A5E 2090FF01          lds R2,_Uart0RxData+4
 1A62 3324              clr R3
 1A64 4424              clr R4
 1A66 5524              clr R5
 1A68 3801              movw R6,R16
 1A6A 4901              movw R8,R18
 1A6C 6228              or R6,R2
 1A6E 7328              or R7,R3
 1A70 8428              or R8,R4
 1A72 9528              or R9,R5
 1A74 70922300          sts _lfib+1,R7
 1A78 60922200          sts _lfib,R6
 1A7C 90922500          sts _lfib+2+1,R9
 1A80 80922400          sts _lfib+2,R8
 1A84                   .dbline 1159
 1A84           ;                                               lfib&=0x0000ffff;
 1A84 4FEF              ldi R20,255
 1A86 5FEF              ldi R21,255
 1A88 60E0              ldi R22,0
 1A8A 70E0              ldi R23,0
 1A8C 1301              movw R2,R6
 1A8E 2401              movw R4,R8
 1A90 2422              and R2,R20
 1A92 3522              and R3,R21
 1A94 4622              and R4,R22
 1A96 5722              and R5,R23
 1A98 30922300          sts _lfib+1,R3
 1A9C 20922200          sts _lfib,R2
 1AA0 50922500          sts _lfib+2+1,R5
 1AA4 40922400          sts _lfib+2,R4
 1AA8                   .dbline 1160
 1AA8           ;                                               myFIB.f=(unsigned long)lfib; 
 1AA8 8101              movw R16,R2
 1AAA 9201              movw R18,R4
 1AAC 0E940000          xcall ulong2fp
 1AB0 10934902          sts _myFIB+1,R17
 1AB4 00934802          sts _myFIB,R16
 1AB8 30934B02          sts _myFIB+2+1,R19
 1ABC 20934A02          sts _myFIB+2,R18
 1AC0                   .dbline 1162
 1AC0           ; 
 1AC0           ;                                               T_dat=myFIB.i[1];
 1AC0 20904A02          lds R2,_myFIB+2
 1AC4 30904B02          lds R3,_myFIB+2+1
 1AC8 3092E201          sts _T_dat+1,R3
 1ACC 2092E101          sts _T_dat,R2
 1AD0                   .dbline 1163
 1AD0           ;                                               SendManchester();//流量-时间
 1AD0 0E945018          xcall _SendManchester
 1AD4                   .dbline 1164
 1AD4           ;                                               crc16array[0]=(unsigned char)(T_dat);
 1AD4 2090E101          lds R2,_T_dat
 1AD8 3090E201          lds R3,_T_dat+1
 1ADC 20920000          sts _crc16array,R2
 1AE0                   .dbline 1165
 1AE0           ;                                               crc16array[1]=(unsigned char)(T_dat>>8);
 1AE0 232C              mov R2,R3
 1AE2 3324              clr R3
 1AE4 27FC              sbrc R2,7
 1AE6 3094              com R3
 1AE8 20920100          sts _crc16array+1,R2
 1AEC                   .dbline 1167
 1AEC           ; 
 1AEC           ;                                               Delay_ms(30);   
 1AEC 0EE1              ldi R16,30
 1AEE 10E0              ldi R17,0
 1AF0 0AD8              xcall _Delay_ms
 1AF2                   .dbline 1168
 1AF2           ;                                               T_dat=myFIB.i[0];
 1AF2 20904802          lds R2,_myFIB
 1AF6 30904902          lds R3,_myFIB+1
 1AFA 3092E201          sts _T_dat+1,R3
 1AFE 2092E101          sts _T_dat,R2
 1B02                   .dbline 1169
 1B02           ;                                               SendManchester();//流量-时间
 1B02 0E945018          xcall _SendManchester
 1B06                   .dbline 1170
 1B06           ;                                               crc16array[2]=(unsigned char)(T_dat);
 1B06 2090E101          lds R2,_T_dat
 1B0A 3090E201          lds R3,_T_dat+1
 1B0E 20920200          sts _crc16array+2,R2
 1B12                   .dbline 1171
 1B12           ;                                               crc16array[3]=(unsigned char)(T_dat>>8);
 1B12 232C              mov R2,R3
 1B14 3324              clr R3
 1B16 27FC              sbrc R2,7
 1B18 3094              com R3
 1B1A 20920300          sts _crc16array+3,R2
 1B1E                   .dbline 1173
 1B1E           ; 
 1B1E           ;                                               Delay_ms(30);   
 1B1E 0EE1              ldi R16,30
 1B20 10E0              ldi R17,0
 1B22 0E948305          xcall _Delay_ms
 1B26                   .dbline 1175
 1B26           ; 
 1B26           ;                                               lfib=Uart0RxData[7];
 1B26 20900202          lds R2,_Uart0RxData+7
 1B2A 3324              clr R3
 1B2C 4424              clr R4
 1B2E 5524              clr R5
 1B30 30922300          sts _lfib+1,R3
 1B34 20922200          sts _lfib,R2
 1B38 50922500          sts _lfib+2+1,R5
 1B3C 40922400          sts _lfib+2,R4
 1B40                   .dbline 1176
 1B40           ;                                               lfib<<=8;
 1B40 88E0              ldi R24,8
 1B42 90E0              ldi R25,0
 1B44 20912400          lds R18,_lfib+2
 1B48 30912500          lds R19,_lfib+2+1
 1B4C 00912200          lds R16,_lfib
 1B50 10912300          lds R17,_lfib+1
 1B54 8A93              st -y,R24
 1B56 0E940000          xcall lsl32
 1B5A 10932300          sts _lfib+1,R17
 1B5E 00932200          sts _lfib,R16
 1B62 30932500          sts _lfib+2+1,R19
 1B66 20932400          sts _lfib+2,R18
 1B6A                   .dbline 1177
 1B6A           ;                                               lfib|=Uart0RxData[6];
 1B6A 20900102          lds R2,_Uart0RxData+6
 1B6E 3324              clr R3
 1B70 4424              clr R4
 1B72 5524              clr R5
 1B74 3801              movw R6,R16
 1B76 4901              movw R8,R18
 1B78 6228              or R6,R2
 1B7A 7328              or R7,R3
 1B7C 8428              or R8,R4
 1B7E 9528              or R9,R5
 1B80 70922300          sts _lfib+1,R7
 1B84 60922200          sts _lfib,R6
 1B88 90922500          sts _lfib+2+1,R9
 1B8C 80922400          sts _lfib+2,R8
 1B90                   .dbline 1178
 1B90           ;                                               lfib&=0x0000ffff;
 1B90 4FEF              ldi R20,255
 1B92 5FEF              ldi R21,255
 1B94 60E0              ldi R22,0
 1B96 70E0              ldi R23,0
 1B98 1301              movw R2,R6
 1B9A 2401              movw R4,R8
 1B9C 2422              and R2,R20
 1B9E 3522              and R3,R21
 1BA0 4622              and R4,R22
 1BA2 5722              and R5,R23
 1BA4 30922300          sts _lfib+1,R3
 1BA8 20922200          sts _lfib,R2
 1BAC 50922500          sts _lfib+2+1,R5
 1BB0 40922400          sts _lfib+2,R4
 1BB4                   .dbline 1179
 1BB4           ;                                               myFIB.f=(unsigned long)lfib; 
 1BB4 8101              movw R16,R2
 1BB6 9201              movw R18,R4
 1BB8 0E940000          xcall ulong2fp
 1BBC 10934902          sts _myFIB+1,R17
 1BC0 00934802          sts _myFIB,R16
 1BC4 30934B02          sts _myFIB+2+1,R19
 1BC8 20934A02          sts _myFIB+2,R18
 1BCC                   .dbline 1181
 1BCC           ; 
 1BCC           ;                                               T_dat=myFIB.i[1];
 1BCC 20904A02          lds R2,_myFIB+2
 1BD0 30904B02          lds R3,_myFIB+2+1
 1BD4 3092E201          sts _T_dat+1,R3
 1BD8 2092E101          sts _T_dat,R2
 1BDC                   .dbline 1182
 1BDC           ;                                               SendManchester();//流量-相位1
 1BDC 0E945018          xcall _SendManchester
 1BE0                   .dbline 1183
 1BE0           ;                                               crc16array[4]=(unsigned char)(T_dat);
 1BE0 2090E101          lds R2,_T_dat
 1BE4 3090E201          lds R3,_T_dat+1
 1BE8 20920400          sts _crc16array+4,R2
 1BEC                   .dbline 1184
 1BEC           ;                                               crc16array[5]=(unsigned char)(T_dat>>8);
 1BEC 232C              mov R2,R3
 1BEE 3324              clr R3
 1BF0 27FC              sbrc R2,7
 1BF2 3094              com R3
 1BF4 20920500          sts _crc16array+5,R2
 1BF8                   .dbline 1187
 1BF8           ; 
 1BF8           ; 
 1BF8           ;                                               Delay_ms(30);   
 1BF8 0EE1              ldi R16,30
 1BFA 10E0              ldi R17,0
 1BFC 0E948305          xcall _Delay_ms
 1C00                   .dbline 1188
 1C00           ;                                               T_dat=myFIB.i[0];
 1C00 20904802          lds R2,_myFIB
 1C04 30904902          lds R3,_myFIB+1
 1C08 3092E201          sts _T_dat+1,R3
 1C0C 2092E101          sts _T_dat,R2
 1C10                   .dbline 1189
 1C10           ;                                               SendManchester();//流量-相位2
 1C10 0E945018          xcall _SendManchester
 1C14                   .dbline 1190
 1C14           ;                                               crc16array[6]=(unsigned char)(T_dat);
 1C14 2090E101          lds R2,_T_dat
 1C18 3090E201          lds R3,_T_dat+1
 1C1C 20920600          sts _crc16array+6,R2
 1C20                   .dbline 1191
 1C20           ;                                               crc16array[7]=(unsigned char)(T_dat>>8);
 1C20 232C              mov R2,R3
 1C22 3324              clr R3
 1C24 27FC              sbrc R2,7
 1C26 3094              com R3
 1C28 20920700          sts _crc16array+7,R2
 1C2C                   .dbline 1193
 1C2C           ; 
 1C2C           ;                                               Delay_ms(30);   
 1C2C 0EE1              ldi R16,30
 1C2E 10E0              ldi R17,0
 1C30 0E948305          xcall _Delay_ms
 1C34                   .dbline 1194
 1C34           ;                                               crc16(crc16array,8);//0.75ms
 1C34 28E0              ldi R18,8
 1C36 30E0              ldi R19,0
 1C38 00E0              ldi R16,<_crc16array
 1C3A 10E0              ldi R17,>_crc16array
 1C3C 0E94981C          xcall _crc16
 1C40                   .dbline 1195
 1C40           ;                                               T_dat=crc16hi;
 1C40 20902100          lds R2,_crc16hi
 1C44 3324              clr R3
 1C46 3092E201          sts _T_dat+1,R3
 1C4A 2092E101          sts _T_dat,R2
 1C4E                   .dbline 1196
 1C4E           ;                                               T_dat<<=8;
 1C4E 2090E101          lds R2,_T_dat
 1C52 3090E201          lds R3,_T_dat+1
 1C56 322C              mov R3,R2
 1C58 2224              clr R2
 1C5A 3092E201          sts _T_dat+1,R3
 1C5E 2092E101          sts _T_dat,R2
 1C62                   .dbline 1197
 1C62           ;                                               T_dat|=crc16lo;   
 1C62 20902000          lds R2,_crc16lo
 1C66 3324              clr R3
 1C68 4090E101          lds R4,_T_dat
 1C6C 5090E201          lds R5,_T_dat+1
 1C70 4228              or R4,R2
 1C72 5328              or R5,R3
 1C74 5092E201          sts _T_dat+1,R5
 1C78 4092E101          sts _T_dat,R4
 1C7C                   .dbline 1198
 1C7C           ;                                               SendManchester();//上传CRC校验共2字节
 1C7C 0E945018          xcall _SendManchester
 1C80                   .dbline 1199
 1C80           ;                                               break;
 1C80 0C944318          xjmp L502
 1C84           L551:
 1C84                   .dbline 1203
 1C84           ;                                       
 1C84           ;                                       //收放电机 
 1C84           ;                                       case 0x60:  
 1C84           ;                                               if( !(((R_dat)==0x61)  || ((R_dat)==0x62) ) )//既不是正转，也不是反转，则立即返回且不响应上位机
 1C84 A090DF01          lds R10,_R_dat
 1C88 B090E001          lds R11,_R_dat+1
 1C8C C501              movw R24,R10
 1C8E 8136              cpi R24,97
 1C90 E0E0              ldi R30,0
 1C92 9E07              cpc R25,R30
 1C94 31F0              breq L552
 1C96           X179:
 1C96 8236              cpi R24,98
 1C98 E0E0              ldi R30,0
 1C9A 9E07              cpc R25,R30
 1C9C 11F0              breq L552
 1C9E           X180:
 1C9E                   .dbline 1204
 1C9E           ;                                                       break;
 1C9E 0C944318          xjmp L502
 1CA2           L552:
 1CA2                   .dbline 1206
 1CA2           ; 
 1CA2           ;                                           SendUart1(R_dat,200);//1600ms超时
 1CA2 28EC              ldi R18,200
 1CA4 30E0              ldi R19,0
 1CA6 0091DF01          lds R16,_R_dat
 1CAA 1091E001          lds R17,_R_dat+1
 1CAE 0E944202          xcall _SendUart1
 1CB2                   .dbline 1207
 1CB2           ;                                               T_dat=Uart1RxData[1];
 1CB2 2090F701          lds R2,_Uart1RxData+1
 1CB6 3324              clr R3
 1CB8 3092E201          sts _T_dat+1,R3
 1CBC 2092E101          sts _T_dat,R2
 1CC0                   .dbline 1208
 1CC0           ;                                               T_dat<<=8;
 1CC0 2090E101          lds R2,_T_dat
 1CC4 3090E201          lds R3,_T_dat+1
 1CC8 322C              mov R3,R2
 1CCA 2224              clr R2
 1CCC 3092E201          sts _T_dat+1,R3
 1CD0 2092E101          sts _T_dat,R2
 1CD4                   .dbline 1209
 1CD4           ;                                               T_dat|=Uart1RxData[0];//返回电机状态
 1CD4 2090F601          lds R2,_Uart1RxData
 1CD8 3324              clr R3
 1CDA 4090E101          lds R4,_T_dat
 1CDE 5090E201          lds R5,_T_dat+1
 1CE2 4228              or R4,R2
 1CE4 5328              or R5,R3
 1CE6 5092E201          sts _T_dat+1,R5
 1CEA 4092E101          sts _T_dat,R4
 1CEE                   .dbline 1210
 1CEE           ;                                               SendManchester();        
 1CEE 0E945018          xcall _SendManchester
 1CF2                   .dbline 1212
 1CF2           ; 
 1CF2           ;                                               break;
 1CF2 0C944318          xjmp L502
 1CF6           L555:
 1CF6                   .dbline 1215
 1CF6           ; 
 1CF6           ;                                       case 0x70://调节电机   
 1CF6           ;                                               if( ((R_dat)<0x71)  || ((R_dat)>0x7c)  )//既不是调大，也不是调小，也不微调大，也不是微调小，则立即返回且不响应上位机
 1CF6 A090DF01          lds R10,_R_dat
 1CFA B090E001          lds R11,_R_dat+1
 1CFE C501              movw R24,R10
 1D00 8137              cpi R24,113
 1D02 E0E0              ldi R30,0
 1D04 9E07              cpc R25,R30
 1D06 2CF0              brlt L558
 1D08           X181:
 1D08 8CE7              ldi R24,124
 1D0A 90E0              ldi R25,0
 1D0C 8A15              cp R24,R10
 1D0E 9B05              cpc R25,R11
 1D10 14F4              brge L556
 1D12           X182:
 1D12           L558:
 1D12                   .dbline 1216
 1D12           ;                                               break;
 1D12 0C944318          xjmp L502
 1D16           L556:
 1D16                   .dbline 1218
 1D16           ; 
 1D16           ;                                       SendUart1(R_dat,200);//1600ms超时
 1D16 28EC              ldi R18,200
 1D18 30E0              ldi R19,0
 1D1A 0091DF01          lds R16,_R_dat
 1D1E 1091E001          lds R17,_R_dat+1
 1D22 0E944202          xcall _SendUart1
 1D26                   .dbline 1219
 1D26           ;                                               T_dat=Uart1RxData[1];
 1D26 2090F701          lds R2,_Uart1RxData+1
 1D2A 3324              clr R3
 1D2C 3092E201          sts _T_dat+1,R3
 1D30 2092E101          sts _T_dat,R2
 1D34                   .dbline 1220
 1D34           ;                                               T_dat<<=8;
 1D34 2090E101          lds R2,_T_dat
 1D38 3090E201          lds R3,_T_dat+1
 1D3C 322C              mov R3,R2
 1D3E 2224              clr R2
 1D40 3092E201          sts _T_dat+1,R3
 1D44 2092E101          sts _T_dat,R2
 1D48                   .dbline 1221
 1D48           ;                                               T_dat|=Uart1RxData[0];
 1D48 2090F601          lds R2,_Uart1RxData
 1D4C 3324              clr R3
 1D4E 4090E101          lds R4,_T_dat
 1D52 5090E201          lds R5,_T_dat+1
 1D56 4228              or R4,R2
 1D58 5328              or R5,R3
 1D5A 5092E201          sts _T_dat+1,R5
 1D5E 4092E101          sts _T_dat,R4
 1D62                   .dbline 1222
 1D62           ;                                               SendManchester();        
 1D62 0E945018          xcall _SendManchester
 1D66                   .dbline 1223
 1D66           ;                                               break;
 1D66 0C944318          xjmp L502
 1D6A           L560:
 1D6A                   .dbline 1226
 1D6A           ; 
 1D6A           ;                                       case 0x80://电机相关
 1D6A           ;                                               if(R_dat==0x80)//只开电机电源，不开电机
 1D6A 8091DF01          lds R24,_R_dat
 1D6E 9091E001          lds R25,_R_dat+1
 1D72 8038              cpi R24,128
 1D74 E0E0              ldi R30,0
 1D76 9E07              cpc R25,R30
 1D78 81F4              brne L561
 1D7A           X183:
 1D7A                   .dbline 1227
 1D7A           ;                                               {                 
 1D7A                   .dbline 1228
 1D7A           ;                                                       SendUart1(0x80,4);//32ms超时
 1D7A 24E0              ldi R18,4
 1D7C 30E0              ldi R19,0
 1D7E 00E8              ldi R16,128
 1D80 0E944202          xcall _SendUart1
 1D84                   .dbline 1229
 1D84           ;                                                   T_dat=Uart1RxData[0];
 1D84 2090F601          lds R2,_Uart1RxData
 1D88 3324              clr R3
 1D8A 3092E201          sts _T_dat+1,R3
 1D8E 2092E101          sts _T_dat,R2
 1D92                   .dbline 1230
 1D92           ;                                                       SendManchester();
 1D92 0E945018          xcall _SendManchester
 1D96                   .dbline 1231
 1D96           ;                                               }         
 1D96 0C944318          xjmp L502
 1D9A           L561:
 1D9A                   .dbline 1232
 1D9A           ;                                               else if(R_dat==0x81)//获取电机状态      
 1D9A 8091DF01          lds R24,_R_dat
 1D9E 9091E001          lds R25,_R_dat+1
 1DA2 8138              cpi R24,129
 1DA4 E0E0              ldi R30,0
 1DA6 9E07              cpc R25,R30
 1DA8 09F0              breq X264
 1DAA 4BC0              xjmp L563
 1DAC           X264:
 1DAC           X184:
 1DAC                   .dbline 1233
 1DAC           ;                                               { 
 1DAC                   .dbline 1234
 1DAC           ;                                                   SendUart1(0x81,4);//32ms超时
 1DAC 24E0              ldi R18,4
 1DAE 30E0              ldi R19,0
 1DB0 01E8              ldi R16,129
 1DB2 0E944202          xcall _SendUart1
 1DB6                   .dbline 1237
 1DB6           ;                                               
 1DB6           ;                                                       //先处理收放电机
 1DB6           ;                                                       T_dat=Uart1RxData[1];
 1DB6 2090F701          lds R2,_Uart1RxData+1
 1DBA 3324              clr R3
 1DBC 3092E201          sts _T_dat+1,R3
 1DC0 2092E101          sts _T_dat,R2
 1DC4                   .dbline 1238
 1DC4           ;                                                   T_dat<<=8;
 1DC4 2090E101          lds R2,_T_dat
 1DC8 3090E201          lds R3,_T_dat+1
 1DCC 322C              mov R3,R2
 1DCE 2224              clr R2
 1DD0 3092E201          sts _T_dat+1,R3
 1DD4 2092E101          sts _T_dat,R2
 1DD8                   .dbline 1239
 1DD8           ;                                                   T_dat|=Uart1RxData[0];
 1DD8 2090F601          lds R2,_Uart1RxData
 1DDC 3324              clr R3
 1DDE 4090E101          lds R4,_T_dat
 1DE2 5090E201          lds R5,_T_dat+1
 1DE6 4228              or R4,R2
 1DE8 5328              or R5,R3
 1DEA 5092E201          sts _T_dat+1,R5
 1DEE 4092E101          sts _T_dat,R4
 1DF2                   .dbline 1240
 1DF2           ;                                                       SendManchester();
 1DF2 0E945018          xcall _SendManchester
 1DF6                   .dbline 1243
 1DF6           ; 
 1DF6           ;                                                       //再处理调节电机 
 1DF6           ;                                                       Delay_ms(30);//延迟10ms  
 1DF6 0EE1              ldi R16,30
 1DF8 10E0              ldi R17,0
 1DFA 0E948305          xcall _Delay_ms
 1DFE                   .dbline 1244
 1DFE           ;                                                       T_dat=Uart1RxData[3];
 1DFE 2090F901          lds R2,_Uart1RxData+3
 1E02 3324              clr R3
 1E04 3092E201          sts _T_dat+1,R3
 1E08 2092E101          sts _T_dat,R2
 1E0C                   .dbline 1245
 1E0C           ;                                                   T_dat<<=8;
 1E0C 2090E101          lds R2,_T_dat
 1E10 3090E201          lds R3,_T_dat+1
 1E14 322C              mov R3,R2
 1E16 2224              clr R2
 1E18 3092E201          sts _T_dat+1,R3
 1E1C 2092E101          sts _T_dat,R2
 1E20                   .dbline 1246
 1E20           ;                                                   T_dat|=Uart1RxData[2];
 1E20 2090F801          lds R2,_Uart1RxData+2
 1E24 3324              clr R3
 1E26 4090E101          lds R4,_T_dat
 1E2A 5090E201          lds R5,_T_dat+1
 1E2E 4228              or R4,R2
 1E30 5328              or R5,R3
 1E32 5092E201          sts _T_dat+1,R5
 1E36 4092E101          sts _T_dat,R4
 1E3A                   .dbline 1247
 1E3A           ;                                                       SendManchester();
 1E3A 0E945018          xcall _SendManchester
 1E3E                   .dbline 1248
 1E3E           ;                                               }         
 1E3E 0C944318          xjmp L502
 1E42           L563:
 1E42                   .dbline 1249
 1E42           ;                                               else if(R_dat==0x82)//电机停止，同时停止二个电机
 1E42 8091DF01          lds R24,_R_dat
 1E46 9091E001          lds R25,_R_dat+1
 1E4A 8238              cpi R24,130
 1E4C E0E0              ldi R30,0
 1E4E 9E07              cpc R25,R30
 1E50 81F4              brne L568
 1E52           X185:
 1E52                   .dbline 1250
 1E52           ;                                               {        
 1E52                   .dbline 1251
 1E52           ;                                                       SendUart1(0x82,30);//240ms超时
 1E52 2EE1              ldi R18,30
 1E54 30E0              ldi R19,0
 1E56 02E8              ldi R16,130
 1E58 0E944202          xcall _SendUart1
 1E5C                   .dbline 1252
 1E5C           ;                                                   T_dat=Uart1RxData[0];
 1E5C 2090F601          lds R2,_Uart1RxData
 1E60 3324              clr R3
 1E62 3092E201          sts _T_dat+1,R3
 1E66 2092E101          sts _T_dat,R2
 1E6A                   .dbline 1253
 1E6A           ;                                                       SendManchester(); 
 1E6A 0E945018          xcall _SendManchester
 1E6E                   .dbline 1254
 1E6E           ;                                               }
 1E6E 0C944318          xjmp L502
 1E72           L568:
 1E72                   .dbline 1255
 1E72           ;                                               else if(R_dat==0x83)//读取电机堵转电流档位和断路档位
 1E72 8091DF01          lds R24,_R_dat
 1E76 9091E001          lds R25,_R_dat+1
 1E7A 8338              cpi R24,131
 1E7C E0E0              ldi R30,0
 1E7E 9E07              cpc R25,R30
 1E80 39F5              brne L570
 1E82           X186:
 1E82                   .dbline 1256
 1E82           ;                                               {
 1E82                   .dbline 1257
 1E82           ;                                                       SendUart1(0x83,4);//32ms超时
 1E82 24E0              ldi R18,4
 1E84 30E0              ldi R19,0
 1E86 03E8              ldi R16,131
 1E88 0E944202          xcall _SendUart1
 1E8C                   .dbline 1258
 1E8C           ;                                                       T_dat=Uart1RxData[1];
 1E8C 2090F701          lds R2,_Uart1RxData+1
 1E90 3324              clr R3
 1E92 3092E201          sts _T_dat+1,R3
 1E96 2092E101          sts _T_dat,R2
 1E9A                   .dbline 1259
 1E9A           ;                                                   T_dat<<=8;
 1E9A 2090E101          lds R2,_T_dat
 1E9E 3090E201          lds R3,_T_dat+1
 1EA2 322C              mov R3,R2
 1EA4 2224              clr R2
 1EA6 3092E201          sts _T_dat+1,R3
 1EAA 2092E101          sts _T_dat,R2
 1EAE                   .dbline 1260
 1EAE           ;                                                   T_dat|=Uart1RxData[0];
 1EAE 2090F601          lds R2,_Uart1RxData
 1EB2 3324              clr R3
 1EB4 4090E101          lds R4,_T_dat
 1EB8 5090E201          lds R5,_T_dat+1
 1EBC 4228              or R4,R2
 1EBE 5328              or R5,R3
 1EC0 5092E201          sts _T_dat+1,R5
 1EC4 4092E101          sts _T_dat,R4
 1EC8                   .dbline 1261
 1EC8           ;                                                       SendManchester();
 1EC8 0E945018          xcall _SendManchester
 1ECC                   .dbline 1262
 1ECC           ;                                               }       
 1ECC 0C944318          xjmp L502
 1ED0           L570:
 1ED0                   .dbline 1263
 1ED0           ;                                               else if(R_dat>0x83)//还剩12档，用于设置电机堵转电流, 收放电机和调节电机各6档
 1ED0 83E8              ldi R24,131
 1ED2 90E0              ldi R25,0
 1ED4 2090DF01          lds R2,_R_dat
 1ED8 3090E001          lds R3,_R_dat+1
 1EDC 8215              cp R24,R2
 1EDE 9305              cpc R25,R3
 1EE0 14F0              brlt X265
 1EE2 0C944318          xjmp L502
 1EE6           X265:
 1EE6           X187:
 1EE6                   .dbline 1264
 1EE6           ;                                               {
 1EE6                   .dbline 1265
 1EE6           ;                                                       SendUart1(R_dat,4);//32ms超时
 1EE6 24E0              ldi R18,4
 1EE8 30E0              ldi R19,0
 1EEA 8101              movw R16,R2
 1EEC 0E944202          xcall _SendUart1
 1EF0                   .dbline 1266
 1EF0           ;                                                   T_dat=Uart1RxData[0];
 1EF0 2090F601          lds R2,_Uart1RxData
 1EF4 3324              clr R3
 1EF6 3092E201          sts _T_dat+1,R3
 1EFA 2092E101          sts _T_dat,R2
 1EFE                   .dbline 1267
 1EFE           ;                                                       SendManchester();
 1EFE 0E945018          xcall _SendManchester
 1F02                   .dbline 1268
 1F02           ;                                               }         
 1F02                   .dbline 1269
 1F02           ;                                               break;
 1F02 0C944318          xjmp L502
 1F06           L575:
 1F06                   .dbline 1274
 1F06           ; 
 1F06           ; 
 1F06           ; 
 1F06           ;                                       case 0x90: //标定数据
 1F06           ;                                               if(R_dat==0x90)//提取测试信息
 1F06 8091DF01          lds R24,_R_dat
 1F0A 9091E001          lds R25,_R_dat+1
 1F0E 8039              cpi R24,144
 1F10 E0E0              ldi R30,0
 1F12 9E07              cpc R25,R30
 1F14 09F0              breq X266
 1F16 13C1              xjmp L576
 1F18           X266:
 1F18           X188:
 1F18                   .dbline 1275
 1F18           ;                                               {
 1F18                   .dbline 1276
 1F18           ;                                                       Uart0TxData[0]=0xE8;
 1F18 88EE              ldi R24,232
 1F1A 80932F00          sts _Uart0TxData,R24
 1F1E                   .dbline 1277
 1F1E           ;                                                       Uart0TxData[1]=0x40;
 1F1E 80E4              ldi R24,64
 1F20 80933000          sts _Uart0TxData+1,R24
 1F24                   .dbline 1278
 1F24           ;                                                       Uart0TxData[2]=0xc8;
 1F24 88EC              ldi R24,200
 1F26 80933100          sts _Uart0TxData+2,R24
 1F2A                   .dbline 1279
 1F2A           ;                                                       Uart0TxData[3]=0;//测试信息包0
 1F2A 2224              clr R2
 1F2C 20923200          sts _Uart0TxData+3,R2
 1F30                   .dbline 1280
 1F30           ;                                                       SendUart0_2(9,4);// 超时32ms     
 1F30 24E0              ldi R18,4
 1F32 30E0              ldi R19,0
 1F34 09E0              ldi R16,9
 1F36 0E947A04          xcall _SendUart0_2
 1F3A                   .dbline 1281
 1F3A           ;                                                       for(i=0;i<32;i++)
 1F3A AA24              clr R10
 1F3C 2FC0              xjmp L584
 1F3E           L581:
 1F3E                   .dbline 1282
 1F3E           ;                                                       {
 1F3E                   .dbline 1283
 1F3E           ;                                                               Delay_ms(20);
 1F3E 04E1              ldi R16,20
 1F40 10E0              ldi R17,0
 1F42 0E948305          xcall _Delay_ms
 1F46                   .dbline 1284
 1F46           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 1F46 80E0              ldi R24,<_Uart0RxData+1
 1F48 90E0              ldi R25,>_Uart0RxData+1
 1F4A EA2D              mov R30,R10
 1F4C FF27              clr R31
 1F4E EE0F              lsl R30
 1F50 FF1F              rol R31
 1F52 E80F              add R30,R24
 1F54 F91F              adc R31,R25
 1F56 2080              ldd R2,z+0
 1F58 3324              clr R3
 1F5A 3092E201          sts _T_dat+1,R3
 1F5E 2092E101          sts _T_dat,R2
 1F62                   .dbline 1285
 1F62           ;                                                               T_dat<<=8;
 1F62 322C              mov R3,R2
 1F64 2224              clr R2
 1F66 3092E201          sts _T_dat+1,R3
 1F6A 2092E101          sts _T_dat,R2
 1F6E                   .dbline 1286
 1F6E           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 1F6E 80E0              ldi R24,<_Uart0RxData
 1F70 90E0              ldi R25,>_Uart0RxData
 1F72 EA2D              mov R30,R10
 1F74 FF27              clr R31
 1F76 EE0F              lsl R30
 1F78 FF1F              rol R31
 1F7A E80F              add R30,R24
 1F7C F91F              adc R31,R25
 1F7E 2080              ldd R2,z+0
 1F80 3324              clr R3
 1F82 4090E101          lds R4,_T_dat
 1F86 5090E201          lds R5,_T_dat+1
 1F8A 4228              or R4,R2
 1F8C 5328              or R5,R3
 1F8E 5092E201          sts _T_dat+1,R5
 1F92 4092E101          sts _T_dat,R4
 1F96                   .dbline 1287
 1F96           ;                                                               SendManchester();                
 1F96 0E945018          xcall _SendManchester
 1F9A                   .dbline 1288
 1F9A           ;                                                       }               
 1F9A           L582:
 1F9A                   .dbline 1281
 1F9A A394              inc R10
 1F9C           L584:
 1F9C                   .dbline 1281
 1F9C 8A2D              mov R24,R10
 1F9E 8032              cpi R24,32
 1FA0 70F2              brlo L581
 1FA2           X189:
 1FA2                   .dbline 1290
 1FA2           ; 
 1FA2           ;                                                       Uart0TxData[0]=0xE8;
 1FA2 88EE              ldi R24,232
 1FA4 80932F00          sts _Uart0TxData,R24
 1FA8                   .dbline 1291
 1FA8           ;                                                       Uart0TxData[1]=0x40;
 1FA8 80E4              ldi R24,64
 1FAA 80933000          sts _Uart0TxData+1,R24
 1FAE                   .dbline 1292
 1FAE           ;                                                       Uart0TxData[2]=0xc8;
 1FAE 88EC              ldi R24,200
 1FB0 80933100          sts _Uart0TxData+2,R24
 1FB4                   .dbline 1293
 1FB4           ;                                                       Uart0TxData[3]=1;//测试信息包1
 1FB4 81E0              ldi R24,1
 1FB6 80933200          sts _Uart0TxData+3,R24
 1FBA                   .dbline 1294
 1FBA           ;                                                       SendUart0_2(9,4);// 超时32ms     
 1FBA 24E0              ldi R18,4
 1FBC 30E0              ldi R19,0
 1FBE 09E0              ldi R16,9
 1FC0 0E947A04          xcall _SendUart0_2
 1FC4                   .dbline 1295
 1FC4           ;                                                       for(i=0;i<32;i++)
 1FC4 AA24              clr R10
 1FC6 2FC0              xjmp L592
 1FC8           L589:
 1FC8                   .dbline 1296
 1FC8           ;                                                       {
 1FC8                   .dbline 1297
 1FC8           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 1FC8 80E0              ldi R24,<_Uart0RxData+1
 1FCA 90E0              ldi R25,>_Uart0RxData+1
 1FCC EA2D              mov R30,R10
 1FCE FF27              clr R31
 1FD0 EE0F              lsl R30
 1FD2 FF1F              rol R31
 1FD4 E80F              add R30,R24
 1FD6 F91F              adc R31,R25
 1FD8 2080              ldd R2,z+0
 1FDA 3324              clr R3
 1FDC 3092E201          sts _T_dat+1,R3
 1FE0 2092E101          sts _T_dat,R2
 1FE4                   .dbline 1298
 1FE4           ;                                                               T_dat<<=8;
 1FE4 322C              mov R3,R2
 1FE6 2224              clr R2
 1FE8 3092E201          sts _T_dat+1,R3
 1FEC 2092E101          sts _T_dat,R2
 1FF0                   .dbline 1299
 1FF0           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 1FF0 80E0              ldi R24,<_Uart0RxData
 1FF2 90E0              ldi R25,>_Uart0RxData
 1FF4 EA2D              mov R30,R10
 1FF6 FF27              clr R31
 1FF8 EE0F              lsl R30
 1FFA FF1F              rol R31
 1FFC E80F              add R30,R24
 1FFE F91F              adc R31,R25
 2000 2080              ldd R2,z+0
 2002 3324              clr R3
 2004 4090E101          lds R4,_T_dat
 2008 5090E201          lds R5,_T_dat+1
 200C 4228              or R4,R2
 200E 5328              or R5,R3
 2010 5092E201          sts _T_dat+1,R5
 2014 4092E101          sts _T_dat,R4
 2018                   .dbline 1300
 2018           ;                                                               SendManchester();
 2018 0E945018          xcall _SendManchester
 201C                   .dbline 1301
 201C           ;                                                               Delay_ms(20);
 201C 04E1              ldi R16,20
 201E 10E0              ldi R17,0
 2020 0E948305          xcall _Delay_ms
 2024                   .dbline 1302
 2024           ;                                                       }       
 2024           L590:
 2024                   .dbline 1295
 2024 A394              inc R10
 2026           L592:
 2026                   .dbline 1295
 2026 8A2D              mov R24,R10
 2028 8032              cpi R24,32
 202A 70F2              brlo L589
 202C           X190:
 202C                   .dbline 1304
 202C           ; 
 202C           ;                                                       Uart0TxData[0]=0xE8;
 202C 88EE              ldi R24,232
 202E 80932F00          sts _Uart0TxData,R24
 2032                   .dbline 1305
 2032           ;                                                       Uart0TxData[1]=0x40;
 2032 80E4              ldi R24,64
 2034 80933000          sts _Uart0TxData+1,R24
 2038                   .dbline 1306
 2038           ;                                                       Uart0TxData[2]=0xc8;
 2038 88EC              ldi R24,200
 203A 80933100          sts _Uart0TxData+2,R24
 203E                   .dbline 1307
 203E           ;                                                       Uart0TxData[3]=2;//测试信息包2
 203E 82E0              ldi R24,2
 2040 80933200          sts _Uart0TxData+3,R24
 2044                   .dbline 1308
 2044           ;                                                       SendUart0_2(9,4);// 超时32ms     
 2044 24E0              ldi R18,4
 2046 30E0              ldi R19,0
 2048 09E0              ldi R16,9
 204A 0E947A04          xcall _SendUart0_2
 204E                   .dbline 1309
 204E           ;                                                       for(i=0;i<32;i++)
 204E AA24              clr R10
 2050 2EC0              xjmp L600
 2052           L597:
 2052                   .dbline 1310
 2052           ;                                                       {
 2052                   .dbline 1311
 2052           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 2052 80E0              ldi R24,<_Uart0RxData+1
 2054 90E0              ldi R25,>_Uart0RxData+1
 2056 EA2D              mov R30,R10
 2058 FF27              clr R31
 205A EE0F              lsl R30
 205C FF1F              rol R31
 205E E80F              add R30,R24
 2060 F91F              adc R31,R25
 2062 2080              ldd R2,z+0
 2064 3324              clr R3
 2066 3092E201          sts _T_dat+1,R3
 206A 2092E101          sts _T_dat,R2
 206E                   .dbline 1312
 206E           ;                                                               T_dat<<=8;
 206E 322C              mov R3,R2
 2070 2224              clr R2
 2072 3092E201          sts _T_dat+1,R3
 2076 2092E101          sts _T_dat,R2
 207A                   .dbline 1313
 207A           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 207A 80E0              ldi R24,<_Uart0RxData
 207C 90E0              ldi R25,>_Uart0RxData
 207E EA2D              mov R30,R10
 2080 FF27              clr R31
 2082 EE0F              lsl R30
 2084 FF1F              rol R31
 2086 E80F              add R30,R24
 2088 F91F              adc R31,R25
 208A 2080              ldd R2,z+0
 208C 3324              clr R3
 208E 4090E101          lds R4,_T_dat
 2092 5090E201          lds R5,_T_dat+1
 2096 4228              or R4,R2
 2098 5328              or R5,R3
 209A 5092E201          sts _T_dat+1,R5
 209E 4092E101          sts _T_dat,R4
 20A2                   .dbline 1314
 20A2           ;                                                               SendManchester();
 20A2 FED7              xcall _SendManchester
 20A4                   .dbline 1315
 20A4           ;                                                               Delay_ms(20);
 20A4 04E1              ldi R16,20
 20A6 10E0              ldi R17,0
 20A8 0E948305          xcall _Delay_ms
 20AC                   .dbline 1316
 20AC           ;                                                       }               
 20AC           L598:
 20AC                   .dbline 1309
 20AC A394              inc R10
 20AE           L600:
 20AE                   .dbline 1309
 20AE 8A2D              mov R24,R10
 20B0 8032              cpi R24,32
 20B2 78F2              brlo L597
 20B4           X191:
 20B4                   .dbline 1318
 20B4           ; 
 20B4           ;                                                       Uart0TxData[0]=0xE8;
 20B4 88EE              ldi R24,232
 20B6 80932F00          sts _Uart0TxData,R24
 20BA                   .dbline 1319
 20BA           ;                                                       Uart0TxData[1]=0x40;
 20BA 80E4              ldi R24,64
 20BC 80933000          sts _Uart0TxData+1,R24
 20C0                   .dbline 1320
 20C0           ;                                                       Uart0TxData[2]=0xc8;
 20C0 88EC              ldi R24,200
 20C2 80933100          sts _Uart0TxData+2,R24
 20C6                   .dbline 1321
 20C6           ;                                                       Uart0TxData[3]=3;//测试信息包3
 20C6 83E0              ldi R24,3
 20C8 80933200          sts _Uart0TxData+3,R24
 20CC                   .dbline 1322
 20CC           ;                                                       SendUart0_2(9,4);// 超时32ms     
 20CC 24E0              ldi R18,4
 20CE 30E0              ldi R19,0
 20D0 09E0              ldi R16,9
 20D2 0E947A04          xcall _SendUart0_2
 20D6                   .dbline 1323
 20D6           ;                                                       for(i=0;i<32;i++)
 20D6 AA24              clr R10
 20D8 2EC0              xjmp L608
 20DA           L605:
 20DA                   .dbline 1324
 20DA           ;                                                       {
 20DA                   .dbline 1325
 20DA           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 20DA 80E0              ldi R24,<_Uart0RxData+1
 20DC 90E0              ldi R25,>_Uart0RxData+1
 20DE EA2D              mov R30,R10
 20E0 FF27              clr R31
 20E2 EE0F              lsl R30
 20E4 FF1F              rol R31
 20E6 E80F              add R30,R24
 20E8 F91F              adc R31,R25
 20EA 2080              ldd R2,z+0
 20EC 3324              clr R3
 20EE 3092E201          sts _T_dat+1,R3
 20F2 2092E101          sts _T_dat,R2
 20F6                   .dbline 1326
 20F6           ;                                                               T_dat<<=8;
 20F6 322C              mov R3,R2
 20F8 2224              clr R2
 20FA 3092E201          sts _T_dat+1,R3
 20FE 2092E101          sts _T_dat,R2
 2102                   .dbline 1327
 2102           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 2102 80E0              ldi R24,<_Uart0RxData
 2104 90E0              ldi R25,>_Uart0RxData
 2106 EA2D              mov R30,R10
 2108 FF27              clr R31
 210A EE0F              lsl R30
 210C FF1F              rol R31
 210E E80F              add R30,R24
 2110 F91F              adc R31,R25
 2112 2080              ldd R2,z+0
 2114 3324              clr R3
 2116 4090E101          lds R4,_T_dat
 211A 5090E201          lds R5,_T_dat+1
 211E 4228              or R4,R2
 2120 5328              or R5,R3
 2122 5092E201          sts _T_dat+1,R5
 2126 4092E101          sts _T_dat,R4
 212A                   .dbline 1328
 212A           ;                                                               SendManchester();
 212A BAD7              xcall _SendManchester
 212C                   .dbline 1329
 212C           ;                                                               Delay_ms(20);
 212C 04E1              ldi R16,20
 212E 10E0              ldi R17,0
 2130 0E948305          xcall _Delay_ms
 2134                   .dbline 1330
 2134           ;                                                       }                       
 2134           L606:
 2134                   .dbline 1323
 2134 A394              inc R10
 2136           L608:
 2136                   .dbline 1323
 2136 8A2D              mov R24,R10
 2138 8032              cpi R24,32
 213A 78F2              brlo L605
 213C           X192:
 213C                   .dbline 1331
 213C           ;                                               }
 213C A4C7              xjmp L502
 213E           L576:
 213E                   .dbline 1332
 213E           ;                                               else if(R_dat==0x91)//上传压力标定数据,20ms/帧  
 213E 8091DF01          lds R24,_R_dat
 2142 9091E001          lds R25,_R_dat+1
 2146 8139              cpi R24,145
 2148 E0E0              ldi R30,0
 214A 9E07              cpc R25,R30
 214C 21F5              brne L610
 214E           X193:
 214E                   .dbline 1333
 214E           ;                                               {
 214E                   .dbline 1335
 214E           ;                                                       //先获取总标定点数    
 214E           ;                                                       DataFlag=3;
 214E 83E0              ldi R24,3
 2150 90E0              ldi R25,0
 2152 9093C201          sts _DataFlag+1,R25
 2156 8093C101          sts _DataFlag,R24
 215A                   .dbline 1336
 215A           ;                                                       coeff_len=4;//上位机还需传4字节，分别为首块地址和包数
 215A 84E0              ldi R24,4
 215C 90932D00          sts _coeff_len+1,R25
 2160 80932C00          sts _coeff_len,R24
 2164                   .dbline 1337
 2164           ;                                                       coeff_count=0;
 2164 2224              clr R2
 2166 3324              clr R3
 2168 30922B00          sts _coeff_count+1,R3
 216C 20922A00          sts _coeff_count,R2
 2170                   .dbline 1338
 2170           ;                                                       TimeOutFlag=0;
 2170 2092D901          sts _TimeOutFlag,R2
 2174                   .dbline 1339
 2174           ;                                                       Timer0Counter=200;//1.6s定时
 2174 88EC              ldi R24,200
 2176 90934602          sts _Timer0Counter+1,R25
 217A 80934502          sts _Timer0Counter,R24
 217E                   .dbline 1340
 217E           ;                                                       TCNT0=0x06; //8ms
 217E 86E0              ldi R24,6
 2180 82BF              out 0x32,R24
 2182                   .dbline 1341
 2182           ;                                                       TCCR0|=0x06;//256分频
 2182 83B7              in R24,0x33
 2184 8660              ori R24,6
 2186 83BF              out 0x33,R24
 2188                   .dbline 1342
 2188           ;                                                       TIFR|=0x01; //清定时器0中断标志
 2188 86B7              in R24,0x36
 218A 8160              ori R24,1
 218C 86BF              out 0x36,R24
 218E                   .dbline 1343
 218E           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 218E 87B7              in R24,0x37
 2190 8160              ori R24,1
 2192 87BF              out 0x37,R24
 2194                   .dbline 1344
 2194           ;                                               }
 2194 78C7              xjmp L502
 2196           L610:
 2196                   .dbline 1345
 2196           ;                                               else if(R_dat==0x92)//清空标定数据,整机格式化  
 2196 8091DF01          lds R24,_R_dat
 219A 9091E001          lds R25,_R_dat+1
 219E 8239              cpi R24,146
 21A0 E0E0              ldi R30,0
 21A2 9E07              cpc R25,R30
 21A4 E1F5              brne L612
 21A6           X194:
 21A6                   .dbline 1346
 21A6           ;                                               {       
 21A6                   .dbline 1347
 21A6           ;                                                       Uart0TxData[0]=0xE8;
 21A6 88EE              ldi R24,232
 21A8 80932F00          sts _Uart0TxData,R24
 21AC                   .dbline 1348
 21AC           ;                                                       Uart0TxData[1]=0x40;
 21AC 80E4              ldi R24,64
 21AE 80933000          sts _Uart0TxData+1,R24
 21B2                   .dbline 1349
 21B2           ;                                                       Uart0TxData[2]=0x8c;
 21B2 8CE8              ldi R24,140
 21B4 80933100          sts _Uart0TxData+2,R24
 21B8                   .dbline 1350
 21B8           ;                                                       Uart0TxData[3]=8;
 21B8 88E0              ldi R24,8
 21BA 80933200          sts _Uart0TxData+3,R24
 21BE                   .dbline 1351
 21BE           ;                                                       Uart0TxData[4]=0;
 21BE 2224              clr R2
 21C0 20923300          sts _Uart0TxData+4,R2
 21C4                   .dbline 1352
 21C4           ;                                                       Uart0TxData[5]=0;
 21C4 20923400          sts _Uart0TxData+5,R2
 21C8                   .dbline 1353
 21C8           ;                                                       Uart0TxData[6]=0xff;
 21C8 8FEF              ldi R24,255
 21CA 80933500          sts _Uart0TxData+6,R24
 21CE                   .dbline 1354
 21CE           ;                                                       Uart0TxData[7]=0xff;
 21CE 80933600          sts _Uart0TxData+7,R24
 21D2                   .dbline 1355
 21D2           ;                                                       SendUart0_3(9,5000,9);// 最大超时40秒
 21D2 89E0              ldi R24,9
 21D4 8883              std y+0,R24
 21D6 28E8              ldi R18,5000
 21D8 33E1              ldi R19,19
 21DA 09E0              ldi R16,9
 21DC 0E94C404          xcall _SendUart0_3
 21E0                   .dbline 1356
 21E0           ;                                                       if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8c))
 21E0 8091FA01          lds R24,_Uart0RxCounter
 21E4 8930              cpi R24,9
 21E6 99F4              brne L621
 21E8           X195:
 21E8 8091FB01          lds R24,_Uart0RxData
 21EC 8535              cpi R24,85
 21EE 79F4              brne L621
 21F0           X196:
 21F0 8091FC01          lds R24,_Uart0RxData+1
 21F4 8034              cpi R24,64
 21F6 59F4              brne L621
 21F8           X197:
 21F8 8091FD01          lds R24,_Uart0RxData+2
 21FC 8C38              cpi R24,140
 21FE 39F4              brne L621
 2200           X198:
 2200                   .dbline 1357
 2200           ;                                                               {T_dat=0x0000;}
 2200                   .dbline 1357
 2200 2224              clr R2
 2202 3324              clr R3
 2204 3092E201          sts _T_dat+1,R3
 2208 2092E101          sts _T_dat,R2
 220C                   .dbline 1357
 220C 06C0              xjmp L622
 220E           L621:
 220E                   .dbline 1359
 220E           ;                                                       else
 220E           ;                                                               {T_dat=0xffff;}
 220E                   .dbline 1359
 220E 8FEF              ldi R24,65535
 2210 9FEF              ldi R25,255
 2212 9093E201          sts _T_dat+1,R25
 2216 8093E101          sts _T_dat,R24
 221A                   .dbline 1359
 221A           L622:
 221A                   .dbline 1360
 221A           ;                                                       SendManchester();        
 221A 42D7              xcall _SendManchester
 221C                   .dbline 1361
 221C           ;                                               }
 221C 34C7              xjmp L502
 221E           L612:
 221E                   .dbline 1362
 221E           ;                                               else if(R_dat==0x93)//上传全部系数，共256字节分128帧上传
 221E 8091DF01          lds R24,_R_dat
 2222 9091E001          lds R25,_R_dat+1
 2226 8339              cpi R24,147
 2228 E0E0              ldi R30,0
 222A 9E07              cpc R25,R30
 222C 09F0              breq X267
 222E 22C1              xjmp L625
 2230           X267:
 2230           X199:
 2230                   .dbline 1363
 2230           ;                                               {
 2230                   .dbline 1364
 2230           ;                                                       Uart0TxData[0]=0xE8;
 2230 88EE              ldi R24,232
 2232 80932F00          sts _Uart0TxData,R24
 2236                   .dbline 1365
 2236           ;                                                       Uart0TxData[1]=0x40;
 2236 80E4              ldi R24,64
 2238 80933000          sts _Uart0TxData+1,R24
 223C                   .dbline 1366
 223C           ;                                                       Uart0TxData[2]=0x87;
 223C 87E8              ldi R24,135
 223E 80933100          sts _Uart0TxData+2,R24
 2242                   .dbline 1367
 2242           ;                                                       Uart0TxData[3]=0;//系数包0
 2242 2224              clr R2
 2244 20923200          sts _Uart0TxData+3,R2
 2248                   .dbline 1368
 2248           ;                                                       SendUart0_2(9,4);// 超时32ms    
 2248 24E0              ldi R18,4
 224A 30E0              ldi R19,0
 224C 09E0              ldi R16,9
 224E 0E947A04          xcall _SendUart0_2
 2252                   .dbline 1369
 2252           ;                                                       if(Uart0RxCounter==64) 
 2252 8091FA01          lds R24,_Uart0RxCounter
 2256 8034              cpi R24,64
 2258 99F5              brne L630
 225A           X200:
 225A                   .dbline 1370
 225A           ;                                                       {
 225A                   .dbline 1371
 225A           ;                                                               for(i=0;i<32;i++)
 225A AA24              clr R10
 225C 2EC0              xjmp L635
 225E           L632:
 225E                   .dbline 1372
 225E           ;                                                               {
 225E                   .dbline 1373
 225E           ;                                                                       Delay_ms(20);
 225E 04E1              ldi R16,20
 2260 10E0              ldi R17,0
 2262 0E948305          xcall _Delay_ms
 2266                   .dbline 1374
 2266           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2266 80E0              ldi R24,<_Uart0RxData+1
 2268 90E0              ldi R25,>_Uart0RxData+1
 226A EA2D              mov R30,R10
 226C FF27              clr R31
 226E EE0F              lsl R30
 2270 FF1F              rol R31
 2272 E80F              add R30,R24
 2274 F91F              adc R31,R25
 2276 2080              ldd R2,z+0
 2278 3324              clr R3
 227A 3092E201          sts _T_dat+1,R3
 227E 2092E101          sts _T_dat,R2
 2282                   .dbline 1375
 2282           ;                                                                       T_dat<<=8;
 2282 322C              mov R3,R2
 2284 2224              clr R2
 2286 3092E201          sts _T_dat+1,R3
 228A 2092E101          sts _T_dat,R2
 228E                   .dbline 1376
 228E           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 228E 80E0              ldi R24,<_Uart0RxData
 2290 90E0              ldi R25,>_Uart0RxData
 2292 EA2D              mov R30,R10
 2294 FF27              clr R31
 2296 EE0F              lsl R30
 2298 FF1F              rol R31
 229A E80F              add R30,R24
 229C F91F              adc R31,R25
 229E 2080              ldd R2,z+0
 22A0 3324              clr R3
 22A2 4090E101          lds R4,_T_dat
 22A6 5090E201          lds R5,_T_dat+1
 22AA 4228              or R4,R2
 22AC 5328              or R5,R3
 22AE 5092E201          sts _T_dat+1,R5
 22B2 4092E101          sts _T_dat,R4
 22B6                   .dbline 1377
 22B6           ;                                                                       SendManchester();                
 22B6 F4D6              xcall _SendManchester
 22B8                   .dbline 1378
 22B8           ;                                                               }       
 22B8           L633:
 22B8                   .dbline 1371
 22B8 A394              inc R10
 22BA           L635:
 22BA                   .dbline 1371
 22BA 8A2D              mov R24,R10
 22BC 8032              cpi R24,32
 22BE 78F2              brlo L632
 22C0           X201:
 22C0                   .dbline 1379
 22C0           ;                                                       }       
 22C0           L630:
 22C0                   .dbline 1381
 22C0           ; 
 22C0           ;                                                       Uart0TxData[0]=0xE8;
 22C0 88EE              ldi R24,232
 22C2 80932F00          sts _Uart0TxData,R24
 22C6                   .dbline 1382
 22C6           ;                                                       Uart0TxData[1]=0x40;
 22C6 80E4              ldi R24,64
 22C8 80933000          sts _Uart0TxData+1,R24
 22CC                   .dbline 1383
 22CC           ;                                                       Uart0TxData[2]=0x87;
 22CC 87E8              ldi R24,135
 22CE 80933100          sts _Uart0TxData+2,R24
 22D2                   .dbline 1384
 22D2           ;                                                       Uart0TxData[3]=1;//系数包1
 22D2 81E0              ldi R24,1
 22D4 80933200          sts _Uart0TxData+3,R24
 22D8                   .dbline 1385
 22D8           ;                                                       SendUart0_2(9,4);// 超时32ms     
 22D8 24E0              ldi R18,4
 22DA 30E0              ldi R19,0
 22DC 09E0              ldi R16,9
 22DE 0E947A04          xcall _SendUart0_2
 22E2                   .dbline 1386
 22E2           ;                                                       if(Uart0RxCounter==64) 
 22E2 8091FA01          lds R24,_Uart0RxCounter
 22E6 8034              cpi R24,64
 22E8 99F5              brne L640
 22EA           X202:
 22EA                   .dbline 1387
 22EA           ;                                                       {
 22EA                   .dbline 1388
 22EA           ;                                                               for(i=0;i<32;i++)
 22EA AA24              clr R10
 22EC 2EC0              xjmp L645
 22EE           L642:
 22EE                   .dbline 1389
 22EE           ;                                                               {
 22EE                   .dbline 1390
 22EE           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 22EE 80E0              ldi R24,<_Uart0RxData+1
 22F0 90E0              ldi R25,>_Uart0RxData+1
 22F2 EA2D              mov R30,R10
 22F4 FF27              clr R31
 22F6 EE0F              lsl R30
 22F8 FF1F              rol R31
 22FA E80F              add R30,R24
 22FC F91F              adc R31,R25
 22FE 2080              ldd R2,z+0
 2300 3324              clr R3
 2302 3092E201          sts _T_dat+1,R3
 2306 2092E101          sts _T_dat,R2
 230A                   .dbline 1391
 230A           ;                                                                       T_dat<<=8;
 230A 322C              mov R3,R2
 230C 2224              clr R2
 230E 3092E201          sts _T_dat+1,R3
 2312 2092E101          sts _T_dat,R2
 2316                   .dbline 1392
 2316           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2316 80E0              ldi R24,<_Uart0RxData
 2318 90E0              ldi R25,>_Uart0RxData
 231A EA2D              mov R30,R10
 231C FF27              clr R31
 231E EE0F              lsl R30
 2320 FF1F              rol R31
 2322 E80F              add R30,R24
 2324 F91F              adc R31,R25
 2326 2080              ldd R2,z+0
 2328 3324              clr R3
 232A 4090E101          lds R4,_T_dat
 232E 5090E201          lds R5,_T_dat+1
 2332 4228              or R4,R2
 2334 5328              or R5,R3
 2336 5092E201          sts _T_dat+1,R5
 233A 4092E101          sts _T_dat,R4
 233E                   .dbline 1393
 233E           ;                                                                       SendManchester();
 233E B0D6              xcall _SendManchester
 2340                   .dbline 1394
 2340           ;                                                                       Delay_ms(20);
 2340 04E1              ldi R16,20
 2342 10E0              ldi R17,0
 2344 0E948305          xcall _Delay_ms
 2348                   .dbline 1395
 2348           ;                                                               }
 2348           L643:
 2348                   .dbline 1388
 2348 A394              inc R10
 234A           L645:
 234A                   .dbline 1388
 234A 8A2D              mov R24,R10
 234C 8032              cpi R24,32
 234E 78F2              brlo L642
 2350           X203:
 2350                   .dbline 1396
 2350           ;                                                       }               
 2350           L640:
 2350                   .dbline 1398
 2350           ; 
 2350           ;                                                       Uart0TxData[0]=0xE8;
 2350 88EE              ldi R24,232
 2352 80932F00          sts _Uart0TxData,R24
 2356                   .dbline 1399
 2356           ;                                                       Uart0TxData[1]=0x40;
 2356 80E4              ldi R24,64
 2358 80933000          sts _Uart0TxData+1,R24
 235C                   .dbline 1400
 235C           ;                                                       Uart0TxData[2]=0x87;
 235C 87E8              ldi R24,135
 235E 80933100          sts _Uart0TxData+2,R24
 2362                   .dbline 1401
 2362           ;                                                       Uart0TxData[3]=2;//系数包2
 2362 82E0              ldi R24,2
 2364 80933200          sts _Uart0TxData+3,R24
 2368                   .dbline 1402
 2368           ;                                                       SendUart0_2(9,4);// 超时32ms    
 2368 24E0              ldi R18,4
 236A 30E0              ldi R19,0
 236C 09E0              ldi R16,9
 236E 0E947A04          xcall _SendUart0_2
 2372                   .dbline 1403
 2372           ;                                                       if(Uart0RxCounter==64) 
 2372 8091FA01          lds R24,_Uart0RxCounter
 2376 8034              cpi R24,64
 2378 99F5              brne L650
 237A           X204:
 237A                   .dbline 1404
 237A           ;                                                       {
 237A                   .dbline 1405
 237A           ;                                                               for(i=0;i<32;i++)
 237A AA24              clr R10
 237C 2EC0              xjmp L655
 237E           L652:
 237E                   .dbline 1406
 237E           ;                                                               {
 237E                   .dbline 1407
 237E           ;                                                                       Delay_ms(20);
 237E 04E1              ldi R16,20
 2380 10E0              ldi R17,0
 2382 0E948305          xcall _Delay_ms
 2386                   .dbline 1408
 2386           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2386 80E0              ldi R24,<_Uart0RxData+1
 2388 90E0              ldi R25,>_Uart0RxData+1
 238A EA2D              mov R30,R10
 238C FF27              clr R31
 238E EE0F              lsl R30
 2390 FF1F              rol R31
 2392 E80F              add R30,R24
 2394 F91F              adc R31,R25
 2396 2080              ldd R2,z+0
 2398 3324              clr R3
 239A 3092E201          sts _T_dat+1,R3
 239E 2092E101          sts _T_dat,R2
 23A2                   .dbline 1409
 23A2           ;                                                                       T_dat<<=8;
 23A2 322C              mov R3,R2
 23A4 2224              clr R2
 23A6 3092E201          sts _T_dat+1,R3
 23AA 2092E101          sts _T_dat,R2
 23AE                   .dbline 1410
 23AE           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 23AE 80E0              ldi R24,<_Uart0RxData
 23B0 90E0              ldi R25,>_Uart0RxData
 23B2 EA2D              mov R30,R10
 23B4 FF27              clr R31
 23B6 EE0F              lsl R30
 23B8 FF1F              rol R31
 23BA E80F              add R30,R24
 23BC F91F              adc R31,R25
 23BE 2080              ldd R2,z+0
 23C0 3324              clr R3
 23C2 4090E101          lds R4,_T_dat
 23C6 5090E201          lds R5,_T_dat+1
 23CA 4228              or R4,R2
 23CC 5328              or R5,R3
 23CE 5092E201          sts _T_dat+1,R5
 23D2 4092E101          sts _T_dat,R4
 23D6                   .dbline 1411
 23D6           ;                                                                       SendManchester();                
 23D6 64D6              xcall _SendManchester
 23D8                   .dbline 1412
 23D8           ;                                                               }       
 23D8           L653:
 23D8                   .dbline 1405
 23D8 A394              inc R10
 23DA           L655:
 23DA                   .dbline 1405
 23DA 8A2D              mov R24,R10
 23DC 8032              cpi R24,32
 23DE 78F2              brlo L652
 23E0           X205:
 23E0                   .dbline 1413
 23E0           ;                                                       }       
 23E0           L650:
 23E0                   .dbline 1415
 23E0           ; 
 23E0           ;                                                       Uart0TxData[0]=0xE8;
 23E0 88EE              ldi R24,232
 23E2 80932F00          sts _Uart0TxData,R24
 23E6                   .dbline 1416
 23E6           ;                                                       Uart0TxData[1]=0x40;
 23E6 80E4              ldi R24,64
 23E8 80933000          sts _Uart0TxData+1,R24
 23EC                   .dbline 1417
 23EC           ;                                                       Uart0TxData[2]=0x87;
 23EC 87E8              ldi R24,135
 23EE 80933100          sts _Uart0TxData+2,R24
 23F2                   .dbline 1418
 23F2           ;                                                       Uart0TxData[3]=3;//系数包3
 23F2 83E0              ldi R24,3
 23F4 80933200          sts _Uart0TxData+3,R24
 23F8                   .dbline 1419
 23F8           ;                                                       SendUart0_2(9,4);// 超时32ms     
 23F8 24E0              ldi R18,4
 23FA 30E0              ldi R19,0
 23FC 09E0              ldi R16,9
 23FE 0E947A04          xcall _SendUart0_2
 2402                   .dbline 1420
 2402           ;                                                       if(Uart0RxCounter==64) 
 2402 8091FA01          lds R24,_Uart0RxCounter
 2406 8034              cpi R24,64
 2408 09F0              breq X268
 240A 3DC6              xjmp L502
 240C           X268:
 240C           X206:
 240C                   .dbline 1421
 240C           ;                                                       {
 240C                   .dbline 1422
 240C           ;                                                               for(i=0;i<32;i++)
 240C AA24              clr R10
 240E 2EC0              xjmp L665
 2410           L662:
 2410                   .dbline 1423
 2410           ;                                                               {
 2410                   .dbline 1424
 2410           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2410 80E0              ldi R24,<_Uart0RxData+1
 2412 90E0              ldi R25,>_Uart0RxData+1
 2414 EA2D              mov R30,R10
 2416 FF27              clr R31
 2418 EE0F              lsl R30
 241A FF1F              rol R31
 241C E80F              add R30,R24
 241E F91F              adc R31,R25
 2420 2080              ldd R2,z+0
 2422 3324              clr R3
 2424 3092E201          sts _T_dat+1,R3
 2428 2092E101          sts _T_dat,R2
 242C                   .dbline 1425
 242C           ;                                                                       T_dat<<=8;
 242C 322C              mov R3,R2
 242E 2224              clr R2
 2430 3092E201          sts _T_dat+1,R3
 2434 2092E101          sts _T_dat,R2
 2438                   .dbline 1426
 2438           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2438 80E0              ldi R24,<_Uart0RxData
 243A 90E0              ldi R25,>_Uart0RxData
 243C EA2D              mov R30,R10
 243E FF27              clr R31
 2440 EE0F              lsl R30
 2442 FF1F              rol R31
 2444 E80F              add R30,R24
 2446 F91F              adc R31,R25
 2448 2080              ldd R2,z+0
 244A 3324              clr R3
 244C 4090E101          lds R4,_T_dat
 2450 5090E201          lds R5,_T_dat+1
 2454 4228              or R4,R2
 2456 5328              or R5,R3
 2458 5092E201          sts _T_dat+1,R5
 245C 4092E101          sts _T_dat,R4
 2460                   .dbline 1427
 2460           ;                                                                       SendManchester();
 2460 1FD6              xcall _SendManchester
 2462                   .dbline 1428
 2462           ;                                                                       Delay_ms(20);
 2462 04E1              ldi R16,20
 2464 10E0              ldi R17,0
 2466 0E948305          xcall _Delay_ms
 246A                   .dbline 1429
 246A           ;                                                               }
 246A           L663:
 246A                   .dbline 1422
 246A A394              inc R10
 246C           L665:
 246C                   .dbline 1422
 246C 8A2D              mov R24,R10
 246E 8032              cpi R24,32
 2470 78F2              brlo L662
 2472           X207:
 2472                   .dbline 1430
 2472           ;                                                       }               
 2472                   .dbline 1431
 2472           ;                                               }
 2472 09C6              xjmp L502
 2474           L625:
 2474                   .dbline 1432
 2474           ;                                               else if(R_dat>=0x9a)//设置电机断路电流 
 2474 8091DF01          lds R24,_R_dat
 2478 9091E001          lds R25,_R_dat+1
 247C 8A39              cpi R24,154
 247E E0E0              ldi R30,0
 2480 9E07              cpc R25,R30
 2482 0CF4              brge X269
 2484 00C6              xjmp L502
 2486           X269:
 2486           X208:
 2486                   .dbline 1433
 2486           ;                                               {
 2486                   .dbline 1434
 2486           ;                                                       SendUart1(R_dat,4);//32ms超时
 2486 24E0              ldi R18,4
 2488 30E0              ldi R19,0
 248A 8C01              movw R16,R24
 248C 0E944202          xcall _SendUart1
 2490                   .dbline 1435
 2490           ;                                                   T_dat=Uart1RxData[0];
 2490 2090F601          lds R2,_Uart1RxData
 2494 3324              clr R3
 2496 3092E201          sts _T_dat+1,R3
 249A 2092E101          sts _T_dat,R2
 249E                   .dbline 1436
 249E           ;                                                       SendManchester();
 249E 00D6              xcall _SendManchester
 24A0                   .dbline 1437
 24A0           ;                                               }
 24A0                   .dbline 1439
 24A0           ;                                                
 24A0           ;                                               break;
 24A0 F2C5              xjmp L502
 24A2           L669:
 24A2                   .dbline 1442
 24A2           ; 
 24A2           ;                                       case 0xa0://压力标定系数
 24A2           ;                                               if(R_dat==0xa0)//下发全部标定系数，共128字节,20ms/帧，共2560ms   
 24A2 8091DF01          lds R24,_R_dat
 24A6 9091E001          lds R25,_R_dat+1
 24AA 803A              cpi R24,160
 24AC E0E0              ldi R30,0
 24AE 9E07              cpc R25,R30
 24B0 29F5              brne L670
 24B2           X209:
 24B2                   .dbline 1443
 24B2           ;                                                       { 
 24B2                   .dbline 1444
 24B2           ;                                                       DataFlag=1;
 24B2 81E0              ldi R24,1
 24B4 90E0              ldi R25,0
 24B6 9093C201          sts _DataFlag+1,R25
 24BA 8093C101          sts _DataFlag,R24
 24BE                   .dbline 1445
 24BE           ;                                                       coeff_len=128;
 24BE 80E8              ldi R24,128
 24C0 90932D00          sts _coeff_len+1,R25
 24C4 80932C00          sts _coeff_len,R24
 24C8                   .dbline 1446
 24C8           ;                                                       coeff_count=0;
 24C8 2224              clr R2
 24CA 3324              clr R3
 24CC 30922B00          sts _coeff_count+1,R3
 24D0 20922A00          sts _coeff_count,R2
 24D4                   .dbline 1447
 24D4           ;                                                       TimeOutFlag=0;
 24D4 2092D901          sts _TimeOutFlag,R2
 24D8                   .dbline 1448
 24D8           ;                                                       Timer0Counter=1000;//8s定时
 24D8 88EE              ldi R24,1000
 24DA 93E0              ldi R25,3
 24DC 90934602          sts _Timer0Counter+1,R25
 24E0 80934502          sts _Timer0Counter,R24
 24E4                   .dbline 1449
 24E4           ;                                                       TCNT0=0x06; //8ms
 24E4 86E0              ldi R24,6
 24E6 82BF              out 0x32,R24
 24E8                   .dbline 1450
 24E8           ;                                                       TCCR0|=0x06;//256分频
 24E8 83B7              in R24,0x33
 24EA 8660              ori R24,6
 24EC 83BF              out 0x33,R24
 24EE                   .dbline 1451
 24EE           ;                                                       TIFR|=0x01; //清定时器0中断标志
 24EE 86B7              in R24,0x36
 24F0 8160              ori R24,1
 24F2 86BF              out 0x36,R24
 24F4                   .dbline 1452
 24F4           ;                                                       TIMSK|=0x01;//使能定时器0中断                               
 24F4 87B7              in R24,0x37
 24F6 8160              ori R24,1
 24F8 87BF              out 0x37,R24
 24FA                   .dbline 1453
 24FA           ;                                               }
 24FA C5C5              xjmp L502
 24FC           L670:
 24FC                   .dbline 1454
 24FC           ;                                               else if(R_dat==0xa1)//上传标定系数,28ms/帧 ，共64帧128字节
 24FC 8091DF01          lds R24,_R_dat
 2500 9091E001          lds R25,_R_dat+1
 2504 813A              cpi R24,161
 2506 E0E0              ldi R30,0
 2508 9E07              cpc R25,R30
 250A 09F0              breq X270
 250C BCC5              xjmp L502
 250E           X270:
 250E           X210:
 250E                   .dbline 1455
 250E           ;                                               {    
 250E                   .dbline 1456
 250E           ;                                                       Uart0TxData[0]=0xE8;
 250E 88EE              ldi R24,232
 2510 80932F00          sts _Uart0TxData,R24
 2514                   .dbline 1457
 2514           ;                                                       Uart0TxData[1]=0x40;
 2514 80E4              ldi R24,64
 2516 80933000          sts _Uart0TxData+1,R24
 251A                   .dbline 1458
 251A           ;                                                       Uart0TxData[2]=0x87;
 251A 87E8              ldi R24,135
 251C 80933100          sts _Uart0TxData+2,R24
 2520                   .dbline 1459
 2520           ;                                                       Uart0TxData[3]=0;//系数包0
 2520 2224              clr R2
 2522 20923200          sts _Uart0TxData+3,R2
 2526                   .dbline 1460
 2526           ;                                                       SendUart0_2(9,5);// 超时40ms    
 2526 25E0              ldi R18,5
 2528 30E0              ldi R19,0
 252A 09E0              ldi R16,9
 252C 0E947A04          xcall _SendUart0_2
 2530                   .dbline 1461
 2530           ;                                                       if(Uart0RxCounter==64) 
 2530 8091FA01          lds R24,_Uart0RxCounter
 2534 8034              cpi R24,64
 2536 99F5              brne L677
 2538           X211:
 2538                   .dbline 1462
 2538           ;                                                       {
 2538                   .dbline 1463
 2538           ;                                                               for(i=0;i<32;i++)
 2538 AA24              clr R10
 253A 2EC0              xjmp L682
 253C           L679:
 253C                   .dbline 1464
 253C           ;                                                               {
 253C                   .dbline 1465
 253C           ;                                                                       Delay_ms(20);
 253C 04E1              ldi R16,20
 253E 10E0              ldi R17,0
 2540 0E948305          xcall _Delay_ms
 2544                   .dbline 1466
 2544           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2544 80E0              ldi R24,<_Uart0RxData+1
 2546 90E0              ldi R25,>_Uart0RxData+1
 2548 EA2D              mov R30,R10
 254A FF27              clr R31
 254C EE0F              lsl R30
 254E FF1F              rol R31
 2550 E80F              add R30,R24
 2552 F91F              adc R31,R25
 2554 2080              ldd R2,z+0
 2556 3324              clr R3
 2558 3092E201          sts _T_dat+1,R3
 255C 2092E101          sts _T_dat,R2
 2560                   .dbline 1467
 2560           ;                                                                       T_dat<<=8;
 2560 322C              mov R3,R2
 2562 2224              clr R2
 2564 3092E201          sts _T_dat+1,R3
 2568 2092E101          sts _T_dat,R2
 256C                   .dbline 1468
 256C           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 256C 80E0              ldi R24,<_Uart0RxData
 256E 90E0              ldi R25,>_Uart0RxData
 2570 EA2D              mov R30,R10
 2572 FF27              clr R31
 2574 EE0F              lsl R30
 2576 FF1F              rol R31
 2578 E80F              add R30,R24
 257A F91F              adc R31,R25
 257C 2080              ldd R2,z+0
 257E 3324              clr R3
 2580 4090E101          lds R4,_T_dat
 2584 5090E201          lds R5,_T_dat+1
 2588 4228              or R4,R2
 258A 5328              or R5,R3
 258C 5092E201          sts _T_dat+1,R5
 2590 4092E101          sts _T_dat,R4
 2594                   .dbline 1469
 2594           ;                                                                       SendManchester();                
 2594 85D5              xcall _SendManchester
 2596                   .dbline 1470
 2596           ;                                                               }       
 2596           L680:
 2596                   .dbline 1463
 2596 A394              inc R10
 2598           L682:
 2598                   .dbline 1463
 2598 8A2D              mov R24,R10
 259A 8032              cpi R24,32
 259C 78F2              brlo L679
 259E           X212:
 259E                   .dbline 1471
 259E           ;                                                       }       
 259E           L677:
 259E                   .dbline 1473
 259E           ; 
 259E           ;                                                       Uart0TxData[0]=0xE8;
 259E 88EE              ldi R24,232
 25A0 80932F00          sts _Uart0TxData,R24
 25A4                   .dbline 1474
 25A4           ;                                                       Uart0TxData[1]=0x40;
 25A4 80E4              ldi R24,64
 25A6 80933000          sts _Uart0TxData+1,R24
 25AA                   .dbline 1475
 25AA           ;                                                       Uart0TxData[2]=0x87;
 25AA 87E8              ldi R24,135
 25AC 80933100          sts _Uart0TxData+2,R24
 25B0                   .dbline 1476
 25B0           ;                                                       Uart0TxData[3]=1;//系数包1
 25B0 81E0              ldi R24,1
 25B2 80933200          sts _Uart0TxData+3,R24
 25B6                   .dbline 1477
 25B6           ;                                                       SendUart0_2(9,5);// 超时40ms             
 25B6 25E0              ldi R18,5
 25B8 30E0              ldi R19,0
 25BA 09E0              ldi R16,9
 25BC 0E947A04          xcall _SendUart0_2
 25C0                   .dbline 1478
 25C0           ;                                                       if(Uart0RxCounter==64) 
 25C0 8091FA01          lds R24,_Uart0RxCounter
 25C4 8034              cpi R24,64
 25C6 09F0              breq X271
 25C8 5EC5              xjmp L502
 25CA           X271:
 25CA           X213:
 25CA                   .dbline 1479
 25CA           ;                                                       {
 25CA                   .dbline 1480
 25CA           ;                                                               for(i=0;i<32;i++)
 25CA AA24              clr R10
 25CC 2EC0              xjmp L692
 25CE           L689:
 25CE                   .dbline 1481
 25CE           ;                                                               {
 25CE                   .dbline 1482
 25CE           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 25CE 80E0              ldi R24,<_Uart0RxData+1
 25D0 90E0              ldi R25,>_Uart0RxData+1
 25D2 EA2D              mov R30,R10
 25D4 FF27              clr R31
 25D6 EE0F              lsl R30
 25D8 FF1F              rol R31
 25DA E80F              add R30,R24
 25DC F91F              adc R31,R25
 25DE 2080              ldd R2,z+0
 25E0 3324              clr R3
 25E2 3092E201          sts _T_dat+1,R3
 25E6 2092E101          sts _T_dat,R2
 25EA                   .dbline 1483
 25EA           ;                                                                       T_dat<<=8;
 25EA 322C              mov R3,R2
 25EC 2224              clr R2
 25EE 3092E201          sts _T_dat+1,R3
 25F2 2092E101          sts _T_dat,R2
 25F6                   .dbline 1484
 25F6           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 25F6 80E0              ldi R24,<_Uart0RxData
 25F8 90E0              ldi R25,>_Uart0RxData
 25FA EA2D              mov R30,R10
 25FC FF27              clr R31
 25FE EE0F              lsl R30
 2600 FF1F              rol R31
 2602 E80F              add R30,R24
 2604 F91F              adc R31,R25
 2606 2080              ldd R2,z+0
 2608 3324              clr R3
 260A 4090E101          lds R4,_T_dat
 260E 5090E201          lds R5,_T_dat+1
 2612 4228              or R4,R2
 2614 5328              or R5,R3
 2616 5092E201          sts _T_dat+1,R5
 261A 4092E101          sts _T_dat,R4
 261E                   .dbline 1485
 261E           ;                                                                       SendManchester();
 261E 40D5              xcall _SendManchester
 2620                   .dbline 1486
 2620           ;                                                                       Delay_ms(20);
 2620 04E1              ldi R16,20
 2622 10E0              ldi R17,0
 2624 0E948305          xcall _Delay_ms
 2628                   .dbline 1487
 2628           ;                                                               }
 2628           L690:
 2628                   .dbline 1480
 2628 A394              inc R10
 262A           L692:
 262A                   .dbline 1480
 262A 8A2D              mov R24,R10
 262C 8032              cpi R24,32
 262E 78F2              brlo L689
 2630           X214:
 2630                   .dbline 1488
 2630           ;                                                       }               
 2630                   .dbline 1489
 2630           ;                                               }
 2630                   .dbline 1490
 2630           ;                                               break;
 2630 2AC5              xjmp L502
 2632           L694:
 2632                   .dbline 1494
 2632           ; 
 2632           ; 
 2632           ;                                       case 0xB0://流量相关
 2632           ;                                               if(R_dat==0xb0) //下发流量系数
 2632 8091DF01          lds R24,_R_dat
 2636 9091E001          lds R25,_R_dat+1
 263A 803B              cpi R24,176
 263C E0E0              ldi R30,0
 263E 9E07              cpc R25,R30
 2640 29F5              brne L695
 2642           X215:
 2642                   .dbline 1495
 2642           ;                                               {
 2642                   .dbline 1496
 2642           ;                                                       DataFlag=2;
 2642 82E0              ldi R24,2
 2644 90E0              ldi R25,0
 2646 9093C201          sts _DataFlag+1,R25
 264A 8093C101          sts _DataFlag,R24
 264E                   .dbline 1497
 264E           ;                                                       coeff_len=128;
 264E 80E8              ldi R24,128
 2650 90932D00          sts _coeff_len+1,R25
 2654 80932C00          sts _coeff_len,R24
 2658                   .dbline 1498
 2658           ;                                                       coeff_count=0;
 2658 2224              clr R2
 265A 3324              clr R3
 265C 30922B00          sts _coeff_count+1,R3
 2660 20922A00          sts _coeff_count,R2
 2664                   .dbline 1499
 2664           ;                                                       TimeOutFlag=0;
 2664 2092D901          sts _TimeOutFlag,R2
 2668                   .dbline 1500
 2668           ;                                                       Timer0Counter=1000;//8s定时
 2668 88EE              ldi R24,1000
 266A 93E0              ldi R25,3
 266C 90934602          sts _Timer0Counter+1,R25
 2670 80934502          sts _Timer0Counter,R24
 2674                   .dbline 1501
 2674           ;                                                       TCNT0=0x06; //8ms
 2674 86E0              ldi R24,6
 2676 82BF              out 0x32,R24
 2678                   .dbline 1502
 2678           ;                                                       TCCR0|=0x06;//256分频
 2678 83B7              in R24,0x33
 267A 8660              ori R24,6
 267C 83BF              out 0x33,R24
 267E                   .dbline 1503
 267E           ;                                                       TIFR|=0x01; //清定时器0中断标志
 267E 86B7              in R24,0x36
 2680 8160              ori R24,1
 2682 86BF              out 0x36,R24
 2684                   .dbline 1504
 2684           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 2684 87B7              in R24,0x37
 2686 8160              ori R24,1
 2688 87BF              out 0x37,R24
 268A                   .dbline 1505
 268A           ;                                               }
 268A FDC4              xjmp L502
 268C           L695:
 268C                   .dbline 1506
 268C           ;                                               else  if(R_dat==0xb1)//上提流量系数
 268C 8091DF01          lds R24,_R_dat
 2690 9091E001          lds R25,_R_dat+1
 2694 813B              cpi R24,177
 2696 E0E0              ldi R30,0
 2698 9E07              cpc R25,R30
 269A 09F0              breq X272
 269C F4C4              xjmp L502
 269E           X272:
 269E           X216:
 269E                   .dbline 1507
 269E           ;                                               {
 269E                   .dbline 1508
 269E           ;                                                       Uart0TxData[0]=0xE8;
 269E 88EE              ldi R24,232
 26A0 80932F00          sts _Uart0TxData,R24
 26A4                   .dbline 1509
 26A4           ;                                                       Uart0TxData[1]=0x40;
 26A4 80E4              ldi R24,64
 26A6 80933000          sts _Uart0TxData+1,R24
 26AA                   .dbline 1510
 26AA           ;                                                       Uart0TxData[2]=0x87;
 26AA 87E8              ldi R24,135
 26AC 80933100          sts _Uart0TxData+2,R24
 26B0                   .dbline 1511
 26B0           ;                                                       Uart0TxData[3]=2;//系数包2
 26B0 82E0              ldi R24,2
 26B2 80933200          sts _Uart0TxData+3,R24
 26B6                   .dbline 1512
 26B6           ;                                                       SendUart0_2(9,5);// 超时40ms    
 26B6 25E0              ldi R18,5
 26B8 30E0              ldi R19,0
 26BA 09E0              ldi R16,9
 26BC 0E947A04          xcall _SendUart0_2
 26C0                   .dbline 1513
 26C0           ;                                                       if(Uart0RxCounter==64) 
 26C0 8091FA01          lds R24,_Uart0RxCounter
 26C4 8034              cpi R24,64
 26C6 99F5              brne L702
 26C8           X217:
 26C8                   .dbline 1514
 26C8           ;                                                       {
 26C8                   .dbline 1515
 26C8           ;                                                               for(i=0;i<32;i++)
 26C8 AA24              clr R10
 26CA 2EC0              xjmp L707
 26CC           L704:
 26CC                   .dbline 1516
 26CC           ;                                                               {
 26CC                   .dbline 1517
 26CC           ;                                                                       Delay_ms(20);
 26CC 04E1              ldi R16,20
 26CE 10E0              ldi R17,0
 26D0 0E948305          xcall _Delay_ms
 26D4                   .dbline 1518
 26D4           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 26D4 80E0              ldi R24,<_Uart0RxData+1
 26D6 90E0              ldi R25,>_Uart0RxData+1
 26D8 EA2D              mov R30,R10
 26DA FF27              clr R31
 26DC EE0F              lsl R30
 26DE FF1F              rol R31
 26E0 E80F              add R30,R24
 26E2 F91F              adc R31,R25
 26E4 2080              ldd R2,z+0
 26E6 3324              clr R3
 26E8 3092E201          sts _T_dat+1,R3
 26EC 2092E101          sts _T_dat,R2
 26F0                   .dbline 1519
 26F0           ;                                                                       T_dat<<=8;
 26F0 322C              mov R3,R2
 26F2 2224              clr R2
 26F4 3092E201          sts _T_dat+1,R3
 26F8 2092E101          sts _T_dat,R2
 26FC                   .dbline 1520
 26FC           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 26FC 80E0              ldi R24,<_Uart0RxData
 26FE 90E0              ldi R25,>_Uart0RxData
 2700 EA2D              mov R30,R10
 2702 FF27              clr R31
 2704 EE0F              lsl R30
 2706 FF1F              rol R31
 2708 E80F              add R30,R24
 270A F91F              adc R31,R25
 270C 2080              ldd R2,z+0
 270E 3324              clr R3
 2710 4090E101          lds R4,_T_dat
 2714 5090E201          lds R5,_T_dat+1
 2718 4228              or R4,R2
 271A 5328              or R5,R3
 271C 5092E201          sts _T_dat+1,R5
 2720 4092E101          sts _T_dat,R4
 2724                   .dbline 1521
 2724           ;                                                                       SendManchester();                
 2724 BDD4              xcall _SendManchester
 2726                   .dbline 1522
 2726           ;                                                               }       
 2726           L705:
 2726                   .dbline 1515
 2726 A394              inc R10
 2728           L707:
 2728                   .dbline 1515
 2728 8A2D              mov R24,R10
 272A 8032              cpi R24,32
 272C 78F2              brlo L704
 272E           X218:
 272E                   .dbline 1523
 272E           ;                                                       }       
 272E           L702:
 272E                   .dbline 1525
 272E           ; 
 272E           ;                                                       Uart0TxData[0]=0xE8;
 272E 88EE              ldi R24,232
 2730 80932F00          sts _Uart0TxData,R24
 2734                   .dbline 1526
 2734           ;                                                       Uart0TxData[1]=0x40;
 2734 80E4              ldi R24,64
 2736 80933000          sts _Uart0TxData+1,R24
 273A                   .dbline 1527
 273A           ;                                                       Uart0TxData[2]=0x87;
 273A 87E8              ldi R24,135
 273C 80933100          sts _Uart0TxData+2,R24
 2740                   .dbline 1528
 2740           ;                                                       Uart0TxData[3]=3;//系数包3
 2740 83E0              ldi R24,3
 2742 80933200          sts _Uart0TxData+3,R24
 2746                   .dbline 1529
 2746           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2746 25E0              ldi R18,5
 2748 30E0              ldi R19,0
 274A 09E0              ldi R16,9
 274C 0E947A04          xcall _SendUart0_2
 2750                   .dbline 1530
 2750           ;                                                       if(Uart0RxCounter==64) 
 2750 8091FA01          lds R24,_Uart0RxCounter
 2754 8034              cpi R24,64
 2756 09F0              breq X273
 2758 96C4              xjmp L502
 275A           X273:
 275A           X219:
 275A                   .dbline 1531
 275A           ;                                                       {
 275A                   .dbline 1532
 275A           ;                                                               for(i=0;i<32;i++)
 275A AA24              clr R10
 275C 2EC0              xjmp L717
 275E           L714:
 275E                   .dbline 1533
 275E           ;                                                               {
 275E                   .dbline 1534
 275E           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 275E 80E0              ldi R24,<_Uart0RxData+1
 2760 90E0              ldi R25,>_Uart0RxData+1
 2762 EA2D              mov R30,R10
 2764 FF27              clr R31
 2766 EE0F              lsl R30
 2768 FF1F              rol R31
 276A E80F              add R30,R24
 276C F91F              adc R31,R25
 276E 2080              ldd R2,z+0
 2770 3324              clr R3
 2772 3092E201          sts _T_dat+1,R3
 2776 2092E101          sts _T_dat,R2
 277A                   .dbline 1535
 277A           ;                                                                       T_dat<<=8;
 277A 322C              mov R3,R2
 277C 2224              clr R2
 277E 3092E201          sts _T_dat+1,R3
 2782 2092E101          sts _T_dat,R2
 2786                   .dbline 1536
 2786           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2786 80E0              ldi R24,<_Uart0RxData
 2788 90E0              ldi R25,>_Uart0RxData
 278A EA2D              mov R30,R10
 278C FF27              clr R31
 278E EE0F              lsl R30
 2790 FF1F              rol R31
 2792 E80F              add R30,R24
 2794 F91F              adc R31,R25
 2796 2080              ldd R2,z+0
 2798 3324              clr R3
 279A 4090E101          lds R4,_T_dat
 279E 5090E201          lds R5,_T_dat+1
 27A2 4228              or R4,R2
 27A4 5328              or R5,R3
 27A6 5092E201          sts _T_dat+1,R5
 27AA 4092E101          sts _T_dat,R4
 27AE                   .dbline 1537
 27AE           ;                                                                       SendManchester();
 27AE 78D4              xcall _SendManchester
 27B0                   .dbline 1538
 27B0           ;                                                                       Delay_ms(20);
 27B0 04E1              ldi R16,20
 27B2 10E0              ldi R17,0
 27B4 0E948305          xcall _Delay_ms
 27B8                   .dbline 1539
 27B8           ;                                                               }
 27B8           L715:
 27B8                   .dbline 1532
 27B8 A394              inc R10
 27BA           L717:
 27BA                   .dbline 1532
 27BA 8A2D              mov R24,R10
 27BC 8032              cpi R24,32
 27BE 78F2              brlo L714
 27C0           X220:
 27C0                   .dbline 1540
 27C0           ;                                                       }               
 27C0                   .dbline 1541
 27C0           ;                                               }
 27C0                   .dbline 1567
 27C0           ;                                               /*   if(R_dat==0xb1)//读幅值
 27C0           ;                                               {
 27C0           ;                                               SendUart0(0xb0,5);//40ms定时
 27C0           ;                                               for(k=0;k<8;k+=2)
 27C0           ;                                               {
 27C0           ;                                               T_dat=Uart0RxData[k];
 27C0           ;                                               T_dat<<=8;
 27C0           ;                                               T_dat|=Uart0RxData[k+1];
 27C0           ;                                               SendManchester();
 27C0           ;                                               Delay_ms(40);
 27C0           ;                                               }
 27C0           ;                                               }
 27C0           ;                                               else  if((R_dat>0xb0) && (R_dat<0xb5) )//1800点提取,连续提取流量测试数据，4个通道分别提取，命令为0xB1-0xB4
 27C0           ;                                               {   
 27C0           ;                                               SendUart0(R_dat,125);//1s定时    
 27C0           ;                                               for(k=0;k<1800;k++)//共1800帧数据，全部提取
 27C0           ;                                               {
 27C0           ;                                               SendUart0(0xFF,1);//8ms定时        
 27C0           ;                                               T_dat=Uart0RxData[0];
 27C0           ;                                               T_dat<<=8;
 27C0           ;                                               T_dat|=Uart0RxData[1];
 27C0           ;                                               SendManchester();
 27C0           ;                                               Delay_ms(42);
 27C0           ;                                               }
 27C0           ;                                               } */  
 27C0           ;                                               break;
 27C0 62C4              xjmp L502
 27C2           L719:
 27C2                   .dbline 1570
 27C2           ; 
 27C2           ;                                       case 0xc0://所有参数全采，上传16字节共8帧
 27C2           ;                                               if( (R_dat==0xc0) || (R_dat==0xcf) )
 27C2 C090DF01          lds R12,_R_dat
 27C6 D090E001          lds R13,_R_dat+1
 27CA C601              movw R24,R12
 27CC 803C              cpi R24,192
 27CE E0E0              ldi R30,0
 27D0 9E07              cpc R25,R30
 27D2 29F0              breq L722
 27D4           X221:
 27D4 8F3C              cpi R24,207
 27D6 E0E0              ldi R30,0
 27D8 9E07              cpc R25,R30
 27DA 09F0              breq X274
 27DC 81C2              xjmp L720
 27DE           X274:
 27DE           X222:
 27DE           L722:
 27DE                   .dbline 1571
 27DE           ;                                               {
 27DE                   .dbline 1572
 27DE           ;                                                       Uart0TxData[0]=0xE8;
 27DE 88EE              ldi R24,232
 27E0 80932F00          sts _Uart0TxData,R24
 27E4                   .dbline 1573
 27E4           ;                                                       Uart0TxData[1]=0x40;
 27E4 80E4              ldi R24,64
 27E6 80933000          sts _Uart0TxData+1,R24
 27EA                   .dbline 1574
 27EA           ;                                                       Uart0TxData[2]=0x89;
 27EA 89E8              ldi R24,137
 27EC 80933100          sts _Uart0TxData+2,R24
 27F0                   .dbline 1575
 27F0           ;                                                       Uart0TxData[3]=9;
 27F0 89E0              ldi R24,9
 27F2 80933200          sts _Uart0TxData+3,R24
 27F6                   .dbline 1576
 27F6           ;                                                       SendUart0_2(9,50);//流量板直读检测，超时400ms
 27F6 22E3              ldi R18,50
 27F8 30E0              ldi R19,0
 27FA 09E0              ldi R16,9
 27FC 0E947A04          xcall _SendUart0_2
 2800                   .dbline 1578
 2800           ;                                                       //if(Uart0RxCounter==64)//成功接收到压力、温度、流量数据，先低字节后高字节
 2800           ;                                                       {
 2800                   .dbline 1579
 2800           ;                                                               T_dat=Uart0RxData[1];
 2800 2090FC01          lds R2,_Uart0RxData+1
 2804 3324              clr R3
 2806 3092E201          sts _T_dat+1,R3
 280A 2092E101          sts _T_dat,R2
 280E                   .dbline 1580
 280E           ;                                                               T_dat<<=8;
 280E 2090E101          lds R2,_T_dat
 2812 3090E201          lds R3,_T_dat+1
 2816 322C              mov R3,R2
 2818 2224              clr R2
 281A 3092E201          sts _T_dat+1,R3
 281E 2092E101          sts _T_dat,R2
 2822                   .dbline 1581
 2822           ;                                                               T_dat|=Uart0RxData[0];
 2822 2090FB01          lds R2,_Uart0RxData
 2826 3324              clr R3
 2828 4090E101          lds R4,_T_dat
 282C 5090E201          lds R5,_T_dat+1
 2830 4228              or R4,R2
 2832 5328              or R5,R3
 2834 5092E201          sts _T_dat+1,R5
 2838 4092E101          sts _T_dat,R4
 283C                   .dbline 1582
 283C           ;                                                               SendManchester();//压力
 283C 31D4              xcall _SendManchester
 283E                   .dbline 1583
 283E           ;                                                               crc16array[0]=(unsigned char)(T_dat);
 283E 2090E101          lds R2,_T_dat
 2842 3090E201          lds R3,_T_dat+1
 2846 20920000          sts _crc16array,R2
 284A                   .dbline 1584
 284A           ;                                                               crc16array[1]=(unsigned char)(T_dat>>8);
 284A 232C              mov R2,R3
 284C 3324              clr R3
 284E 27FC              sbrc R2,7
 2850 3094              com R3
 2852 20920100          sts _crc16array+1,R2
 2856                   .dbline 1587
 2856           ; 
 2856           ; 
 2856           ;                                                               Delay_ms(30);   
 2856 0EE1              ldi R16,30
 2858 10E0              ldi R17,0
 285A 0E948305          xcall _Delay_ms
 285E                   .dbline 1588
 285E           ;                                                               T_dat=Uart0RxData[3];
 285E 2090FE01          lds R2,_Uart0RxData+3
 2862 3324              clr R3
 2864 3092E201          sts _T_dat+1,R3
 2868 2092E101          sts _T_dat,R2
 286C                   .dbline 1589
 286C           ;                                                               T_dat<<=8;
 286C 2090E101          lds R2,_T_dat
 2870 3090E201          lds R3,_T_dat+1
 2874 322C              mov R3,R2
 2876 2224              clr R2
 2878 3092E201          sts _T_dat+1,R3
 287C 2092E101          sts _T_dat,R2
 2880                   .dbline 1590
 2880           ;                                                               T_dat|=Uart0RxData[2];
 2880 2090FD01          lds R2,_Uart0RxData+2
 2884 3324              clr R3
 2886 4090E101          lds R4,_T_dat
 288A 5090E201          lds R5,_T_dat+1
 288E 4228              or R4,R2
 2890 5328              or R5,R3
 2892 5092E201          sts _T_dat+1,R5
 2896 4092E101          sts _T_dat,R4
 289A                   .dbline 1591
 289A           ;                                                               SendManchester();//温度
 289A 02D4              xcall _SendManchester
 289C                   .dbline 1592
 289C           ;                                                               crc16array[2]=(unsigned char)(T_dat);
 289C 2090E101          lds R2,_T_dat
 28A0 3090E201          lds R3,_T_dat+1
 28A4 20920200          sts _crc16array+2,R2
 28A8                   .dbline 1593
 28A8           ;                                                               crc16array[3]=(unsigned char)(T_dat>>8);
 28A8 232C              mov R2,R3
 28AA 3324              clr R3
 28AC 27FC              sbrc R2,7
 28AE 3094              com R3
 28B0 20920300          sts _crc16array+3,R2
 28B4                   .dbline 1595
 28B4           ; 
 28B4           ;                                                               Delay_ms(30);   
 28B4 0EE1              ldi R16,30
 28B6 10E0              ldi R17,0
 28B8 0E948305          xcall _Delay_ms
 28BC                   .dbline 1597
 28BC           ; 
 28BC           ;                                                               lfib=Uart0RxData[5];
 28BC 20900002          lds R2,_Uart0RxData+5
 28C0 3324              clr R3
 28C2 4424              clr R4
 28C4 5524              clr R5
 28C6 30922300          sts _lfib+1,R3
 28CA 20922200          sts _lfib,R2
 28CE 50922500          sts _lfib+2+1,R5
 28D2 40922400          sts _lfib+2,R4
 28D6                   .dbline 1598
 28D6           ;                                                               lfib<<=8;
 28D6 88E0              ldi R24,8
 28D8 90E0              ldi R25,0
 28DA 20912400          lds R18,_lfib+2
 28DE 30912500          lds R19,_lfib+2+1
 28E2 00912200          lds R16,_lfib
 28E6 10912300          lds R17,_lfib+1
 28EA 8A93              st -y,R24
 28EC 0E940000          xcall lsl32
 28F0 10932300          sts _lfib+1,R17
 28F4 00932200          sts _lfib,R16
 28F8 30932500          sts _lfib+2+1,R19
 28FC 20932400          sts _lfib+2,R18
 2900                   .dbline 1599
 2900           ;                                                               lfib|=Uart0RxData[4];
 2900 2090FF01          lds R2,_Uart0RxData+4
 2904 3324              clr R3
 2906 4424              clr R4
 2908 5524              clr R5
 290A 3801              movw R6,R16
 290C 4901              movw R8,R18
 290E 6228              or R6,R2
 2910 7328              or R7,R3
 2912 8428              or R8,R4
 2914 9528              or R9,R5
 2916 70922300          sts _lfib+1,R7
 291A 60922200          sts _lfib,R6
 291E 90922500          sts _lfib+2+1,R9
 2922 80922400          sts _lfib+2,R8
 2926                   .dbline 1600
 2926           ;                                                               lfib&=0x0000ffff;
 2926 4FEF              ldi R20,255
 2928 5FEF              ldi R21,255
 292A 60E0              ldi R22,0
 292C 70E0              ldi R23,0
 292E 1301              movw R2,R6
 2930 2401              movw R4,R8
 2932 2422              and R2,R20
 2934 3522              and R3,R21
 2936 4622              and R4,R22
 2938 5722              and R5,R23
 293A 30922300          sts _lfib+1,R3
 293E 20922200          sts _lfib,R2
 2942 50922500          sts _lfib+2+1,R5
 2946 40922400          sts _lfib+2,R4
 294A                   .dbline 1601
 294A           ;                                                               myFIB.f=(unsigned long)lfib; 
 294A 8101              movw R16,R2
 294C 9201              movw R18,R4
 294E 0E940000          xcall ulong2fp
 2952 10934902          sts _myFIB+1,R17
 2956 00934802          sts _myFIB,R16
 295A 30934B02          sts _myFIB+2+1,R19
 295E 20934A02          sts _myFIB+2,R18
 2962                   .dbline 1603
 2962           ; 
 2962           ;                                                               T_dat=myFIB.i[1];
 2962 20904A02          lds R2,_myFIB+2
 2966 30904B02          lds R3,_myFIB+2+1
 296A 3092E201          sts _T_dat+1,R3
 296E 2092E101          sts _T_dat,R2
 2972                   .dbline 1604
 2972           ;                                                               SendManchester();//流量-时间1
 2972 96D3              xcall _SendManchester
 2974                   .dbline 1605
 2974           ;                                                               crc16array[4]=(unsigned char)(T_dat);
 2974 2090E101          lds R2,_T_dat
 2978 3090E201          lds R3,_T_dat+1
 297C 20920400          sts _crc16array+4,R2
 2980                   .dbline 1606
 2980           ;                                                               crc16array[5]=(unsigned char)(T_dat>>8);
 2980 232C              mov R2,R3
 2982 3324              clr R3
 2984 27FC              sbrc R2,7
 2986 3094              com R3
 2988 20920500          sts _crc16array+5,R2
 298C                   .dbline 1608
 298C           ; 
 298C           ;                                                               Delay_ms(30);   
 298C 0EE1              ldi R16,30
 298E 10E0              ldi R17,0
 2990 0E948305          xcall _Delay_ms
 2994                   .dbline 1609
 2994           ;                                                               T_dat=myFIB.i[0];
 2994 20904802          lds R2,_myFIB
 2998 30904902          lds R3,_myFIB+1
 299C 3092E201          sts _T_dat+1,R3
 29A0 2092E101          sts _T_dat,R2
 29A4                   .dbline 1610
 29A4           ;                                                               SendManchester();//流量-时间2
 29A4 7DD3              xcall _SendManchester
 29A6                   .dbline 1611
 29A6           ;                                                               crc16array[6]=(unsigned char)(T_dat);
 29A6 2090E101          lds R2,_T_dat
 29AA 3090E201          lds R3,_T_dat+1
 29AE 20920600          sts _crc16array+6,R2
 29B2                   .dbline 1612
 29B2           ;                                                               crc16array[7]=(unsigned char)(T_dat>>8);
 29B2 232C              mov R2,R3
 29B4 3324              clr R3
 29B6 27FC              sbrc R2,7
 29B8 3094              com R3
 29BA 20920700          sts _crc16array+7,R2
 29BE                   .dbline 1614
 29BE           ; 
 29BE           ;                                                               Delay_ms(30);   
 29BE 0EE1              ldi R16,30
 29C0 10E0              ldi R17,0
 29C2 0E948305          xcall _Delay_ms
 29C6                   .dbline 1616
 29C6           ; 
 29C6           ;                                                               lfib=Uart0RxData[7];
 29C6 20900202          lds R2,_Uart0RxData+7
 29CA 3324              clr R3
 29CC 4424              clr R4
 29CE 5524              clr R5
 29D0 30922300          sts _lfib+1,R3
 29D4 20922200          sts _lfib,R2
 29D8 50922500          sts _lfib+2+1,R5
 29DC 40922400          sts _lfib+2,R4
 29E0                   .dbline 1617
 29E0           ;                                                               lfib<<=8;
 29E0 88E0              ldi R24,8
 29E2 90E0              ldi R25,0
 29E4 20912400          lds R18,_lfib+2
 29E8 30912500          lds R19,_lfib+2+1
 29EC 00912200          lds R16,_lfib
 29F0 10912300          lds R17,_lfib+1
 29F4 8A93              st -y,R24
 29F6 0E940000          xcall lsl32
 29FA 10932300          sts _lfib+1,R17
 29FE 00932200          sts _lfib,R16
 2A02 30932500          sts _lfib+2+1,R19
 2A06 20932400          sts _lfib+2,R18
 2A0A                   .dbline 1618
 2A0A           ;                                                               lfib|=Uart0RxData[6];
 2A0A 20900102          lds R2,_Uart0RxData+6
 2A0E 3324              clr R3
 2A10 4424              clr R4
 2A12 5524              clr R5
 2A14 3801              movw R6,R16
 2A16 4901              movw R8,R18
 2A18 6228              or R6,R2
 2A1A 7328              or R7,R3
 2A1C 8428              or R8,R4
 2A1E 9528              or R9,R5
 2A20 70922300          sts _lfib+1,R7
 2A24 60922200          sts _lfib,R6
 2A28 90922500          sts _lfib+2+1,R9
 2A2C 80922400          sts _lfib+2,R8
 2A30                   .dbline 1619
 2A30           ;                                                               lfib&=0x0000ffff;
 2A30 4FEF              ldi R20,255
 2A32 5FEF              ldi R21,255
 2A34 60E0              ldi R22,0
 2A36 70E0              ldi R23,0
 2A38 1301              movw R2,R6
 2A3A 2401              movw R4,R8
 2A3C 2422              and R2,R20
 2A3E 3522              and R3,R21
 2A40 4622              and R4,R22
 2A42 5722              and R5,R23
 2A44 30922300          sts _lfib+1,R3
 2A48 20922200          sts _lfib,R2
 2A4C 50922500          sts _lfib+2+1,R5
 2A50 40922400          sts _lfib+2,R4
 2A54                   .dbline 1620
 2A54           ;                                                               myFIB.f=(unsigned long)lfib; 
 2A54 8101              movw R16,R2
 2A56 9201              movw R18,R4
 2A58 0E940000          xcall ulong2fp
 2A5C 10934902          sts _myFIB+1,R17
 2A60 00934802          sts _myFIB,R16
 2A64 30934B02          sts _myFIB+2+1,R19
 2A68 20934A02          sts _myFIB+2,R18
 2A6C                   .dbline 1622
 2A6C           ; 
 2A6C           ;                                                               T_dat=myFIB.i[1];
 2A6C 20904A02          lds R2,_myFIB+2
 2A70 30904B02          lds R3,_myFIB+2+1
 2A74 3092E201          sts _T_dat+1,R3
 2A78 2092E101          sts _T_dat,R2
 2A7C                   .dbline 1623
 2A7C           ;                                                               SendManchester();//流量-相位1
 2A7C 11D3              xcall _SendManchester
 2A7E                   .dbline 1624
 2A7E           ;                                                               crc16array[8]=(unsigned char)(T_dat);
 2A7E 2090E101          lds R2,_T_dat
 2A82 3090E201          lds R3,_T_dat+1
 2A86 20920800          sts _crc16array+8,R2
 2A8A                   .dbline 1625
 2A8A           ;                                                               crc16array[9]=(unsigned char)(T_dat>>8);
 2A8A 232C              mov R2,R3
 2A8C 3324              clr R3
 2A8E 27FC              sbrc R2,7
 2A90 3094              com R3
 2A92 20920900          sts _crc16array+9,R2
 2A96                   .dbline 1627
 2A96           ; 
 2A96           ;                                                               Delay_ms(30);   
 2A96 0EE1              ldi R16,30
 2A98 10E0              ldi R17,0
 2A9A 0E948305          xcall _Delay_ms
 2A9E                   .dbline 1628
 2A9E           ;                                                               T_dat=myFIB.i[0];
 2A9E 20904802          lds R2,_myFIB
 2AA2 30904902          lds R3,_myFIB+1
 2AA6 3092E201          sts _T_dat+1,R3
 2AAA 2092E101          sts _T_dat,R2
 2AAE                   .dbline 1629
 2AAE           ;                                                               SendManchester();//流量-相位2
 2AAE F8D2              xcall _SendManchester
 2AB0                   .dbline 1630
 2AB0           ;                                                               crc16array[10]=(unsigned char)(T_dat);
 2AB0 2090E101          lds R2,_T_dat
 2AB4 3090E201          lds R3,_T_dat+1
 2AB8 20920A00          sts _crc16array+10,R2
 2ABC                   .dbline 1631
 2ABC           ;                                                               crc16array[11]=(unsigned char)(T_dat>>8);
 2ABC 232C              mov R2,R3
 2ABE 3324              clr R3
 2AC0 27FC              sbrc R2,7
 2AC2 3094              com R3
 2AC4 20920B00          sts _crc16array+11,R2
 2AC8                   .dbline 1634
 2AC8           ; 
 2AC8           ;                                                                
 2AC8           ;                                                               SendUart1(0x81,4);//电机状态，32ms超时
 2AC8 24E0              ldi R18,4
 2ACA 30E0              ldi R19,0
 2ACC 01E8              ldi R16,129
 2ACE 0E944202          xcall _SendUart1
 2AD2                   .dbline 1636
 2AD2           ;                                                               
 2AD2           ;                                                           T_dat=Uart1RxData[1];
 2AD2 2090F701          lds R2,_Uart1RxData+1
 2AD6 3324              clr R3
 2AD8 3092E201          sts _T_dat+1,R3
 2ADC 2092E101          sts _T_dat,R2
 2AE0                   .dbline 1637
 2AE0           ;                                                       T_dat<<=8;
 2AE0 2090E101          lds R2,_T_dat
 2AE4 3090E201          lds R3,_T_dat+1
 2AE8 322C              mov R3,R2
 2AEA 2224              clr R2
 2AEC 3092E201          sts _T_dat+1,R3
 2AF0 2092E101          sts _T_dat,R2
 2AF4                   .dbline 1638
 2AF4           ;                                                       T_dat|=Uart1RxData[0];                                           
 2AF4 2090F601          lds R2,_Uart1RxData
 2AF8 3324              clr R3
 2AFA 4090E101          lds R4,_T_dat
 2AFE 5090E201          lds R5,_T_dat+1
 2B02 4228              or R4,R2
 2B04 5328              or R5,R3
 2B06 5092E201          sts _T_dat+1,R5
 2B0A 4092E101          sts _T_dat,R4
 2B0E                   .dbline 1639
 2B0E           ;                                                               SendManchester();//收放电机状态
 2B0E C8D2              xcall _SendManchester
 2B10                   .dbline 1640
 2B10           ;                                                               crc16array[12]=(unsigned char)(T_dat);
 2B10 2090E101          lds R2,_T_dat
 2B14 3090E201          lds R3,_T_dat+1
 2B18 20920C00          sts _crc16array+12,R2
 2B1C                   .dbline 1641
 2B1C           ;                                                               crc16array[13]=(unsigned char)(T_dat>>8);
 2B1C 232C              mov R2,R3
 2B1E 3324              clr R3
 2B20 27FC              sbrc R2,7
 2B22 3094              com R3
 2B24 20920D00          sts _crc16array+13,R2
 2B28                   .dbline 1643
 2B28           ; 
 2B28           ;                                                               Delay_ms(30);    
 2B28 0EE1              ldi R16,30
 2B2A 10E0              ldi R17,0
 2B2C 0E948305          xcall _Delay_ms
 2B30                   .dbline 1644
 2B30           ;                                                               T_dat=Uart1RxData[3];
 2B30 2090F901          lds R2,_Uart1RxData+3
 2B34 3324              clr R3
 2B36 3092E201          sts _T_dat+1,R3
 2B3A 2092E101          sts _T_dat,R2
 2B3E                   .dbline 1645
 2B3E           ;                                                       T_dat<<=8;
 2B3E 2090E101          lds R2,_T_dat
 2B42 3090E201          lds R3,_T_dat+1
 2B46 322C              mov R3,R2
 2B48 2224              clr R2
 2B4A 3092E201          sts _T_dat+1,R3
 2B4E 2092E101          sts _T_dat,R2
 2B52                   .dbline 1646
 2B52           ;                                                       T_dat|=Uart1RxData[2];
 2B52 2090F801          lds R2,_Uart1RxData+2
 2B56 3324              clr R3
 2B58 4090E101          lds R4,_T_dat
 2B5C 5090E201          lds R5,_T_dat+1
 2B60 4228              or R4,R2
 2B62 5328              or R5,R3
 2B64 5092E201          sts _T_dat+1,R5
 2B68 4092E101          sts _T_dat,R4
 2B6C                   .dbline 1647
 2B6C           ;                                                               SendManchester();//调节电机状态
 2B6C 99D2              xcall _SendManchester
 2B6E                   .dbline 1648
 2B6E           ;                                                               crc16array[14]=(unsigned char)(T_dat);
 2B6E 2090E101          lds R2,_T_dat
 2B72 3090E201          lds R3,_T_dat+1
 2B76 20920E00          sts _crc16array+14,R2
 2B7A                   .dbline 1649
 2B7A           ;                                                               crc16array[15]=(unsigned char)(T_dat>>8);
 2B7A 232C              mov R2,R3
 2B7C 3324              clr R3
 2B7E 27FC              sbrc R2,7
 2B80 3094              com R3
 2B82 20920F00          sts _crc16array+15,R2
 2B86                   .dbline 1651
 2B86           ; 
 2B86           ;                                                               Delay_ms(1);                                            
 2B86 01E0              ldi R16,1
 2B88 10E0              ldi R17,0
 2B8A 0E948305          xcall _Delay_ms
 2B8E                   .dbline 1652
 2B8E           ;                                                       SendUart1(0x31,4);//读电机电压，32ms超时
 2B8E 24E0              ldi R18,4
 2B90 30E0              ldi R19,0
 2B92 01E3              ldi R16,49
 2B94 0E944202          xcall _SendUart1
 2B98                   .dbline 1653
 2B98           ;                                                       T_dat=Uart1RxData[0];
 2B98 2090F601          lds R2,_Uart1RxData
 2B9C 3324              clr R3
 2B9E 3092E201          sts _T_dat+1,R3
 2BA2 2092E101          sts _T_dat,R2
 2BA6                   .dbline 1654
 2BA6           ;                                                               SendManchester();
 2BA6 7CD2              xcall _SendManchester
 2BA8                   .dbline 1655
 2BA8           ;                                                               crc16array[16]=(unsigned char)(T_dat);
 2BA8 2090E101          lds R2,_T_dat
 2BAC 3090E201          lds R3,_T_dat+1
 2BB0 20921000          sts _crc16array+16,R2
 2BB4                   .dbline 1656
 2BB4           ;                                                               crc16array[17]=(unsigned char)(T_dat>>8);
 2BB4 232C              mov R2,R3
 2BB6 3324              clr R3
 2BB8 27FC              sbrc R2,7
 2BBA 3094              com R3
 2BBC 20921100          sts _crc16array+17,R2
 2BC0                   .dbline 1658
 2BC0           ; 
 2BC0           ;                                                               if(R_dat==0xcf)// 采集第2个压力温度的工程量，再多发2帧共4字节
 2BC0 8091DF01          lds R24,_R_dat
 2BC4 9091E001          lds R25,_R_dat+1
 2BC8 8F3C              cpi R24,207
 2BCA E0E0              ldi R30,0
 2BCC 9E07              cpc R25,R30
 2BCE 09F0              breq X275
 2BD0 5EC0              xjmp L755
 2BD2           X275:
 2BD2           X223:
 2BD2                   .dbline 1659
 2BD2           ;                                                               {
 2BD2                   .dbline 1660
 2BD2           ;                                                                SampleTPS(R_dat);//最快5ms返回，没有挂压力短节时最多20ms返回
 2BD2 8C01              movw R16,R24
 2BD4 0E94E403          xcall _SampleTPS
 2BD8                   .dbline 1662
 2BD8           ;                                                 
 2BD8           ;                                                                Delay_ms(25);  
 2BD8 09E1              ldi R16,25
 2BDA 10E0              ldi R17,0
 2BDC 0E948305          xcall _Delay_ms
 2BE0                   .dbline 1663
 2BE0           ;                                                                T_dat=TPS_PData;
 2BE0 2090DD01          lds R2,_TPS_PData
 2BE4 3090DE01          lds R3,_TPS_PData+1
 2BE8 3092E201          sts _T_dat+1,R3
 2BEC 2092E101          sts _T_dat,R2
 2BF0                   .dbline 1664
 2BF0           ;                                                                SendManchester();//压力
 2BF0 57D2              xcall _SendManchester
 2BF2                   .dbline 1665
 2BF2           ;                                                                crc16array[18]=(unsigned char)(T_dat);
 2BF2 2090E101          lds R2,_T_dat
 2BF6 3090E201          lds R3,_T_dat+1
 2BFA 20921200          sts _crc16array+18,R2
 2BFE                   .dbline 1666
 2BFE           ;                                                                crc16array[19]=(unsigned char)(T_dat>>8);
 2BFE 232C              mov R2,R3
 2C00 3324              clr R3
 2C02 27FC              sbrc R2,7
 2C04 3094              com R3
 2C06 20921300          sts _crc16array+19,R2
 2C0A                   .dbline 1668
 2C0A           ;                                                 
 2C0A           ;                                                                Delay_ms(30);  
 2C0A 0EE1              ldi R16,30
 2C0C 10E0              ldi R17,0
 2C0E 0E948305          xcall _Delay_ms
 2C12                   .dbline 1669
 2C12           ;                                                                T_dat=TPS_TData;
 2C12 2090DB01          lds R2,_TPS_TData
 2C16 3090DC01          lds R3,_TPS_TData+1
 2C1A 3092E201          sts _T_dat+1,R3
 2C1E 2092E101          sts _T_dat,R2
 2C22                   .dbline 1670
 2C22           ;                                                                SendManchester();//温度
 2C22 3ED2              xcall _SendManchester
 2C24                   .dbline 1671
 2C24           ;                                                                crc16array[20]=(unsigned char)(T_dat);
 2C24 2090E101          lds R2,_T_dat
 2C28 3090E201          lds R3,_T_dat+1
 2C2C 20921400          sts _crc16array+20,R2
 2C30                   .dbline 1672
 2C30           ;                                                                crc16array[21]=(unsigned char)(T_dat>>8);
 2C30 232C              mov R2,R3
 2C32 3324              clr R3
 2C34 27FC              sbrc R2,7
 2C36 3094              com R3
 2C38 20921500          sts _crc16array+21,R2
 2C3C                   .dbline 1674
 2C3C           ;                                                                
 2C3C           ;                                                                Delay_ms(30);  
 2C3C 0EE1              ldi R16,30
 2C3E 10E0              ldi R17,0
 2C40 0E948305          xcall _Delay_ms
 2C44                   .dbline 1675
 2C44           ;                                                                crc16(crc16array,22);//0.75ms
 2C44 26E1              ldi R18,22
 2C46 30E0              ldi R19,0
 2C48 00E0              ldi R16,<_crc16array
 2C4A 10E0              ldi R17,>_crc16array
 2C4C 71D6              xcall _crc16
 2C4E                   .dbline 1676
 2C4E           ;                                                                T_dat=crc16hi;
 2C4E 20902100          lds R2,_crc16hi
 2C52 3324              clr R3
 2C54 3092E201          sts _T_dat+1,R3
 2C58 2092E101          sts _T_dat,R2
 2C5C                   .dbline 1677
 2C5C           ;                                                                T_dat<<=8;
 2C5C 2090E101          lds R2,_T_dat
 2C60 3090E201          lds R3,_T_dat+1
 2C64 322C              mov R3,R2
 2C66 2224              clr R2
 2C68 3092E201          sts _T_dat+1,R3
 2C6C 2092E101          sts _T_dat,R2
 2C70                   .dbline 1678
 2C70           ;                                                                T_dat|=crc16lo;          
 2C70 20902000          lds R2,_crc16lo
 2C74 3324              clr R3
 2C76 4090E101          lds R4,_T_dat
 2C7A 5090E201          lds R5,_T_dat+1
 2C7E 4228              or R4,R2
 2C80 5328              or R5,R3
 2C82 5092E201          sts _T_dat+1,R5
 2C86 4092E101          sts _T_dat,R4
 2C8A                   .dbline 1679
 2C8A           ;                                                                SendManchester();//上传CRC校验共2字节，从收到命令到上传完毕共耗时约850ms
 2C8A 0AD2              xcall _SendManchester
 2C8C                   .dbline 1680
 2C8C           ;                                                               }
 2C8C FCC1              xjmp L502
 2C8E           L755:
 2C8E                   .dbline 1682
 2C8E           ;                                                               else
 2C8E           ;                                                               {
 2C8E                   .dbline 1683
 2C8E           ;                                                                Delay_ms(30);  
 2C8E 0EE1              ldi R16,30
 2C90 10E0              ldi R17,0
 2C92 0E948305          xcall _Delay_ms
 2C96                   .dbline 1684
 2C96           ;                                                                crc16(crc16array,18);//0.75ms
 2C96 22E1              ldi R18,18
 2C98 30E0              ldi R19,0
 2C9A 00E0              ldi R16,<_crc16array
 2C9C 10E0              ldi R17,>_crc16array
 2C9E 48D6              xcall _crc16
 2CA0                   .dbline 1685
 2CA0           ;                                                                T_dat=crc16hi;
 2CA0 20902100          lds R2,_crc16hi
 2CA4 3324              clr R3
 2CA6 3092E201          sts _T_dat+1,R3
 2CAA 2092E101          sts _T_dat,R2
 2CAE                   .dbline 1686
 2CAE           ;                                                                T_dat<<=8;
 2CAE 2090E101          lds R2,_T_dat
 2CB2 3090E201          lds R3,_T_dat+1
 2CB6 322C              mov R3,R2
 2CB8 2224              clr R2
 2CBA 3092E201          sts _T_dat+1,R3
 2CBE 2092E101          sts _T_dat,R2
 2CC2                   .dbline 1687
 2CC2           ;                                                                T_dat|=crc16lo;          
 2CC2 20902000          lds R2,_crc16lo
 2CC6 3324              clr R3
 2CC8 4090E101          lds R4,_T_dat
 2CCC 5090E201          lds R5,_T_dat+1
 2CD0 4228              or R4,R2
 2CD2 5328              or R5,R3
 2CD4 5092E201          sts _T_dat+1,R5
 2CD8 4092E101          sts _T_dat,R4
 2CDC                   .dbline 1688
 2CDC           ;                                                                SendManchester();//上传CRC校验共2字节，从收到命令到上传完毕共耗时约760ms
 2CDC E1D1              xcall _SendManchester
 2CDE                   .dbline 1689
 2CDE           ;                                                               }
 2CDE                   .dbline 1690
 2CDE           ;                                                       }       
 2CDE                   .dbline 1691
 2CDE           ;                                               }
 2CDE D3C1              xjmp L502
 2CE0           L720:
 2CE0                   .dbline 1692
 2CE0           ;                                               else  if(R_dat==0xc5) //读仪器信息,共320字节，分5次从流量板中提取，每包64字节
 2CE0 8091DF01          lds R24,_R_dat
 2CE4 9091E001          lds R25,_R_dat+1
 2CE8 853C              cpi R24,197
 2CEA E0E0              ldi R30,0
 2CEC 9E07              cpc R25,R30
 2CEE 09F0              breq X276
 2CF0 6AC1              xjmp L761
 2CF2           X276:
 2CF2           X224:
 2CF2                   .dbline 1693
 2CF2           ;                                               {
 2CF2                   .dbline 1694
 2CF2           ;                                                       Uart0TxData[0]=0xE8;
 2CF2 88EE              ldi R24,232
 2CF4 80932F00          sts _Uart0TxData,R24
 2CF8                   .dbline 1695
 2CF8           ;                                                       Uart0TxData[1]=0x40;
 2CF8 80E4              ldi R24,64
 2CFA 80933000          sts _Uart0TxData+1,R24
 2CFE                   .dbline 1696
 2CFE           ;                                                       Uart0TxData[2]=0x83;
 2CFE 83E8              ldi R24,131
 2D00 80933100          sts _Uart0TxData+2,R24
 2D04                   .dbline 1697
 2D04           ;                                                       Uart0TxData[3]=0;//包0
 2D04 2224              clr R2
 2D06 20923200          sts _Uart0TxData+3,R2
 2D0A                   .dbline 1698
 2D0A           ;                                                       SendUart0_2(9,5);// 超时40ms    
 2D0A 25E0              ldi R18,5
 2D0C 30E0              ldi R19,0
 2D0E 09E0              ldi R16,9
 2D10 0E947A04          xcall _SendUart0_2
 2D14                   .dbline 1699
 2D14           ;                                                       if(Uart0RxCounter==64) 
 2D14 8091FA01          lds R24,_Uart0RxCounter
 2D18 8034              cpi R24,64
 2D1A 99F5              brne L766
 2D1C           X225:
 2D1C                   .dbline 1700
 2D1C           ;                                                       {
 2D1C                   .dbline 1701
 2D1C           ;                                                               for(i=0;i<32;i++)
 2D1C AA24              clr R10
 2D1E 2EC0              xjmp L771
 2D20           L768:
 2D20                   .dbline 1702
 2D20           ;                                                               {
 2D20                   .dbline 1703
 2D20           ;                                                                       Delay_ms(20);
 2D20 04E1              ldi R16,20
 2D22 10E0              ldi R17,0
 2D24 0E948305          xcall _Delay_ms
 2D28                   .dbline 1704
 2D28           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2D28 80E0              ldi R24,<_Uart0RxData+1
 2D2A 90E0              ldi R25,>_Uart0RxData+1
 2D2C EA2D              mov R30,R10
 2D2E FF27              clr R31
 2D30 EE0F              lsl R30
 2D32 FF1F              rol R31
 2D34 E80F              add R30,R24
 2D36 F91F              adc R31,R25
 2D38 2080              ldd R2,z+0
 2D3A 3324              clr R3
 2D3C 3092E201          sts _T_dat+1,R3
 2D40 2092E101          sts _T_dat,R2
 2D44                   .dbline 1705
 2D44           ;                                                                       T_dat<<=8;
 2D44 322C              mov R3,R2
 2D46 2224              clr R2
 2D48 3092E201          sts _T_dat+1,R3
 2D4C 2092E101          sts _T_dat,R2
 2D50                   .dbline 1706
 2D50           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2D50 80E0              ldi R24,<_Uart0RxData
 2D52 90E0              ldi R25,>_Uart0RxData
 2D54 EA2D              mov R30,R10
 2D56 FF27              clr R31
 2D58 EE0F              lsl R30
 2D5A FF1F              rol R31
 2D5C E80F              add R30,R24
 2D5E F91F              adc R31,R25
 2D60 2080              ldd R2,z+0
 2D62 3324              clr R3
 2D64 4090E101          lds R4,_T_dat
 2D68 5090E201          lds R5,_T_dat+1
 2D6C 4228              or R4,R2
 2D6E 5328              or R5,R3
 2D70 5092E201          sts _T_dat+1,R5
 2D74 4092E101          sts _T_dat,R4
 2D78                   .dbline 1707
 2D78           ;                                                                       SendManchester();                
 2D78 93D1              xcall _SendManchester
 2D7A                   .dbline 1708
 2D7A           ;                                                               }       
 2D7A           L769:
 2D7A                   .dbline 1701
 2D7A A394              inc R10
 2D7C           L771:
 2D7C                   .dbline 1701
 2D7C 8A2D              mov R24,R10
 2D7E 8032              cpi R24,32
 2D80 78F2              brlo L768
 2D82           X226:
 2D82                   .dbline 1709
 2D82           ;                                                       }       
 2D82           L766:
 2D82                   .dbline 1711
 2D82           ; 
 2D82           ;                                                       Uart0TxData[0]=0xE8;
 2D82 88EE              ldi R24,232
 2D84 80932F00          sts _Uart0TxData,R24
 2D88                   .dbline 1712
 2D88           ;                                                       Uart0TxData[1]=0x40;
 2D88 80E4              ldi R24,64
 2D8A 80933000          sts _Uart0TxData+1,R24
 2D8E                   .dbline 1713
 2D8E           ;                                                       Uart0TxData[2]=0x83;
 2D8E 83E8              ldi R24,131
 2D90 80933100          sts _Uart0TxData+2,R24
 2D94                   .dbline 1714
 2D94           ;                                                       Uart0TxData[3]=1;//包1
 2D94 81E0              ldi R24,1
 2D96 80933200          sts _Uart0TxData+3,R24
 2D9A                   .dbline 1715
 2D9A           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2D9A 25E0              ldi R18,5
 2D9C 30E0              ldi R19,0
 2D9E 09E0              ldi R16,9
 2DA0 0E947A04          xcall _SendUart0_2
 2DA4                   .dbline 1716
 2DA4           ;                                                       if(Uart0RxCounter==64) 
 2DA4 8091FA01          lds R24,_Uart0RxCounter
 2DA8 8034              cpi R24,64
 2DAA 99F5              brne L776
 2DAC           X227:
 2DAC                   .dbline 1717
 2DAC           ;                                                       {
 2DAC                   .dbline 1718
 2DAC           ;                                                               for(i=0;i<32;i++)
 2DAC AA24              clr R10
 2DAE 2EC0              xjmp L781
 2DB0           L778:
 2DB0                   .dbline 1719
 2DB0           ;                                                               {
 2DB0                   .dbline 1720
 2DB0           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2DB0 80E0              ldi R24,<_Uart0RxData+1
 2DB2 90E0              ldi R25,>_Uart0RxData+1
 2DB4 EA2D              mov R30,R10
 2DB6 FF27              clr R31
 2DB8 EE0F              lsl R30
 2DBA FF1F              rol R31
 2DBC E80F              add R30,R24
 2DBE F91F              adc R31,R25
 2DC0 2080              ldd R2,z+0
 2DC2 3324              clr R3
 2DC4 3092E201          sts _T_dat+1,R3
 2DC8 2092E101          sts _T_dat,R2
 2DCC                   .dbline 1721
 2DCC           ;                                                                       T_dat<<=8;
 2DCC 322C              mov R3,R2
 2DCE 2224              clr R2
 2DD0 3092E201          sts _T_dat+1,R3
 2DD4 2092E101          sts _T_dat,R2
 2DD8                   .dbline 1722
 2DD8           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2DD8 80E0              ldi R24,<_Uart0RxData
 2DDA 90E0              ldi R25,>_Uart0RxData
 2DDC EA2D              mov R30,R10
 2DDE FF27              clr R31
 2DE0 EE0F              lsl R30
 2DE2 FF1F              rol R31
 2DE4 E80F              add R30,R24
 2DE6 F91F              adc R31,R25
 2DE8 2080              ldd R2,z+0
 2DEA 3324              clr R3
 2DEC 4090E101          lds R4,_T_dat
 2DF0 5090E201          lds R5,_T_dat+1
 2DF4 4228              or R4,R2
 2DF6 5328              or R5,R3
 2DF8 5092E201          sts _T_dat+1,R5
 2DFC 4092E101          sts _T_dat,R4
 2E00                   .dbline 1723
 2E00           ;                                                                       SendManchester();
 2E00 4FD1              xcall _SendManchester
 2E02                   .dbline 1724
 2E02           ;                                                                       Delay_ms(20);
 2E02 04E1              ldi R16,20
 2E04 10E0              ldi R17,0
 2E06 0E948305          xcall _Delay_ms
 2E0A                   .dbline 1725
 2E0A           ;                                                               }
 2E0A           L779:
 2E0A                   .dbline 1718
 2E0A A394              inc R10
 2E0C           L781:
 2E0C                   .dbline 1718
 2E0C 8A2D              mov R24,R10
 2E0E 8032              cpi R24,32
 2E10 78F2              brlo L778
 2E12           X228:
 2E12                   .dbline 1726
 2E12           ;                                                       }       
 2E12           L776:
 2E12                   .dbline 1728
 2E12           ; 
 2E12           ;                                                       Uart0TxData[0]=0xE8;
 2E12 88EE              ldi R24,232
 2E14 80932F00          sts _Uart0TxData,R24
 2E18                   .dbline 1729
 2E18           ;                                                       Uart0TxData[1]=0x40;
 2E18 80E4              ldi R24,64
 2E1A 80933000          sts _Uart0TxData+1,R24
 2E1E                   .dbline 1730
 2E1E           ;                                                       Uart0TxData[2]=0x83;
 2E1E 83E8              ldi R24,131
 2E20 80933100          sts _Uart0TxData+2,R24
 2E24                   .dbline 1731
 2E24           ;                                                       Uart0TxData[3]=2;//包2
 2E24 82E0              ldi R24,2
 2E26 80933200          sts _Uart0TxData+3,R24
 2E2A                   .dbline 1732
 2E2A           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2E2A 25E0              ldi R18,5
 2E2C 30E0              ldi R19,0
 2E2E 09E0              ldi R16,9
 2E30 0E947A04          xcall _SendUart0_2
 2E34                   .dbline 1733
 2E34           ;                                                       if(Uart0RxCounter==64) 
 2E34 8091FA01          lds R24,_Uart0RxCounter
 2E38 8034              cpi R24,64
 2E3A 99F5              brne L786
 2E3C           X229:
 2E3C                   .dbline 1734
 2E3C           ;                                                       {
 2E3C                   .dbline 1735
 2E3C           ;                                                               for(i=0;i<32;i++)
 2E3C AA24              clr R10
 2E3E 2EC0              xjmp L791
 2E40           L788:
 2E40                   .dbline 1736
 2E40           ;                                                               {
 2E40                   .dbline 1737
 2E40           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2E40 80E0              ldi R24,<_Uart0RxData+1
 2E42 90E0              ldi R25,>_Uart0RxData+1
 2E44 EA2D              mov R30,R10
 2E46 FF27              clr R31
 2E48 EE0F              lsl R30
 2E4A FF1F              rol R31
 2E4C E80F              add R30,R24
 2E4E F91F              adc R31,R25
 2E50 2080              ldd R2,z+0
 2E52 3324              clr R3
 2E54 3092E201          sts _T_dat+1,R3
 2E58 2092E101          sts _T_dat,R2
 2E5C                   .dbline 1738
 2E5C           ;                                                                       T_dat<<=8;
 2E5C 322C              mov R3,R2
 2E5E 2224              clr R2
 2E60 3092E201          sts _T_dat+1,R3
 2E64 2092E101          sts _T_dat,R2
 2E68                   .dbline 1739
 2E68           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2E68 80E0              ldi R24,<_Uart0RxData
 2E6A 90E0              ldi R25,>_Uart0RxData
 2E6C EA2D              mov R30,R10
 2E6E FF27              clr R31
 2E70 EE0F              lsl R30
 2E72 FF1F              rol R31
 2E74 E80F              add R30,R24
 2E76 F91F              adc R31,R25
 2E78 2080              ldd R2,z+0
 2E7A 3324              clr R3
 2E7C 4090E101          lds R4,_T_dat
 2E80 5090E201          lds R5,_T_dat+1
 2E84 4228              or R4,R2
 2E86 5328              or R5,R3
 2E88 5092E201          sts _T_dat+1,R5
 2E8C 4092E101          sts _T_dat,R4
 2E90                   .dbline 1740
 2E90           ;                                                                       SendManchester();
 2E90 07D1              xcall _SendManchester
 2E92                   .dbline 1741
 2E92           ;                                                                       Delay_ms(20);
 2E92 04E1              ldi R16,20
 2E94 10E0              ldi R17,0
 2E96 0E948305          xcall _Delay_ms
 2E9A                   .dbline 1742
 2E9A           ;                                                               }
 2E9A           L789:
 2E9A                   .dbline 1735
 2E9A A394              inc R10
 2E9C           L791:
 2E9C                   .dbline 1735
 2E9C 8A2D              mov R24,R10
 2E9E 8032              cpi R24,32
 2EA0 78F2              brlo L788
 2EA2           X230:
 2EA2                   .dbline 1743
 2EA2           ;                                                       }       
 2EA2           L786:
 2EA2                   .dbline 1745
 2EA2           ; 
 2EA2           ;                                                       Uart0TxData[0]=0xE8;
 2EA2 88EE              ldi R24,232
 2EA4 80932F00          sts _Uart0TxData,R24
 2EA8                   .dbline 1746
 2EA8           ;                                                       Uart0TxData[1]=0x40;
 2EA8 80E4              ldi R24,64
 2EAA 80933000          sts _Uart0TxData+1,R24
 2EAE                   .dbline 1747
 2EAE           ;                                                       Uart0TxData[2]=0x83;
 2EAE 83E8              ldi R24,131
 2EB0 80933100          sts _Uart0TxData+2,R24
 2EB4                   .dbline 1748
 2EB4           ;                                                       Uart0TxData[3]=3;//包3
 2EB4 83E0              ldi R24,3
 2EB6 80933200          sts _Uart0TxData+3,R24
 2EBA                   .dbline 1749
 2EBA           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2EBA 25E0              ldi R18,5
 2EBC 30E0              ldi R19,0
 2EBE 09E0              ldi R16,9
 2EC0 0E947A04          xcall _SendUart0_2
 2EC4                   .dbline 1750
 2EC4           ;                                                       if(Uart0RxCounter==64) 
 2EC4 8091FA01          lds R24,_Uart0RxCounter
 2EC8 8034              cpi R24,64
 2ECA 99F5              brne L796
 2ECC           X231:
 2ECC                   .dbline 1751
 2ECC           ;                                                       {
 2ECC                   .dbline 1752
 2ECC           ;                                                               for(i=0;i<32;i++)
 2ECC AA24              clr R10
 2ECE 2EC0              xjmp L801
 2ED0           L798:
 2ED0                   .dbline 1753
 2ED0           ;                                                               {
 2ED0                   .dbline 1754
 2ED0           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2ED0 80E0              ldi R24,<_Uart0RxData+1
 2ED2 90E0              ldi R25,>_Uart0RxData+1
 2ED4 EA2D              mov R30,R10
 2ED6 FF27              clr R31
 2ED8 EE0F              lsl R30
 2EDA FF1F              rol R31
 2EDC E80F              add R30,R24
 2EDE F91F              adc R31,R25
 2EE0 2080              ldd R2,z+0
 2EE2 3324              clr R3
 2EE4 3092E201          sts _T_dat+1,R3
 2EE8 2092E101          sts _T_dat,R2
 2EEC                   .dbline 1755
 2EEC           ;                                                                       T_dat<<=8;
 2EEC 322C              mov R3,R2
 2EEE 2224              clr R2
 2EF0 3092E201          sts _T_dat+1,R3
 2EF4 2092E101          sts _T_dat,R2
 2EF8                   .dbline 1756
 2EF8           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2EF8 80E0              ldi R24,<_Uart0RxData
 2EFA 90E0              ldi R25,>_Uart0RxData
 2EFC EA2D              mov R30,R10
 2EFE FF27              clr R31
 2F00 EE0F              lsl R30
 2F02 FF1F              rol R31
 2F04 E80F              add R30,R24
 2F06 F91F              adc R31,R25
 2F08 2080              ldd R2,z+0
 2F0A 3324              clr R3
 2F0C 4090E101          lds R4,_T_dat
 2F10 5090E201          lds R5,_T_dat+1
 2F14 4228              or R4,R2
 2F16 5328              or R5,R3
 2F18 5092E201          sts _T_dat+1,R5
 2F1C 4092E101          sts _T_dat,R4
 2F20                   .dbline 1757
 2F20           ;                                                                       SendManchester();
 2F20 BFD0              xcall _SendManchester
 2F22                   .dbline 1758
 2F22           ;                                                                       Delay_ms(20);
 2F22 04E1              ldi R16,20
 2F24 10E0              ldi R17,0
 2F26 0E948305          xcall _Delay_ms
 2F2A                   .dbline 1759
 2F2A           ;                                                               }
 2F2A           L799:
 2F2A                   .dbline 1752
 2F2A A394              inc R10
 2F2C           L801:
 2F2C                   .dbline 1752
 2F2C 8A2D              mov R24,R10
 2F2E 8032              cpi R24,32
 2F30 78F2              brlo L798
 2F32           X232:
 2F32                   .dbline 1760
 2F32           ;                                                       }       
 2F32           L796:
 2F32                   .dbline 1762
 2F32           ; 
 2F32           ;                                                       Uart0TxData[0]=0xE8;
 2F32 88EE              ldi R24,232
 2F34 80932F00          sts _Uart0TxData,R24
 2F38                   .dbline 1763
 2F38           ;                                                       Uart0TxData[1]=0x40;
 2F38 80E4              ldi R24,64
 2F3A 80933000          sts _Uart0TxData+1,R24
 2F3E                   .dbline 1764
 2F3E           ;                                                       Uart0TxData[2]=0x83;
 2F3E 83E8              ldi R24,131
 2F40 80933100          sts _Uart0TxData+2,R24
 2F44                   .dbline 1765
 2F44           ;                                                       Uart0TxData[3]=4;//包4
 2F44 84E0              ldi R24,4
 2F46 80933200          sts _Uart0TxData+3,R24
 2F4A                   .dbline 1766
 2F4A           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2F4A 25E0              ldi R18,5
 2F4C 30E0              ldi R19,0
 2F4E 09E0              ldi R16,9
 2F50 0E947A04          xcall _SendUart0_2
 2F54                   .dbline 1767
 2F54           ;                                                       if(Uart0RxCounter==64) 
 2F54 8091FA01          lds R24,_Uart0RxCounter
 2F58 8034              cpi R24,64
 2F5A 09F0              breq X277
 2F5C 94C0              xjmp L502
 2F5E           X277:
 2F5E           X233:
 2F5E                   .dbline 1768
 2F5E           ;                                                       {
 2F5E                   .dbline 1769
 2F5E           ;                                                               for(i=0;i<32;i++)
 2F5E AA24              clr R10
 2F60 2EC0              xjmp L811
 2F62           L808:
 2F62                   .dbline 1770
 2F62           ;                                                               {
 2F62                   .dbline 1771
 2F62           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2F62 80E0              ldi R24,<_Uart0RxData+1
 2F64 90E0              ldi R25,>_Uart0RxData+1
 2F66 EA2D              mov R30,R10
 2F68 FF27              clr R31
 2F6A EE0F              lsl R30
 2F6C FF1F              rol R31
 2F6E E80F              add R30,R24
 2F70 F91F              adc R31,R25
 2F72 2080              ldd R2,z+0
 2F74 3324              clr R3
 2F76 3092E201          sts _T_dat+1,R3
 2F7A 2092E101          sts _T_dat,R2
 2F7E                   .dbline 1772
 2F7E           ;                                                                       T_dat<<=8;
 2F7E 322C              mov R3,R2
 2F80 2224              clr R2
 2F82 3092E201          sts _T_dat+1,R3
 2F86 2092E101          sts _T_dat,R2
 2F8A                   .dbline 1773
 2F8A           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2F8A 80E0              ldi R24,<_Uart0RxData
 2F8C 90E0              ldi R25,>_Uart0RxData
 2F8E EA2D              mov R30,R10
 2F90 FF27              clr R31
 2F92 EE0F              lsl R30
 2F94 FF1F              rol R31
 2F96 E80F              add R30,R24
 2F98 F91F              adc R31,R25
 2F9A 2080              ldd R2,z+0
 2F9C 3324              clr R3
 2F9E 4090E101          lds R4,_T_dat
 2FA2 5090E201          lds R5,_T_dat+1
 2FA6 4228              or R4,R2
 2FA8 5328              or R5,R3
 2FAA 5092E201          sts _T_dat+1,R5
 2FAE 4092E101          sts _T_dat,R4
 2FB2                   .dbline 1774
 2FB2           ;                                                                       SendManchester();
 2FB2 76D0              xcall _SendManchester
 2FB4                   .dbline 1775
 2FB4           ;                                                                       Delay_ms(20);
 2FB4 04E1              ldi R16,20
 2FB6 10E0              ldi R17,0
 2FB8 0E948305          xcall _Delay_ms
 2FBC                   .dbline 1776
 2FBC           ;                                                               }
 2FBC           L809:
 2FBC                   .dbline 1769
 2FBC A394              inc R10
 2FBE           L811:
 2FBE                   .dbline 1769
 2FBE 8A2D              mov R24,R10
 2FC0 8032              cpi R24,32
 2FC2 78F2              brlo L808
 2FC4           X234:
 2FC4                   .dbline 1777
 2FC4           ;                                                       }       
 2FC4                   .dbline 1778
 2FC4           ;                                               }
 2FC4 60C0              xjmp L502
 2FC6           L761:
 2FC6                   .dbline 1779
 2FC6           ;                                               else  if(R_dat==0xca) //写仪器信息
 2FC6 8091DF01          lds R24,_R_dat
 2FCA 9091E001          lds R25,_R_dat+1
 2FCE 8A3C              cpi R24,202
 2FD0 E0E0              ldi R30,0
 2FD2 9E07              cpc R25,R30
 2FD4 09F0              breq X278
 2FD6 57C0              xjmp L502
 2FD8           X278:
 2FD8           X235:
 2FD8                   .dbline 1780
 2FD8           ;                                               {
 2FD8                   .dbline 1781
 2FD8           ;                                                       DataFlag=4;
 2FD8 84E0              ldi R24,4
 2FDA 90E0              ldi R25,0
 2FDC 9093C201          sts _DataFlag+1,R25
 2FE0 8093C101          sts _DataFlag,R24
 2FE4                   .dbline 1782
 2FE4           ;                                                       coeff_len=320;
 2FE4 80E4              ldi R24,320
 2FE6 91E0              ldi R25,1
 2FE8 90932D00          sts _coeff_len+1,R25
 2FEC 80932C00          sts _coeff_len,R24
 2FF0                   .dbline 1783
 2FF0           ;                                                       coeff_count=0;
 2FF0 2224              clr R2
 2FF2 3324              clr R3
 2FF4 30922B00          sts _coeff_count+1,R3
 2FF8 20922A00          sts _coeff_count,R2
 2FFC                   .dbline 1784
 2FFC           ;                                                       TimeOutFlag=0;
 2FFC 2092D901          sts _TimeOutFlag,R2
 3000                   .dbline 1785
 3000           ;                                                       Timer0Counter=2000;//16s定时
 3000 80ED              ldi R24,2000
 3002 97E0              ldi R25,7
 3004 90934602          sts _Timer0Counter+1,R25
 3008 80934502          sts _Timer0Counter,R24
 300C                   .dbline 1786
 300C           ;                                                       TCNT0=0x06; //8ms
 300C 86E0              ldi R24,6
 300E 82BF              out 0x32,R24
 3010                   .dbline 1787
 3010           ;                                                       TCCR0|=0x06;//256分频
 3010 83B7              in R24,0x33
 3012 8660              ori R24,6
 3014 83BF              out 0x33,R24
 3016                   .dbline 1788
 3016           ;                                                       TIFR|=0x01; //清定时器0中断标志
 3016 86B7              in R24,0x36
 3018 8160              ori R24,1
 301A 86BF              out 0x36,R24
 301C                   .dbline 1789
 301C           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 301C 87B7              in R24,0x37
 301E 8160              ori R24,1
 3020 87BF              out 0x37,R24
 3022                   .dbline 1790
 3022           ;                                               }
 3022                   .dbline 1791
 3022           ;                                               break;
 3022 31C0              xjmp L502
 3024           L815:
 3024                   .dbline 1794
 3024           ;                                       
 3024           ;                                       case 0xd0://压力板与电机板版本
 3024           ;                                          if(R_dat==0xdf)//电机板与第2路压力板版本号   
 3024 8091DF01          lds R24,_R_dat
 3028 9091E001          lds R25,_R_dat+1
 302C 8F3D              cpi R24,223
 302E E0E0              ldi R30,0
 3030 9E07              cpc R25,R30
 3032 49F5              brne L502
 3034           X236:
 3034                   .dbline 1795
 3034           ;                                           {                    
 3034                   .dbline 1796
 3034           ;                                                 SendUart1(0xdf,3);//电机板
 3034 23E0              ldi R18,3
 3036 30E0              ldi R19,0
 3038 0FED              ldi R16,223
 303A 0E944202          xcall _SendUart1
 303E                   .dbline 1797
 303E           ;                                                 T_dat=Uart1RxData[0];
 303E 2090F601          lds R2,_Uart1RxData
 3042 3324              clr R3
 3044 3092E201          sts _T_dat+1,R3
 3048 2092E101          sts _T_dat,R2
 304C                   .dbline 1798
 304C           ;                                                 T_dat<<=8;
 304C 2090E101          lds R2,_T_dat
 3050 3090E201          lds R3,_T_dat+1
 3054 322C              mov R3,R2
 3056 2224              clr R2
 3058 3092E201          sts _T_dat+1,R3
 305C 2092E101          sts _T_dat,R2
 3060                   .dbline 1800
 3060           ;                                                 
 3060           ;                                                 SendTPS(0xdf);//第2路压力板
 3060 0FED              ldi R16,223
 3062 0E949F02          xcall _SendTPS
 3066                   .dbline 1801
 3066           ;                                                 T_dat|=ReceiveTPS();
 3066 0E940903          xcall _ReceiveTPS
 306A A02E              mov R10,R16
 306C 2A2C              mov R2,R10
 306E 3324              clr R3
 3070 4090E101          lds R4,_T_dat
 3074 5090E201          lds R5,_T_dat+1
 3078 4228              or R4,R2
 307A 5328              or R5,R3
 307C 5092E201          sts _T_dat+1,R5
 3080 4092E101          sts _T_dat,R4
 3084                   .dbline 1803
 3084           ;                                                 
 3084           ;                                                 SendManchester();     
 3084 0DD0              xcall _SendManchester
 3086                   .dbline 1804
 3086           ;                                               }
 3086                   .dbline 1805
 3086           ;                                       break;
 3086                   .dbline 1808
 3086           ;                                       
 3086           ;                                       default: 
 3086           ;                                               break;  
 3086           L502:
 3086                   .dbline 1810
 3086           ;                               }
 3086           ;                       }
 3086           L313:
 3086           L830:
 3086                   .dbline 1813
 3086           ;                       
 3086           ;               RDataEnd:
 3086           ;                       IntFlag=0;
 3086 2224              clr R2
 3088 2092BF01          sts _IntFlag,R2
 308C                   .dbline 1814
 308C           ;                       EIFR|=0x01;//清INT0中断标志
 308C 88B7              in R24,0x38
 308E 8160              ori R24,1
 3090 88BF              out 0x38,R24
 3092                   .dbline 1815
 3092           ;                       EIMSK|=0x01;//使能INT0中断 
 3092 89B7              in R24,0x39
 3094 8160              ori R24,1
 3096 89BF              out 0x39,R24
 3098                   .dbline 1816
 3098           ;               }  
 3098           L310:
 3098           L309:
 3098                   .dbline 1817
 3098           ;       }
 3098           L306:
 3098                   .dbline 795
 3098 0C942C06          xjmp L305
 309C           X237:
 309C                   .dbline -2
 309C           L291:
 309C                   .dbline 0 ; func end
 309C 2996              adiw R28,9
 309E 0895              ret
 30A0                   .dbsym l pt 2 i
 30A0                   .dbsym l mk 2 i
 30A0                   .dbsym l at 2 i
 30A0                   .dbsym l add 2 i
 30A0                   .dbsym l f 5 D
 30A0                   .dbsym r TestDataBlockCount 12 i
 30A0                   .dbsym r TestDataBlockIndex 10 i
 30A0                   .dbsym r i 10 c
 30A0                   .dbsym l l 1 l
 30A0                   .dbsym r j 10 i
 30A0                   .dbend
 30A0                   .dbfunc e SendManchester _SendManchester fV
 30A0           ;              L -> R20
                        .even
 30A0           _SendManchester::
 30A0 4A93              st -y,R20
 30A2                   .dbline -1
 30A2                   .dbline 1823
 30A2           ; }
 30A2           ; 
 30A2           ;  
 30A2           ; 
 30A2           ; void SendManchester(void) //曼码发送程序,总耗时最大约120+560+8400+720=9800us，最小约120+560+5040+720=6440us
 30A2           ; { //每位80us
 30A2                   .dbline 1828
 30A2           ;  //同步：1高6低
 30A2           ;  //1:    1高2低
 30A2           ;  //0：   1高4低  
 30A2           ;   unsigned char L;
 30A2           ;   SREG&=0x7f;//关总中断 
 30A2 8FB7              in R24,0x3f
 30A4 8F77              andi R24,127
 30A6 8FBF              out 0x3f,R24
 30A8                   .dbline 1830
 30A8           ;   
 30A8           ;     M1_H //先给总线放电，耗时约120us
 30A8                   .dbline 1830
 30A8 80916500          lds R24,101
 30AC 8860              ori R24,8
 30AE 80936500          sts 101,R24
 30B2                   .dbline 1830
 30B2                   .dbline 1834
 30B2           ;       
 30B2           ;   //模拟同步头数据
 30B2           ;       //4位命令
 30B2           ;       T_dat_buf[21]=(T_com&0x08)>>3;
 30B2 8091DA01          lds R24,_T_com
 30B6 8870              andi R24,8
 30B8 8695              lsr R24
 30BA 8695              lsr R24
 30BC 8695              lsr R24
 30BE 8093D801          sts _T_dat_buf+21,R24
 30C2                   .dbline 1835
 30C2           ;       T_dat_buf[20]=(T_com&0x04)>>2;
 30C2 8091DA01          lds R24,_T_com
 30C6 8470              andi R24,4
 30C8 8695              lsr R24
 30CA 8695              lsr R24
 30CC 8093D701          sts _T_dat_buf+20,R24
 30D0                   .dbline 1836
 30D0           ;       T_dat_buf[19]=(T_com&0x02)>>1;
 30D0 8091DA01          lds R24,_T_com
 30D4 8270              andi R24,2
 30D6 8695              lsr R24
 30D8 8093D601          sts _T_dat_buf+19,R24
 30DC                   .dbline 1837
 30DC           ;       T_dat_buf[18]=T_com&0x01;
 30DC 8091DA01          lds R24,_T_com
 30E0 8170              andi R24,1
 30E2 8093D501          sts _T_dat_buf+18,R24
 30E6                   .dbline 1839
 30E6           ;       //16位数据
 30E6           ;       T_dat_buf[17]=(T_dat&0x8000)>>15;
 30E6 2FE0              ldi R18,15
 30E8 30E0              ldi R19,0
 30EA 0091E101          lds R16,_T_dat
 30EE 1091E201          lds R17,_T_dat+1
 30F2 0070              andi R16,0
 30F4 1078              andi R17,128
 30F6 0E940000          xcall lsr16
 30FA 0093D401          sts _T_dat_buf+17,R16
 30FE                   .dbline 1840
 30FE           ;       T_dat_buf[16]=(T_dat&0x4000)>>14;
 30FE 2EE0              ldi R18,14
 3100 30E0              ldi R19,0
 3102 0091E101          lds R16,_T_dat
 3106 1091E201          lds R17,_T_dat+1
 310A 0070              andi R16,0
 310C 1074              andi R17,64
 310E 0E940000          xcall asr16
 3112 0093D301          sts _T_dat_buf+16,R16
 3116                   .dbline 1841
 3116           ;       T_dat_buf[15]=(T_dat&0x2000)>>13;
 3116 2DE0              ldi R18,13
 3118 30E0              ldi R19,0
 311A 0091E101          lds R16,_T_dat
 311E 1091E201          lds R17,_T_dat+1
 3122 0070              andi R16,0
 3124 1072              andi R17,32
 3126 0E940000          xcall asr16
 312A 0093D201          sts _T_dat_buf+15,R16
 312E                   .dbline 1842
 312E           ;       T_dat_buf[14]=(T_dat&0x1000)>>12;
 312E 2CE0              ldi R18,12
 3130 30E0              ldi R19,0
 3132 0091E101          lds R16,_T_dat
 3136 1091E201          lds R17,_T_dat+1
 313A 0070              andi R16,0
 313C 1071              andi R17,16
 313E 0E940000          xcall asr16
 3142 0093D101          sts _T_dat_buf+14,R16
 3146                   .dbline 1843
 3146           ;       T_dat_buf[13]=(T_dat&0x0800)>>11;
 3146 2BE0              ldi R18,11
 3148 30E0              ldi R19,0
 314A 0091E101          lds R16,_T_dat
 314E 1091E201          lds R17,_T_dat+1
 3152 0070              andi R16,0
 3154 1870              andi R17,8
 3156 0E940000          xcall asr16
 315A 0093D001          sts _T_dat_buf+13,R16
 315E                   .dbline 1844
 315E           ;     T_dat_buf[12]=(T_dat&0x0400)>>10;
 315E 2AE0              ldi R18,10
 3160 30E0              ldi R19,0
 3162 0091E101          lds R16,_T_dat
 3166 1091E201          lds R17,_T_dat+1
 316A 0070              andi R16,0
 316C 1470              andi R17,4
 316E 0E940000          xcall asr16
 3172 0093CF01          sts _T_dat_buf+12,R16
 3176                   .dbline 1845
 3176           ;     T_dat_buf[11]=(T_dat&0x0200)>>9;
 3176 29E0              ldi R18,9
 3178 30E0              ldi R19,0
 317A 0091E101          lds R16,_T_dat
 317E 1091E201          lds R17,_T_dat+1
 3182 0070              andi R16,0
 3184 1270              andi R17,2
 3186 0E940000          xcall asr16
 318A 0093CE01          sts _T_dat_buf+11,R16
 318E                   .dbline 1846
 318E           ;       T_dat_buf[10]=(T_dat&0x0100)>>8;
 318E 8091E101          lds R24,_T_dat
 3192 9091E201          lds R25,_T_dat+1
 3196 8070              andi R24,0
 3198 9170              andi R25,1
 319A 1C01              movw R2,R24
 319C 232C              mov R2,R3
 319E 3324              clr R3
 31A0 27FC              sbrc R2,7
 31A2 3094              com R3
 31A4 2092CD01          sts _T_dat_buf+10,R2
 31A8                   .dbline 1847
 31A8           ;       T_dat_buf[9]=(T_dat&0x0080)>>7;
 31A8 27E0              ldi R18,7
 31AA 30E0              ldi R19,0
 31AC 0091E101          lds R16,_T_dat
 31B0 1091E201          lds R17,_T_dat+1
 31B4 0078              andi R16,128
 31B6 1070              andi R17,0
 31B8 0E940000          xcall asr16
 31BC 0093CC01          sts _T_dat_buf+9,R16
 31C0                   .dbline 1848
 31C0           ;       T_dat_buf[8]=(T_dat&0x0040)>>6;
 31C0 26E0              ldi R18,6
 31C2 30E0              ldi R19,0
 31C4 0091E101          lds R16,_T_dat
 31C8 1091E201          lds R17,_T_dat+1
 31CC 0074              andi R16,64
 31CE 1070              andi R17,0
 31D0 0E940000          xcall asr16
 31D4 0093CB01          sts _T_dat_buf+8,R16
 31D8                   .dbline 1849
 31D8           ;       T_dat_buf[7]=(T_dat&0x0020)>>5;
 31D8 25E0              ldi R18,5
 31DA 30E0              ldi R19,0
 31DC 0091E101          lds R16,_T_dat
 31E0 1091E201          lds R17,_T_dat+1
 31E4 0072              andi R16,32
 31E6 1070              andi R17,0
 31E8 0E940000          xcall asr16
 31EC 0093CA01          sts _T_dat_buf+7,R16
 31F0                   .dbline 1850
 31F0           ;       T_dat_buf[6]=(T_dat&0x0010)>>4;
 31F0 8091E101          lds R24,_T_dat
 31F4 9091E201          lds R25,_T_dat+1
 31F8 8071              andi R24,16
 31FA 9070              andi R25,0
 31FC 1C01              movw R2,R24
 31FE 3594              asr R3
 3200 2794              ror R2
 3202 3594              asr R3
 3204 2794              ror R2
 3206 3594              asr R3
 3208 2794              ror R2
 320A 3594              asr R3
 320C 2794              ror R2
 320E 2092C901          sts _T_dat_buf+6,R2
 3212                   .dbline 1851
 3212           ;       T_dat_buf[5]=(T_dat&0x0008)>>3;
 3212 8091E101          lds R24,_T_dat
 3216 9091E201          lds R25,_T_dat+1
 321A 8870              andi R24,8
 321C 9070              andi R25,0
 321E 1C01              movw R2,R24
 3220 3594              asr R3
 3222 2794              ror R2
 3224 3594              asr R3
 3226 2794              ror R2
 3228 3594              asr R3
 322A 2794              ror R2
 322C 2092C801          sts _T_dat_buf+5,R2
 3230                   .dbline 1852
 3230           ;       T_dat_buf[4]=(T_dat&0x0004)>>2;
 3230 8091E101          lds R24,_T_dat
 3234 9091E201          lds R25,_T_dat+1
 3238 8470              andi R24,4
 323A 9070              andi R25,0
 323C 1C01              movw R2,R24
 323E 3594              asr R3
 3240 2794              ror R2
 3242 3594              asr R3
 3244 2794              ror R2
 3246 2092C701          sts _T_dat_buf+4,R2
 324A                   .dbline 1853
 324A           ;       T_dat_buf[3]=(T_dat&0x0002)>>1;
 324A 8091E101          lds R24,_T_dat
 324E 9091E201          lds R25,_T_dat+1
 3252 8270              andi R24,2
 3254 9070              andi R25,0
 3256 1C01              movw R2,R24
 3258 3594              asr R3
 325A 2794              ror R2
 325C 2092C601          sts _T_dat_buf+3,R2
 3260                   .dbline 1854
 3260           ;       T_dat_buf[2]=T_dat&0x0001;
 3260 8091E101          lds R24,_T_dat
 3264 9091E201          lds R25,_T_dat+1
 3268 8170              andi R24,1
 326A 9070              andi R25,0
 326C 8093C501          sts _T_dat_buf+2,R24
 3270                   .dbline 1856
 3270           ;       //计算校验位，奇校验
 3270           ;       T_dat_buf[1]=1;
 3270 81E0              ldi R24,1
 3272 8093C401          sts _T_dat_buf+1,R24
 3276                   .dbline 1857
 3276           ;       for(L=2;L<22;L++)
 3276 42E0              ldi R20,2
 3278 0DC0              xjmp L856
 327A           L853:
 327A                   .dbline 1858
 327A           ;               {T_dat_buf[1]^=T_dat_buf[L];}
 327A                   .dbline 1858
 327A 80E0              ldi R24,<_T_dat_buf
 327C 90E0              ldi R25,>_T_dat_buf
 327E E42F              mov R30,R20
 3280 FF27              clr R31
 3282 E80F              add R30,R24
 3284 F91F              adc R31,R25
 3286 2080              ldd R2,z+0
 3288 3090C401          lds R3,_T_dat_buf+1
 328C 3224              eor R3,R2
 328E 3092C401          sts _T_dat_buf+1,R3
 3292                   .dbline 1858
 3292           L854:
 3292                   .dbline 1857
 3292 4395              inc R20
 3294           L856:
 3294                   .dbline 1857
 3294 4631              cpi R20,22
 3296 88F3              brlo L853
 3298           X279:
 3298                   .dbline 1859
 3298           ;     DELAY80
 3298 2224              clr R2
 329A 3324              clr R3
 329C 3092BE01          sts _Tt+1,R3
 32A0 2092BD01          sts _Tt,R2
 32A4 09C0              xjmp L861
 32A6           L858:
 32A6                   .dbline 1859
 32A6           L859:
 32A6                   .dbline 1859
 32A6 8091BD01          lds R24,_Tt
 32AA 9091BE01          lds R25,_Tt+1
 32AE 0196              adiw R24,1
 32B0 9093BE01          sts _Tt+1,R25
 32B4 8093BD01          sts _Tt,R24
 32B8           L861:
 32B8                   .dbline 1859
 32B8 8091BD01          lds R24,_Tt
 32BC 9091BE01          lds R25,_Tt+1
 32C0 8032              cpi R24,32
 32C2 E0E0              ldi R30,0
 32C4 9E07              cpc R25,R30
 32C6 78F3              brlo L858
 32C8           X280:
 32C8                   .dbline 1860
 32C8           ;     M1_L
 32C8                   .dbline 1860
 32C8 80916500          lds R24,101
 32CC 877F              andi R24,247
 32CE 80936500          sts 101,R24
 32D2                   .dbline 1860
 32D2                   .dbline 1861
 32D2           ;       DELAY40
 32D2 2224              clr R2
 32D4 3324              clr R3
 32D6 3092BE01          sts _Tt+1,R3
 32DA 2092BD01          sts _Tt,R2
 32DE 09C0              xjmp L865
 32E0           L862:
 32E0                   .dbline 1861
 32E0           L863:
 32E0                   .dbline 1861
 32E0 8091BD01          lds R24,_Tt
 32E4 9091BE01          lds R25,_Tt+1
 32E8 0196              adiw R24,1
 32EA 9093BE01          sts _Tt+1,R25
 32EE 8093BD01          sts _Tt,R24
 32F2           L865:
 32F2                   .dbline 1861
 32F2 8091BD01          lds R24,_Tt
 32F6 9091BE01          lds R25,_Tt+1
 32FA 8031              cpi R24,16
 32FC E0E0              ldi R30,0
 32FE 9E07              cpc R25,R30
 3300 78F3              brlo L862
 3302           X281:
 3302                   .dbline 1866
 3302           ;    
 3302           ;    
 3302           ;       //同步头,560us
 3302           ;       //充电开始，高80us       
 3302           ;       M2_H    
 3302                   .dbline 1866
 3302 80916500          lds R24,101
 3306 8061              ori R24,16
 3308 80936500          sts 101,R24
 330C                   .dbline 1866
 330C                   .dbline 1867
 330C           ;       DELAY80
 330C 2224              clr R2
 330E 3324              clr R3
 3310 3092BE01          sts _Tt+1,R3
 3314 2092BD01          sts _Tt,R2
 3318 09C0              xjmp L869
 331A           L866:
 331A                   .dbline 1867
 331A           L867:
 331A                   .dbline 1867
 331A 8091BD01          lds R24,_Tt
 331E 9091BE01          lds R25,_Tt+1
 3322 0196              adiw R24,1
 3324 9093BE01          sts _Tt+1,R25
 3328 8093BD01          sts _Tt,R24
 332C           L869:
 332C                   .dbline 1867
 332C 8091BD01          lds R24,_Tt
 3330 9091BE01          lds R25,_Tt+1
 3334 8032              cpi R24,32
 3336 E0E0              ldi R30,0
 3338 9E07              cpc R25,R30
 333A 78F3              brlo L866
 333C           X282:
 333C                   .dbline 1868
 333C           ;       M2_L   //充电结束       
 333C                   .dbline 1868
 333C 80916500          lds R24,101
 3340 8F7E              andi R24,239
 3342 80936500          sts 101,R24
 3346                   .dbline 1868
 3346                   .dbline 1870
 3346           ;       //放电开始，低80*6=480us
 3346           ;       DELAY40
 3346 2224              clr R2
 3348 3324              clr R3
 334A 3092BE01          sts _Tt+1,R3
 334E 2092BD01          sts _Tt,R2
 3352 09C0              xjmp L873
 3354           L870:
 3354                   .dbline 1870
 3354           L871:
 3354                   .dbline 1870
 3354 8091BD01          lds R24,_Tt
 3358 9091BE01          lds R25,_Tt+1
 335C 0196              adiw R24,1
 335E 9093BE01          sts _Tt+1,R25
 3362 8093BD01          sts _Tt,R24
 3366           L873:
 3366                   .dbline 1870
 3366 8091BD01          lds R24,_Tt
 336A 9091BE01          lds R25,_Tt+1
 336E 8031              cpi R24,16
 3370 E0E0              ldi R30,0
 3372 9E07              cpc R25,R30
 3374 78F3              brlo L870
 3376           X283:
 3376                   .dbline 1871
 3376           ;       M1_H    
 3376                   .dbline 1871
 3376 80916500          lds R24,101
 337A 8860              ori R24,8
 337C 80936500          sts 101,R24
 3380                   .dbline 1871
 3380                   .dbline 1872
 3380           ;     DELAY80
 3380 2224              clr R2
 3382 3324              clr R3
 3384 3092BE01          sts _Tt+1,R3
 3388 2092BD01          sts _Tt,R2
 338C 09C0              xjmp L877
 338E           L874:
 338E                   .dbline 1872
 338E           L875:
 338E                   .dbline 1872
 338E 8091BD01          lds R24,_Tt
 3392 9091BE01          lds R25,_Tt+1
 3396 0196              adiw R24,1
 3398 9093BE01          sts _Tt+1,R25
 339C 8093BD01          sts _Tt,R24
 33A0           L877:
 33A0                   .dbline 1872
 33A0 8091BD01          lds R24,_Tt
 33A4 9091BE01          lds R25,_Tt+1
 33A8 8032              cpi R24,32
 33AA E0E0              ldi R30,0
 33AC 9E07              cpc R25,R30
 33AE 78F3              brlo L874
 33B0           X284:
 33B0                   .dbline 1873
 33B0           ;       DELAY80
 33B0 2224              clr R2
 33B2 3324              clr R3
 33B4 3092BE01          sts _Tt+1,R3
 33B8 2092BD01          sts _Tt,R2
 33BC 09C0              xjmp L881
 33BE           L878:
 33BE                   .dbline 1873
 33BE           L879:
 33BE                   .dbline 1873
 33BE 8091BD01          lds R24,_Tt
 33C2 9091BE01          lds R25,_Tt+1
 33C6 0196              adiw R24,1
 33C8 9093BE01          sts _Tt+1,R25
 33CC 8093BD01          sts _Tt,R24
 33D0           L881:
 33D0                   .dbline 1873
 33D0 8091BD01          lds R24,_Tt
 33D4 9091BE01          lds R25,_Tt+1
 33D8 8032              cpi R24,32
 33DA E0E0              ldi R30,0
 33DC 9E07              cpc R25,R30
 33DE 78F3              brlo L878
 33E0           X285:
 33E0                   .dbline 1874
 33E0           ;       DELAY80
 33E0 2224              clr R2
 33E2 3324              clr R3
 33E4 3092BE01          sts _Tt+1,R3
 33E8 2092BD01          sts _Tt,R2
 33EC 09C0              xjmp L885
 33EE           L882:
 33EE                   .dbline 1874
 33EE           L883:
 33EE                   .dbline 1874
 33EE 8091BD01          lds R24,_Tt
 33F2 9091BE01          lds R25,_Tt+1
 33F6 0196              adiw R24,1
 33F8 9093BE01          sts _Tt+1,R25
 33FC 8093BD01          sts _Tt,R24
 3400           L885:
 3400                   .dbline 1874
 3400 8091BD01          lds R24,_Tt
 3404 9091BE01          lds R25,_Tt+1
 3408 8032              cpi R24,32
 340A E0E0              ldi R30,0
 340C 9E07              cpc R25,R30
 340E 78F3              brlo L882
 3410           X286:
 3410                   .dbline 1875
 3410           ;       DELAY80
 3410 2224              clr R2
 3412 3324              clr R3
 3414 3092BE01          sts _Tt+1,R3
 3418 2092BD01          sts _Tt,R2
 341C 09C0              xjmp L889
 341E           L886:
 341E                   .dbline 1875
 341E           L887:
 341E                   .dbline 1875
 341E 8091BD01          lds R24,_Tt
 3422 9091BE01          lds R25,_Tt+1
 3426 0196              adiw R24,1
 3428 9093BE01          sts _Tt+1,R25
 342C 8093BD01          sts _Tt,R24
 3430           L889:
 3430                   .dbline 1875
 3430 8091BD01          lds R24,_Tt
 3434 9091BE01          lds R25,_Tt+1
 3438 8032              cpi R24,32
 343A E0E0              ldi R30,0
 343C 9E07              cpc R25,R30
 343E 78F3              brlo L886
 3440           X287:
 3440                   .dbline 1876
 3440           ;       DELAY80
 3440 2224              clr R2
 3442 3324              clr R3
 3444 3092BE01          sts _Tt+1,R3
 3448 2092BD01          sts _Tt,R2
 344C 09C0              xjmp L893
 344E           L890:
 344E                   .dbline 1876
 344E           L891:
 344E                   .dbline 1876
 344E 8091BD01          lds R24,_Tt
 3452 9091BE01          lds R25,_Tt+1
 3456 0196              adiw R24,1
 3458 9093BE01          sts _Tt+1,R25
 345C 8093BD01          sts _Tt,R24
 3460           L893:
 3460                   .dbline 1876
 3460 8091BD01          lds R24,_Tt
 3464 9091BE01          lds R25,_Tt+1
 3468 8032              cpi R24,32
 346A E0E0              ldi R30,0
 346C 9E07              cpc R25,R30
 346E 78F3              brlo L890
 3470           X288:
 3470                   .dbline 1877
 3470           ;       M1_L    
 3470                   .dbline 1877
 3470 80916500          lds R24,101
 3474 877F              andi R24,247
 3476 80936500          sts 101,R24
 347A                   .dbline 1877
 347A                   .dbline 1878
 347A           ;       DELAY40  //放电结束
 347A 2224              clr R2
 347C 3324              clr R3
 347E 3092BE01          sts _Tt+1,R3
 3482 2092BD01          sts _Tt,R2
 3486 09C0              xjmp L897
 3488           L894:
 3488                   .dbline 1878
 3488           L895:
 3488                   .dbline 1878
 3488 8091BD01          lds R24,_Tt
 348C 9091BE01          lds R25,_Tt+1
 3490 0196              adiw R24,1
 3492 9093BE01          sts _Tt+1,R25
 3496 8093BD01          sts _Tt,R24
 349A           L897:
 349A                   .dbline 1878
 349A 8091BD01          lds R24,_Tt
 349E 9091BE01          lds R25,_Tt+1
 34A2 8031              cpi R24,16
 34A4 E0E0              ldi R30,0
 34A6 9E07              cpc R25,R30
 34A8 78F3              brlo L894
 34AA           X289:
 34AA                   .dbline 1881
 34AA           ;       
 34AA           ;      //连续发送 ,全0时每位400us，共8400us，全1时每位240us，共5040us
 34AA           ;       for(L=21;L>0;L--)
 34AA 45E1              ldi R20,21
 34AC 24C1              xjmp L901
 34AE           L898:
 34AE                   .dbline 1882
 34AE           ;       {   
 34AE                   .dbline 1883
 34AE           ;         if(T_dat_buf[L])//1，一高二低
 34AE 80E0              ldi R24,<_T_dat_buf
 34B0 90E0              ldi R25,>_T_dat_buf
 34B2 E42F              mov R30,R20
 34B4 FF27              clr R31
 34B6 E80F              add R30,R24
 34B8 F91F              adc R31,R25
 34BA 2080              ldd R2,z+0
 34BC 2220              tst R2
 34BE 09F4              brne X312
 34C0 75C0              xjmp L902
 34C2           X312:
 34C2           X290:
 34C2                   .dbline 1884
 34C2           ;         {                             
 34C2                   .dbline 1885
 34C2           ;               M2_H 
 34C2                   .dbline 1885
 34C2 80916500          lds R24,101
 34C6 8061              ori R24,16
 34C8 80936500          sts 101,R24
 34CC                   .dbline 1885
 34CC                   .dbline 1886
 34CC           ;               DELAY80
 34CC 2224              clr R2
 34CE 3324              clr R3
 34D0 3092BE01          sts _Tt+1,R3
 34D4 2092BD01          sts _Tt,R2
 34D8 09C0              xjmp L907
 34DA           L904:
 34DA                   .dbline 1886
 34DA           L905:
 34DA                   .dbline 1886
 34DA 8091BD01          lds R24,_Tt
 34DE 9091BE01          lds R25,_Tt+1
 34E2 0196              adiw R24,1
 34E4 9093BE01          sts _Tt+1,R25
 34E8 8093BD01          sts _Tt,R24
 34EC           L907:
 34EC                   .dbline 1886
 34EC 8091BD01          lds R24,_Tt
 34F0 9091BE01          lds R25,_Tt+1
 34F4 8032              cpi R24,32
 34F6 E0E0              ldi R30,0
 34F8 9E07              cpc R25,R30
 34FA 78F3              brlo L904
 34FC           X291:
 34FC                   .dbline 1887
 34FC           ;               M2_L
 34FC                   .dbline 1887
 34FC 80916500          lds R24,101
 3500 8F7E              andi R24,239
 3502 80936500          sts 101,R24
 3506                   .dbline 1887
 3506                   .dbline 1888
 3506           ;                       DELAY40
 3506 2224              clr R2
 3508 3324              clr R3
 350A 3092BE01          sts _Tt+1,R3
 350E 2092BD01          sts _Tt,R2
 3512 09C0              xjmp L911
 3514           L908:
 3514                   .dbline 1888
 3514           L909:
 3514                   .dbline 1888
 3514 8091BD01          lds R24,_Tt
 3518 9091BE01          lds R25,_Tt+1
 351C 0196              adiw R24,1
 351E 9093BE01          sts _Tt+1,R25
 3522 8093BD01          sts _Tt,R24
 3526           L911:
 3526                   .dbline 1888
 3526 8091BD01          lds R24,_Tt
 352A 9091BE01          lds R25,_Tt+1
 352E 8031              cpi R24,16
 3530 E0E0              ldi R30,0
 3532 9E07              cpc R25,R30
 3534 78F3              brlo L908
 3536           X292:
 3536                   .dbline 1889
 3536           ;               M1_H       
 3536                   .dbline 1889
 3536 80916500          lds R24,101
 353A 8860              ori R24,8
 353C 80936500          sts 101,R24
 3540                   .dbline 1889
 3540                   .dbline 1890
 3540           ;               DELAY80
 3540 2224              clr R2
 3542 3324              clr R3
 3544 3092BE01          sts _Tt+1,R3
 3548 2092BD01          sts _Tt,R2
 354C 09C0              xjmp L915
 354E           L912:
 354E                   .dbline 1890
 354E           L913:
 354E                   .dbline 1890
 354E 8091BD01          lds R24,_Tt
 3552 9091BE01          lds R25,_Tt+1
 3556 0196              adiw R24,1
 3558 9093BE01          sts _Tt+1,R25
 355C 8093BD01          sts _Tt,R24
 3560           L915:
 3560                   .dbline 1890
 3560 8091BD01          lds R24,_Tt
 3564 9091BE01          lds R25,_Tt+1
 3568 8032              cpi R24,32
 356A E0E0              ldi R30,0
 356C 9E07              cpc R25,R30
 356E 78F3              brlo L912
 3570           X293:
 3570                   .dbline 1891
 3570           ;                       M1_L
 3570                   .dbline 1891
 3570 80916500          lds R24,101
 3574 877F              andi R24,247
 3576 80936500          sts 101,R24
 357A                   .dbline 1891
 357A                   .dbline 1892
 357A           ;                       DELAY40
 357A 2224              clr R2
 357C 3324              clr R3
 357E 3092BE01          sts _Tt+1,R3
 3582 2092BD01          sts _Tt,R2
 3586 09C0              xjmp L919
 3588           L916:
 3588                   .dbline 1892
 3588           L917:
 3588                   .dbline 1892
 3588 8091BD01          lds R24,_Tt
 358C 9091BE01          lds R25,_Tt+1
 3590 0196              adiw R24,1
 3592 9093BE01          sts _Tt+1,R25
 3596 8093BD01          sts _Tt,R24
 359A           L919:
 359A                   .dbline 1892
 359A 8091BD01          lds R24,_Tt
 359E 9091BE01          lds R25,_Tt+1
 35A2 8031              cpi R24,16
 35A4 E0E0              ldi R30,0
 35A6 9E07              cpc R25,R30
 35A8 78F3              brlo L916
 35AA           X294:
 35AA                   .dbline 1893
 35AA           ;               } 
 35AA A4C0              xjmp L903
 35AC           L902:
 35AC                   .dbline 1895
 35AC           ;        else           //0，一高四低                                           
 35AC           ;         {
 35AC                   .dbline 1896
 35AC           ;                       M2_H 
 35AC                   .dbline 1896
 35AC 80916500          lds R24,101
 35B0 8061              ori R24,16
 35B2 80936500          sts 101,R24
 35B6                   .dbline 1896
 35B6                   .dbline 1897
 35B6           ;               DELAY80
 35B6 2224              clr R2
 35B8 3324              clr R3
 35BA 3092BE01          sts _Tt+1,R3
 35BE 2092BD01          sts _Tt,R2
 35C2 09C0              xjmp L923
 35C4           L920:
 35C4                   .dbline 1897
 35C4           L921:
 35C4                   .dbline 1897
 35C4 8091BD01          lds R24,_Tt
 35C8 9091BE01          lds R25,_Tt+1
 35CC 0196              adiw R24,1
 35CE 9093BE01          sts _Tt+1,R25
 35D2 8093BD01          sts _Tt,R24
 35D6           L923:
 35D6                   .dbline 1897
 35D6 8091BD01          lds R24,_Tt
 35DA 9091BE01          lds R25,_Tt+1
 35DE 8032              cpi R24,32
 35E0 E0E0              ldi R30,0
 35E2 9E07              cpc R25,R30
 35E4 78F3              brlo L920
 35E6           X295:
 35E6                   .dbline 1898
 35E6           ;               M2_L
 35E6                   .dbline 1898
 35E6 80916500          lds R24,101
 35EA 8F7E              andi R24,239
 35EC 80936500          sts 101,R24
 35F0                   .dbline 1898
 35F0                   .dbline 1899
 35F0           ;                       DELAY40
 35F0 2224              clr R2
 35F2 3324              clr R3
 35F4 3092BE01          sts _Tt+1,R3
 35F8 2092BD01          sts _Tt,R2
 35FC 09C0              xjmp L927
 35FE           L924:
 35FE                   .dbline 1899
 35FE           L925:
 35FE                   .dbline 1899
 35FE 8091BD01          lds R24,_Tt
 3602 9091BE01          lds R25,_Tt+1
 3606 0196              adiw R24,1
 3608 9093BE01          sts _Tt+1,R25
 360C 8093BD01          sts _Tt,R24
 3610           L927:
 3610                   .dbline 1899
 3610 8091BD01          lds R24,_Tt
 3614 9091BE01          lds R25,_Tt+1
 3618 8031              cpi R24,16
 361A E0E0              ldi R30,0
 361C 9E07              cpc R25,R30
 361E 78F3              brlo L924
 3620           X296:
 3620                   .dbline 1900
 3620           ;               M1_H       
 3620                   .dbline 1900
 3620 80916500          lds R24,101
 3624 8860              ori R24,8
 3626 80936500          sts 101,R24
 362A                   .dbline 1900
 362A                   .dbline 1901
 362A           ;               DELAY80
 362A 2224              clr R2
 362C 3324              clr R3
 362E 3092BE01          sts _Tt+1,R3
 3632 2092BD01          sts _Tt,R2
 3636 09C0              xjmp L931
 3638           L928:
 3638                   .dbline 1901
 3638           L929:
 3638                   .dbline 1901
 3638 8091BD01          lds R24,_Tt
 363C 9091BE01          lds R25,_Tt+1
 3640 0196              adiw R24,1
 3642 9093BE01          sts _Tt+1,R25
 3646 8093BD01          sts _Tt,R24
 364A           L931:
 364A                   .dbline 1901
 364A 8091BD01          lds R24,_Tt
 364E 9091BE01          lds R25,_Tt+1
 3652 8032              cpi R24,32
 3654 E0E0              ldi R30,0
 3656 9E07              cpc R25,R30
 3658 78F3              brlo L928
 365A           X297:
 365A                   .dbline 1902
 365A           ;                       DELAY80
 365A 2224              clr R2
 365C 3324              clr R3
 365E 3092BE01          sts _Tt+1,R3
 3662 2092BD01          sts _Tt,R2
 3666 09C0              xjmp L935
 3668           L932:
 3668                   .dbline 1902
 3668           L933:
 3668                   .dbline 1902
 3668 8091BD01          lds R24,_Tt
 366C 9091BE01          lds R25,_Tt+1
 3670 0196              adiw R24,1
 3672 9093BE01          sts _Tt+1,R25
 3676 8093BD01          sts _Tt,R24
 367A           L935:
 367A                   .dbline 1902
 367A 8091BD01          lds R24,_Tt
 367E 9091BE01          lds R25,_Tt+1
 3682 8032              cpi R24,32
 3684 E0E0              ldi R30,0
 3686 9E07              cpc R25,R30
 3688 78F3              brlo L932
 368A           X298:
 368A                   .dbline 1903
 368A           ;                       DELAY80
 368A 2224              clr R2
 368C 3324              clr R3
 368E 3092BE01          sts _Tt+1,R3
 3692 2092BD01          sts _Tt,R2
 3696 09C0              xjmp L939
 3698           L936:
 3698                   .dbline 1903
 3698           L937:
 3698                   .dbline 1903
 3698 8091BD01          lds R24,_Tt
 369C 9091BE01          lds R25,_Tt+1
 36A0 0196              adiw R24,1
 36A2 9093BE01          sts _Tt+1,R25
 36A6 8093BD01          sts _Tt,R24
 36AA           L939:
 36AA                   .dbline 1903
 36AA 8091BD01          lds R24,_Tt
 36AE 9091BE01          lds R25,_Tt+1
 36B2 8032              cpi R24,32
 36B4 E0E0              ldi R30,0
 36B6 9E07              cpc R25,R30
 36B8 78F3              brlo L936
 36BA           X299:
 36BA                   .dbline 1904
 36BA           ;                       M1_L
 36BA                   .dbline 1904
 36BA 80916500          lds R24,101
 36BE 877F              andi R24,247
 36C0 80936500          sts 101,R24
 36C4                   .dbline 1904
 36C4                   .dbline 1905
 36C4           ;                       DELAY40
 36C4 2224              clr R2
 36C6 3324              clr R3
 36C8 3092BE01          sts _Tt+1,R3
 36CC 2092BD01          sts _Tt,R2
 36D0 09C0              xjmp L943
 36D2           L940:
 36D2                   .dbline 1905
 36D2           L941:
 36D2                   .dbline 1905
 36D2 8091BD01          lds R24,_Tt
 36D6 9091BE01          lds R25,_Tt+1
 36DA 0196              adiw R24,1
 36DC 9093BE01          sts _Tt+1,R25
 36E0 8093BD01          sts _Tt,R24
 36E4           L943:
 36E4                   .dbline 1905
 36E4 8091BD01          lds R24,_Tt
 36E8 9091BE01          lds R25,_Tt+1
 36EC 8031              cpi R24,16
 36EE E0E0              ldi R30,0
 36F0 9E07              cpc R25,R30
 36F2 78F3              brlo L940
 36F4           X300:
 36F4                   .dbline 1906
 36F4           ;               }
 36F4           L903:
 36F4                   .dbline 1907
 36F4           ;     }            
 36F4           L899:
 36F4                   .dbline 1881
 36F4 4A95              dec R20
 36F6           L901:
 36F6                   .dbline 1881
 36F6 80E0              ldi R24,0
 36F8 8417              cp R24,R20
 36FA 08F4              brsh X313
 36FC D8CE              xjmp L898
 36FE           X313:
 36FE           X301:
 36FE                   .dbline 1909
 36FE           ;                  //结束位，一高八低，720us
 36FE           ;                   M2_H 
 36FE                   .dbline 1909
 36FE 80916500          lds R24,101
 3702 8061              ori R24,16
 3704 80936500          sts 101,R24
 3708                   .dbline 1909
 3708                   .dbline 1910
 3708           ;                   DELAY80
 3708 2224              clr R2
 370A 3324              clr R3
 370C 3092BE01          sts _Tt+1,R3
 3710 2092BD01          sts _Tt,R2
 3714 09C0              xjmp L947
 3716           L944:
 3716                   .dbline 1910
 3716           L945:
 3716                   .dbline 1910
 3716 8091BD01          lds R24,_Tt
 371A 9091BE01          lds R25,_Tt+1
 371E 0196              adiw R24,1
 3720 9093BE01          sts _Tt+1,R25
 3724 8093BD01          sts _Tt,R24
 3728           L947:
 3728                   .dbline 1910
 3728 8091BD01          lds R24,_Tt
 372C 9091BE01          lds R25,_Tt+1
 3730 8032              cpi R24,32
 3732 E0E0              ldi R30,0
 3734 9E07              cpc R25,R30
 3736 78F3              brlo L944
 3738           X302:
 3738                   .dbline 1911
 3738           ;               M2_L
 3738                   .dbline 1911
 3738 80916500          lds R24,101
 373C 8F7E              andi R24,239
 373E 80936500          sts 101,R24
 3742                   .dbline 1911
 3742                   .dbline 1912
 3742           ;                       DELAY40
 3742 2224              clr R2
 3744 3324              clr R3
 3746 3092BE01          sts _Tt+1,R3
 374A 2092BD01          sts _Tt,R2
 374E 09C0              xjmp L951
 3750           L948:
 3750                   .dbline 1912
 3750           L949:
 3750                   .dbline 1912
 3750 8091BD01          lds R24,_Tt
 3754 9091BE01          lds R25,_Tt+1
 3758 0196              adiw R24,1
 375A 9093BE01          sts _Tt+1,R25
 375E 8093BD01          sts _Tt,R24
 3762           L951:
 3762                   .dbline 1912
 3762 8091BD01          lds R24,_Tt
 3766 9091BE01          lds R25,_Tt+1
 376A 8031              cpi R24,16
 376C E0E0              ldi R30,0
 376E 9E07              cpc R25,R30
 3770 78F3              brlo L948
 3772           X303:
 3772                   .dbline 1913
 3772           ;               M1_H       
 3772                   .dbline 1913
 3772 80916500          lds R24,101
 3776 8860              ori R24,8
 3778 80936500          sts 101,R24
 377C                   .dbline 1913
 377C                   .dbline 1914
 377C           ;               DELAY80
 377C 2224              clr R2
 377E 3324              clr R3
 3780 3092BE01          sts _Tt+1,R3
 3784 2092BD01          sts _Tt,R2
 3788 09C0              xjmp L955
 378A           L952:
 378A                   .dbline 1914
 378A           L953:
 378A                   .dbline 1914
 378A 8091BD01          lds R24,_Tt
 378E 9091BE01          lds R25,_Tt+1
 3792 0196              adiw R24,1
 3794 9093BE01          sts _Tt+1,R25
 3798 8093BD01          sts _Tt,R24
 379C           L955:
 379C                   .dbline 1914
 379C 8091BD01          lds R24,_Tt
 37A0 9091BE01          lds R25,_Tt+1
 37A4 8032              cpi R24,32
 37A6 E0E0              ldi R30,0
 37A8 9E07              cpc R25,R30
 37AA 78F3              brlo L952
 37AC           X304:
 37AC                   .dbline 1915
 37AC           ;                       DELAY80
 37AC 2224              clr R2
 37AE 3324              clr R3
 37B0 3092BE01          sts _Tt+1,R3
 37B4 2092BD01          sts _Tt,R2
 37B8 09C0              xjmp L959
 37BA           L956:
 37BA                   .dbline 1915
 37BA           L957:
 37BA                   .dbline 1915
 37BA 8091BD01          lds R24,_Tt
 37BE 9091BE01          lds R25,_Tt+1
 37C2 0196              adiw R24,1
 37C4 9093BE01          sts _Tt+1,R25
 37C8 8093BD01          sts _Tt,R24
 37CC           L959:
 37CC                   .dbline 1915
 37CC 8091BD01          lds R24,_Tt
 37D0 9091BE01          lds R25,_Tt+1
 37D4 8032              cpi R24,32
 37D6 E0E0              ldi R30,0
 37D8 9E07              cpc R25,R30
 37DA 78F3              brlo L956
 37DC           X305:
 37DC                   .dbline 1916
 37DC           ;                       DELAY80
 37DC 2224              clr R2
 37DE 3324              clr R3
 37E0 3092BE01          sts _Tt+1,R3
 37E4 2092BD01          sts _Tt,R2
 37E8 09C0              xjmp L963
 37EA           L960:
 37EA                   .dbline 1916
 37EA           L961:
 37EA                   .dbline 1916
 37EA 8091BD01          lds R24,_Tt
 37EE 9091BE01          lds R25,_Tt+1
 37F2 0196              adiw R24,1
 37F4 9093BE01          sts _Tt+1,R25
 37F8 8093BD01          sts _Tt,R24
 37FC           L963:
 37FC                   .dbline 1916
 37FC 8091BD01          lds R24,_Tt
 3800 9091BE01          lds R25,_Tt+1
 3804 8032              cpi R24,32
 3806 E0E0              ldi R30,0
 3808 9E07              cpc R25,R30
 380A 78F3              brlo L960
 380C           X306:
 380C                   .dbline 1917
 380C           ;                       DELAY80
 380C 2224              clr R2
 380E 3324              clr R3
 3810 3092BE01          sts _Tt+1,R3
 3814 2092BD01          sts _Tt,R2
 3818 09C0              xjmp L967
 381A           L964:
 381A                   .dbline 1917
 381A           L965:
 381A                   .dbline 1917
 381A 8091BD01          lds R24,_Tt
 381E 9091BE01          lds R25,_Tt+1
 3822 0196              adiw R24,1
 3824 9093BE01          sts _Tt+1,R25
 3828 8093BD01          sts _Tt,R24
 382C           L967:
 382C                   .dbline 1917
 382C 8091BD01          lds R24,_Tt
 3830 9091BE01          lds R25,_Tt+1
 3834 8032              cpi R24,32
 3836 E0E0              ldi R30,0
 3838 9E07              cpc R25,R30
 383A 78F3              brlo L964
 383C           X307:
 383C                   .dbline 1918
 383C           ;                       DELAY80
 383C 2224              clr R2
 383E 3324              clr R3
 3840 3092BE01          sts _Tt+1,R3
 3844 2092BD01          sts _Tt,R2
 3848 09C0              xjmp L971
 384A           L968:
 384A                   .dbline 1918
 384A           L969:
 384A                   .dbline 1918
 384A 8091BD01          lds R24,_Tt
 384E 9091BE01          lds R25,_Tt+1
 3852 0196              adiw R24,1
 3854 9093BE01          sts _Tt+1,R25
 3858 8093BD01          sts _Tt,R24
 385C           L971:
 385C                   .dbline 1918
 385C 8091BD01          lds R24,_Tt
 3860 9091BE01          lds R25,_Tt+1
 3864 8032              cpi R24,32
 3866 E0E0              ldi R30,0
 3868 9E07              cpc R25,R30
 386A 78F3              brlo L968
 386C           X308:
 386C                   .dbline 1919
 386C           ;                       DELAY80
 386C 2224              clr R2
 386E 3324              clr R3
 3870 3092BE01          sts _Tt+1,R3
 3874 2092BD01          sts _Tt,R2
 3878 09C0              xjmp L975
 387A           L972:
 387A                   .dbline 1919
 387A           L973:
 387A                   .dbline 1919
 387A 8091BD01          lds R24,_Tt
 387E 9091BE01          lds R25,_Tt+1
 3882 0196              adiw R24,1
 3884 9093BE01          sts _Tt+1,R25
 3888 8093BD01          sts _Tt,R24
 388C           L975:
 388C                   .dbline 1919
 388C 8091BD01          lds R24,_Tt
 3890 9091BE01          lds R25,_Tt+1
 3894 8032              cpi R24,32
 3896 E0E0              ldi R30,0
 3898 9E07              cpc R25,R30
 389A 78F3              brlo L972
 389C           X309:
 389C                   .dbline 1920
 389C           ;                       DELAY80
 389C 2224              clr R2
 389E 3324              clr R3
 38A0 3092BE01          sts _Tt+1,R3
 38A4 2092BD01          sts _Tt,R2
 38A8 09C0              xjmp L979
 38AA           L976:
 38AA                   .dbline 1920
 38AA           L977:
 38AA                   .dbline 1920
 38AA 8091BD01          lds R24,_Tt
 38AE 9091BE01          lds R25,_Tt+1
 38B2 0196              adiw R24,1
 38B4 9093BE01          sts _Tt+1,R25
 38B8 8093BD01          sts _Tt,R24
 38BC           L979:
 38BC                   .dbline 1920
 38BC 8091BD01          lds R24,_Tt
 38C0 9091BE01          lds R25,_Tt+1
 38C4 8032              cpi R24,32
 38C6 E0E0              ldi R30,0
 38C8 9E07              cpc R25,R30
 38CA 78F3              brlo L976
 38CC           X310:
 38CC                   .dbline 1921
 38CC           ;                       M1_L
 38CC                   .dbline 1921
 38CC 80916500          lds R24,101
 38D0 877F              andi R24,247
 38D2 80936500          sts 101,R24
 38D6                   .dbline 1921
 38D6                   .dbline 1922
 38D6           ;                       DELAY40
 38D6 2224              clr R2
 38D8 3324              clr R3
 38DA 3092BE01          sts _Tt+1,R3
 38DE 2092BD01          sts _Tt,R2
 38E2 09C0              xjmp L983
 38E4           L980:
 38E4                   .dbline 1922
 38E4           L981:
 38E4                   .dbline 1922
 38E4 8091BD01          lds R24,_Tt
 38E8 9091BE01          lds R25,_Tt+1
 38EC 0196              adiw R24,1
 38EE 9093BE01          sts _Tt+1,R25
 38F2 8093BD01          sts _Tt,R24
 38F6           L983:
 38F6                   .dbline 1922
 38F6 8091BD01          lds R24,_Tt
 38FA 9091BE01          lds R25,_Tt+1
 38FE 8031              cpi R24,16
 3900 E0E0              ldi R30,0
 3902 9E07              cpc R25,R30
 3904 78F3              brlo L980
 3906           X311:
 3906                   .dbline 1924
 3906           ;       
 3906           ;       EIFR|=0x08;//清INT3中断标志 
 3906 88B7              in R24,0x38
 3908 8860              ori R24,8
 390A 88BF              out 0x38,R24
 390C                   .dbline 1925
 390C           ;       SREG|=0x80; //开总中断
 390C 7894              bset 7
 390E                   .dbline -2
 390E           L831:
 390E                   .dbline 0 ; func end
 390E 4991              ld R20,y+
 3910 0895              ret
 3912                   .dbsym r L 20 c
 3912                   .dbend
 3912                   .dbfunc e EEPROM_write _EEPROM_write fV
 3912           ;           Data -> R18
 3912           ;        Address -> R16,R17
                        .even
 3912           _EEPROM_write::
 3912                   .dbline -1
 3912                   .dbline 1931
 3912           ; }
 3912           ; 
 3912           ; 
 3912           ; 
 3912           ; void EEPROM_write(unsigned int Address,unsigned char Data)    //内部EEPROM写
 3912           ; {//时钟频率为1MHz，典型的EEPROM字节写耗时约8.5ms
 3912           L985:
 3912                   .dbline 1932
 3912           ;     while(EECR&0x02);                   // 等待上一次写操作结束
 3912           L986:
 3912                   .dbline 1932
 3912 E199              sbic 0x1c,1
 3914 FECF              rjmp L985
 3916           X314:
 3916                   .dbline 1933
 3916           ;     EEAR=Address;
 3916 1FBB              out 0x1f,R17
 3918 0EBB              out 0x1e,R16
 391A                   .dbline 1934
 391A           ;     EEDR=Data;                                // 设置地址和数据寄存器
 391A 2DBB              out 0x1d,R18
 391C                   .dbline 1935
 391C           ;     EECR|=0x04;                         //置位EEMWE
 391C E29A              sbi 0x1c,2
 391E                   .dbline 1936
 391E           ;     EECR|=0x02;                         //置位EEWE 以启动写操作
 391E E19A              sbi 0x1c,1
 3920                   .dbline -2
 3920           L984:
 3920                   .dbline 0 ; func end
 3920 0895              ret
 3922                   .dbsym r Data 18 c
 3922                   .dbsym r Address 16 i
 3922                   .dbend
 3922                   .dbfunc e EEPROM_read _EEPROM_read fc
 3922           ;        Address -> R16,R17
                        .even
 3922           _EEPROM_read::
 3922                   .dbline -1
 3922                   .dbline 1940
 3922           ; }
 3922           ; 
 3922           ; unsigned char EEPROM_read(unsigned int Address)                               //内部EEPROM读
 3922           ; {
 3922           L989:
 3922                   .dbline 1941
 3922           ;     while(EECR&0x02);                                 //等待上一次操作结束
 3922           L990:
 3922                   .dbline 1941
 3922 E199              sbic 0x1c,1
 3924 FECF              rjmp L989
 3926           X315:
 3926                   .dbline 1942
 3926           ;     EEAR = Address;                     //设置地址寄存器                                              
 3926 1FBB              out 0x1f,R17
 3928 0EBB              out 0x1e,R16
 392A                   .dbline 1943
 392A           ;       EECR|=0x01;                                     //设置EERE 以启动读操作
 392A E09A              sbi 0x1c,0
 392C                   .dbline 1944
 392C           ;     return EEDR;                              //自数据寄存器返回数据
 392C 0DB3              in R16,0x1d
 392E                   .dbline -2
 392E           L988:
 392E                   .dbline 0 ; func end
 392E 0895              ret
 3930                   .dbsym r Address 16 i
 3930                   .dbend
 3930                   .dbfunc e crc16 _crc16 fV
 3930           ;             ii -> R20,R21
 3930           ;             ch -> R10
 3930           ;             cl -> R22
 3930           ;         savelo -> R14
 3930           ;         savehi -> y+0
 3930           ;           flag -> R12,R13
 3930           ;         length -> R18,R19
 3930           ;         r_data -> y+11
                        .even
 3930           _crc16::
 3930 0E940000          xcall push_arg4
 3934 0E940000          xcall push_xgsetF0FC
 3938 2197              sbiw R28,1
 393A                   .dbline -1
 393A                   .dbline 1948
 393A           ; }    
 393A           ; 
 393A           ; void crc16(unsigned char r_data[],unsigned int length)
 393A           ; {
 393A                   .dbline 1952
 393A           ;         unsigned char cl,ch;
 393A           ;         unsigned char savehi,savelo;
 393A           ;         int ii,flag;
 393A           ;         crc16hi=0xFF;
 393A 8FEF              ldi R24,255
 393C 80932100          sts _crc16hi,R24
 3940                   .dbline 1953
 3940           ;         crc16lo=0xFF;
 3940 80932000          sts _crc16lo,R24
 3944                   .dbline 1954
 3944           ;         cl=0x1;
 3944 61E0              ldi R22,1
 3946                   .dbline 1955
 3946           ;         ch=0xA0;
 3946 80EA              ldi R24,160
 3948 A82E              mov R10,R24
 394A                   .dbline 1956
 394A           ;         for (ii=0;ii<length-2;ii++)
 394A 4427              clr R20
 394C 5527              clr R21
 394E 38C0              xjmp L996
 3950           L993:
 3950                   .dbline 1957
 3950           ;         {
 3950                   .dbline 1958
 3950           ;             crc16lo=(crc16lo ^ r_data[ii]);
 3950 FA01              movw R30,R20
 3952 0B84              ldd R0,y+11
 3954 1C84              ldd R1,y+12
 3956 E00D              add R30,R0
 3958 F11D              adc R31,R1
 395A 2080              ldd R2,z+0
 395C 30902000          lds R3,_crc16lo
 3960 3224              eor R3,R2
 3962 30922000          sts _crc16lo,R3
 3966                   .dbline 1959
 3966           ;                 for (flag=0;flag<8;flag++)
 3966 CC24              clr R12
 3968 DD24              clr R13
 396A           L997:
 396A                   .dbline 1960
 396A           ;                 {
 396A                   .dbline 1961
 396A           ;                        savehi=crc16hi;
 396A 20902100          lds R2,_crc16hi
 396E 2882              std y+0,R2
 3970                   .dbline 1962
 3970           ;                         savelo=crc16lo;
 3970 E0902000          lds R14,_crc16lo
 3974                   .dbline 1963
 3974           ;                        crc16hi=(crc16hi>>1);
 3974 2694              lsr R2
 3976 20922100          sts _crc16hi,R2
 397A                   .dbline 1964
 397A           ;                        crc16lo=(crc16lo>>1);
 397A 2E2C              mov R2,R14
 397C 2694              lsr R2
 397E 20922000          sts _crc16lo,R2
 3982                   .dbline 1965
 3982           ;                         if ((savehi & 0x01)==0x01)
 3982 8881              ldd R24,y+0
 3984 8170              andi R24,1
 3986 8130              cpi R24,1
 3988 21F4              brne L1001
 398A           X316:
 398A                   .dbline 1966
 398A           ;                                 crc16lo=(crc16lo | 0x80);
 398A 822D              mov R24,R2
 398C 8068              ori R24,128
 398E 80932000          sts _crc16lo,R24
 3992           L1001:
 3992                   .dbline 1967
 3992           ;                         if        ((savelo & 0x01)==0x01)
 3992 8E2D              mov R24,R14
 3994 8170              andi R24,1
 3996 8130              cpi R24,1
 3998 51F4              brne L1003
 399A           X317:
 399A                   .dbline 1968
 399A           ;                         {
 399A                   .dbline 1969
 399A           ;                                 crc16hi = (crc16hi ^ ch);
 399A 20902100          lds R2,_crc16hi
 399E 2A24              eor R2,R10
 39A0 20922100          sts _crc16hi,R2
 39A4                   .dbline 1970
 39A4           ;                                                               crc16lo = (crc16lo ^ cl);
 39A4 20902000          lds R2,_crc16lo
 39A8 2626              eor R2,R22
 39AA 20922000          sts _crc16lo,R2
 39AE                   .dbline 1971
 39AE           ;                         }        
 39AE           L1003:
 39AE                   .dbline 1972
 39AE           ;                 }
 39AE           L998:
 39AE                   .dbline 1959
 39AE C601              movw R24,R12
 39B0 0196              adiw R24,1
 39B2 6C01              movw R12,R24
 39B4                   .dbline 1959
 39B4 8830              cpi R24,8
 39B6 E0E0              ldi R30,0
 39B8 9E07              cpc R25,R30
 39BA BCF2              brlt L997
 39BC           X318:
 39BC                   .dbline 1973
 39BC           ;         }
 39BC           L994:
 39BC                   .dbline 1956
 39BC 4F5F              subi R20,255  ; offset = 1
 39BE 5F4F              sbci R21,255
 39C0           L996:
 39C0                   .dbline 1956
 39C0 C901              movw R24,R18
 39C2 0297              sbiw R24,2
 39C4 4817              cp R20,R24
 39C6 5907              cpc R21,R25
 39C8 08F4              brsh X320
 39CA C2CF              xjmp L993
 39CC           X320:
 39CC           X319:
 39CC                   .dbline -2
 39CC           L992:
 39CC                   .dbline 0 ; func end
 39CC 2196              adiw R28,1
 39CE 0E940000          xcall pop_xgsetF0FC
 39D2 2496              adiw R28,4
 39D4 0895              ret
 39D6                   .dbsym r ii 20 I
 39D6                   .dbsym r ch 10 c
 39D6                   .dbsym r cl 22 c
 39D6                   .dbsym r savelo 14 c
 39D6                   .dbsym l savehi 0 c
 39D6                   .dbsym r flag 12 I
 39D6                   .dbsym r length 18 i
 39D6                   .dbsym l r_data 11 pc
 39D6                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0000           _crc16array::
 0000                   .blkb 32
 0020                   .dbsym e crc16array _crc16array A[32:32]c
 0020           _crc16lo::
 0020                   .blkb 1
 0021                   .dbsym e crc16lo _crc16lo c
 0021           _crc16hi::
 0021                   .blkb 1
 0022                   .dbsym e crc16hi _crc16hi c
 0022           _lfib::
 0022                   .blkb 4
 0026                   .dbsym e lfib _lfib l
 0026           _bf::
 0026                   .blkb 2
 0028                   .dbsym e bf _bf i
 0028           _CompCounter::
 0028                   .blkb 2
 002A                   .dbsym e CompCounter _CompCounter i
 002A           _coeff_count::
 002A                   .blkb 2
 002C                   .dbsym e coeff_count _coeff_count i
 002C           _coeff_len::
 002C                   .blkb 2
 002E                   .dbsym e coeff_len _coeff_len i
 002E           _EEPAdd::
 002E                   .blkb 1
 002F                   .dbsym e EEPAdd _EEPAdd c
 002F           _Uart0TxData::
 002F                   .blkb 74
 0079                   .dbsym e Uart0TxData _Uart0TxData A[74:74]c
 0079           _coeffdata::
 0079                   .blkb 320
 01B9                   .dbsym e coeffdata _coeffdata A[320:320]c
 01B9           _T2cn::
 01B9                   .blkb 2
 01BB                   .dbsym e T2cn _T2cn i
 01BB           _k::
 01BB                   .blkb 2
 01BD                   .dbsym e k _k i
 01BD           _Tt::
 01BD                   .blkb 2
 01BF                   .dbsym e Tt _Tt i
 01BF           _IntFlag::
 01BF                   .blkb 1
 01C0                   .dbsym e IntFlag _IntFlag c
 01C0           _Int_count::
 01C0                   .blkb 1
 01C1                   .dbsym e Int_count _Int_count c
 01C1           _DataFlag::
 01C1                   .blkb 2
 01C3                   .dbsym e DataFlag _DataFlag i
 01C3           _T_dat_buf::
 01C3                   .blkb 22
 01D9                   .dbsym e T_dat_buf _T_dat_buf A[22:22]c
 01D9           _TimeOutFlag::
 01D9                   .blkb 1
 01DA                   .dbsym e TimeOutFlag _TimeOutFlag c
 01DA           _T_com::
 01DA                   .blkb 1
 01DB                   .dbsym e T_com _T_com c
 01DB           _TPS_TData::
 01DB                   .blkb 2
 01DD                   .dbsym e TPS_TData _TPS_TData I
 01DD           _TPS_PData::
 01DD                   .blkb 2
 01DF                   .dbsym e TPS_PData _TPS_PData I
 01DF           _R_dat::
 01DF                   .blkb 2
 01E1                   .dbsym e R_dat _R_dat I
 01E1           _T_dat::
 01E1                   .blkb 2
 01E3                   .dbsym e T_dat _T_dat I
 01E3           _Rx::
 01E3                   .blkb 18
 01F5                   .dbsym e Rx _Rx A[18:18]c
 01F5           _Uart1RxCounter::
 01F5                   .blkb 1
 01F6                   .dbsym e Uart1RxCounter _Uart1RxCounter c
 01F6           _Uart1RxData::
 01F6                   .blkb 4
 01FA                   .dbsym e Uart1RxData _Uart1RxData A[4:4]c
 01FA           _Uart0RxCounter::
 01FA                   .blkb 1
 01FB                   .dbsym e Uart0RxCounter _Uart0RxCounter c
 01FB           _Uart0RxData::
 01FB                   .blkb 74
 0245                   .dbsym e Uart0RxData _Uart0RxData A[74:74]c
 0245           _Timer0Counter::
 0245                   .blkb 2
 0247                   .dbsym e Timer0Counter _Timer0Counter i
 0247           _T_Flag::
 0247                   .blkb 1
 0248                   .dbsym e T_Flag _T_Flag c
 0248           _myFIB::
 0248                   .blkb 4
 024C                   .dbunion 0 4 FIB
 024C                   .dbfield 0 f D
 024C                   .dbfield 0 i A[4:2]i
 024C                   .dbfield 0 b A[4:4]c
 024C                   .dbend
 024C                   .dbsym e myFIB _myFIB S[FIB]
                        .area lit(rom, con, rel)
 0000           L524:
 0000 00008043          .word 0x0,0x4380
 0004           L523:
 0004 0000CA42          .word 0x0,0x42ca
 0008           L522:
 0008 0AD72340          .word 0xd70a,0x4023
 000C           L286:
 000C 0000FA40          .word 0x0,0x40fa
 0010           ; }
