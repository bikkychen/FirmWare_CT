                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
                        .area vector(rom, abs)
                        .org 4
 0004 0C940000          jmp _int0_isr
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0000                   .dbfunc e int0_isr _int0_isr fV
                        .even
 0000           _int0_isr::
 0000 2A92              st -y,R2
 0002 3A92              st -y,R3
 0004 8A93              st -y,R24
 0006 9A93              st -y,R25
 0008 AA93              st -y,R26
 000A EA93              st -y,R30
 000C FA93              st -y,R31
 000E 2FB6              IN R2,63
 0010 2A92              st -y,R2
 0012                   .dbline -1
 0012                   .dbline 150
 0012           ;  /**************************************************
 0012           ; CTZK
 0012           ; //20161110 增加了全部采样的CRC16校验
 0012           ; //20161113 改进了流量数据中时间和相位由无符号短整型转为浮点数时的转换方法，以防上位机软件出现相位超大值
 0012           ; //20161224 将电机断流判断值由26mA改为13mA，因为目前调节电机工作时空载电流值仅为23~28mA，升级版本为V4.0
 0012           ; //20161229 修改收张电机的本电机同向和反向判断，修改调节电机的电机方向控制（与原来相反）
 0012           ; //20170308 流量采样增加校验帧，升级版本为V4.2
 0012           ; //20170607 电机断路电流由原来的13mA改为26mA 升级版本为V4.3
 0012           ; //20170608 改动电机过流档位并把最大档位提升到250mA，升级版本为V4.4
 0012           ; //20170609 加入调节电机微调功能，升级版本为V4.5
 0012           ; //20170613 增加电机断路电流上位机可设定(共6档)，增加调节电机微调时间由电机命令中自带参数，改上传电流由数字量为工程量（单位mA），堵转电流上传改为档位，版本升为V4.6
 0012           ; //20170614 上传的电缆电压也改为工程量，全部采样增加电缆电压
 0012           ; //20170622  为适应新高压电机驱动的电路板而改进一些功能，版本回退到V3.0
 0012           ; //20170701 为适应新电路板CT_MAIN_V30
 0012           ; //20170703 增加独立压力短节单芯内部总线通讯功能
 0012           ; //20170703 版本从6.0起步，为了与前一阶段的硬件相区别
 0012           ; //20170705 压力短节功能调通 V6.1
 0012           ; //20170711  版本回退到V1.0，方便以后的功能扩展
 0012           ; //20170817  升级版本到V1.1，增加了绝对时间差法流量计的功能支持
 0012           ; **************************************************/
 0012           ; #include <iom128v.h>                                                                  
 0012           ; #include <macros.h>
 0012           ; #include <stdio.h>
 0012           ; 
 0012           ;  
 0012           ; #define Debug 0
 0012           ; #define  BB     0x11       //固件版本号
 0012           ; 
 0012           ; 
 0012           ; #define M1_L     {PORTG&=0xf7;}
 0012           ; #define M1_H     {PORTG|=0x08;}
 0012           ; #define M2_L     {PORTG&=0xef;}
 0012           ; #define M2_H     {PORTG|=0x10;}
 0012           ; 
 0012           ;  
 0012           ; 
 0012           ; 
 0012           ; #define MANINT_CLR    { EIFR|=0x01; }
 0012           ; #define MANINT_EN     { EIMSK |= 0x01; }
 0012           ; #define MANINT_DIS    { EIMSK &= 0xFE; }
 0012           ; 
 0012           ; #define INT_EN                        { SEI(); }
 0012           ; #define INT_DIS               { CLI(); }
 0012           ; 
 0012           ;  
 0012           ;     
 0012           ; #define TPSBAUD  {TCNT3H = 0xFE;TCNT3L = 0x60;}
 0012           ;  
 0012           ; 
 0012           ; #define DELAY10 for(Tt=0;Tt<4;Tt++);
 0012           ; #define DELAY20 for(Tt=0;Tt<4;Tt++);
 0012           ; #define DELAY40 for(Tt=0;Tt<16;Tt++); 
 0012           ; #define DELAY50 for(Tt=0;Tt<21;Tt++); 
 0012           ; #define DELAY80 for(Tt=0;Tt<32;Tt++); 
 0012           ; #define DELAY89 for(Tt=0;Tt<36;Tt++); 
 0012           ; #define DELAY100 for(Tt=0;Tt<42;Tt++); 
 0012           ; #define DELAY170 for(Tt=0;Tt<72;Tt++);
 0012           ; #define DELAY268 for(Tt=0;Tt<113;Tt++);
 0012           ; #define DELAY397 for(Tt=0;Tt<165;Tt++);
 0012           ; #define DELAY400 for(Tt=0;Tt<168;Tt++);
 0012           ; 
 0012           ; /* 接收电平值 */
 0012           ; #define GET_RX() (PIND & (1<<PIND1))  
 0012           ; /* 发送高电平 */   
 0012           ; #define SET_TX() (PORTD |= 0x40)
 0012           ; /* 发送低电平 */ 
 0012           ; #define CLR_TX() (PORTD &= 0xbf)
 0012           ;         
 0012           ; 
 0012           ;  
 0012           ; 
 0012           ; /* 定时器中断发生时的读写周期 */
 0012           ; enum timer_turn {   
 0012           ;  RX_TURN = 0,                /* 读周期 */    
 0012           ;  TX_TURN,                    /* 写周期 */
 0012           ;  };
 0012           ;  
 0012           ; /* 数据帧结构 */
 0012           ; __flash enum frame_bit {    BIT_0 = 0,    BIT_1,    BIT_2,    BIT_3,    BIT_4,    BIT_5,    BIT_6,    BIT_7,    BIT_STOP,    BIT_IDLE,    BIT_START,};
 0012           ; 
 0012           ; union FIB
 0012           ; {
 0012           ;  float f;
 0012           ;  unsigned int i[2];
 0012           ;  unsigned char b[4];
 0012           ; }myFIB;
 0012           ; 
 0012           ;  
 0012           ;  
 0012           ;  
 0012           ; 
 0012           ; unsigned char T_Flag;
 0012           ; 
 0012           ; unsigned int Timer0Counter;//定时器0超过4ms时的计数
 0012           ; 
 0012           ; unsigned char Uart0RxData[74];//串口0接收数据缓存
 0012           ; unsigned char Uart0RxCounter;
 0012           ; 
 0012           ; unsigned char Uart1RxData[4];//串口1接收数据缓存
 0012           ; unsigned char Uart1RxCounter;
 0012           ; 
 0012           ; unsigned char Rx[18];//解码接收9位共18个半位
 0012           ; int  T_dat,R_dat;//曼码发送数据
 0012           ; int TPS_PData,TPS_TData;
 0012           ; unsigned char T_com;//曼码发送命令
 0012           ; 
 0012           ; unsigned char TimeOutFlag;//发送超时标志
 0012           ; 
 0012           ; unsigned char T_dat_buf[22];//曼码发送缓冲 
 0012           ; 
 0012           ; unsigned int DataFlag;//下发标定系数开始标志
 0012           ; unsigned char Int_count;
 0012           ; unsigned char IntFlag;//接收帧状态
 0012           ; 
 0012           ; unsigned int Tt,k;
 0012           ; unsigned int T2cn;
 0012           ; unsigned char coeffdata[320];
 0012           ; 
 0012           ; unsigned char Uart0TxData[74];//串口发送数据缓存
 0012           ; 
 0012           ; unsigned char EEPAdd;//接收系数存放地址索引
 0012           ; unsigned int coeff_len,coeff_count;//接收系数长度，接收系数计数
 0012           ; unsigned int CompCounter;
 0012           ; 
 0012           ; unsigned int bf;
 0012           ; 
 0012           ; unsigned long lfib;//短整型转浮点数时用的临时变量
 0012           ; unsigned char crc16hi,crc16lo,crc16array[32];
 0012           ; 
 0012           ; 
 0012           ; 
 0012           ; 
 0012           ; void InitialIO(void);
 0012           ; void init_USART0(void);
 0012           ; void SendUart0_2(unsigned char len,unsigned int s);
 0012           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn);
 0012           ; void Pwm_startup(unsigned char motor);
 0012           ; void Start(void);
 0012           ; void SendManchester(void); 
 0012           ; unsigned char SampleADC(unsigned char ch);
 0012           ; void EEPROM_write(unsigned int Address,unsigned char Data);
 0012           ; unsigned char EEPROM_read(unsigned int Address);
 0012           ; void Delay_ms(unsigned int t);
 0012           ; void crc16(unsigned char r_data[],unsigned int length);
 0012           ;  
 0012           ; void int0_isr(void);
 0012           ; 
 0012           ; #pragma interrupt_handler int0_isr:iv_INT0
 0012           ; void int0_isr(void)//外部中断0
 0012           ; { 
 0012                   .dbline 151
 0012           ;    TCCR2 = 0x00; //stop
 0012 2224              clr R2
 0014 25BC              out 0x25,R2
 0016                   .dbline 153
 0016           ;    
 0016           ;     INT_DIS
 0016                   .dbline 153
 0016 F894              cli
 0018                   .dbline 153
 0018                   .dbline 154
 0018           ;       MANINT_DIS
 0018                   .dbline 154
 0018 89B7              in R24,0x39
 001A 8E7F              andi R24,254
 001C 89BF              out 0x39,R24
 001E                   .dbline 154
 001E                   .dbline 156
 001E           ;    
 001E           ;   DELAY10
 001E 3324              clr R3
 0020 3092BE01          sts _Tt+1,R3
 0024 2092BD01          sts _Tt,R2
 0028 09C0              xjmp L5
 002A           L2:
 002A                   .dbline 156
 002A           L3:
 002A                   .dbline 156
 002A 8091BD01          lds R24,_Tt
 002E 9091BE01          lds R25,_Tt+1
 0032 0196              adiw R24,1
 0034 9093BE01          sts _Tt+1,R25
 0038 8093BD01          sts _Tt,R24
 003C           L5:
 003C                   .dbline 156
 003C 8091BD01          lds R24,_Tt
 0040 9091BE01          lds R25,_Tt+1
 0044 8430              cpi R24,4
 0046 E0E0              ldi R30,0
 0048 9E07              cpc R25,R30
 004A 78F3              brlo L2
 004C           X0:
 004C                   .dbline 157
 004C           ;   EIFR|=0x01;//清INT0中断标志 
 004C 88B7              in R24,0x38
 004E 8160              ori R24,1
 0050 88BF              out 0x38,R24
 0052                   .dbline 158
 0052           ;   if((PIND&0x01)==0x00)//高脉冲不足10us则直接跳出
 0052 8099              sbic 0x10,0
 0054 01C0              rjmp L6
 0056           X1:
 0056                   .dbline 159
 0056           ;   {
 0056                   .dbline 160
 0056           ;    goto End;
 0056 C0C1              xjmp L8
 0058           L6:
 0058                   .dbline 163
 0058           ;   }
 0058           ;    
 0058           ;    TCNT2 = 0x00;  
 0058 2224              clr R2
 005A 24BC              out 0x24,R2
 005C                   .dbline 164
 005C           ;    TCCR2 = 0x03; //64分频,8M时钟，每个CLOCK耗时8us，最大定时2048us，每周期10个计数
 005C 83E0              ldi R24,3
 005E 85BD              out 0x25,R24
 0060 29C0              xjmp L10
 0062           L9:
 0062                   .dbline 167
 0062           ;    
 0062           ;    while(1)
 0062           ;    {
 0062                   .dbline 168
 0062           ;      T2cn=TCNT2;
 0062 24B4              in R2,0x24
 0064 3324              clr R3
 0066 3092BA01          sts _T2cn+1,R3
 006A 2092B901          sts _T2cn,R2
 006E                   .dbline 169
 006E           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 006E 80E5              ldi R24,80
 0070 90E0              ldi R25,0
 0072 8215              cp R24,R2
 0074 9305              cpc R25,R3
 0076 08F4              brsh L12
 0078           X2:
 0078                   .dbline 170
 0078           ;         {
 0078                   .dbline 171
 0078           ;           goto End;
 0078 AFC1              xjmp L8
 007A           L12:
 007A                   .dbline 173
 007A           ;         }
 007A           ;      if((PIND&0x01)==0x00)
 007A 8099              sbic 0x10,0
 007C 1BC0              rjmp L14
 007E           X3:
 007E                   .dbline 174
 007E           ;        {
 007E                   .dbline 175
 007E           ;          DELAY20
 007E 2224              clr R2
 0080 3324              clr R3
 0082 3092BE01          sts _Tt+1,R3
 0086 2092BD01          sts _Tt,R2
 008A 09C0              xjmp L19
 008C           L16:
 008C                   .dbline 175
 008C           L17:
 008C                   .dbline 175
 008C 8091BD01          lds R24,_Tt
 0090 9091BE01          lds R25,_Tt+1
 0094 0196              adiw R24,1
 0096 9093BE01          sts _Tt+1,R25
 009A 8093BD01          sts _Tt,R24
 009E           L19:
 009E                   .dbline 175
 009E 8091BD01          lds R24,_Tt
 00A2 9091BE01          lds R25,_Tt+1
 00A6 8430              cpi R24,4
 00A8 E0E0              ldi R30,0
 00AA 9E07              cpc R25,R30
 00AC 78F3              brlo L16
 00AE           X4:
 00AE                   .dbline 176
 00AE           ;          if((PIND&0x01)==0x00)
 00AE 8099              sbic 0x10,0
 00B0 01C0              rjmp L20
 00B2           X5:
 00B2                   .dbline 177
 00B2           ;           {
 00B2                   .dbline 178
 00B2           ;             break;
 00B2 31C0              xjmp L23
 00B4           L20:
 00B4                   .dbline 180
 00B4           ;           }
 00B4           ;        }
 00B4           L14:
 00B4                   .dbline 181
 00B4           ;    }
 00B4           L10:
 00B4                   .dbline 166
 00B4 D6CF              xjmp L9
 00B6           L22:
 00B6                   .dbline 185
 00B6           ;                  
 00B6           ;     //开始判断同步头  
 00B6           ;       while(1)//还没有上升沿到来,死等
 00B6           ;       {
 00B6                   .dbline 186
 00B6           ;         T2cn=TCNT2;
 00B6 24B4              in R2,0x24
 00B8 3324              clr R3
 00BA 3092BA01          sts _T2cn+1,R3
 00BE 2092B901          sts _T2cn,R2
 00C2                   .dbline 187
 00C2           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 00C2 80E5              ldi R24,80
 00C4 90E0              ldi R25,0
 00C6 8215              cp R24,R2
 00C8 9305              cpc R25,R3
 00CA 08F4              brsh L25
 00CC           X6:
 00CC                   .dbline 188
 00CC           ;         {
 00CC                   .dbline 189
 00CC           ;           goto End;
 00CC 85C1              xjmp L8
 00CE           L25:
 00CE                   .dbline 191
 00CE           ;         }
 00CE           ;         if((EIFR&0x01)==0x01)
 00CE 88B7              in R24,0x38
 00D0 8170              andi R24,1
 00D2 8130              cpi R24,1
 00D4 01F5              brne L27
 00D6           X7:
 00D6                   .dbline 192
 00D6           ;         {
 00D6                   .dbline 193
 00D6           ;          DELAY10
 00D6 2224              clr R2
 00D8 3324              clr R3
 00DA 3092BE01          sts _Tt+1,R3
 00DE 2092BD01          sts _Tt,R2
 00E2 09C0              xjmp L32
 00E4           L29:
 00E4                   .dbline 193
 00E4           L30:
 00E4                   .dbline 193
 00E4 8091BD01          lds R24,_Tt
 00E8 9091BE01          lds R25,_Tt+1
 00EC 0196              adiw R24,1
 00EE 9093BE01          sts _Tt+1,R25
 00F2 8093BD01          sts _Tt,R24
 00F6           L32:
 00F6                   .dbline 193
 00F6 8091BD01          lds R24,_Tt
 00FA 9091BE01          lds R25,_Tt+1
 00FE 8430              cpi R24,4
 0100 E0E0              ldi R30,0
 0102 9E07              cpc R25,R30
 0104 78F3              brlo L29
 0106           X8:
 0106                   .dbline 194
 0106           ;          EIFR|=0x01;//清INT0中断标志 
 0106 88B7              in R24,0x38
 0108 8160              ori R24,1
 010A 88BF              out 0x38,R24
 010C                   .dbline 195
 010C           ;          if((PIND&0x01)==0x01)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 010C 80B3              in R24,0x10
 010E 8170              andi R24,1
 0110 8130              cpi R24,1
 0112 09F4              brne L33
 0114           X9:
 0114                   .dbline 196
 0114           ;            {
 0114                   .dbline 197
 0114           ;            break;
 0114 01C0              xjmp L24
 0116           L33:
 0116                   .dbline 199
 0116           ;                }
 0116           ;         }  
 0116           L27:
 0116                   .dbline 200
 0116           ;       }
 0116           L23:
 0116                   .dbline 184
 0116 CFCF              xjmp L22
 0118           L24:
 0118                   .dbline 201
 0118           ;       T2cn=TCNT2;
 0118 24B4              in R2,0x24
 011A 3324              clr R3
 011C 3092BA01          sts _T2cn+1,R3
 0120 2092B901          sts _T2cn,R2
 0124                   .dbline 202
 0124           ;       TCNT2=0;
 0124 2224              clr R2
 0126 24BC              out 0x24,R2
 0128                   .dbline 203
 0128           ;       if((T2cn<60)||(T2cn>80))//同步头本应是7个周期，但收到的结果为6~8个周期内都认可
 0128 2090B901          lds R2,_T2cn
 012C 3090BA01          lds R3,_T2cn+1
 0130 C101              movw R24,R2
 0132 8C33              cpi R24,60
 0134 E0E0              ldi R30,0
 0136 9E07              cpc R25,R30
 0138 28F0              brlo L37
 013A           X10:
 013A 80E5              ldi R24,80
 013C 90E0              ldi R25,0
 013E 8215              cp R24,R2
 0140 9305              cpc R25,R3
 0142 08F4              brsh L35
 0144           X11:
 0144           L37:
 0144                   .dbline 204
 0144           ;       {
 0144                   .dbline 205
 0144           ;        goto End;//没有收到正确的同步头，直接跳出
 0144 49C1              xjmp L8
 0146           L35:
 0146           L38:
 0146                   .dbline 209
 0146           ;       }
 0146           ;  
 0146           ; Start:        //同步头解码正确，下面开始接收9位数据位 //按位从高到低接收数据位，8位数据加1位校验共9位                         
 0146           ;   for(Int_count=9;Int_count>0;Int_count--)
 0146 89E0              ldi R24,9
 0148 8093C001          sts _Int_count,R24
 014C A6C0              xjmp L42
 014E           L43:
 014E                   .dbline 212
 014E           ;   {   
 014E           ;    while(1)
 014E           ;    {
 014E                   .dbline 213
 014E           ;      T2cn=TCNT2;
 014E 24B4              in R2,0x24
 0150 3324              clr R3
 0152 3092BA01          sts _T2cn+1,R3
 0156 2092B901          sts _T2cn,R2
 015A                   .dbline 214
 015A           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 015A 80E5              ldi R24,80
 015C 90E0              ldi R25,0
 015E 8215              cp R24,R2
 0160 9305              cpc R25,R3
 0162 08F4              brsh L46
 0164           X12:
 0164                   .dbline 215
 0164           ;         {
 0164                   .dbline 216
 0164           ;           goto End;
 0164 39C1              xjmp L8
 0166           L46:
 0166                   .dbline 218
 0166           ;         }
 0166           ;      if((PIND&0x01)==0x00)
 0166 8099              sbic 0x10,0
 0168 1BC0              rjmp L48
 016A           X13:
 016A                   .dbline 219
 016A           ;        {
 016A                   .dbline 220
 016A           ;          DELAY20
 016A 2224              clr R2
 016C 3324              clr R3
 016E 3092BE01          sts _Tt+1,R3
 0172 2092BD01          sts _Tt,R2
 0176 09C0              xjmp L53
 0178           L50:
 0178                   .dbline 220
 0178           L51:
 0178                   .dbline 220
 0178 8091BD01          lds R24,_Tt
 017C 9091BE01          lds R25,_Tt+1
 0180 0196              adiw R24,1
 0182 9093BE01          sts _Tt+1,R25
 0186 8093BD01          sts _Tt,R24
 018A           L53:
 018A                   .dbline 220
 018A 8091BD01          lds R24,_Tt
 018E 9091BE01          lds R25,_Tt+1
 0192 8430              cpi R24,4
 0194 E0E0              ldi R30,0
 0196 9E07              cpc R25,R30
 0198 78F3              brlo L50
 019A           X14:
 019A                   .dbline 221
 019A           ;          if((PIND&0x01)==0x00)
 019A 8099              sbic 0x10,0
 019C 01C0              rjmp L54
 019E           X15:
 019E                   .dbline 222
 019E           ;           {
 019E                   .dbline 223
 019E           ;             break;
 019E 31C0              xjmp L57
 01A0           L54:
 01A0                   .dbline 225
 01A0           ;           }
 01A0           ;        }
 01A0           L48:
 01A0                   .dbline 226
 01A0           ;    } 
 01A0           L44:
 01A0                   .dbline 211
 01A0 D6CF              xjmp L43
 01A2           L56:
 01A2                   .dbline 228
 01A2           ;    while(1)//还没有上升沿到来,死等
 01A2           ;       {
 01A2                   .dbline 229
 01A2           ;         T2cn=TCNT2;
 01A2 24B4              in R2,0x24
 01A4 3324              clr R3
 01A6 3092BA01          sts _T2cn+1,R3
 01AA 2092B901          sts _T2cn,R2
 01AE                   .dbline 230
 01AE           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 01AE 80E5              ldi R24,80
 01B0 90E0              ldi R25,0
 01B2 8215              cp R24,R2
 01B4 9305              cpc R25,R3
 01B6 08F4              brsh L59
 01B8           X16:
 01B8                   .dbline 231
 01B8           ;         {
 01B8                   .dbline 232
 01B8           ;           goto End;
 01B8 0FC1              xjmp L8
 01BA           L59:
 01BA                   .dbline 234
 01BA           ;         }
 01BA           ;         if((EIFR&0x01)==0x01)
 01BA 88B7              in R24,0x38
 01BC 8170              andi R24,1
 01BE 8130              cpi R24,1
 01C0 01F5              brne L61
 01C2           X17:
 01C2                   .dbline 235
 01C2           ;         {
 01C2                   .dbline 236
 01C2           ;          DELAY10
 01C2 2224              clr R2
 01C4 3324              clr R3
 01C6 3092BE01          sts _Tt+1,R3
 01CA 2092BD01          sts _Tt,R2
 01CE 09C0              xjmp L66
 01D0           L63:
 01D0                   .dbline 236
 01D0           L64:
 01D0                   .dbline 236
 01D0 8091BD01          lds R24,_Tt
 01D4 9091BE01          lds R25,_Tt+1
 01D8 0196              adiw R24,1
 01DA 9093BE01          sts _Tt+1,R25
 01DE 8093BD01          sts _Tt,R24
 01E2           L66:
 01E2                   .dbline 236
 01E2 8091BD01          lds R24,_Tt
 01E6 9091BE01          lds R25,_Tt+1
 01EA 8430              cpi R24,4
 01EC E0E0              ldi R30,0
 01EE 9E07              cpc R25,R30
 01F0 78F3              brlo L63
 01F2           X18:
 01F2                   .dbline 237
 01F2           ;          EIFR|=0x01;//清INT0中断标志 
 01F2 88B7              in R24,0x38
 01F4 8160              ori R24,1
 01F6 88BF              out 0x38,R24
 01F8                   .dbline 238
 01F8           ;          if((PIND&0x01)==0x01)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 01F8 80B3              in R24,0x10
 01FA 8170              andi R24,1
 01FC 8130              cpi R24,1
 01FE 09F4              brne L67
 0200           X19:
 0200                   .dbline 239
 0200           ;            {
 0200                   .dbline 240
 0200           ;            break;
 0200 01C0              xjmp L58
 0202           L67:
 0202                   .dbline 242
 0202           ;                }
 0202           ;         }  
 0202           L61:
 0202                   .dbline 243
 0202           ;       }
 0202           L57:
 0202                   .dbline 227
 0202 CFCF              xjmp L56
 0204           L58:
 0204                   .dbline 244
 0204           ;       T2cn=TCNT2;
 0204 24B4              in R2,0x24
 0206 3324              clr R3
 0208 3092BA01          sts _T2cn+1,R3
 020C 2092B901          sts _T2cn,R2
 0210                   .dbline 245
 0210           ;       TCNT2=0;
 0210 2224              clr R2
 0212 24BC              out 0x24,R2
 0214                   .dbline 246
 0214           ;       if(T2cn<20)//数据位最小是3位，可放宽到2位
 0214 8091B901          lds R24,_T2cn
 0218 9091BA01          lds R25,_T2cn+1
 021C 8431              cpi R24,20
 021E E0E0              ldi R30,0
 0220 9E07              cpc R25,R30
 0222 20F4              brsh L69
 0224           X20:
 0224                   .dbline 247
 0224           ;       {
 0224                   .dbline 248
 0224           ;        IntFlag=3;//接收数据位不完整
 0224 83E0              ldi R24,3
 0226 8093BF01          sts _IntFlag,R24
 022A                   .dbline 249
 022A           ;        goto End;//数据位来得太早，退出
 022A D6C0              xjmp L8
 022C           L69:
 022C                   .dbline 251
 022C           ;       }
 022C           ;       else if(T2cn<40)//数据位1本应是3个周期，在此我们认为2~4个周期都是可以的
 022C 8091B901          lds R24,_T2cn
 0230 9091BA01          lds R25,_T2cn+1
 0234 8832              cpi R24,40
 0236 E0E0              ldi R30,0
 0238 9E07              cpc R25,R30
 023A 50F4              brsh L71
 023C           X21:
 023C                   .dbline 252
 023C           ;       {
 023C                   .dbline 253
 023C           ;        Rx[Int_count]=1;
 023C 80E0              ldi R24,<_Rx
 023E 90E0              ldi R25,>_Rx
 0240 E091C001          lds R30,_Int_count
 0244 FF27              clr R31
 0246 E80F              add R30,R24
 0248 F91F              adc R31,R25
 024A 81E0              ldi R24,1
 024C 8083              std z+0,R24
 024E                   .dbline 254
 024E           ;       }
 024E 20C0              xjmp L72
 0250           L71:
 0250                   .dbline 255
 0250           ;       else if(T2cn<60)//数据位0本应是5个周期，在此我们认为4~6个周期都是可以的
 0250 8091B901          lds R24,_T2cn
 0254 9091BA01          lds R25,_T2cn+1
 0258 8C33              cpi R24,60
 025A E0E0              ldi R30,0
 025C 9E07              cpc R25,R30
 025E 50F4              brsh L73
 0260           X22:
 0260                   .dbline 256
 0260           ;       {
 0260                   .dbline 257
 0260           ;        Rx[Int_count]=0;
 0260 80E0              ldi R24,<_Rx
 0262 90E0              ldi R25,>_Rx
 0264 E091C001          lds R30,_Int_count
 0268 FF27              clr R31
 026A E80F              add R30,R24
 026C F91F              adc R31,R25
 026E 2224              clr R2
 0270 2082              std z+0,R2
 0272                   .dbline 258
 0272           ;       }
 0272 0EC0              xjmp L74
 0274           L73:
 0274                   .dbline 259
 0274           ;       else if(T2cn<=80)//同步位本应是7周期，在此我们认为6~8周期都是可以的
 0274 80E5              ldi R24,80
 0276 90E0              ldi R25,0
 0278 2090B901          lds R2,_T2cn
 027C 3090BA01          lds R3,_T2cn+1
 0280 8215              cp R24,R2
 0282 9305              cpc R25,R3
 0284 08F0              brlo L75
 0286           X23:
 0286                   .dbline 260
 0286           ;       {
 0286                   .dbline 261
 0286           ;        goto Start;//在接收数据位时收到了同步位，跳到数据位解码起始位处
 0286 5FCF              xjmp L38
 0288           L75:
 0288                   .dbline 264
 0288           ;       }
 0288           ;       else 
 0288           ;       {
 0288                   .dbline 265
 0288           ;        IntFlag=3;//接收数据位不完整
 0288 83E0              ldi R24,3
 028A 8093BF01          sts _IntFlag,R24
 028E                   .dbline 266
 028E           ;        goto End;//数据位来得太迟，退出
 028E A4C0              xjmp L8
 0290           L74:
 0290           L72:
 0290                   .dbline 268
 0290           ;       }
 0290           ;   }   
 0290           L40:
 0290                   .dbline 209
 0290 8091C001          lds R24,_Int_count
 0294 8150              subi R24,1
 0296 8093C001          sts _Int_count,R24
 029A           L42:
 029A                   .dbline 209
 029A 80E0              ldi R24,0
 029C 2090C001          lds R2,_Int_count
 02A0 8215              cp R24,R2
 02A2 08F4              brsh X35
 02A4 7DCF              xjmp L44
 02A6           X35:
 02A6           X24:
 02A6                   .dbline 270
 02A6           ;       
 02A6           ;     R_dat=0;
 02A6 2224              clr R2
 02A8 3324              clr R3
 02AA 3092E001          sts _R_dat+1,R3
 02AE 2092DF01          sts _R_dat,R2
 02B2                   .dbline 271
 02B2           ;     if(Rx[2])
 02B2 2090E501          lds R2,_Rx+2
 02B6 2220              tst R2
 02B8 49F0              breq L77
 02BA           X25:
 02BA                   .dbline 272
 02BA           ;           R_dat|=0x01;
 02BA 8091DF01          lds R24,_R_dat
 02BE 9091E001          lds R25,_R_dat+1
 02C2 8160              ori R24,1
 02C4 9093E001          sts _R_dat+1,R25
 02C8 8093DF01          sts _R_dat,R24
 02CC           L77:
 02CC                   .dbline 273
 02CC           ;     if(Rx[3])
 02CC 2090E601          lds R2,_Rx+3
 02D0 2220              tst R2
 02D2 49F0              breq L80
 02D4           X26:
 02D4                   .dbline 274
 02D4           ;           R_dat|=0x02;
 02D4 8091DF01          lds R24,_R_dat
 02D8 9091E001          lds R25,_R_dat+1
 02DC 8260              ori R24,2
 02DE 9093E001          sts _R_dat+1,R25
 02E2 8093DF01          sts _R_dat,R24
 02E6           L80:
 02E6                   .dbline 275
 02E6           ;     if(Rx[4])
 02E6 2090E701          lds R2,_Rx+4
 02EA 2220              tst R2
 02EC 49F0              breq L83
 02EE           X27:
 02EE                   .dbline 276
 02EE           ;           R_dat|=0x04;
 02EE 8091DF01          lds R24,_R_dat
 02F2 9091E001          lds R25,_R_dat+1
 02F6 8460              ori R24,4
 02F8 9093E001          sts _R_dat+1,R25
 02FC 8093DF01          sts _R_dat,R24
 0300           L83:
 0300                   .dbline 277
 0300           ;     if(Rx[5])
 0300 2090E801          lds R2,_Rx+5
 0304 2220              tst R2
 0306 49F0              breq L86
 0308           X28:
 0308                   .dbline 278
 0308           ;           R_dat|=0x08;
 0308 8091DF01          lds R24,_R_dat
 030C 9091E001          lds R25,_R_dat+1
 0310 8860              ori R24,8
 0312 9093E001          sts _R_dat+1,R25
 0316 8093DF01          sts _R_dat,R24
 031A           L86:
 031A                   .dbline 279
 031A           ;     if(Rx[6])
 031A 2090E901          lds R2,_Rx+6
 031E 2220              tst R2
 0320 49F0              breq L89
 0322           X29:
 0322                   .dbline 280
 0322           ;           R_dat|=0x10;
 0322 8091DF01          lds R24,_R_dat
 0326 9091E001          lds R25,_R_dat+1
 032A 8061              ori R24,16
 032C 9093E001          sts _R_dat+1,R25
 0330 8093DF01          sts _R_dat,R24
 0334           L89:
 0334                   .dbline 281
 0334           ;     if(Rx[7])
 0334 2090EA01          lds R2,_Rx+7
 0338 2220              tst R2
 033A 49F0              breq L92
 033C           X30:
 033C                   .dbline 282
 033C           ;           R_dat|=0x20;
 033C 8091DF01          lds R24,_R_dat
 0340 9091E001          lds R25,_R_dat+1
 0344 8062              ori R24,32
 0346 9093E001          sts _R_dat+1,R25
 034A 8093DF01          sts _R_dat,R24
 034E           L92:
 034E                   .dbline 283
 034E           ;     if(Rx[8])
 034E 2090EB01          lds R2,_Rx+8
 0352 2220              tst R2
 0354 49F0              breq L95
 0356           X31:
 0356                   .dbline 284
 0356           ;           R_dat|=0x40;
 0356 8091DF01          lds R24,_R_dat
 035A 9091E001          lds R25,_R_dat+1
 035E 8064              ori R24,64
 0360 9093E001          sts _R_dat+1,R25
 0364 8093DF01          sts _R_dat,R24
 0368           L95:
 0368                   .dbline 285
 0368           ;     if(Rx[9])
 0368 2090EC01          lds R2,_Rx+9
 036C 2220              tst R2
 036E 49F0              breq L98
 0370           X32:
 0370                   .dbline 286
 0370           ;           R_dat|=0x80;
 0370 8091DF01          lds R24,_R_dat
 0374 9091E001          lds R25,_R_dat+1
 0378 8068              ori R24,128
 037A 9093E001          sts _R_dat+1,R25
 037E 8093DF01          sts _R_dat,R24
 0382           L98:
 0382                   .dbline 288
 0382           ;       
 0382           ;       Rx[0]=1;  
 0382 81E0              ldi R24,1
 0384 8093E301          sts _Rx,R24
 0388                   .dbline 289
 0388           ;       for(Int_count=2;Int_count<10;Int_count++)  
 0388 82E0              ldi R24,2
 038A 8093C001          sts _Int_count,R24
 038E 12C0              xjmp L104
 0390           L101:
 0390                   .dbline 290
 0390           ;        Rx[0]^=Rx[Int_count];  
 0390 80E0              ldi R24,<_Rx
 0392 90E0              ldi R25,>_Rx
 0394 E091C001          lds R30,_Int_count
 0398 FF27              clr R31
 039A E80F              add R30,R24
 039C F91F              adc R31,R25
 039E 2080              ldd R2,z+0
 03A0 3090E301          lds R3,_Rx
 03A4 3224              eor R3,R2
 03A6 3092E301          sts _Rx,R3
 03AA           L102:
 03AA                   .dbline 289
 03AA 8091C001          lds R24,_Int_count
 03AE 8F5F              subi R24,255    ; addi 1
 03B0 8093C001          sts _Int_count,R24
 03B4           L104:
 03B4                   .dbline 289
 03B4 8091C001          lds R24,_Int_count
 03B8 8A30              cpi R24,10
 03BA 50F3              brlo L101
 03BC           X33:
 03BC                   .dbline 292
 03BC           ;          
 03BC           ;       if(Rx[0]==Rx[1])
 03BC 2090E401          lds R2,_Rx+1
 03C0 3090E301          lds R3,_Rx
 03C4 3214              cp R3,R2
 03C6 21F4              brne L105
 03C8           X34:
 03C8                   .dbline 293
 03C8           ;        {
 03C8                   .dbline 294
 03C8           ;                IntFlag=1;//接收帧正常 
 03C8 81E0              ldi R24,1
 03CA 8093BF01          sts _IntFlag,R24
 03CE                   .dbline 295
 03CE           ;        }
 03CE 0AC0              xjmp L108
 03D0           L105:
 03D0                   .dbline 297
 03D0           ;       else           
 03D0           ;        {
 03D0                   .dbline 298
 03D0           ;                IntFlag=2;//接收帧校验错
 03D0 82E0              ldi R24,2
 03D2 8093BF01          sts _IntFlag,R24
 03D6                   .dbline 299
 03D6           ;        }
 03D6                   .dbline 301
 03D6           ;  
 03D6           ;    goto End1;//只要接收到正常的同步头，不管校验位是对是错，都暂时不开放INT0中断
 03D6 06C0              xjmp L108
 03D8           L8:
 03D8                   .dbline 304
 03D8           ;      
 03D8           ; End:
 03D8           ;               MANINT_CLR
 03D8                   .dbline 304
 03D8 88B7              in R24,0x38
 03DA 8160              ori R24,1
 03DC 88BF              out 0x38,R24
 03DE                   .dbline 304
 03DE                   .dbline 305
 03DE           ;               MANINT_EN
 03DE                   .dbline 305
 03DE 89B7              in R24,0x39
 03E0 8160              ori R24,1
 03E2 89BF              out 0x39,R24
 03E4                   .dbline 305
 03E4           L108:
 03E4                   .dbline 307
 03E4           ; End1:
 03E4           ;    TCCR2 = 0x00; //stop
 03E4 2224              clr R2
 03E6 25BC              out 0x25,R2
 03E8                   .dbline 308
 03E8           ;    INT_EN
 03E8                   .dbline 308
 03E8 7894              sei
 03EA                   .dbline 308
 03EA                   .dbline -2
 03EA           L1:
 03EA                   .dbline 0 ; func end
 03EA 2990              ld R2,y+
 03EC 2FBE              OUT 63,R2
 03EE F991              ld R31,y+
 03F0 E991              ld R30,y+
 03F2 A991              ld R26,y+
 03F4 9991              ld R25,y+
 03F6 8991              ld R24,y+
 03F8 3990              ld R3,y+
 03FA 2990              ld R2,y+
 03FC 1895              reti
 03FE                   .dbend
 03FE                   .dbfunc e InitialIO _InitialIO fV
                        .even
 03FE           _InitialIO::
 03FE                   .dbline -1
 03FE                   .dbline 312
 03FE           ; }
 03FE           ; 
 03FE           ; void InitialIO(void)
 03FE           ; {//1输出，0输入
 03FE                   .dbline 313
 03FE           ;  PORTG&=0xe7; 
 03FE 80916500          lds R24,101
 0402 877E              andi R24,231
 0404 80936500          sts 101,R24
 0408                   .dbline 314
 0408           ;  DDRG|=0x18; 
 0408 80916400          lds R24,100
 040C 8861              ori R24,24
 040E 80936400          sts 100,R24
 0412                   .dbline 316
 0412           ;  
 0412           ;  PORTD&=0xBF;
 0412 82B3              in R24,0x12
 0414 8F7B              andi R24,191
 0416 82BB              out 0x12,R24
 0418                   .dbline 317
 0418           ;  DDRD|=0x40;
 0418 8E9A              sbi 0x11,6
 041A                   .dbline -2
 041A           L109:
 041A                   .dbline 0 ; func end
 041A 0895              ret
 041C                   .dbend
 041C                   .dbfunc e uart1_init _uart1_init fV
                        .even
 041C           _uart1_init::
 041C                   .dbline -1
 041C                   .dbline 327
 041C           ; }
 041C           ; 
 041C           ; 
 041C           ; //UART1 initialize
 041C           ; // desired baud rate:9600
 041C           ; // actual baud rate:9615 (0.2%)
 041C           ; // char size: 8 bit
 041C           ; // parity: Disabled
 041C           ; void uart1_init(void)
 041C           ; {
 041C                   .dbline 328
 041C           ;  UCSR1B = 0x00; //disable while setting baud rate
 041C 2224              clr R2
 041E 20929A00          sts 154,R2
 0422                   .dbline 329
 0422           ;  UCSR1A = 0x02;
 0422 82E0              ldi R24,2
 0424 80939B00          sts 155,R24
 0428                   .dbline 330
 0428           ;  UCSR1C = 0x06;
 0428 86E0              ldi R24,6
 042A 80939D00          sts 157,R24
 042E                   .dbline 331
 042E           ;  UBRR1L = 0x67; //set baud rate lo
 042E 87E6              ldi R24,103
 0430 80939900          sts 153,R24
 0434                   .dbline 332
 0434           ;  UBRR1H = 0x00; //set baud rate hi
 0434 20929800          sts 152,R2
 0438                   .dbline 333
 0438           ;  UCSR1B = 0x98;
 0438 88E9              ldi R24,152
 043A 80939A00          sts 154,R24
 043E                   .dbline -2
 043E           L110:
 043E                   .dbline 0 ; func end
 043E 0895              ret
 0440                   .dbend
                        .area vector(rom, abs)
                        .org 120
 0078 0C942002          jmp _uart1_rx_isr
                        .area text(rom, con, rel)
 0440                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0440                   .dbfunc e uart1_rx_isr _uart1_rx_isr fV
                        .even
 0440           _uart1_rx_isr::
 0440 2A92              st -y,R2
 0442 8A93              st -y,R24
 0444 9A93              st -y,R25
 0446 EA93              st -y,R30
 0448 FA93              st -y,R31
 044A 2FB6              IN R2,63
 044C 2A92              st -y,R2
 044E                   .dbline -1
 044E                   .dbline 338
 044E           ; }
 044E           ; 
 044E           ; #pragma interrupt_handler uart1_rx_isr:iv_USART1_RXC
 044E           ; void uart1_rx_isr(void)//串口1接收中断
 044E           ; {
 044E                   .dbline 339
 044E           ;   if(Uart1RxCounter<4)
 044E 8091F501          lds R24,_Uart1RxCounter
 0452 8430              cpi R24,4
 0454 78F4              brsh L112
 0456           X36:
 0456                   .dbline 340
 0456           ;       {
 0456                   .dbline 341
 0456           ;     Uart1RxData[Uart1RxCounter]=UDR1;//接收串口数据,同时清空串口接收中断标志
 0456 80E0              ldi R24,<_Uart1RxData
 0458 90E0              ldi R25,>_Uart1RxData
 045A E091F501          lds R30,_Uart1RxCounter
 045E FF27              clr R31
 0460 E80F              add R30,R24
 0462 F91F              adc R31,R25
 0464 20909C00          lds R2,156
 0468 2082              std z+0,R2
 046A                   .dbline 342
 046A           ;       Uart1RxCounter++;
 046A 8091F501          lds R24,_Uart1RxCounter
 046E 8F5F              subi R24,255    ; addi 1
 0470 8093F501          sts _Uart1RxCounter,R24
 0474                   .dbline 343
 0474           ;       }
 0474           L112:
 0474                   .dbline -2
 0474           L111:
 0474                   .dbline 0 ; func end
 0474 2990              ld R2,y+
 0476 2FBE              OUT 63,R2
 0478 F991              ld R31,y+
 047A E991              ld R30,y+
 047C 9991              ld R25,y+
 047E 8991              ld R24,y+
 0480 2990              ld R2,y+
 0482 1895              reti
 0484                   .dbend
 0484                   .dbfunc e SendUart1 _SendUart1 fV
 0484           ;              i -> <dead>
 0484           ;              t -> R20
 0484           ;              s -> R18,R19
 0484           ;            dat -> R16
                        .even
 0484           _SendUart1::
 0484 4A93              st -y,R20
 0486                   .dbline -1
 0486                   .dbline 348
 0486           ; }
 0486           ; 
 0486           ; 
 0486           ; void SendUart1(unsigned char dat,unsigned int s)   //串口发送数据
 0486           ; {//要求流量板在s个8ms内通过串口返回数据
 0486                   .dbline 351
 0486           ; unsigned char t,i;    
 0486           ; 
 0486           ; for(t=0;t<4;t++)
 0486 4427              clr R20
 0488 09C0              xjmp L118
 048A           L115:
 048A                   .dbline 352
 048A           ;   Uart1RxData[t]=0xff;
 048A 80E0              ldi R24,<_Uart1RxData
 048C 90E0              ldi R25,>_Uart1RxData
 048E E42F              mov R30,R20
 0490 FF27              clr R31
 0492 E80F              add R30,R24
 0494 F91F              adc R31,R25
 0496 8FEF              ldi R24,255
 0498 8083              std z+0,R24
 049A           L116:
 049A                   .dbline 351
 049A 4395              inc R20
 049C           L118:
 049C                   .dbline 351
 049C 4430              cpi R20,4
 049E A8F3              brlo L115
 04A0           X37:
 04A0                   .dbline 354
 04A0           ;   
 04A0           ; Uart1RxCounter=0; //清串口接受计数  
 04A0 2224              clr R2
 04A2 2092F501          sts _Uart1RxCounter,R2
 04A6           L119:
 04A6                   .dbline 356
 04A6           ; 
 04A6           ; while(!(UCSR1A&(1<<UDRE1)));   // 等待发送缓冲器为空
 04A6           L120:
 04A6                   .dbline 356
 04A6 20909B00          lds R2,155
 04AA 25FE              sbrs R2,5
 04AC FCCF              rjmp L119
 04AE           X38:
 04AE                   .dbline 357
 04AE           ; UDR1=dat;  
 04AE 00939C00          sts 156,R16
 04B2                   .dbline 359
 04B2           ; 
 04B2           ; t=UDR1;//开串口接收中断前读空缓存
 04B2 40919C00          lds R20,156
 04B6                   .dbline 360
 04B6           ; UCSR1B|=0x80;//开串口接收中断
 04B6 80919A00          lds R24,154
 04BA 8068              ori R24,128
 04BC 80939A00          sts 154,R24
 04C0                   .dbline 362
 04C0           ;                   
 04C0           ; if(s>0)
 04C0 2030              cpi R18,0
 04C2 2307              cpc R18,R19
 04C4 C9F0              breq L122
 04C6           X39:
 04C6                   .dbline 363
 04C6           ; {
 04C6                   .dbline 365
 04C6           ;  //超时设定
 04C6           ; TimeOutFlag=0; //超时标志置0
 04C6 2224              clr R2
 04C8 2092D901          sts _TimeOutFlag,R2
 04CC                   .dbline 366
 04CC           ; Timer0Counter=s; //8ms定时循环次数
 04CC 30934602          sts _Timer0Counter+1,R19
 04D0 20934502          sts _Timer0Counter,R18
 04D4                   .dbline 367
 04D4           ; TCNT0=0x06;//定时8ms
 04D4 86E0              ldi R24,6
 04D6 82BF              out 0x32,R24
 04D8                   .dbline 368
 04D8           ; TCCR0|=0x06;//256分频
 04D8 83B7              in R24,0x33
 04DA 8660              ori R24,6
 04DC 83BF              out 0x33,R24
 04DE                   .dbline 369
 04DE           ; TIFR|=0x01; //清定时器0中断标志
 04DE 86B7              in R24,0x36
 04E0 8160              ori R24,1
 04E2 86BF              out 0x36,R24
 04E4                   .dbline 370
 04E4           ; TIMSK|=0x01;//使能定时器0中断
 04E4 87B7              in R24,0x37
 04E6 8160              ori R24,1
 04E8 87BF              out 0x37,R24
 04EA           L124:
 04EA                   .dbline 371
 04EA           ; while(TimeOutFlag==0);
 04EA           L125:
 04EA                   .dbline 371
 04EA 2090D901          lds R2,_TimeOutFlag
 04EE 2220              tst R2
 04F0 E1F3              breq L124
 04F2           X40:
 04F2                   .dbline 372
 04F2           ; TIMSK&=0xFE;//关定时器0中断
 04F2 87B7              in R24,0x37
 04F4 8E7F              andi R24,254
 04F6 87BF              out 0x37,R24
 04F8                   .dbline 374
 04F8           ; 
 04F8           ; }
 04F8           L122:
 04F8                   .dbline 376
 04F8           ; 
 04F8           ; UCSR1B&=0x7f;//关串口接收中断
 04F8 80919A00          lds R24,154
 04FC 8F77              andi R24,127
 04FE 80939A00          sts 154,R24
 0502                   .dbline -2
 0502           L114:
 0502                   .dbline 0 ; func end
 0502 4991              ld R20,y+
 0504 0895              ret
 0506                   .dbsym l i 1 c
 0506                   .dbsym r t 20 c
 0506                   .dbsym r s 18 i
 0506                   .dbsym r dat 16 c
 0506                   .dbend
 0506                   .dbfunc e timer3_init _timer3_init fV
                        .even
 0506           _timer3_init::
 0506                   .dbline -1
 0506                   .dbline 387
 0506           ; }
 0506           ; 
 0506           ; 
 0506           ; 
 0506           ; 
 0506           ; //TIMER3 initialize - prescale:1
 0506           ; // WGM: 0) Normal, TOP=0xFFFF
 0506           ; // desired value: 19200Hz
 0506           ; // actual value: 19230.769Hz (0.2%)
 0506           ; void timer3_init(void)
 0506           ; {
 0506                   .dbline 389
 0506           ;  
 0506           ;  ETIMSK&=0xfb;//禁止time3溢出中断   
 0506 80917D00          lds R24,125
 050A 8B7F              andi R24,251
 050C 80937D00          sts 125,R24
 0510                   .dbline 390
 0510           ;  ETIFR&=0xfb;  //清timer3中断标志  
 0510 80917C00          lds R24,124
 0514 8B7F              andi R24,251
 0516 80937C00          sts 124,R24
 051A                   .dbline 391
 051A           ;  TCCR3B = 0x00; //stop
 051A 2224              clr R2
 051C 20928A00          sts 138,R2
 0520                   .dbline 392
 0520           ;  TPSBAUD
 0520                   .dbline 392
 0520 8EEF              ldi R24,254
 0522 80938900          sts 137,R24
 0526                   .dbline 392
 0526 80E6              ldi R24,96
 0528 80938800          sts 136,R24
 052C                   .dbline 392
 052C                   .dbline 393
 052C           ;  TCCR3B = 0x01; //start Timer
 052C 81E0              ldi R24,1
 052E 80938A00          sts 138,R24
 0532                   .dbline 394
 0532           ;  ETIFR&=0xfb;           //清timer3中断标志
 0532 80917C00          lds R24,124
 0536 8B7F              andi R24,251
 0538 80937C00          sts 124,R24
 053C                   .dbline -2
 053C           L127:
 053C                   .dbline 0 ; func end
 053C 0895              ret
 053E                   .dbend
 053E                   .dbfunc e SendTPS _SendTPS fV
 053E           ;              i -> R20
 053E           ;         tx_buf -> R10
                        .even
 053E           _SendTPS::
 053E AA92              st -y,R10
 0540 4A93              st -y,R20
 0542 A02E              mov R10,R16
 0544                   .dbline -1
 0544                   .dbline 398
 0544           ; }
 0544           ; 
 0544           ; void SendTPS(unsigned char tx_buf)
 0544           ; {
 0544                   .dbline 401
 0544           ;     unsigned char i;
 0544           ;       
 0544           ;     timer3_init();   
 0544 E0DF              xcall _timer3_init
 0546           L129:
 0546                   .dbline 403
 0546           ;       
 0546           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0546           L130:
 0546                   .dbline 403
 0546 80917C00          lds R24,124
 054A 8B7F              andi R24,251
 054C E1F3              breq L129
 054E           X41:
 054E                   .dbline 404
 054E           ;       TPSBAUD
 054E                   .dbline 404
 054E 8EEF              ldi R24,254
 0550 80938900          sts 137,R24
 0554                   .dbline 404
 0554 80E6              ldi R24,96
 0556 80938800          sts 136,R24
 055A                   .dbline 404
 055A                   .dbline 405
 055A           ;       ETIFR&=0xfb;           //清timer3中断标志
 055A 80917C00          lds R24,124
 055E 8B7F              andi R24,251
 0560 80937C00          sts 124,R24
 0564                   .dbline 406
 0564           ;     SET_TX();//同步位
 0564 969A              sbi 0x12,6
 0566                   .dbline 408
 0566           ;       
 0566           ;       for(i=0; i<8;i++)
 0566 4427              clr R20
 0568 1CC0              xjmp L135
 056A           L136:
 056A                   .dbline 410
 056A           ;       {
 056A           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 056A           L137:
 056A                   .dbline 410
 056A 80917C00          lds R24,124
 056E 8B7F              andi R24,251
 0570 E1F3              breq L136
 0572           X42:
 0572                   .dbline 411
 0572           ;       TPSBAUD
 0572                   .dbline 411
 0572 8EEF              ldi R24,254
 0574 80938900          sts 137,R24
 0578                   .dbline 411
 0578 80E6              ldi R24,96
 057A 80938800          sts 136,R24
 057E                   .dbline 411
 057E                   .dbline 412
 057E           ;       ETIFR&=0xfb;           //清timer3中断标志
 057E 80917C00          lds R24,124
 0582 8B7F              andi R24,251
 0584 80937C00          sts 124,R24
 0588                   .dbline 413
 0588           ;       if (tx_buf & (1 << i))  
 0588 01E0              ldi R16,1
 058A 142F              mov R17,R20
 058C 0E940000          xcall lsl8
 0590 2A2C              mov R2,R10
 0592 2022              and R2,R16
 0594 21F0              breq L139
 0596           X43:
 0596                   .dbline 414
 0596           ;        {CLR_TX();}
 0596                   .dbline 414
 0596 82B3              in R24,0x12
 0598 8F7B              andi R24,191
 059A 82BB              out 0x12,R24
 059C                   .dbline 414
 059C 01C0              xjmp L140
 059E           L139:
 059E                   .dbline 416
 059E           ;     else
 059E           ;        {SET_TX();}
 059E                   .dbline 416
 059E 969A              sbi 0x12,6
 05A0                   .dbline 416
 05A0           L140:
 05A0                   .dbline 417
 05A0           ;       }
 05A0           L133:
 05A0                   .dbline 408
 05A0 4395              inc R20
 05A2           L135:
 05A2                   .dbline 408
 05A2 4830              cpi R20,8
 05A4 10F3              brlo L137
 05A6           X44:
 05A6           L141:
 05A6                   .dbline 419
 05A6           ;         
 05A6           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05A6           L142:
 05A6                   .dbline 419
 05A6 80917C00          lds R24,124
 05AA 8B7F              andi R24,251
 05AC E1F3              breq L141
 05AE           X45:
 05AE                   .dbline 420
 05AE           ;       TPSBAUD
 05AE                   .dbline 420
 05AE 8EEF              ldi R24,254
 05B0 80938900          sts 137,R24
 05B4                   .dbline 420
 05B4 80E6              ldi R24,96
 05B6 80938800          sts 136,R24
 05BA                   .dbline 420
 05BA                   .dbline 421
 05BA           ;       CLR_TX();//结束位
 05BA 82B3              in R24,0x12
 05BC 8F7B              andi R24,191
 05BE 82BB              out 0x12,R24
 05C0           L144:
 05C0                   .dbline 424
 05C0           ;       
 05C0           ;       //以下是等结束位结束后，再多等待2位，防止连续发送时接收方忙不过来
 05C0           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05C0           L145:
 05C0                   .dbline 424
 05C0 80917C00          lds R24,124
 05C4 8B7F              andi R24,251
 05C6 E1F3              breq L144
 05C8           X46:
 05C8                   .dbline 425
 05C8           ;       TPSBAUD
 05C8                   .dbline 425
 05C8 8EEF              ldi R24,254
 05CA 80938900          sts 137,R24
 05CE                   .dbline 425
 05CE 80E6              ldi R24,96
 05D0 80938800          sts 136,R24
 05D4                   .dbline 425
 05D4           L147:
 05D4                   .dbline 426
 05D4           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05D4           L148:
 05D4                   .dbline 426
 05D4 80917C00          lds R24,124
 05D8 8B7F              andi R24,251
 05DA E1F3              breq L147
 05DC           X47:
 05DC                   .dbline 427
 05DC           ;       TPSBAUD
 05DC                   .dbline 427
 05DC 8EEF              ldi R24,254
 05DE 80938900          sts 137,R24
 05E2                   .dbline 427
 05E2 80E6              ldi R24,96
 05E4 80938800          sts 136,R24
 05E8                   .dbline 427
 05E8           L150:
 05E8                   .dbline 428
 05E8           ;       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 05E8           L151:
 05E8                   .dbline 428
 05E8 80917C00          lds R24,124
 05EC 8B7F              andi R24,251
 05EE E1F3              breq L150
 05F0           X48:
 05F0                   .dbline 429
 05F0           ;       TPSBAUD
 05F0                   .dbline 429
 05F0 8EEF              ldi R24,254
 05F2 80938900          sts 137,R24
 05F6                   .dbline 429
 05F6 80E6              ldi R24,96
 05F8 80938800          sts 136,R24
 05FC                   .dbline 429
 05FC                   .dbline 431
 05FC           ;       
 05FC           ;       TCCR3B = 0x00; //stop  
 05FC 2224              clr R2
 05FE 20928A00          sts 138,R2
 0602                   .dbline 432
 0602           ;       ETIFR&=0xfb;           //清timer3中断标志
 0602 80917C00          lds R24,124
 0606 8B7F              andi R24,251
 0608 80937C00          sts 124,R24
 060C                   .dbline -2
 060C           L128:
 060C                   .dbline 0 ; func end
 060C 4991              ld R20,y+
 060E A990              ld R10,y+
 0610 0895              ret
 0612                   .dbsym r i 20 c
 0612                   .dbsym r tx_buf 10 c
 0612                   .dbend
 0612                   .dbfunc e ReceiveTPS _ReceiveTPS fc
 0612           ;              i -> <dead>
 0612           ;         rx_buf -> R20
                        .even
 0612           _ReceiveTPS::
 0612 4A93              st -y,R20
 0614                   .dbline -1
 0614                   .dbline 437
 0614           ;     
 0614           ; }
 0614           ; 
 0614           ; unsigned char ReceiveTPS(void)
 0614           ; {
 0614                   .dbline 440
 0614           ;     unsigned char i,rx_buf;
 0614           ;       
 0614           ;       rx_buf=0xff;
 0614 4FEF              ldi R20,255
 0616                   .dbline 441
 0616           ;       TCCR1B = 0x00; //stop
 0616 2224              clr R2
 0618 2EBC              out 0x2e,R2
 061A                   .dbline 442
 061A           ;     TCNT1 = 65380;  //定时20ms，9600波特率下接收一个字节实际只需耗时1.04ms，压力板返回时故意延迟了2ms，但有时遇到采集中断则需要10ms以上
 061A 84E6              ldi R24,65380
 061C 9FEF              ldi R25,255
 061E 9DBD              out 0x2d,R25
 0620 8CBD              out 0x2c,R24
 0622                   .dbline 443
 0622           ;       TIFR|=0x04; //清定时器1中断标志 
 0622 86B7              in R24,0x36
 0624 8460              ori R24,4
 0626 86BF              out 0x36,R24
 0628                   .dbline 444
 0628           ;       TCCR1B = 0x05; //1024分频
 0628 85E0              ldi R24,5
 062A 8EBD              out 0x2e,R24
 062C C2C0              xjmp L155
 062E           L154:
 062E                   .dbline 450
 062E           ;       
 062E           ;       //DDRG|=0x01;
 062E           ;       //PORTG|=0x01;  
 062E           ;       //PORTG&=0xfe; 
 062E           ;     while((TIFR&0x04)==0x00) 
 062E           ;       {
 062E                   .dbline 451
 062E           ;          if (!GET_RX())//检测到了低电平的起始位
 062E 8199              sbic 0x10,1
 0630 C0C0              rjmp L157
 0632           X49:
 0632                   .dbline 452
 0632           ;            {  PORTG|=0x01;    
 0632                   .dbline 452
 0632 80916500          lds R24,101
 0636 8160              ori R24,1
 0638 80936500          sts 101,R24
 063C                   .dbline 453
 063C           ;             timer3_init(); 
 063C 64DF              xcall _timer3_init
 063E           L159:
 063E                   .dbline 468
 063E           ;        /*
 063E           ;                       for(i=0; i<8;i++)
 063E           ;                       {
 063E           ;                         while((ETIFR&0xfb)==0);//等待 timer3中断标志
 063E           ;                         PORTG&=0xfe;
 063E           ;                         TPSBAUD
 063E           ;                         ETIFR&=0xfb;           //清timer3中断标志
 063E           ;                         if (GET_RX())           //根据端口电平, 写接收缓冲相应位 
 063E           ;                 {rx_buf |= (1 << i);}
 063E           ;               else
 063E           ;                 {rx_buf &= ~(1 << i);}
 063E           ;                   }
 063E           ;                       */
 063E           ;                       
 063E           ;                        while((ETIFR&0xfb)==0);//等待 timer3中断标志
 063E           L160:
 063E                   .dbline 468
 063E 80917C00          lds R24,124
 0642 8B7F              andi R24,251
 0644 E1F3              breq L159
 0646           X50:
 0646                   .dbline 470
 0646           ;                        // PORTG&=0xfe;
 0646           ;                         TPSBAUD
 0646                   .dbline 470
 0646 8EEF              ldi R24,254
 0648 80938900          sts 137,R24
 064C                   .dbline 470
 064C 80E6              ldi R24,96
 064E 80938800          sts 136,R24
 0652                   .dbline 470
 0652                   .dbline 471
 0652           ;                         ETIFR&=0xfb;           //清timer3中断标志
 0652 80917C00          lds R24,124
 0656 8B7F              andi R24,251
 0658 80937C00          sts 124,R24
 065C                   .dbline 472
 065C           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 065C 819B              sbis 0x10,1
 065E 02C0              rjmp L162
 0660           X51:
 0660                   .dbline 473
 0660           ;                 {rx_buf |= (1 << 0);}
 0660                   .dbline 473
 0660 4160              ori R20,1
 0662                   .dbline 473
 0662 01C0              xjmp L165
 0664           L162:
 0664                   .dbline 475
 0664           ;               else
 0664           ;                 {rx_buf &= ~(1 << 0);}
 0664                   .dbline 475
 0664 4E7F              andi R20,254
 0666                   .dbline 475
 0666           L164:
 0666                   .dbline 477
 0666           ;                       
 0666           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0666           L165:
 0666                   .dbline 477
 0666 80917C00          lds R24,124
 066A 8B7F              andi R24,251
 066C E1F3              breq L164
 066E           X52:
 066E                   .dbline 479
 066E           ;                       //  PORTG|=0x01; 
 066E           ;                         TPSBAUD
 066E                   .dbline 479
 066E 8EEF              ldi R24,254
 0670 80938900          sts 137,R24
 0674                   .dbline 479
 0674 80E6              ldi R24,96
 0676 80938800          sts 136,R24
 067A                   .dbline 479
 067A                   .dbline 480
 067A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 067A 80917C00          lds R24,124
 067E 8B7F              andi R24,251
 0680 80937C00          sts 124,R24
 0684                   .dbline 481
 0684           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0684 819B              sbis 0x10,1
 0686 02C0              rjmp L167
 0688           X53:
 0688                   .dbline 482
 0688           ;                 {rx_buf |= (1 << 1);}
 0688                   .dbline 482
 0688 4260              ori R20,2
 068A                   .dbline 482
 068A 01C0              xjmp L170
 068C           L167:
 068C                   .dbline 484
 068C           ;               else
 068C           ;                 {rx_buf &= ~(1 << 1);}
 068C                   .dbline 484
 068C 4D7F              andi R20,253
 068E                   .dbline 484
 068E           L169:
 068E                   .dbline 486
 068E           ;                               
 068E           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 068E           L170:
 068E                   .dbline 486
 068E 80917C00          lds R24,124
 0692 8B7F              andi R24,251
 0694 E1F3              breq L169
 0696           X54:
 0696                   .dbline 488
 0696           ;                       //  PORTG&=0xfe;
 0696           ;                         TPSBAUD
 0696                   .dbline 488
 0696 8EEF              ldi R24,254
 0698 80938900          sts 137,R24
 069C                   .dbline 488
 069C 80E6              ldi R24,96
 069E 80938800          sts 136,R24
 06A2                   .dbline 488
 06A2                   .dbline 489
 06A2           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06A2 80917C00          lds R24,124
 06A6 8B7F              andi R24,251
 06A8 80937C00          sts 124,R24
 06AC                   .dbline 490
 06AC           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06AC 819B              sbis 0x10,1
 06AE 02C0              rjmp L172
 06B0           X55:
 06B0                   .dbline 491
 06B0           ;                 {rx_buf |= (1 << 2);}
 06B0                   .dbline 491
 06B0 4460              ori R20,4
 06B2                   .dbline 491
 06B2 01C0              xjmp L175
 06B4           L172:
 06B4                   .dbline 493
 06B4           ;               else
 06B4           ;                 {rx_buf &= ~(1 << 2);}
 06B4                   .dbline 493
 06B4 4B7F              andi R20,251
 06B6                   .dbline 493
 06B6           L174:
 06B6                   .dbline 495
 06B6           ;                       
 06B6           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 06B6           L175:
 06B6                   .dbline 495
 06B6 80917C00          lds R24,124
 06BA 8B7F              andi R24,251
 06BC E1F3              breq L174
 06BE           X56:
 06BE                   .dbline 497
 06BE           ;                        // PORTG|=0x01; 
 06BE           ;                         TPSBAUD
 06BE                   .dbline 497
 06BE 8EEF              ldi R24,254
 06C0 80938900          sts 137,R24
 06C4                   .dbline 497
 06C4 80E6              ldi R24,96
 06C6 80938800          sts 136,R24
 06CA                   .dbline 497
 06CA                   .dbline 498
 06CA           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06CA 80917C00          lds R24,124
 06CE 8B7F              andi R24,251
 06D0 80937C00          sts 124,R24
 06D4                   .dbline 499
 06D4           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06D4 819B              sbis 0x10,1
 06D6 02C0              rjmp L177
 06D8           X57:
 06D8                   .dbline 500
 06D8           ;                 {rx_buf |= (1 << 3);}
 06D8                   .dbline 500
 06D8 4860              ori R20,8
 06DA                   .dbline 500
 06DA 01C0              xjmp L180
 06DC           L177:
 06DC                   .dbline 502
 06DC           ;               else
 06DC           ;                 {rx_buf &= ~(1 << 3);}
 06DC                   .dbline 502
 06DC 477F              andi R20,247
 06DE                   .dbline 502
 06DE           L179:
 06DE                   .dbline 504
 06DE           ;                       
 06DE           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 06DE           L180:
 06DE                   .dbline 504
 06DE 80917C00          lds R24,124
 06E2 8B7F              andi R24,251
 06E4 E1F3              breq L179
 06E6           X58:
 06E6                   .dbline 506
 06E6           ;                       //  PORTG&=0xfe;
 06E6           ;                         TPSBAUD
 06E6                   .dbline 506
 06E6 8EEF              ldi R24,254
 06E8 80938900          sts 137,R24
 06EC                   .dbline 506
 06EC 80E6              ldi R24,96
 06EE 80938800          sts 136,R24
 06F2                   .dbline 506
 06F2                   .dbline 507
 06F2           ;                         ETIFR&=0xfb;           //清timer3中断标志
 06F2 80917C00          lds R24,124
 06F6 8B7F              andi R24,251
 06F8 80937C00          sts 124,R24
 06FC                   .dbline 508
 06FC           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 06FC 819B              sbis 0x10,1
 06FE 02C0              rjmp L182
 0700           X59:
 0700                   .dbline 509
 0700           ;                 {rx_buf |= (1 << 4);}
 0700                   .dbline 509
 0700 4061              ori R20,16
 0702                   .dbline 509
 0702 01C0              xjmp L185
 0704           L182:
 0704                   .dbline 511
 0704           ;               else
 0704           ;                 {rx_buf &= ~(1 << 4);}
 0704                   .dbline 511
 0704 4F7E              andi R20,239
 0706                   .dbline 511
 0706           L184:
 0706                   .dbline 513
 0706           ;                       
 0706           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0706           L185:
 0706                   .dbline 513
 0706 80917C00          lds R24,124
 070A 8B7F              andi R24,251
 070C E1F3              breq L184
 070E           X60:
 070E                   .dbline 515
 070E           ;                        // PORTG|=0x01; 
 070E           ;                         TPSBAUD
 070E                   .dbline 515
 070E 8EEF              ldi R24,254
 0710 80938900          sts 137,R24
 0714                   .dbline 515
 0714 80E6              ldi R24,96
 0716 80938800          sts 136,R24
 071A                   .dbline 515
 071A                   .dbline 516
 071A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 071A 80917C00          lds R24,124
 071E 8B7F              andi R24,251
 0720 80937C00          sts 124,R24
 0724                   .dbline 517
 0724           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0724 819B              sbis 0x10,1
 0726 02C0              rjmp L187
 0728           X61:
 0728                   .dbline 518
 0728           ;                 {rx_buf |= (1 << 5);}
 0728                   .dbline 518
 0728 4062              ori R20,32
 072A                   .dbline 518
 072A 01C0              xjmp L190
 072C           L187:
 072C                   .dbline 520
 072C           ;               else
 072C           ;                 {rx_buf &= ~(1 << 5);}
 072C                   .dbline 520
 072C 4F7D              andi R20,223
 072E                   .dbline 520
 072E           L189:
 072E                   .dbline 522
 072E           ;                       
 072E           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 072E           L190:
 072E                   .dbline 522
 072E 80917C00          lds R24,124
 0732 8B7F              andi R24,251
 0734 E1F3              breq L189
 0736           X62:
 0736                   .dbline 524
 0736           ;                        // PORTG&=0xfe;
 0736           ;                         TPSBAUD
 0736                   .dbline 524
 0736 8EEF              ldi R24,254
 0738 80938900          sts 137,R24
 073C                   .dbline 524
 073C 80E6              ldi R24,96
 073E 80938800          sts 136,R24
 0742                   .dbline 524
 0742                   .dbline 525
 0742           ;                         ETIFR&=0xfb;           //清timer3中断标志
 0742 80917C00          lds R24,124
 0746 8B7F              andi R24,251
 0748 80937C00          sts 124,R24
 074C                   .dbline 526
 074C           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 074C 819B              sbis 0x10,1
 074E 02C0              rjmp L192
 0750           X63:
 0750                   .dbline 527
 0750           ;                 {rx_buf |= (1 << 6);}
 0750                   .dbline 527
 0750 4064              ori R20,64
 0752                   .dbline 527
 0752 01C0              xjmp L195
 0754           L192:
 0754                   .dbline 529
 0754           ;               else
 0754           ;                 {rx_buf &= ~(1 << 6);}
 0754                   .dbline 529
 0754 4F7B              andi R20,191
 0756                   .dbline 529
 0756           L194:
 0756                   .dbline 531
 0756           ;                       
 0756           ;                       while((ETIFR&0xfb)==0);//等待 timer3中断标志
 0756           L195:
 0756                   .dbline 531
 0756 80917C00          lds R24,124
 075A 8B7F              andi R24,251
 075C E1F3              breq L194
 075E           X64:
 075E                   .dbline 533
 075E           ;                        // PORTG|=0x01; 
 075E           ;                         TPSBAUD
 075E                   .dbline 533
 075E 8EEF              ldi R24,254
 0760 80938900          sts 137,R24
 0764                   .dbline 533
 0764 80E6              ldi R24,96
 0766 80938800          sts 136,R24
 076A                   .dbline 533
 076A                   .dbline 534
 076A           ;                         ETIFR&=0xfb;           //清timer3中断标志
 076A 80917C00          lds R24,124
 076E 8B7F              andi R24,251
 0770 80937C00          sts 124,R24
 0774                   .dbline 535
 0774           ;                         if (GET_RX())           /* 根据端口电平, 写接收缓冲相应位 */
 0774 819B              sbis 0x10,1
 0776 02C0              rjmp L197
 0778           X65:
 0778                   .dbline 536
 0778           ;                 {rx_buf |= (1 << 7);}
 0778                   .dbline 536
 0778 4068              ori R20,128
 077A                   .dbline 536
 077A 01C0              xjmp L200
 077C           L197:
 077C                   .dbline 538
 077C           ;               else
 077C           ;                 {rx_buf &= ~(1 << 7);}
 077C                   .dbline 538
 077C 4F77              andi R20,127
 077E                   .dbline 538
 077E           L199:
 077E                   .dbline 540
 077E           ;                                               
 077E           ;                        while((ETIFR&0xfb)==0);//等待 timer3中断标志
 077E           L200:
 077E                   .dbline 540
 077E 80917C00          lds R24,124
 0782 8B7F              andi R24,251
 0784 E1F3              breq L199
 0786           X66:
 0786                   .dbline 542
 0786           ;                       // PORTG&=0xfe; 
 0786           ;                        TPSBAUD
 0786                   .dbline 542
 0786 8EEF              ldi R24,254
 0788 80938900          sts 137,R24
 078C                   .dbline 542
 078C 80E6              ldi R24,96
 078E 80938800          sts 136,R24
 0792                   .dbline 542
 0792                   .dbline 543
 0792           ;                        ETIFR&=0xfb;           //清timer3中断标志
 0792 80917C00          lds R24,124
 0796 8B7F              andi R24,251
 0798 80937C00          sts 124,R24
 079C                   .dbline 545
 079C           ;                        
 079C           ;                        TCCR3B = 0x00; //stop  
 079C 2224              clr R2
 079E 20928A00          sts 138,R2
 07A2                   .dbline 546
 07A2           ;                ETIFR&=0xfb;           //清timer3中断标志
 07A2 80917C00          lds R24,124
 07A6 8B7F              andi R24,251
 07A8 80937C00          sts 124,R24
 07AC                   .dbline 548
 07AC           ;                         
 07AC           ;                       if (GET_RX()) //检测到了高电平结束位
 07AC 819B              sbis 0x10,1
 07AE 01C0              rjmp L202
 07B0           X67:
 07B0                   .dbline 549
 07B0           ;                        {break;}
 07B0                   .dbline 549
 07B0 03C0              xjmp L156
 07B2           L202:
 07B2                   .dbline 550
 07B2           ;                }
 07B2           L157:
 07B2                   .dbline 551
 07B2           ;       }
 07B2           L155:
 07B2                   .dbline 449
 07B2 26B6              in R2,0x36
 07B4 22FE              sbrs R2,2
 07B6 3BCF              rjmp L154
 07B8           X68:
 07B8           L156:
 07B8                   .dbline 552
 07B8           ;       TCCR1B = 0x00; //stop
 07B8 2224              clr R2
 07BA 2EBC              out 0x2e,R2
 07BC                   .dbline 553
 07BC           ;       TIFR|=0x04; //清定时器1中断标志 
 07BC 86B7              in R24,0x36
 07BE 8460              ori R24,4
 07C0 86BF              out 0x36,R24
 07C2                   .dbline 555
 07C2           ;       
 07C2           ;       return rx_buf;
 07C2 042F              mov R16,R20
 07C4                   .dbline -2
 07C4           L153:
 07C4                   .dbline 0 ; func end
 07C4 4991              ld R20,y+
 07C6 0895              ret
 07C8                   .dbsym l i 1 c
 07C8                   .dbsym r rx_buf 20 c
 07C8                   .dbend
 07C8                   .dbfunc e SampleTPS _SampleTPS fV
 07C8           ;        rx_fifo -> y+0
 07C8           ;            cmd -> R10
                        .even
 07C8           _SampleTPS::
 07C8 AA92              st -y,R10
 07CA A02E              mov R10,R16
 07CC 2497              sbiw R28,4
 07CE                   .dbline -1
 07CE                   .dbline 559
 07CE           ; }
 07CE           ; 
 07CE           ; void SampleTPS(unsigned char cmd)
 07CE           ; {   
 07CE                   .dbline 562
 07CE           ;     unsigned char rx_fifo[4];
 07CE           ;    
 07CE           ;       SendTPS(cmd);  //采样第2路压力温度，数字量或工程量
 07CE 0A2D              mov R16,R10
 07D0 B6DE              xcall _SendTPS
 07D2                   .dbline 564
 07D2           ; 
 07D2           ;       rx_fifo[0]=ReceiveTPS();
 07D2 1FDF              xcall _ReceiveTPS
 07D4 0883              std y+0,R16
 07D6                   .dbline 565
 07D6           ;       rx_fifo[1]=ReceiveTPS();
 07D6 1DDF              xcall _ReceiveTPS
 07D8 0983              std y+1,R16
 07DA                   .dbline 566
 07DA           ;       rx_fifo[2]=ReceiveTPS();
 07DA 1BDF              xcall _ReceiveTPS
 07DC A02E              mov R10,R16
 07DE AA82              std y+2,R10
 07E0                   .dbline 567
 07E0           ;       rx_fifo[3]=ReceiveTPS();
 07E0 18DF              xcall _ReceiveTPS
 07E2 A02E              mov R10,R16
 07E4 AB82              std y+3,R10
 07E6                   .dbline 569
 07E6           ;       
 07E6           ;       TPS_PData=rx_fifo[1];
 07E6 2980              ldd R2,y+1
 07E8 3324              clr R3
 07EA 3092DE01          sts _TPS_PData+1,R3
 07EE 2092DD01          sts _TPS_PData,R2
 07F2                   .dbline 570
 07F2           ;       TPS_PData<<=8;
 07F2 322C              mov R3,R2
 07F4 2224              clr R2
 07F6 3092DE01          sts _TPS_PData+1,R3
 07FA 2092DD01          sts _TPS_PData,R2
 07FE                   .dbline 571
 07FE           ;       TPS_PData|=rx_fifo[0];
 07FE 2880              ldd R2,y+0
 0800 3324              clr R3
 0802 4090DD01          lds R4,_TPS_PData
 0806 5090DE01          lds R5,_TPS_PData+1
 080A 4228              or R4,R2
 080C 5328              or R5,R3
 080E 5092DE01          sts _TPS_PData+1,R5
 0812 4092DD01          sts _TPS_PData,R4
 0816                   .dbline 572
 0816           ;       TPS_TData=rx_fifo[3];
 0816 2A2C              mov R2,R10
 0818 3324              clr R3
 081A 3092DC01          sts _TPS_TData+1,R3
 081E 2092DB01          sts _TPS_TData,R2
 0822                   .dbline 573
 0822           ;       TPS_TData<<=8;
 0822 322C              mov R3,R2
 0824 2224              clr R2
 0826 3092DC01          sts _TPS_TData+1,R3
 082A 2092DB01          sts _TPS_TData,R2
 082E                   .dbline 574
 082E           ;       TPS_TData|=rx_fifo[2];
 082E 2A80              ldd R2,y+2
 0830 3324              clr R3
 0832 4090DB01          lds R4,_TPS_TData
 0836 5090DC01          lds R5,_TPS_TData+1
 083A 4228              or R4,R2
 083C 5328              or R5,R3
 083E 5092DC01          sts _TPS_TData+1,R5
 0842 4092DB01          sts _TPS_TData,R4
 0846                   .dbline -2
 0846           L204:
 0846                   .dbline 0 ; func end
 0846 2496              adiw R28,4
 0848 A990              ld R10,y+
 084A 0895              ret
 084C                   .dbsym l rx_fifo 0 A[4:4]c
 084C                   .dbsym r cmd 10 c
 084C                   .dbend
 084C                   .dbfunc e uart0_init _uart0_init fV
                        .even
 084C           _uart0_init::
 084C                   .dbline -1
 084C                   .dbline 584
 084C           ; }
 084C           ; 
 084C           ; 
 084C           ; //UART0 initialize
 084C           ; // desired baud rate: 57600
 084C           ; // actual: baud rate:58824 (2.1%)
 084C           ; // char size: 8 bit
 084C           ; // parity: Disabled
 084C           ; void uart0_init(void)
 084C           ; {
 084C                   .dbline 585
 084C           ;  UCSR0B = 0x00; //disable while setting baud rate
 084C 2224              clr R2
 084E 2AB8              out 0xa,R2
 0850                   .dbline 586
 0850           ;  UCSR0A = 0x02;
 0850 82E0              ldi R24,2
 0852 8BB9              out 0xb,R24
 0854                   .dbline 587
 0854           ;  UCSR0C = 0x06;
 0854 86E0              ldi R24,6
 0856 80939500          sts 149,R24
 085A                   .dbline 588
 085A           ;  UBRR0L = 0x10; //set baud rate lo 57600
 085A 80E1              ldi R24,16
 085C 89B9              out 0x9,R24
 085E                   .dbline 589
 085E           ;  UBRR0H = 0x00; //set baud rate hi
 085E 20929000          sts 144,R2
 0862                   .dbline 590
 0862           ;  UCSR0B = 0x98;
 0862 88E9              ldi R24,152
 0864 8AB9              out 0xa,R24
 0866                   .dbline -2
 0866           L211:
 0866                   .dbline 0 ; func end
 0866 0895              ret
 0868                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C943404          jmp _uart0_rx_isr
                        .area text(rom, con, rel)
 0868                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0868                   .dbfunc e uart0_rx_isr _uart0_rx_isr fV
                        .even
 0868           _uart0_rx_isr::
 0868 2A92              st -y,R2
 086A 8A93              st -y,R24
 086C 9A93              st -y,R25
 086E EA93              st -y,R30
 0870 FA93              st -y,R31
 0872 2FB6              IN R2,63
 0874 2A92              st -y,R2
 0876                   .dbline -1
 0876                   .dbline 595
 0876           ; }
 0876           ; 
 0876           ; #pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
 0876           ; void uart0_rx_isr(void)//串口0接收中断
 0876           ; {
 0876                   .dbline 596
 0876           ;     if(Uart0RxCounter<74)
 0876 8091FA01          lds R24,_Uart0RxCounter
 087A 8A34              cpi R24,74
 087C 70F4              brsh L213
 087E           X69:
 087E                   .dbline 597
 087E           ;       {
 087E                   .dbline 598
 087E           ;     Uart0RxData[Uart0RxCounter]=UDR0;//接收串口数据,同时清空串口接收中断标志
 087E 80E0              ldi R24,<_Uart0RxData
 0880 90E0              ldi R25,>_Uart0RxData
 0882 E091FA01          lds R30,_Uart0RxCounter
 0886 FF27              clr R31
 0888 E80F              add R30,R24
 088A F91F              adc R31,R25
 088C 2CB0              in R2,0xc
 088E 2082              std z+0,R2
 0890                   .dbline 599
 0890           ;       Uart0RxCounter++;
 0890 8091FA01          lds R24,_Uart0RxCounter
 0894 8F5F              subi R24,255    ; addi 1
 0896 8093FA01          sts _Uart0RxCounter,R24
 089A                   .dbline 600
 089A           ;       }
 089A           L213:
 089A                   .dbline -2
 089A           L212:
 089A                   .dbline 0 ; func end
 089A 2990              ld R2,y+
 089C 2FBE              OUT 63,R2
 089E F991              ld R31,y+
 08A0 E991              ld R30,y+
 08A2 9991              ld R25,y+
 08A4 8991              ld R24,y+
 08A6 2990              ld R2,y+
 08A8 1895              reti
 08AA                   .dbend
                        .area vector(rom, abs)
                        .org 64
 0040 0C945504          jmp _timer0_ovf_isr
                        .area text(rom, con, rel)
 08AA                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 08AA                   .dbfunc e timer0_ovf_isr _timer0_ovf_isr fV
                        .even
 08AA           _timer0_ovf_isr::
 08AA 2A92              st -y,R2
 08AC 8A93              st -y,R24
 08AE 9A93              st -y,R25
 08B0 2FB6              IN R2,63
 08B2 2A92              st -y,R2
 08B4                   .dbline -1
 08B4                   .dbline 605
 08B4           ; }
 08B4           ; 
 08B4           ; #pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
 08B4           ; void timer0_ovf_isr(void)
 08B4           ; {
 08B4                   .dbline 606
 08B4           ; Timer0Counter--;
 08B4 80914502          lds R24,_Timer0Counter
 08B8 90914602          lds R25,_Timer0Counter+1
 08BC 0197              sbiw R24,1
 08BE 90934602          sts _Timer0Counter+1,R25
 08C2 80934502          sts _Timer0Counter,R24
 08C6                   .dbline 607
 08C6           ; if(Timer0Counter==0)
 08C6 8030              cpi R24,0
 08C8 8907              cpc R24,R25
 08CA 61F4              brne L216
 08CC           X70:
 08CC                   .dbline 608
 08CC           ; {
 08CC                   .dbline 609
 08CC           ;  TCNT0=0;
 08CC 2224              clr R2
 08CE 22BE              out 0x32,R2
 08D0                   .dbline 610
 08D0           ;  TimeOutFlag=1;
 08D0 81E0              ldi R24,1
 08D2 8093D901          sts _TimeOutFlag,R24
 08D6                   .dbline 611
 08D6           ;  TIMSK&=0xFE;//关定时器0中断
 08D6 87B7              in R24,0x37
 08D8 8E7F              andi R24,254
 08DA 87BF              out 0x37,R24
 08DC                   .dbline 612
 08DC           ;  UCSR0B&=0x7f;//关串口接收中断
 08DC 8AB1              in R24,0xa
 08DE 8F77              andi R24,127
 08E0 8AB9              out 0xa,R24
 08E2                   .dbline 613
 08E2           ;  }
 08E2 02C0              xjmp L217
 08E4           L216:
 08E4                   .dbline 615
 08E4           ;  else
 08E4           ;  {
 08E4                   .dbline 616
 08E4           ;  TCNT0=0x06;//定时8ms
 08E4 86E0              ldi R24,6
 08E6 82BF              out 0x32,R24
 08E8                   .dbline 617
 08E8           ;  }
 08E8           L217:
 08E8                   .dbline -2
 08E8           L215:
 08E8                   .dbline 0 ; func end
 08E8 2990              ld R2,y+
 08EA 2FBE              OUT 63,R2
 08EC 9991              ld R25,y+
 08EE 8991              ld R24,y+
 08F0 2990              ld R2,y+
 08F2 1895              reti
 08F4                   .dbend
 08F4                   .dbfunc e SendUart0_2 _SendUart0_2 fV
 08F4           ;              t -> R20
 08F4           ;              i -> R22
 08F4           ;              s -> R18,R19
 08F4           ;            len -> R16
                        .even
 08F4           _SendUart0_2::
 08F4 4A93              st -y,R20
 08F6 6A93              st -y,R22
 08F8                   .dbline -1
 08F8                   .dbline 623
 08F8           ; }
 08F8           ; 
 08F8           ;  
 08F8           ; 
 08F8           ; void SendUart0_2(unsigned char len,unsigned int s)   //串口发送数据
 08F8           ; {//要求流量板在s个8ms内通过串口返回数据
 08F8                   .dbline 626
 08F8           ; unsigned char t,i;    
 08F8           ; 
 08F8           ; for(t=0;t<74;t++)
 08F8 4427              clr R20
 08FA 09C0              xjmp L222
 08FC           L219:
 08FC                   .dbline 627
 08FC           ;   Uart0RxData[t]=0xff;
 08FC 80E0              ldi R24,<_Uart0RxData
 08FE 90E0              ldi R25,>_Uart0RxData
 0900 E42F              mov R30,R20
 0902 FF27              clr R31
 0904 E80F              add R30,R24
 0906 F91F              adc R31,R25
 0908 8FEF              ldi R24,255
 090A 8083              std z+0,R24
 090C           L220:
 090C                   .dbline 626
 090C 4395              inc R20
 090E           L222:
 090E                   .dbline 626
 090E 4A34              cpi R20,74
 0910 A8F3              brlo L219
 0912           X71:
 0912                   .dbline 629
 0912           ;   
 0912           ; Uart0RxCounter=0; //清串口接受计数  
 0912 2224              clr R2
 0914 2092FA01          sts _Uart0RxCounter,R2
 0918                   .dbline 631
 0918           ; 
 0918           ; for(t=0;t<len;t++)
 0918 4427              clr R20
 091A 10C0              xjmp L226
 091C           L227:
 091C                   .dbline 633
 091C           ; {
 091C           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 091C           L228:
 091C                   .dbline 633
 091C 5D9B              sbis 0xb,5
 091E FECF              rjmp L227
 0920           X72:
 0920                   .dbline 634
 0920           ; for(i=0;i<200;i++);
 0920 6627              clr R22
 0922 01C0              xjmp L233
 0924           L230:
 0924                   .dbline 634
 0924           L231:
 0924                   .dbline 634
 0924 6395              inc R22
 0926           L233:
 0926                   .dbline 634
 0926 683C              cpi R22,200
 0928 E8F3              brlo L230
 092A           X73:
 092A                   .dbline 635
 092A           ; UDR0=Uart0TxData[t];  
 092A 80E0              ldi R24,<_Uart0TxData
 092C 90E0              ldi R25,>_Uart0TxData
 092E E42F              mov R30,R20
 0930 FF27              clr R31
 0932 E80F              add R30,R24
 0934 F91F              adc R31,R25
 0936 2080              ldd R2,z+0
 0938 2CB8              out 0xc,R2
 093A                   .dbline 636
 093A           ; }
 093A           L224:
 093A                   .dbline 631
 093A 4395              inc R20
 093C           L226:
 093C                   .dbline 631
 093C 4017              cp R20,R16
 093E 70F3              brlo L228
 0940           X74:
 0940                   .dbline 638
 0940           ;                   
 0940           ; if(s>0)
 0940 2030              cpi R18,0
 0942 2307              cpc R18,R19
 0944 F1F0              breq L234
 0946           X75:
 0946                   .dbline 639
 0946           ; {
 0946                   .dbline 641
 0946           ;  //超时设定
 0946           ; TimeOutFlag=0; //超时标志置0
 0946 2224              clr R2
 0948 2092D901          sts _TimeOutFlag,R2
 094C                   .dbline 642
 094C           ; Timer0Counter=s; //8ms定时循环次数
 094C 30934602          sts _Timer0Counter+1,R19
 0950 20934502          sts _Timer0Counter,R18
 0954                   .dbline 643
 0954           ; TCNT0=0x06;//定时8ms
 0954 86E0              ldi R24,6
 0956 82BF              out 0x32,R24
 0958                   .dbline 644
 0958           ; TCCR0|=0x06;//256分频
 0958 83B7              in R24,0x33
 095A 8660              ori R24,6
 095C 83BF              out 0x33,R24
 095E                   .dbline 645
 095E           ; TIFR|=0x01; //清定时器0中断标志
 095E 86B7              in R24,0x36
 0960 8160              ori R24,1
 0962 86BF              out 0x36,R24
 0964                   .dbline 646
 0964           ; TIMSK|=0x01;//使能定时器0中断
 0964 87B7              in R24,0x37
 0966 8160              ori R24,1
 0968 87BF              out 0x37,R24
 096A                   .dbline 647
 096A           ; t=UDR0;//开串口接收中断前读空缓存
 096A 4CB1              in R20,0xc
 096C                   .dbline 648
 096C           ; UCSR0B|=0x80;//开串口接收中断
 096C 579A              sbi 0xa,7
 096E           L236:
 096E                   .dbline 649
 096E           ; while(TimeOutFlag==0);
 096E           L237:
 096E                   .dbline 649
 096E 2090D901          lds R2,_TimeOutFlag
 0972 2220              tst R2
 0974 E1F3              breq L236
 0976           X76:
 0976                   .dbline 650
 0976           ; TIMSK&=0xFE;//关定时器0中断
 0976 87B7              in R24,0x37
 0978 8E7F              andi R24,254
 097A 87BF              out 0x37,R24
 097C                   .dbline 651
 097C           ; UCSR0B&=0x7f;//关串口接收中断
 097C 8AB1              in R24,0xa
 097E 8F77              andi R24,127
 0980 8AB9              out 0xa,R24
 0982                   .dbline 652
 0982           ; }
 0982           L234:
 0982                   .dbline -2
 0982           L218:
 0982                   .dbline 0 ; func end
 0982 6991              ld R22,y+
 0984 4991              ld R20,y+
 0986 0895              ret
 0988                   .dbsym r t 20 c
 0988                   .dbsym r i 22 c
 0988                   .dbsym r s 18 i
 0988                   .dbsym r len 16 c
 0988                   .dbend
 0988                   .dbfunc e SendUart0_3 _SendUart0_3 fV
 0988           ;              t -> R20
 0988           ;              i -> R22
 0988           ;             cn -> R10
 0988           ;              s -> R18,R19
 0988           ;            len -> R16
                        .even
 0988           _SendUart0_3::
 0988 0E940000          xcall push_xgsetF00C
 098C AE80              ldd R10,y+6
 098E                   .dbline -1
 098E                   .dbline 656
 098E           ; }
 098E           ; 
 098E           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn)   //串口发送数据，不死等，收到采集板返回的cn个字节后即退出，如一直没收到cn个字节，则超时时间s*8ms到后也退出
 098E           ; {//要求流量板在s个8ms内通过串口返回数据
 098E                   .dbline 659
 098E           ; unsigned char t,i;    
 098E           ; 
 098E           ; for(t=0;t<74;t++)
 098E 4427              clr R20
 0990 09C0              xjmp L243
 0992           L240:
 0992                   .dbline 660
 0992           ;   Uart0RxData[t]=0xff;
 0992 80E0              ldi R24,<_Uart0RxData
 0994 90E0              ldi R25,>_Uart0RxData
 0996 E42F              mov R30,R20
 0998 FF27              clr R31
 099A E80F              add R30,R24
 099C F91F              adc R31,R25
 099E 8FEF              ldi R24,255
 09A0 8083              std z+0,R24
 09A2           L241:
 09A2                   .dbline 659
 09A2 4395              inc R20
 09A4           L243:
 09A4                   .dbline 659
 09A4 4A34              cpi R20,74
 09A6 A8F3              brlo L240
 09A8           X77:
 09A8                   .dbline 662
 09A8           ;   
 09A8           ; Uart0RxCounter=0; //清串口接受计数  
 09A8 2224              clr R2
 09AA 2092FA01          sts _Uart0RxCounter,R2
 09AE                   .dbline 664
 09AE           ; 
 09AE           ; for(t=0;t<len;t++)
 09AE 4427              clr R20
 09B0 10C0              xjmp L247
 09B2           L248:
 09B2                   .dbline 666
 09B2           ; {
 09B2           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 09B2           L249:
 09B2                   .dbline 666
 09B2 5D9B              sbis 0xb,5
 09B4 FECF              rjmp L248
 09B6           X78:
 09B6                   .dbline 667
 09B6           ; for(i=0;i<200;i++);
 09B6 6627              clr R22
 09B8 01C0              xjmp L254
 09BA           L251:
 09BA                   .dbline 667
 09BA           L252:
 09BA                   .dbline 667
 09BA 6395              inc R22
 09BC           L254:
 09BC                   .dbline 667
 09BC 683C              cpi R22,200
 09BE E8F3              brlo L251
 09C0           X79:
 09C0                   .dbline 668
 09C0           ; UDR0=Uart0TxData[t];  
 09C0 80E0              ldi R24,<_Uart0TxData
 09C2 90E0              ldi R25,>_Uart0TxData
 09C4 E42F              mov R30,R20
 09C6 FF27              clr R31
 09C8 E80F              add R30,R24
 09CA F91F              adc R31,R25
 09CC 2080              ldd R2,z+0
 09CE 2CB8              out 0xc,R2
 09D0                   .dbline 669
 09D0           ; }
 09D0           L245:
 09D0                   .dbline 664
 09D0 4395              inc R20
 09D2           L247:
 09D2                   .dbline 664
 09D2 4017              cp R20,R16
 09D4 70F3              brlo L249
 09D6           X80:
 09D6                   .dbline 671
 09D6           ;                   
 09D6           ; if(s>0)
 09D6 2030              cpi R18,0
 09D8 2307              cpc R18,R19
 09DA 21F1              breq L255
 09DC           X81:
 09DC                   .dbline 672
 09DC           ; {
 09DC                   .dbline 674
 09DC           ;  //超时设定
 09DC           ; TimeOutFlag=0; //超时标志置0
 09DC 2224              clr R2
 09DE 2092D901          sts _TimeOutFlag,R2
 09E2                   .dbline 675
 09E2           ; Timer0Counter=s; //8ms定时循环次数
 09E2 30934602          sts _Timer0Counter+1,R19
 09E6 20934502          sts _Timer0Counter,R18
 09EA                   .dbline 676
 09EA           ; TCNT0=0x06;//定时8ms
 09EA 86E0              ldi R24,6
 09EC 82BF              out 0x32,R24
 09EE                   .dbline 677
 09EE           ; TCCR0|=0x06;//256分频
 09EE 83B7              in R24,0x33
 09F0 8660              ori R24,6
 09F2 83BF              out 0x33,R24
 09F4                   .dbline 678
 09F4           ; TIFR|=0x01; //清定时器0中断标志
 09F4 86B7              in R24,0x36
 09F6 8160              ori R24,1
 09F8 86BF              out 0x36,R24
 09FA                   .dbline 679
 09FA           ; TIMSK|=0x01;//使能定时器0中断
 09FA 87B7              in R24,0x37
 09FC 8160              ori R24,1
 09FE 87BF              out 0x37,R24
 0A00                   .dbline 680
 0A00           ; t=UDR0;//开串口接收中断前读空缓存
 0A00 4CB1              in R20,0xc
 0A02                   .dbline 681
 0A02           ; UCSR0B|=0x80;//开串口接收中断
 0A02 579A              sbi 0xa,7
 0A04 05C0              xjmp L258
 0A06           L257:
 0A06                   .dbline 683
 0A06           ; while(TimeOutFlag==0)
 0A06           ; {
 0A06                   .dbline 684
 0A06           ;  if(Uart0RxCounter>=cn)
 0A06 2090FA01          lds R2,_Uart0RxCounter
 0A0A 2A14              cp R2,R10
 0A0C 08F0              brlo L260
 0A0E           X82:
 0A0E                   .dbline 685
 0A0E           ;    break;
 0A0E 04C0              xjmp L259
 0A10           L260:
 0A10                   .dbline 686
 0A10           ; }
 0A10           L258:
 0A10                   .dbline 682
 0A10 2090D901          lds R2,_TimeOutFlag
 0A14 2220              tst R2
 0A16 B9F3              breq L257
 0A18           X83:
 0A18           L259:
 0A18                   .dbline 687
 0A18           ; TIMSK&=0xFE;//关定时器0中断
 0A18 87B7              in R24,0x37
 0A1A 8E7F              andi R24,254
 0A1C 87BF              out 0x37,R24
 0A1E                   .dbline 688
 0A1E           ; UCSR0B&=0x7f;//关串口接收中断
 0A1E 8AB1              in R24,0xa
 0A20 8F77              andi R24,127
 0A22 8AB9              out 0xa,R24
 0A24                   .dbline 689
 0A24           ; }
 0A24           L255:
 0A24                   .dbline -2
 0A24           L239:
 0A24                   .dbline 0 ; func end
 0A24 0C940000          xjmp pop_xgsetF00C
 0A28                   .dbsym r t 20 c
 0A28                   .dbsym r i 22 c
 0A28                   .dbsym r cn 10 c
 0A28                   .dbsym r s 18 i
 0A28                   .dbsym r len 16 c
 0A28                   .dbend
 0A28                   .dbfunc e SampleADC _SampleADC fc
 0A28           ;           adcl -> y+0
 0A28           ;              c -> R10
 0A28           ;         ADdata -> R12,R13
 0A28           ;             ch -> R10
                        .even
 0A28           _SampleADC::
 0A28 0E940000          xcall push_xgsetF03C
 0A2C A02E              mov R10,R16
 0A2E 2497              sbiw R28,4
 0A30                   .dbline -1
 0A30                   .dbline 695
 0A30           ; }
 0A30           ; 
 0A30           ;  
 0A30           ;    
 0A30           ; unsigned char SampleADC(unsigned char ch)//耗时约5ms
 0A30           ; {     unsigned char c;
 0A30                   .dbline 699
 0A30           ;       unsigned long adcl;
 0A30           ;         unsigned int ADdata;
 0A30           ; 
 0A30           ;         ADMUX  = (0xc0+ch);//片内2.56V基准，选择单端输入通道 
 0A30 8A2D              mov R24,R10
 0A32 8054              subi R24,64    ; addi 192
 0A34 87B9              out 0x7,R24
 0A36                   .dbline 700
 0A36           ;         ADCSRA =0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0A36 83EC              ldi R24,195
 0A38 86B9              out 0x6,R24
 0A3A                   .dbline 703
 0A3A           ;    
 0A3A           ;         //第一次采样值不要
 0A3A           ;         for(ADdata=0;ADdata<100;ADdata++);
 0A3A CC24              clr R12
 0A3C DD24              clr R13
 0A3E 03C0              xjmp L266
 0A40           L263:
 0A40                   .dbline 703
 0A40           L264:
 0A40                   .dbline 703
 0A40 C601              movw R24,R12
 0A42 0196              adiw R24,1
 0A44 6C01              movw R12,R24
 0A46           L266:
 0A46                   .dbline 703
 0A46 C601              movw R24,R12
 0A48 8436              cpi R24,100
 0A4A E0E0              ldi R30,0
 0A4C 9E07              cpc R25,R30
 0A4E C0F3              brlo L263
 0A50           X84:
 0A50           L267:
 0A50                   .dbline 704
 0A50           ;         while((ADCSRA&0x40)==0x40);//等待转换完成
 0A50           L268:
 0A50                   .dbline 704
 0A50 86B1              in R24,0x6
 0A52 8074              andi R24,64
 0A54 8034              cpi R24,64
 0A56 E1F3              breq L267
 0A58           X85:
 0A58                   .dbline 705
 0A58           ;         ADdata=ADCL;
 0A58 C4B0              in R12,0x4
 0A5A DD24              clr R13
 0A5C                   .dbline 706
 0A5C           ;         ADdata=ADCH;  
 0A5C C5B0              in R12,0x5
 0A5E DD24              clr R13
 0A60                   .dbline 708
 0A60           ;   
 0A60           ;         adcl=0;
 0A60 80E0              ldi R24,0
 0A62 8883              std y+0,R24
 0A64 8983              std y+1,R24
 0A66 8A83              std y+2,R24
 0A68 8B83              std y+3,R24
 0A6A                   .dbline 709
 0A6A           ;         for(c=0;c<32;c++)//32次值取平均
 0A6A AA24              clr R10
 0A6C 2CC0              xjmp L273
 0A6E           L270:
 0A6E                   .dbline 710
 0A6E           ;         {
 0A6E                   .dbline 711
 0A6E           ;          ADCSRA = 0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0A6E 83EC              ldi R24,195
 0A70 86B9              out 0x6,R24
 0A72                   .dbline 712
 0A72           ;          for(ADdata=0;ADdata<100;ADdata++);
 0A72 CC24              clr R12
 0A74 DD24              clr R13
 0A76 03C0              xjmp L277
 0A78           L274:
 0A78                   .dbline 712
 0A78           L275:
 0A78                   .dbline 712
 0A78 C601              movw R24,R12
 0A7A 0196              adiw R24,1
 0A7C 6C01              movw R12,R24
 0A7E           L277:
 0A7E                   .dbline 712
 0A7E C601              movw R24,R12
 0A80 8436              cpi R24,100
 0A82 E0E0              ldi R30,0
 0A84 9E07              cpc R25,R30
 0A86 C0F3              brlo L274
 0A88           X86:
 0A88           L278:
 0A88                   .dbline 713
 0A88           ;          while((ADCSRA&0x40)==0x40);//等待转换完成    
 0A88           L279:
 0A88                   .dbline 713
 0A88 86B1              in R24,0x6
 0A8A 8074              andi R24,64
 0A8C 8034              cpi R24,64
 0A8E E1F3              breq L278
 0A90           X87:
 0A90                   .dbline 714
 0A90           ;          ADdata=ADCL;   
 0A90 C4B0              in R12,0x4
 0A92 DD24              clr R13
 0A94                   .dbline 715
 0A94           ;          ADdata|=(ADCH<<8);
 0A94 25B0              in R2,0x5
 0A96 3324              clr R3
 0A98 322C              mov R3,R2
 0A9A 2224              clr R2
 0A9C C228              or R12,R2
 0A9E D328              or R13,R3
 0AA0                   .dbline 716
 0AA0           ;          ADdata&=0x03ff;//10位有效转换结果
 0AA0 C601              movw R24,R12
 0AA2 9370              andi R25,3
 0AA4 6C01              movw R12,R24
 0AA6                   .dbline 717
 0AA6           ;          adcl+=ADdata;
 0AA6 1C01              movw R2,R24
 0AA8 4424              clr R4
 0AAA 5524              clr R5
 0AAC 6880              ldd R6,y+0
 0AAE 7980              ldd R7,y+1
 0AB0 8A80              ldd R8,y+2
 0AB2 9B80              ldd R9,y+3
 0AB4 620C              add R6,R2
 0AB6 731C              adc R7,R3
 0AB8 841C              adc R8,R4
 0ABA 951C              adc R9,R5
 0ABC 6882              std y+0,R6
 0ABE 7982              std y+1,R7
 0AC0 8A82              std y+2,R8
 0AC2 9B82              std y+3,R9
 0AC4                   .dbline 718
 0AC4           ;         }
 0AC4           L271:
 0AC4                   .dbline 709
 0AC4 A394              inc R10
 0AC6           L273:
 0AC6                   .dbline 709
 0AC6 8A2D              mov R24,R10
 0AC8 8032              cpi R24,32
 0ACA 88F2              brlo L270
 0ACC           X88:
 0ACC                   .dbline 720
 0ACC           ; 
 0ACC           ;         adcl>>=7;//除以32，再除以4，相当于8位AD
 0ACC 87E0              ldi R24,7
 0ACE 90E0              ldi R25,0
 0AD0 0881              ldd R16,y+0
 0AD2 1981              ldd R17,y+1
 0AD4 2A81              ldd R18,y+2
 0AD6 3B81              ldd R19,y+3
 0AD8 8A93              st -y,R24
 0ADA 0E940000          xcall lsr32
 0ADE 0883              std y+0,R16
 0AE0 1983              std y+1,R17
 0AE2 2A83              std y+2,R18
 0AE4 3B83              std y+3,R19
 0AE6                   .dbline 721
 0AE6           ;         return (adcl&0x000000ff);//取8位有效位
 0AE6 4FEF              ldi R20,255
 0AE8 50E0              ldi R21,0
 0AEA 60E0              ldi R22,0
 0AEC 70E0              ldi R23,0
 0AEE 2880              ldd R2,y+0
 0AF0 3980              ldd R3,y+1
 0AF2 4A80              ldd R4,y+2
 0AF4 5B80              ldd R5,y+3
 0AF6 2422              and R2,R20
 0AF8 3522              and R3,R21
 0AFA 4622              and R4,R22
 0AFC 5722              and R5,R23
 0AFE 022D              mov R16,R2
 0B00                   .dbline -2
 0B00           L262:
 0B00                   .dbline 0 ; func end
 0B00 2496              adiw R28,4
 0B02 0C940000          xjmp pop_xgsetF03C
 0B06                   .dbsym l adcl 0 l
 0B06                   .dbsym r c 10 c
 0B06                   .dbsym r ADdata 12 i
 0B06                   .dbsym r ch 10 c
 0B06                   .dbend
 0B06                   .dbfunc e Delay_ms _Delay_ms fV
 0B06           ;              a -> <dead>
 0B06           ;              n -> R10,R11
 0B06           ;              f -> y+0
 0B06           ;              t -> R10,R11
                        .even
 0B06           _Delay_ms::
 0B06 0E940000          xcall push_xgsetF00C
 0B0A 5801              movw R10,R16
 0B0C 2497              sbiw R28,4
 0B0E                   .dbline -1
 0B0E                   .dbline 725
 0B0E           ; }
 0B0E           ; 
 0B0E           ; void Delay_ms(unsigned int t)//最大定时8388ms
 0B0E           ; {   
 0B0E                   .dbline 730
 0B0E           ;     float f;
 0B0E           ;       unsigned char a;
 0B0E           ;     unsigned int n;
 0B0E           ;       
 0B0E           ;       if(t==0){return;}
 0B0E AA20              tst R10
 0B10 19F4              brne L282
 0B12 BB20              tst R11
 0B14 09F4              brne L282
 0B16           X89:
 0B16                   .dbline 730
 0B16                   .dbline 730
 0B16 3AC0              xjmp L281
 0B18           L282:
 0B18                   .dbline 732
 0B18           ;       
 0B18           ;     TCCR1B = 0x00; //stop
 0B18 2224              clr R2
 0B1A 2EBC              out 0x2e,R2
 0B1C                   .dbline 733
 0B1C           ;       if(t>8388)
 0B1C 84EC              ldi R24,8388
 0B1E 90E2              ldi R25,32
 0B20 8A15              cp R24,R10
 0B22 9B05              cpc R25,R11
 0B24 08F4              brsh L284
 0B26           X90:
 0B26                   .dbline 734
 0B26           ;          t=8388;
 0B26 5C01              movw R10,R24
 0B28           L284:
 0B28                   .dbline 735
 0B28           ;       f=t;
 0B28 8501              movw R16,R10
 0B2A 0E940000          xcall uint2fp
 0B2E 0883              std y+0,R16
 0B30 1983              std y+1,R17
 0B32 2A83              std y+2,R18
 0B34 3B83              std y+3,R19
 0B36                   .dbline 736
 0B36           ;       f*=7.8125;
 0B36 00E0              ldi R16,<L286
 0B38 10E0              ldi R17,>L286
 0B3A 0E940000          xcall elpm32
 0B3E CE01              movw R24,R28
 0B40 9A93              st -y,R25
 0B42 8A93              st -y,R24
 0B44 0E940000          xcall fpmule1
 0B48 0883              std y+0,R16
 0B4A 1983              std y+1,R17
 0B4C 2A83              std y+2,R18
 0B4E 3B83              std y+3,R19
 0B50                   .dbline 737
 0B50           ;       n=f;
 0B50 0881              ldd R16,y+0
 0B52 1981              ldd R17,y+1
 0B54 2A81              ldd R18,y+2
 0B56 3B81              ldd R19,y+3
 0B58 0E940000          xcall fpint
 0B5C 5801              movw R10,R16
 0B5E                   .dbline 738
 0B5E           ;     TCNT1 = 65535-n;  
 0B5E 1501              movw R2,R10
 0B60 4424              clr R4
 0B62 5524              clr R5
 0B64 4FEF              ldi R20,255
 0B66 5FEF              ldi R21,255
 0B68 60E0              ldi R22,0
 0B6A 70E0              ldi R23,0
 0B6C 4219              sub R20,R2
 0B6E 5309              sbc R21,R3
 0B70 6409              sbc R22,R4
 0B72 7509              sbc R23,R5
 0B74 5DBD              out 0x2d,R21
 0B76 4CBD              out 0x2c,R20
 0B78                   .dbline 739
 0B78           ;       TIFR|=0x04; //清定时器1中断标志 
 0B78 86B7              in R24,0x36
 0B7A 8460              ori R24,4
 0B7C 86BF              out 0x36,R24
 0B7E                   .dbline 740
 0B7E           ;       TCCR1B = 0x05; //1024分频
 0B7E 85E0              ldi R24,5
 0B80 8EBD              out 0x2e,R24
 0B82           L287:
 0B82                   .dbline 741
 0B82           ;     while((TIFR&0x04)==0x00) ; 
 0B82           L288:
 0B82                   .dbline 741
 0B82 26B6              in R2,0x36
 0B84 22FE              sbrs R2,2
 0B86 FDCF              rjmp L287
 0B88           X91:
 0B88                   .dbline 742
 0B88           ;     TCCR1B = 0x00; //stop
 0B88 2224              clr R2
 0B8A 2EBC              out 0x2e,R2
 0B8C                   .dbline -2
 0B8C           L281:
 0B8C                   .dbline 0 ; func end
 0B8C 2496              adiw R28,4
 0B8E 0C940000          xjmp pop_xgsetF00C
 0B92                   .dbsym l a 1 c
 0B92                   .dbsym r n 10 i
 0B92                   .dbsym l f 0 D
 0B92                   .dbsym r t 10 i
 0B92                   .dbend
 0B92                   .dbfunc e Start _Start fV
                        .even
 0B92           _Start::
 0B92                   .dbline -1
 0B92                   .dbline 747
 0B92           ; }
 0B92           ; 
 0B92           ; 
 0B92           ; void Start(void)
 0B92           ; {
 0B92                   .dbline 748
 0B92           ;  InitialIO();
 0B92 35DC              xcall _InitialIO
 0B94                   .dbline 749
 0B94           ;  uart0_init();
 0B94 5BDE              xcall _uart0_init
 0B96                   .dbline 750
 0B96           ;  uart1_init();
 0B96 42DC              xcall _uart1_init
 0B98                   .dbline 752
 0B98           ; 
 0B98           ;  IntFlag=0;//无接收帧中断
 0B98 2224              clr R2
 0B9A 2092BF01          sts _IntFlag,R2
 0B9E                   .dbline 753
 0B9E           ;  DataFlag=0;//无标定系数下发 
 0B9E 3324              clr R3
 0BA0 3092C201          sts _DataFlag+1,R3
 0BA4 2092C101          sts _DataFlag,R2
 0BA8                   .dbline 754
 0BA8           ;  coeff_len=0;
 0BA8 30922D00          sts _coeff_len+1,R3
 0BAC 20922C00          sts _coeff_len,R2
 0BB0                   .dbline 755
 0BB0           ;  coeff_count=0;//标定系数计数
 0BB0 30922B00          sts _coeff_count+1,R3
 0BB4 20922A00          sts _coeff_count,R2
 0BB8                   .dbline 759
 0BB8           ;  
 0BB8           ; 
 0BB8           ;  
 0BB8           ;       EICRA|=0x03; //INT0上升沿触发 ，每2位控制一个中断，共4个中断，0-低电平触发，1-保留，2-下降沿触发，3-上升沿触发 
 0BB8 80916A00          lds R24,106
 0BBC 8360              ori R24,3
 0BBE 80936A00          sts 106,R24
 0BC2                   .dbline 760
 0BC2           ;       MANINT_CLR
 0BC2                   .dbline 760
 0BC2 88B7              in R24,0x38
 0BC4 8160              ori R24,1
 0BC6 88BF              out 0x38,R24
 0BC8                   .dbline 760
 0BC8                   .dbline 761
 0BC8           ;       MANINT_EN
 0BC8                   .dbline 761
 0BC8 89B7              in R24,0x39
 0BCA 8160              ori R24,1
 0BCC 89BF              out 0x39,R24
 0BCE                   .dbline 761
 0BCE                   .dbline 762
 0BCE           ;       INT_EN
 0BCE                   .dbline 762
 0BCE 7894              sei
 0BD0                   .dbline 762
 0BD0                   .dbline -2
 0BD0           L290:
 0BD0                   .dbline 0 ; func end
 0BD0 0895              ret
 0BD2                   .dbend
 0BD2                   .dbfunc e main _main fV
 0BD2           ;             pt -> <dead>
 0BD2           ;             mk -> <dead>
 0BD2           ;             at -> <dead>
 0BD2           ;            add -> <dead>
 0BD2           ;              f -> y+5
 0BD2           ; TestDataBlockCount -> R12,R13
 0BD2           ; TestDataBlockIndex -> R10,R11
 0BD2           ;              i -> R10
 0BD2           ;              l -> y+1
 0BD2           ;              j -> R10,R11
                        .even
 0BD2           _main::
 0BD2 2997              sbiw R28,9
 0BD4                   .dbline -1
 0BD4                   .dbline 768
 0BD4           ; }
 0BD4           ; 
 0BD4           ;  
 0BD4           ; 
 0BD4           ; void main(void)
 0BD4           ; { 
 0BD4                   .dbline 775
 0BD4           ;   unsigned char i;
 0BD4           ;   unsigned int add,at,mk,pt,j;
 0BD4           ;   unsigned long l;
 0BD4           ;   unsigned int TestDataBlockIndex,TestDataBlockCount;
 0BD4           ;   float f;
 0BD4           ;  
 0BD4           ;       for(l=0;l<1000;l++)
 0BD4 80E0              ldi R24,0
 0BD6 8983              std y+1+0,R24
 0BD8 8A83              std y+1+1,R24
 0BDA 8B83              std y+1+2,R24
 0BDC 8C83              std y+1+3,R24
 0BDE 1BC0              xjmp L295
 0BE0           L292:
 0BE0                   .dbline 776
 0BE0           ;       {
 0BE0                   .dbline 777
 0BE0           ;               for(j=0;j<1000;j++);
 0BE0 AA24              clr R10
 0BE2 BB24              clr R11
 0BE4 03C0              xjmp L299
 0BE6           L296:
 0BE6                   .dbline 777
 0BE6           L297:
 0BE6                   .dbline 777
 0BE6 C501              movw R24,R10
 0BE8 0196              adiw R24,1
 0BEA 5C01              movw R10,R24
 0BEC           L299:
 0BEC                   .dbline 777
 0BEC C501              movw R24,R10
 0BEE 883E              cpi R24,232
 0BF0 E3E0              ldi R30,3
 0BF2 9E07              cpc R25,R30
 0BF4 C0F3              brlo L296
 0BF6           X92:
 0BF6                   .dbline 778
 0BF6           ;       }
 0BF6           L293:
 0BF6                   .dbline 775
 0BF6 41E0              ldi R20,1
 0BF8 50E0              ldi R21,0
 0BFA 60E0              ldi R22,0
 0BFC 70E0              ldi R23,0
 0BFE 2980              ldd R2,y+1
 0C00 3A80              ldd R3,y+2
 0C02 4B80              ldd R4,y+3
 0C04 5C80              ldd R5,y+4
 0C06 240E              add R2,R20
 0C08 351E              adc R3,R21
 0C0A 461E              adc R4,R22
 0C0C 571E              adc R5,R23
 0C0E 2982              std y+1,R2
 0C10 3A82              std y+2,R3
 0C12 4B82              std y+3,R4
 0C14 5C82              std y+4,R5
 0C16           L295:
 0C16                   .dbline 775
 0C16 48EE              ldi R20,232
 0C18 53E0              ldi R21,3
 0C1A 60E0              ldi R22,0
 0C1C 70E0              ldi R23,0
 0C1E 2980              ldd R2,y+1
 0C20 3A80              ldd R3,y+2
 0C22 4B80              ldd R4,y+3
 0C24 5C80              ldd R5,y+4
 0C26 2416              cp R2,R20
 0C28 3506              cpc R3,R21
 0C2A 4606              cpc R4,R22
 0C2C 5706              cpc R5,R23
 0C2E C0F2              brlo L292
 0C30           X93:
 0C30                   .dbline 780
 0C30           ; 
 0C30           ;       Start();
 0C30 B0DF              xcall _Start
 0C32                   .dbline 782
 0C32           ; 
 0C32           ;    Delay_ms(50); 
 0C32 02E3              ldi R16,50
 0C34 10E0              ldi R17,0
 0C36 67DF              xcall _Delay_ms
 0C38                   .dbline 787
 0C38           ; 
 0C38           ; 
 0C38           ;    
 0C38           ;       //采集总线电压，判断是否进入存储状态  
 0C38           ;       if(SampleADC(0)<30)//Cable端的电压低于30V 
 0C38 0027              clr R16
 0C3A F6DE              xcall _SampleADC
 0C3C 0E31              cpi R16,30
 0C3E 10F0              brlo X258
 0C40 0C94111B          xjmp L306
 0C44           X258:
 0C44           X94:
 0C44                   .dbline 788
 0C44           ;       {         
 0C44                   .dbline 789
 0C44           ;               UCSR0B = 0x00;
 0C44 2224              clr R2
 0C46 2AB8              out 0xa,R2
 0C48                   .dbline 790
 0C48           ;               PORTE&=0xFD;
 0C48 83B1              in R24,0x3
 0C4A 8D7F              andi R24,253
 0C4C 83B9              out 0x3,R24
 0C4E                   .dbline 791
 0C4E           ;               DDRE|=0x02;
 0C4E 119A              sbi 0x2,1
 0C50                   .dbline 792
 0C50           ;               PORTE&=0xFD;     
 0C50 83B1              in R24,0x3
 0C52 8D7F              andi R24,253
 0C54 83B9              out 0x3,R24
 0C56           L302:
 0C56                   .dbline 793
 0C56           ;               while(1); 
 0C56           L303:
 0C56                   .dbline 793
 0C56 FFCF              xjmp L302
 0C58           L305:
 0C58                   .dbline 797
 0C58           ;       }
 0C58           ;            
 0C58           ;       while(1)//若Cable端为高电压，则进入正常的通讯状态
 0C58           ;       { 
 0C58                   .dbline 800
 0C58           ;                
 0C58           ; 
 0C58           ;               if(IntFlag==2)//校验位错误，不上传任何响应，上位机按超时处理
 0C58 8091BF01          lds R24,_IntFlag
 0C5C 8230              cpi R24,2
 0C5E 59F4              brne L308
 0C60           X95:
 0C60                   .dbline 801
 0C60           ;               { 
 0C60                   .dbline 802
 0C60           ;                       IntFlag=0;//无命令帧
 0C60 2224              clr R2
 0C62 2092BF01          sts _IntFlag,R2
 0C66                   .dbline 803
 0C66           ;                       EIFR|=0x01;//清INT0中断标志
 0C66 88B7              in R24,0x38
 0C68 8160              ori R24,1
 0C6A 88BF              out 0x38,R24
 0C6C                   .dbline 804
 0C6C           ;                       EIMSK|=0x01;//使能INT0中断       
 0C6C 89B7              in R24,0x39
 0C6E 8160              ori R24,1
 0C70 89BF              out 0x39,R24
 0C72                   .dbline 805
 0C72           ;               }
 0C72 0C94111B          xjmp L309
 0C76           L308:
 0C76                   .dbline 806
 0C76           ;               else if(IntFlag==1)//接收到了正常命令帧
 0C76 8091BF01          lds R24,_IntFlag
 0C7A 8130              cpi R24,1
 0C7C 11F0              breq X259
 0C7E 0C94111B          xjmp L310
 0C82           X259:
 0C82           X96:
 0C82                   .dbline 807
 0C82           ;               {
 0C82                   .dbline 808
 0C82           ;                       if(DataFlag)
 0C82 2090C101          lds R2,_DataFlag
 0C86 3090C201          lds R3,_DataFlag+1
 0C8A 2220              tst R2
 0C8C 19F4              brne X97
 0C8E 3320              tst R3
 0C90 09F4              brne X260
 0C92 B4C4              xjmp L312
 0C94           X260:
 0C94           X97:
 0C94                   .dbline 809
 0C94           ;                       {                 
 0C94                   .dbline 810
 0C94           ;                               coeffdata[coeff_count]=R_dat;
 0C94 80E0              ldi R24,<_coeffdata
 0C96 90E0              ldi R25,>_coeffdata
 0C98 E0912A00          lds R30,_coeff_count
 0C9C F0912B00          lds R31,_coeff_count+1
 0CA0 E80F              add R30,R24
 0CA2 F91F              adc R31,R25
 0CA4 2090DF01          lds R2,_R_dat
 0CA8 3090E001          lds R3,_R_dat+1
 0CAC 2082              std z+0,R2
 0CAE                   .dbline 811
 0CAE           ;                               coeff_count++;    
 0CAE 80912A00          lds R24,_coeff_count
 0CB2 90912B00          lds R25,_coeff_count+1
 0CB6 0196              adiw R24,1
 0CB8 90932B00          sts _coeff_count+1,R25
 0CBC 80932A00          sts _coeff_count,R24
 0CC0                   .dbline 813
 0CC0           ; 
 0CC0           ;                               if(coeff_count==coeff_len)
 0CC0 20902C00          lds R2,_coeff_len
 0CC4 30902D00          lds R3,_coeff_len+1
 0CC8 8215              cp R24,R2
 0CCA 9305              cpc R25,R3
 0CCC 11F0              breq X261
 0CCE 0C94081B          xjmp L313
 0CD2           X261:
 0CD2           X98:
 0CD2                   .dbline 814
 0CD2           ;                               {
 0CD2                   .dbline 815
 0CD2           ;                                       if(DataFlag==1)//下发压力温度系数
 0CD2 8091C101          lds R24,_DataFlag
 0CD6 9091C201          lds R25,_DataFlag+1
 0CDA 8130              cpi R24,1
 0CDC E0E0              ldi R30,0
 0CDE 9E07              cpc R25,R30
 0CE0 09F0              breq X262
 0CE2 E5C0              xjmp L316
 0CE4           X262:
 0CE4           X99:
 0CE4                   .dbline 816
 0CE4           ;                                       {
 0CE4                   .dbline 817
 0CE4           ;                                               Uart0TxData[0]=0xE8;
 0CE4 88EE              ldi R24,232
 0CE6 80932F00          sts _Uart0TxData,R24
 0CEA                   .dbline 818
 0CEA           ;                                               Uart0TxData[1]=0x40;
 0CEA 80E4              ldi R24,64
 0CEC 80933000          sts _Uart0TxData+1,R24
 0CF0                   .dbline 819
 0CF0           ;                                               Uart0TxData[2]=0x88;
 0CF0 88E8              ldi R24,136
 0CF2 80933100          sts _Uart0TxData+2,R24
 0CF6                   .dbline 820
 0CF6           ;                                               Uart0TxData[3]=0;//压力温度系数包0
 0CF6 2224              clr R2
 0CF8 20923200          sts _Uart0TxData+3,R2
 0CFC                   .dbline 821
 0CFC           ;                                               Uart0TxData[4]=0x21;
 0CFC 81E2              ldi R24,33
 0CFE 80933300          sts _Uart0TxData+4,R24
 0D02                   .dbline 822
 0D02           ;                                               Uart0TxData[5]=0x22;
 0D02 82E2              ldi R24,34
 0D04 80933400          sts _Uart0TxData+5,R24
 0D08                   .dbline 823
 0D08           ;                                               Uart0TxData[6]=0x23;
 0D08 83E2              ldi R24,35
 0D0A 80933500          sts _Uart0TxData+6,R24
 0D0E                   .dbline 824
 0D0E           ;                                               Uart0TxData[7]=0x24;
 0D0E 84E2              ldi R24,36
 0D10 80933600          sts _Uart0TxData+7,R24
 0D14                   .dbline 825
 0D14           ;                                               Uart0TxData[8]=0x32;     
 0D14 82E3              ldi R24,50
 0D16 80933700          sts _Uart0TxData+8,R24
 0D1A                   .dbline 826
 0D1A           ;                                               for(k=0;k<64;k++)
 0D1A 3324              clr R3
 0D1C 3092BC01          sts _k+1,R3
 0D20 2092BB01          sts _k,R2
 0D24 1AC0              xjmp L329
 0D26           L326:
 0D26                   .dbline 827
 0D26           ;                                               {
 0D26                   .dbline 828
 0D26           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 0D26 4090BB01          lds R4,_k
 0D2A 5090BC01          lds R5,_k+1
 0D2E 80E0              ldi R24,<_coeffdata
 0D30 90E0              ldi R25,>_coeffdata
 0D32 F201              movw R30,R4
 0D34 E80F              add R30,R24
 0D36 F91F              adc R31,R25
 0D38 2080              ldd R2,z+0
 0D3A 80E0              ldi R24,<_Uart0TxData
 0D3C 90E0              ldi R25,>_Uart0TxData
 0D3E F201              movw R30,R4
 0D40 3996              adiw R30,9
 0D42 E80F              add R30,R24
 0D44 F91F              adc R31,R25
 0D46 2082              std z+0,R2
 0D48                   .dbline 829
 0D48           ;                                               }                
 0D48           L327:
 0D48                   .dbline 826
 0D48 8091BB01          lds R24,_k
 0D4C 9091BC01          lds R25,_k+1
 0D50 0196              adiw R24,1
 0D52 9093BC01          sts _k+1,R25
 0D56 8093BB01          sts _k,R24
 0D5A           L329:
 0D5A                   .dbline 826
 0D5A 8091BB01          lds R24,_k
 0D5E 9091BC01          lds R25,_k+1
 0D62 8034              cpi R24,64
 0D64 E0E0              ldi R30,0
 0D66 9E07              cpc R25,R30
 0D68 F0F2              brlo L326
 0D6A           X100:
 0D6A                   .dbline 830
 0D6A           ;                                               SendUart0_2(74,20);//超时160ms
 0D6A 24E1              ldi R18,20
 0D6C 30E0              ldi R19,0
 0D6E 0AE4              ldi R16,74
 0D70 C1DD              xcall _SendUart0_2
 0D72                   .dbline 831
 0D72           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0D72 8091FA01          lds R24,_Uart0RxCounter
 0D76 8930              cpi R24,9
 0D78 B1F4              brne L330
 0D7A           X101:
 0D7A 8091FB01          lds R24,_Uart0RxData
 0D7E 8535              cpi R24,85
 0D80 91F4              brne L330
 0D82           X102:
 0D82 8091FC01          lds R24,_Uart0RxData+1
 0D86 8034              cpi R24,64
 0D88 71F4              brne L330
 0D8A           X103:
 0D8A 8091FD01          lds R24,_Uart0RxData+2
 0D8E 8838              cpi R24,136
 0D90 51F4              brne L330
 0D92           X104:
 0D92                   .dbline 832
 0D92           ;                                               {T_dat&=0xff00; }
 0D92                   .dbline 832
 0D92 8091E101          lds R24,_T_dat
 0D96 9091E201          lds R25,_T_dat+1
 0D9A 8070              andi R24,0
 0D9C 9093E201          sts _T_dat+1,R25
 0DA0 8093E101          sts _T_dat,R24
 0DA4                   .dbline 832
 0DA4 06C0              xjmp L331
 0DA6           L330:
 0DA6                   .dbline 834
 0DA6           ;                                               else
 0DA6           ;                                               {T_dat=0x00aa; }
 0DA6                   .dbline 834
 0DA6 8AEA              ldi R24,170
 0DA8 90E0              ldi R25,0
 0DAA 9093E201          sts _T_dat+1,R25
 0DAE 8093E101          sts _T_dat,R24
 0DB2                   .dbline 834
 0DB2           L331:
 0DB2                   .dbline 836
 0DB2           ; 
 0DB2           ;                                               Uart0TxData[0]=0xE8;
 0DB2 88EE              ldi R24,232
 0DB4 80932F00          sts _Uart0TxData,R24
 0DB8                   .dbline 837
 0DB8           ;                                               Uart0TxData[1]=0x40;
 0DB8 80E4              ldi R24,64
 0DBA 80933000          sts _Uart0TxData+1,R24
 0DBE                   .dbline 838
 0DBE           ;                                               Uart0TxData[2]=0x88;
 0DBE 88E8              ldi R24,136
 0DC0 80933100          sts _Uart0TxData+2,R24
 0DC4                   .dbline 839
 0DC4           ;                                               Uart0TxData[3]=1;//压力温度系数包1
 0DC4 81E0              ldi R24,1
 0DC6 80933200          sts _Uart0TxData+3,R24
 0DCA                   .dbline 840
 0DCA           ;                                               Uart0TxData[4]=0x21;
 0DCA 81E2              ldi R24,33
 0DCC 80933300          sts _Uart0TxData+4,R24
 0DD0                   .dbline 841
 0DD0           ;                                               Uart0TxData[5]=0x22;
 0DD0 82E2              ldi R24,34
 0DD2 80933400          sts _Uart0TxData+5,R24
 0DD6                   .dbline 842
 0DD6           ;                                               Uart0TxData[6]=0x23;
 0DD6 83E2              ldi R24,35
 0DD8 80933500          sts _Uart0TxData+6,R24
 0DDC                   .dbline 843
 0DDC           ;                                               Uart0TxData[7]=0x24;
 0DDC 84E2              ldi R24,36
 0DDE 80933600          sts _Uart0TxData+7,R24
 0DE2                   .dbline 844
 0DE2           ;                                               Uart0TxData[8]=0x32;     
 0DE2 82E3              ldi R24,50
 0DE4 80933700          sts _Uart0TxData+8,R24
 0DE8                   .dbline 845
 0DE8           ;                                               for(k=0;k<64;k++)
 0DE8 2224              clr R2
 0DEA 3324              clr R3
 0DEC 3092BC01          sts _k+1,R3
 0DF0 2092BB01          sts _k,R2
 0DF4 1CC0              xjmp L345
 0DF6           L342:
 0DF6                   .dbline 846
 0DF6           ;                                               {
 0DF6                   .dbline 847
 0DF6           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 0DF6 A090BB01          lds R10,_k
 0DFA B090BC01          lds R11,_k+1
 0DFE 80E0              ldi R24,<_coeffdata
 0E00 90E0              ldi R25,>_coeffdata
 0E02 F501              movw R30,R10
 0E04 E05C              subi R30,192  ; offset = 64
 0E06 FF4F              sbci R31,255
 0E08 E80F              add R30,R24
 0E0A F91F              adc R31,R25
 0E0C 2080              ldd R2,z+0
 0E0E 80E0              ldi R24,<_Uart0TxData
 0E10 90E0              ldi R25,>_Uart0TxData
 0E12 F501              movw R30,R10
 0E14 3996              adiw R30,9
 0E16 E80F              add R30,R24
 0E18 F91F              adc R31,R25
 0E1A 2082              std z+0,R2
 0E1C                   .dbline 848
 0E1C           ;                                               }                
 0E1C           L343:
 0E1C                   .dbline 845
 0E1C 8091BB01          lds R24,_k
 0E20 9091BC01          lds R25,_k+1
 0E24 0196              adiw R24,1
 0E26 9093BC01          sts _k+1,R25
 0E2A 8093BB01          sts _k,R24
 0E2E           L345:
 0E2E                   .dbline 845
 0E2E 8091BB01          lds R24,_k
 0E32 9091BC01          lds R25,_k+1
 0E36 8034              cpi R24,64
 0E38 E0E0              ldi R30,0
 0E3A 9E07              cpc R25,R30
 0E3C E0F2              brlo L342
 0E3E           X105:
 0E3E                   .dbline 849
 0E3E           ;                                               SendUart0_2(74,20);//超时160ms
 0E3E 24E1              ldi R18,20
 0E40 30E0              ldi R19,0
 0E42 0AE4              ldi R16,74
 0E44 57DD              xcall _SendUart0_2
 0E46                   .dbline 850
 0E46           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0E46 8091FA01          lds R24,_Uart0RxCounter
 0E4A 8930              cpi R24,9
 0E4C B1F4              brne L346
 0E4E           X106:
 0E4E 8091FB01          lds R24,_Uart0RxData
 0E52 8535              cpi R24,85
 0E54 91F4              brne L346
 0E56           X107:
 0E56 8091FC01          lds R24,_Uart0RxData+1
 0E5A 8034              cpi R24,64
 0E5C 71F4              brne L346
 0E5E           X108:
 0E5E 8091FD01          lds R24,_Uart0RxData+2
 0E62 8838              cpi R24,136
 0E64 51F4              brne L346
 0E66           X109:
 0E66                   .dbline 851
 0E66           ;                                               {T_dat&=0x00ff; }
 0E66                   .dbline 851
 0E66 8091E101          lds R24,_T_dat
 0E6A 9091E201          lds R25,_T_dat+1
 0E6E 9070              andi R25,0
 0E70 9093E201          sts _T_dat+1,R25
 0E74 8093E101          sts _T_dat,R24
 0E78                   .dbline 851
 0E78 09C0              xjmp L347
 0E7A           L346:
 0E7A                   .dbline 853
 0E7A           ;                                               else
 0E7A           ;                                               {T_dat|=0x5500; }
 0E7A                   .dbline 853
 0E7A 8091E101          lds R24,_T_dat
 0E7E 9091E201          lds R25,_T_dat+1
 0E82 9565              ori R25,85
 0E84 9093E201          sts _T_dat+1,R25
 0E88 8093E101          sts _T_dat,R24
 0E8C                   .dbline 853
 0E8C           L347:
 0E8C                   .dbline 855
 0E8C           ; 
 0E8C           ;                                               DataFlag=0;
 0E8C 2224              clr R2
 0E8E 3324              clr R3
 0E90 3092C201          sts _DataFlag+1,R3
 0E94 2092C101          sts _DataFlag,R2
 0E98                   .dbline 856
 0E98           ;                                               coeff_len=0;    
 0E98 30922D00          sts _coeff_len+1,R3
 0E9C 20922C00          sts _coeff_len,R2
 0EA0                   .dbline 857
 0EA0           ;                                               T_com=0x0A;
 0EA0 8AE0              ldi R24,10
 0EA2 8093DA01          sts _T_com,R24
 0EA6                   .dbline 858
 0EA6           ;                                               SendManchester();               
 0EA6 0E94151B          xcall _SendManchester
 0EAA                   .dbline 859
 0EAA           ;                                       }
 0EAA 0C94081B          xjmp L313
 0EAE           L316:
 0EAE                   .dbline 860
 0EAE           ;                                       else if(DataFlag==2)//下发流量系数
 0EAE 8091C101          lds R24,_DataFlag
 0EB2 9091C201          lds R25,_DataFlag+1
 0EB6 8230              cpi R24,2
 0EB8 E0E0              ldi R30,0
 0EBA 9E07              cpc R25,R30
 0EBC 09F0              breq X263
 0EBE E6C0              xjmp L350
 0EC0           X263:
 0EC0           X110:
 0EC0                   .dbline 861
 0EC0           ;                                       {
 0EC0                   .dbline 862
 0EC0           ;                                               Uart0TxData[0]=0xE8;
 0EC0 88EE              ldi R24,232
 0EC2 80932F00          sts _Uart0TxData,R24
 0EC6                   .dbline 863
 0EC6           ;                                               Uart0TxData[1]=0x40;
 0EC6 80E4              ldi R24,64
 0EC8 80933000          sts _Uart0TxData+1,R24
 0ECC                   .dbline 864
 0ECC           ;                                               Uart0TxData[2]=0x88;
 0ECC 88E8              ldi R24,136
 0ECE 80933100          sts _Uart0TxData+2,R24
 0ED2                   .dbline 865
 0ED2           ;                                               Uart0TxData[3]=2;//流量系数包2
 0ED2 82E0              ldi R24,2
 0ED4 80933200          sts _Uart0TxData+3,R24
 0ED8                   .dbline 866
 0ED8           ;                                               Uart0TxData[4]=0x21;
 0ED8 81E2              ldi R24,33
 0EDA 80933300          sts _Uart0TxData+4,R24
 0EDE                   .dbline 867
 0EDE           ;                                               Uart0TxData[5]=0x22;
 0EDE 82E2              ldi R24,34
 0EE0 80933400          sts _Uart0TxData+5,R24
 0EE4                   .dbline 868
 0EE4           ;                                               Uart0TxData[6]=0x23;
 0EE4 83E2              ldi R24,35
 0EE6 80933500          sts _Uart0TxData+6,R24
 0EEA                   .dbline 869
 0EEA           ;                                               Uart0TxData[7]=0x24;
 0EEA 84E2              ldi R24,36
 0EEC 80933600          sts _Uart0TxData+7,R24
 0EF0                   .dbline 870
 0EF0           ;                                               Uart0TxData[8]=0x32;     
 0EF0 82E3              ldi R24,50
 0EF2 80933700          sts _Uart0TxData+8,R24
 0EF6                   .dbline 871
 0EF6           ;                                               for(k=0;k<64;k++)
 0EF6 2224              clr R2
 0EF8 3324              clr R3
 0EFA 3092BC01          sts _k+1,R3
 0EFE 2092BB01          sts _k,R2
 0F02 1AC0              xjmp L363
 0F04           L360:
 0F04                   .dbline 872
 0F04           ;                                               {
 0F04                   .dbline 873
 0F04           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 0F04 A090BB01          lds R10,_k
 0F08 B090BC01          lds R11,_k+1
 0F0C 80E0              ldi R24,<_coeffdata
 0F0E 90E0              ldi R25,>_coeffdata
 0F10 F501              movw R30,R10
 0F12 E80F              add R30,R24
 0F14 F91F              adc R31,R25
 0F16 2080              ldd R2,z+0
 0F18 80E0              ldi R24,<_Uart0TxData
 0F1A 90E0              ldi R25,>_Uart0TxData
 0F1C F501              movw R30,R10
 0F1E 3996              adiw R30,9
 0F20 E80F              add R30,R24
 0F22 F91F              adc R31,R25
 0F24 2082              std z+0,R2
 0F26                   .dbline 874
 0F26           ;                                               }                
 0F26           L361:
 0F26                   .dbline 871
 0F26 8091BB01          lds R24,_k
 0F2A 9091BC01          lds R25,_k+1
 0F2E 0196              adiw R24,1
 0F30 9093BC01          sts _k+1,R25
 0F34 8093BB01          sts _k,R24
 0F38           L363:
 0F38                   .dbline 871
 0F38 8091BB01          lds R24,_k
 0F3C 9091BC01          lds R25,_k+1
 0F40 8034              cpi R24,64
 0F42 E0E0              ldi R30,0
 0F44 9E07              cpc R25,R30
 0F46 F0F2              brlo L360
 0F48           X111:
 0F48                   .dbline 875
 0F48           ;                                               SendUart0_2(74,20);//超时160ms
 0F48 24E1              ldi R18,20
 0F4A 30E0              ldi R19,0
 0F4C 0AE4              ldi R16,74
 0F4E D2DC              xcall _SendUart0_2
 0F50                   .dbline 876
 0F50           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0F50 8091FA01          lds R24,_Uart0RxCounter
 0F54 8930              cpi R24,9
 0F56 B1F4              brne L364
 0F58           X112:
 0F58 8091FB01          lds R24,_Uart0RxData
 0F5C 8535              cpi R24,85
 0F5E 91F4              brne L364
 0F60           X113:
 0F60 8091FC01          lds R24,_Uart0RxData+1
 0F64 8034              cpi R24,64
 0F66 71F4              brne L364
 0F68           X114:
 0F68 8091FD01          lds R24,_Uart0RxData+2
 0F6C 8838              cpi R24,136
 0F6E 51F4              brne L364
 0F70           X115:
 0F70                   .dbline 877
 0F70           ;                                               {T_dat&=0xff00; }
 0F70                   .dbline 877
 0F70 8091E101          lds R24,_T_dat
 0F74 9091E201          lds R25,_T_dat+1
 0F78 8070              andi R24,0
 0F7A 9093E201          sts _T_dat+1,R25
 0F7E 8093E101          sts _T_dat,R24
 0F82                   .dbline 877
 0F82 06C0              xjmp L365
 0F84           L364:
 0F84                   .dbline 879
 0F84           ;                                               else
 0F84           ;                                               {T_dat=0x00aa; }
 0F84                   .dbline 879
 0F84 8AEA              ldi R24,170
 0F86 90E0              ldi R25,0
 0F88 9093E201          sts _T_dat+1,R25
 0F8C 8093E101          sts _T_dat,R24
 0F90                   .dbline 879
 0F90           L365:
 0F90                   .dbline 881
 0F90           ; 
 0F90           ;                                               Uart0TxData[0]=0xE8;
 0F90 88EE              ldi R24,232
 0F92 80932F00          sts _Uart0TxData,R24
 0F96                   .dbline 882
 0F96           ;                                               Uart0TxData[1]=0x40;
 0F96 80E4              ldi R24,64
 0F98 80933000          sts _Uart0TxData+1,R24
 0F9C                   .dbline 883
 0F9C           ;                                               Uart0TxData[2]=0x88;
 0F9C 88E8              ldi R24,136
 0F9E 80933100          sts _Uart0TxData+2,R24
 0FA2                   .dbline 884
 0FA2           ;                                               Uart0TxData[3]=3;//流量系数包3
 0FA2 83E0              ldi R24,3
 0FA4 80933200          sts _Uart0TxData+3,R24
 0FA8                   .dbline 885
 0FA8           ;                                               Uart0TxData[4]=0x21;
 0FA8 81E2              ldi R24,33
 0FAA 80933300          sts _Uart0TxData+4,R24
 0FAE                   .dbline 886
 0FAE           ;                                               Uart0TxData[5]=0x22;
 0FAE 82E2              ldi R24,34
 0FB0 80933400          sts _Uart0TxData+5,R24
 0FB4                   .dbline 887
 0FB4           ;                                               Uart0TxData[6]=0x23;
 0FB4 83E2              ldi R24,35
 0FB6 80933500          sts _Uart0TxData+6,R24
 0FBA                   .dbline 888
 0FBA           ;                                               Uart0TxData[7]=0x24;
 0FBA 84E2              ldi R24,36
 0FBC 80933600          sts _Uart0TxData+7,R24
 0FC0                   .dbline 889
 0FC0           ;                                               Uart0TxData[8]=0x32;     
 0FC0 82E3              ldi R24,50
 0FC2 80933700          sts _Uart0TxData+8,R24
 0FC6                   .dbline 890
 0FC6           ;                                               for(k=0;k<64;k++)
 0FC6 2224              clr R2
 0FC8 3324              clr R3
 0FCA 3092BC01          sts _k+1,R3
 0FCE 2092BB01          sts _k,R2
 0FD2 1CC0              xjmp L379
 0FD4           L376:
 0FD4                   .dbline 891
 0FD4           ;                                               {
 0FD4                   .dbline 892
 0FD4           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 0FD4 A090BB01          lds R10,_k
 0FD8 B090BC01          lds R11,_k+1
 0FDC 80E0              ldi R24,<_coeffdata
 0FDE 90E0              ldi R25,>_coeffdata
 0FE0 F501              movw R30,R10
 0FE2 E05C              subi R30,192  ; offset = 64
 0FE4 FF4F              sbci R31,255
 0FE6 E80F              add R30,R24
 0FE8 F91F              adc R31,R25
 0FEA 2080              ldd R2,z+0
 0FEC 80E0              ldi R24,<_Uart0TxData
 0FEE 90E0              ldi R25,>_Uart0TxData
 0FF0 F501              movw R30,R10
 0FF2 3996              adiw R30,9
 0FF4 E80F              add R30,R24
 0FF6 F91F              adc R31,R25
 0FF8 2082              std z+0,R2
 0FFA                   .dbline 893
 0FFA           ;                                               }                
 0FFA           L377:
 0FFA                   .dbline 890
 0FFA 8091BB01          lds R24,_k
 0FFE 9091BC01          lds R25,_k+1
 1002 0196              adiw R24,1
 1004 9093BC01          sts _k+1,R25
 1008 8093BB01          sts _k,R24
 100C           L379:
 100C                   .dbline 890
 100C 8091BB01          lds R24,_k
 1010 9091BC01          lds R25,_k+1
 1014 8034              cpi R24,64
 1016 E0E0              ldi R30,0
 1018 9E07              cpc R25,R30
 101A E0F2              brlo L376
 101C           X116:
 101C                   .dbline 894
 101C           ;                                               SendUart0_2(74,20);//超时160ms
 101C 24E1              ldi R18,20
 101E 30E0              ldi R19,0
 1020 0AE4              ldi R16,74
 1022 68DC              xcall _SendUart0_2
 1024                   .dbline 895
 1024           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 1024 8091FA01          lds R24,_Uart0RxCounter
 1028 8930              cpi R24,9
 102A B1F4              brne L380
 102C           X117:
 102C 8091FB01          lds R24,_Uart0RxData
 1030 8535              cpi R24,85
 1032 91F4              brne L380
 1034           X118:
 1034 8091FC01          lds R24,_Uart0RxData+1
 1038 8034              cpi R24,64
 103A 71F4              brne L380
 103C           X119:
 103C 8091FD01          lds R24,_Uart0RxData+2
 1040 8838              cpi R24,136
 1042 51F4              brne L380
 1044           X120:
 1044                   .dbline 896
 1044           ;                                               {T_dat&=0x00ff; }
 1044                   .dbline 896
 1044 8091E101          lds R24,_T_dat
 1048 9091E201          lds R25,_T_dat+1
 104C 9070              andi R25,0
 104E 9093E201          sts _T_dat+1,R25
 1052 8093E101          sts _T_dat,R24
 1056                   .dbline 896
 1056 09C0              xjmp L381
 1058           L380:
 1058                   .dbline 898
 1058           ;                                               else
 1058           ;                                               {T_dat|=0x5500; }
 1058                   .dbline 898
 1058 8091E101          lds R24,_T_dat
 105C 9091E201          lds R25,_T_dat+1
 1060 9565              ori R25,85
 1062 9093E201          sts _T_dat+1,R25
 1066 8093E101          sts _T_dat,R24
 106A                   .dbline 898
 106A           L381:
 106A                   .dbline 900
 106A           ; 
 106A           ;                                               DataFlag=0;
 106A 2224              clr R2
 106C 3324              clr R3
 106E 3092C201          sts _DataFlag+1,R3
 1072 2092C101          sts _DataFlag,R2
 1076                   .dbline 901
 1076           ;                                               coeff_len=0;    
 1076 30922D00          sts _coeff_len+1,R3
 107A 20922C00          sts _coeff_len,R2
 107E                   .dbline 902
 107E           ;                                               T_com=0x0B;
 107E 8BE0              ldi R24,11
 1080 8093DA01          sts _T_com,R24
 1084                   .dbline 903
 1084           ;                                               SendManchester();               
 1084 0E94151B          xcall _SendManchester
 1088                   .dbline 904
 1088           ;                                       }       
 1088 0C94081B          xjmp L313
 108C           L350:
 108C                   .dbline 905
 108C           ;                                       else if(DataFlag==3)//提取测试数据
 108C 8091C101          lds R24,_DataFlag
 1090 9091C201          lds R25,_DataFlag+1
 1094 8330              cpi R24,3
 1096 E0E0              ldi R30,0
 1098 9E07              cpc R25,R30
 109A 09F0              breq X264
 109C A4C0              xjmp L384
 109E           X264:
 109E           X121:
 109E                   .dbline 906
 109E           ;                                       {
 109E                   .dbline 907
 109E           ;                                               DataFlag=0;
 109E 2224              clr R2
 10A0 3324              clr R3
 10A2 3092C201          sts _DataFlag+1,R3
 10A6 2092C101          sts _DataFlag,R2
 10AA                   .dbline 908
 10AA           ;                                               coeff_len=0;    
 10AA 30922D00          sts _coeff_len+1,R3
 10AE 20922C00          sts _coeff_len,R2
 10B2                   .dbline 909
 10B2           ;                                               T_com=0x09;
 10B2 89E0              ldi R24,9
 10B4 8093DA01          sts _T_com,R24
 10B8                   .dbline 910
 10B8           ;                                               TestDataBlockIndex=coeffdata[1];
 10B8 A0907A00          lds R10,_coeffdata+1
 10BC BB24              clr R11
 10BE                   .dbline 911
 10BE           ;                                               TestDataBlockIndex<<=8;
 10BE BA2C              mov R11,R10
 10C0 AA24              clr R10
 10C2                   .dbline 912
 10C2           ;                                               TestDataBlockIndex|=coeffdata[0];//首块地址/索引
 10C2 20907900          lds R2,_coeffdata
 10C6 3324              clr R3
 10C8 A228              or R10,R2
 10CA B328              or R11,R3
 10CC                   .dbline 913
 10CC           ;                                               TestDataBlockCount=coeffdata[3];
 10CC C0907C00          lds R12,_coeffdata+3
 10D0 DD24              clr R13
 10D2                   .dbline 914
 10D2           ;                                               TestDataBlockCount<<=8;
 10D2 DC2C              mov R13,R12
 10D4 CC24              clr R12
 10D6                   .dbline 915
 10D6           ;                                               TestDataBlockCount|=coeffdata[2];//需提取的总包数，每包64字节，每块4096字节共64包
 10D6 20907B00          lds R2,_coeffdata+2
 10DA 3324              clr R3
 10DC C228              or R12,R2
 10DE D328              or R13,R3
 10E0                   .dbline 917
 10E0           ; 
 10E0           ;                                               for(k=0;k<TestDataBlockCount;k++)//按用户要求分包进行上传，每包64字节传32帧
 10E0 2224              clr R2
 10E2 3092BC01          sts _k+1,R3
 10E6 2092BB01          sts _k,R2
 10EA 73C0              xjmp L392
 10EC           L389:
 10EC                   .dbline 918
 10EC           ;                                               {
 10EC                   .dbline 919
 10EC           ;                                                       Uart0TxData[0]=0xE8;
 10EC 88EE              ldi R24,232
 10EE 80932F00          sts _Uart0TxData,R24
 10F2                   .dbline 920
 10F2           ;                                                       Uart0TxData[1]=0x40;
 10F2 80E4              ldi R24,64
 10F4 80933000          sts _Uart0TxData+1,R24
 10F8                   .dbline 921
 10F8           ;                                                       Uart0TxData[2]=0x9A;//读测试数据
 10F8 8AE9              ldi R24,154
 10FA 80933100          sts _Uart0TxData+2,R24
 10FE                   .dbline 922
 10FE           ;                                                       Uart0TxData[3]=8;
 10FE 88E0              ldi R24,8
 1100 80933200          sts _Uart0TxData+3,R24
 1104                   .dbline 925
 1104           ; 
 1104           ;                                                       //统一块索引
 1104           ;                                                       Uart0TxData[4]=(k);     
 1104 2090BB01          lds R2,_k
 1108 3090BC01          lds R3,_k+1
 110C 20923300          sts _Uart0TxData+4,R2
 1110                   .dbline 926
 1110           ;                                                       Uart0TxData[5]=(k>>8);  //包索引        
 1110 232C              mov R2,R3
 1112 3324              clr R3
 1114 20923400          sts _Uart0TxData+5,R2
 1118                   .dbline 927
 1118           ;                                                       Uart0TxData[6]=(TestDataBlockIndex);
 1118 A0923500          sts _Uart0TxData+6,R10
 111C                   .dbline 928
 111C           ;                                                       Uart0TxData[7]=(TestDataBlockIndex>>8);//首块索引
 111C 1501              movw R2,R10
 111E 232C              mov R2,R3
 1120 3324              clr R3
 1122 20923600          sts _Uart0TxData+7,R2
 1126                   .dbline 938
 1126           ; 
 1126           ;                                                       /*
 1126           ;                                                       // 单独块索引
 1126           ;                                                       Uart0TxData[4]=(k%8);   
 1126           ;                                                       Uart0TxData[5]=0;       //包索引        
 1126           ;                                                       Uart0TxData[6]=(TestDataBlockIndex+k/8);
 1126           ;                                                       Uart0TxData[7]=((TestDataBlockIndex+k/8)>>8);//首块索引
 1126           ;                                                       */
 1126           ; 
 1126           ;                                                       SendUart0_2(9,6);//超时48ms
 1126 26E0              ldi R18,6
 1128 30E0              ldi R19,0
 112A 09E0              ldi R16,9
 112C E3DB              xcall _SendUart0_2
 112E                   .dbline 939
 112E           ;                                                       for(bf=0;bf<32;bf++)
 112E 2224              clr R2
 1130 3324              clr R3
 1132 30922700          sts _bf+1,R3
 1136 20922600          sts _bf,R2
 113A 39C0              xjmp L403
 113C           L400:
 113C                   .dbline 940
 113C           ;                                                       {               
 113C                   .dbline 941
 113C           ;                                                               T_dat=Uart0RxData[bf*2+1];//高字节
 113C 80E0              ldi R24,<_Uart0RxData
 113E 90E0              ldi R25,>_Uart0RxData
 1140 E0912600          lds R30,_bf
 1144 F0912700          lds R31,_bf+1
 1148 EE0F              lsl R30
 114A FF1F              rol R31
 114C 3196              adiw R30,1
 114E E80F              add R30,R24
 1150 F91F              adc R31,R25
 1152 2080              ldd R2,z+0
 1154 3324              clr R3
 1156 3092E201          sts _T_dat+1,R3
 115A 2092E101          sts _T_dat,R2
 115E                   .dbline 942
 115E           ;                                                               T_dat<<=8;
 115E 322C              mov R3,R2
 1160 2224              clr R2
 1162 3092E201          sts _T_dat+1,R3
 1166 2092E101          sts _T_dat,R2
 116A                   .dbline 943
 116A           ;                                                               T_dat|=Uart0RxData[bf*2+0];//低字节
 116A E0912600          lds R30,_bf
 116E F0912700          lds R31,_bf+1
 1172 EE0F              lsl R30
 1174 FF1F              rol R31
 1176 E80F              add R30,R24
 1178 F91F              adc R31,R25
 117A 2080              ldd R2,z+0
 117C 3324              clr R3
 117E 4090E101          lds R4,_T_dat
 1182 5090E201          lds R5,_T_dat+1
 1186 4228              or R4,R2
 1188 5328              or R5,R3
 118A 5092E201          sts _T_dat+1,R5
 118E 4092E101          sts _T_dat,R4
 1192                   .dbline 944
 1192           ;                                                               SendManchester();       
 1192 0E94151B          xcall _SendManchester
 1196                   .dbline 945
 1196           ;                                                               Delay_ms(10);    
 1196 0AE0              ldi R16,10
 1198 10E0              ldi R17,0
 119A B5DC              xcall _Delay_ms
 119C                   .dbline 946
 119C           ;                                                       }               
 119C           L401:
 119C                   .dbline 939
 119C 80912600          lds R24,_bf
 11A0 90912700          lds R25,_bf+1
 11A4 0196              adiw R24,1
 11A6 90932700          sts _bf+1,R25
 11AA 80932600          sts _bf,R24
 11AE           L403:
 11AE                   .dbline 939
 11AE 80912600          lds R24,_bf
 11B2 90912700          lds R25,_bf+1
 11B6 8032              cpi R24,32
 11B8 E0E0              ldi R30,0
 11BA 9E07              cpc R25,R30
 11BC 08F4              brsh X265
 11BE BECF              xjmp L400
 11C0           X265:
 11C0           X122:
 11C0                   .dbline 947
 11C0           ;                                               }
 11C0           L390:
 11C0                   .dbline 917
 11C0 8091BB01          lds R24,_k
 11C4 9091BC01          lds R25,_k+1
 11C8 0196              adiw R24,1
 11CA 9093BC01          sts _k+1,R25
 11CE 8093BB01          sts _k,R24
 11D2           L392:
 11D2                   .dbline 917
 11D2 2090BB01          lds R2,_k
 11D6 3090BC01          lds R3,_k+1
 11DA 2C14              cp R2,R12
 11DC 3D04              cpc R3,R13
 11DE 08F4              brsh X266
 11E0 85CF              xjmp L389
 11E2           X266:
 11E2           X123:
 11E2                   .dbline 948
 11E2           ;                                       } 
 11E2 0C94081B          xjmp L313
 11E6           L384:
 11E6                   .dbline 949
 11E6           ;                                       else if(DataFlag==4)//下发仪器信息
 11E6 8091C101          lds R24,_DataFlag
 11EA 9091C201          lds R25,_DataFlag+1
 11EE 8430              cpi R24,4
 11F0 E0E0              ldi R30,0
 11F2 9E07              cpc R25,R30
 11F4 11F0              breq X267
 11F6 0C94081B          xjmp L313
 11FA           X267:
 11FA           X124:
 11FA                   .dbline 950
 11FA           ;                                       {
 11FA                   .dbline 951
 11FA           ;                                               T_dat=0x0000;
 11FA 2224              clr R2
 11FC 3324              clr R3
 11FE 3092E201          sts _T_dat+1,R3
 1202 2092E101          sts _T_dat,R2
 1206                   .dbline 953
 1206           ; 
 1206           ;                                               Uart0TxData[0]=0xE8;
 1206 88EE              ldi R24,232
 1208 80932F00          sts _Uart0TxData,R24
 120C                   .dbline 954
 120C           ;                                               Uart0TxData[1]=0x40;
 120C 80E4              ldi R24,64
 120E 80933000          sts _Uart0TxData+1,R24
 1212                   .dbline 955
 1212           ;                                               Uart0TxData[2]=0x84;
 1212 84E8              ldi R24,132
 1214 80933100          sts _Uart0TxData+2,R24
 1218                   .dbline 956
 1218           ;                                               Uart0TxData[3]=0;//包0
 1218 20923200          sts _Uart0TxData+3,R2
 121C                   .dbline 957
 121C           ;                                               Uart0TxData[4]=0x21;
 121C 81E2              ldi R24,33
 121E 80933300          sts _Uart0TxData+4,R24
 1222                   .dbline 958
 1222           ;                                               Uart0TxData[5]=0x22;
 1222 82E2              ldi R24,34
 1224 80933400          sts _Uart0TxData+5,R24
 1228                   .dbline 959
 1228           ;                                               Uart0TxData[6]=0x23;
 1228 83E2              ldi R24,35
 122A 80933500          sts _Uart0TxData+6,R24
 122E                   .dbline 960
 122E           ;                                               Uart0TxData[7]=0x24;
 122E 84E2              ldi R24,36
 1230 80933600          sts _Uart0TxData+7,R24
 1234                   .dbline 961
 1234           ;                                               Uart0TxData[8]=0x32;     
 1234 82E3              ldi R24,50
 1236 80933700          sts _Uart0TxData+8,R24
 123A                   .dbline 962
 123A           ;                                               for(k=0;k<64;k++)
 123A 3092BC01          sts _k+1,R3
 123E 2092BB01          sts _k,R2
 1242 1AC0              xjmp L417
 1244           L414:
 1244                   .dbline 963
 1244           ;                                               {
 1244                   .dbline 964
 1244           ;                                                       Uart0TxData[9+k]=coeffdata[k];  
 1244 A090BB01          lds R10,_k
 1248 B090BC01          lds R11,_k+1
 124C 80E0              ldi R24,<_coeffdata
 124E 90E0              ldi R25,>_coeffdata
 1250 F501              movw R30,R10
 1252 E80F              add R30,R24
 1254 F91F              adc R31,R25
 1256 2080              ldd R2,z+0
 1258 80E0              ldi R24,<_Uart0TxData
 125A 90E0              ldi R25,>_Uart0TxData
 125C F501              movw R30,R10
 125E 3996              adiw R30,9
 1260 E80F              add R30,R24
 1262 F91F              adc R31,R25
 1264 2082              std z+0,R2
 1266                   .dbline 965
 1266           ;                                               }                
 1266           L415:
 1266                   .dbline 962
 1266 8091BB01          lds R24,_k
 126A 9091BC01          lds R25,_k+1
 126E 0196              adiw R24,1
 1270 9093BC01          sts _k+1,R25
 1274 8093BB01          sts _k,R24
 1278           L417:
 1278                   .dbline 962
 1278 8091BB01          lds R24,_k
 127C 9091BC01          lds R25,_k+1
 1280 8034              cpi R24,64
 1282 E0E0              ldi R30,0
 1284 9E07              cpc R25,R30
 1286 F0F2              brlo L414
 1288           X125:
 1288                   .dbline 966
 1288           ;                                               SendUart0_2(74,20);//超时160ms
 1288 24E1              ldi R18,20
 128A 30E0              ldi R19,0
 128C 0AE4              ldi R16,74
 128E 32DB              xcall _SendUart0_2
 1290                   .dbline 967
 1290           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1290 8091FA01          lds R24,_Uart0RxCounter
 1294 8930              cpi R24,9
 1296 61F4              brne L424
 1298           X126:
 1298 8091FB01          lds R24,_Uart0RxData
 129C 8535              cpi R24,85
 129E 41F4              brne L424
 12A0           X127:
 12A0 8091FC01          lds R24,_Uart0RxData+1
 12A4 8034              cpi R24,64
 12A6 21F4              brne L424
 12A8           X128:
 12A8 8091FD01          lds R24,_Uart0RxData+2
 12AC 8438              cpi R24,132
 12AE 49F0              breq L418
 12B0           X129:
 12B0           L424:
 12B0                   .dbline 968
 12B0           ;                                               {T_dat|=0x0001; }
 12B0                   .dbline 968
 12B0 8091E101          lds R24,_T_dat
 12B4 9091E201          lds R25,_T_dat+1
 12B8 8160              ori R24,1
 12BA 9093E201          sts _T_dat+1,R25
 12BE 8093E101          sts _T_dat,R24
 12C2                   .dbline 968
 12C2           L418:
 12C2                   .dbline 970
 12C2           ; 
 12C2           ;                                               Uart0TxData[0]=0xE8;
 12C2 88EE              ldi R24,232
 12C4 80932F00          sts _Uart0TxData,R24
 12C8                   .dbline 971
 12C8           ;                                               Uart0TxData[1]=0x40;
 12C8 80E4              ldi R24,64
 12CA 80933000          sts _Uart0TxData+1,R24
 12CE                   .dbline 972
 12CE           ;                                               Uart0TxData[2]=0x84;
 12CE 84E8              ldi R24,132
 12D0 80933100          sts _Uart0TxData+2,R24
 12D4                   .dbline 973
 12D4           ;                                               Uart0TxData[3]=1;//包1
 12D4 81E0              ldi R24,1
 12D6 80933200          sts _Uart0TxData+3,R24
 12DA                   .dbline 974
 12DA           ;                                               Uart0TxData[4]=0x21;
 12DA 81E2              ldi R24,33
 12DC 80933300          sts _Uart0TxData+4,R24
 12E0                   .dbline 975
 12E0           ;                                               Uart0TxData[5]=0x22;
 12E0 82E2              ldi R24,34
 12E2 80933400          sts _Uart0TxData+5,R24
 12E6                   .dbline 976
 12E6           ;                                               Uart0TxData[6]=0x23;
 12E6 83E2              ldi R24,35
 12E8 80933500          sts _Uart0TxData+6,R24
 12EC                   .dbline 977
 12EC           ;                                               Uart0TxData[7]=0x24;
 12EC 84E2              ldi R24,36
 12EE 80933600          sts _Uart0TxData+7,R24
 12F2                   .dbline 978
 12F2           ;                                               Uart0TxData[8]=0x32;     
 12F2 82E3              ldi R24,50
 12F4 80933700          sts _Uart0TxData+8,R24
 12F8                   .dbline 979
 12F8           ;                                               for(k=0;k<64;k++)
 12F8 2224              clr R2
 12FA 3324              clr R3
 12FC 3092BC01          sts _k+1,R3
 1300 2092BB01          sts _k,R2
 1304 1CC0              xjmp L436
 1306           L433:
 1306                   .dbline 980
 1306           ;                                               {
 1306                   .dbline 981
 1306           ;                                                       Uart0TxData[9+k]=coeffdata[k+64];  
 1306 A090BB01          lds R10,_k
 130A B090BC01          lds R11,_k+1
 130E 80E0              ldi R24,<_coeffdata
 1310 90E0              ldi R25,>_coeffdata
 1312 F501              movw R30,R10
 1314 E05C              subi R30,192  ; offset = 64
 1316 FF4F              sbci R31,255
 1318 E80F              add R30,R24
 131A F91F              adc R31,R25
 131C 2080              ldd R2,z+0
 131E 80E0              ldi R24,<_Uart0TxData
 1320 90E0              ldi R25,>_Uart0TxData
 1322 F501              movw R30,R10
 1324 3996              adiw R30,9
 1326 E80F              add R30,R24
 1328 F91F              adc R31,R25
 132A 2082              std z+0,R2
 132C                   .dbline 982
 132C           ;                                               }                
 132C           L434:
 132C                   .dbline 979
 132C 8091BB01          lds R24,_k
 1330 9091BC01          lds R25,_k+1
 1334 0196              adiw R24,1
 1336 9093BC01          sts _k+1,R25
 133A 8093BB01          sts _k,R24
 133E           L436:
 133E                   .dbline 979
 133E 8091BB01          lds R24,_k
 1342 9091BC01          lds R25,_k+1
 1346 8034              cpi R24,64
 1348 E0E0              ldi R30,0
 134A 9E07              cpc R25,R30
 134C E0F2              brlo L433
 134E           X130:
 134E                   .dbline 983
 134E           ;                                               SendUart0_2(74,20);//超时160ms
 134E 24E1              ldi R18,20
 1350 30E0              ldi R19,0
 1352 0AE4              ldi R16,74
 1354 CFDA              xcall _SendUart0_2
 1356                   .dbline 984
 1356           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1356 8091FA01          lds R24,_Uart0RxCounter
 135A 8930              cpi R24,9
 135C 61F4              brne L443
 135E           X131:
 135E 8091FB01          lds R24,_Uart0RxData
 1362 8535              cpi R24,85
 1364 41F4              brne L443
 1366           X132:
 1366 8091FC01          lds R24,_Uart0RxData+1
 136A 8034              cpi R24,64
 136C 21F4              brne L443
 136E           X133:
 136E 8091FD01          lds R24,_Uart0RxData+2
 1372 8438              cpi R24,132
 1374 49F0              breq L437
 1376           X134:
 1376           L443:
 1376                   .dbline 985
 1376           ;                                               {T_dat|=0x0002; }
 1376                   .dbline 985
 1376 8091E101          lds R24,_T_dat
 137A 9091E201          lds R25,_T_dat+1
 137E 8260              ori R24,2
 1380 9093E201          sts _T_dat+1,R25
 1384 8093E101          sts _T_dat,R24
 1388                   .dbline 985
 1388           L437:
 1388                   .dbline 987
 1388           ; 
 1388           ;                                               Uart0TxData[0]=0xE8;
 1388 88EE              ldi R24,232
 138A 80932F00          sts _Uart0TxData,R24
 138E                   .dbline 988
 138E           ;                                               Uart0TxData[1]=0x40;
 138E 80E4              ldi R24,64
 1390 80933000          sts _Uart0TxData+1,R24
 1394                   .dbline 989
 1394           ;                                               Uart0TxData[2]=0x84;
 1394 84E8              ldi R24,132
 1396 80933100          sts _Uart0TxData+2,R24
 139A                   .dbline 990
 139A           ;                                               Uart0TxData[3]=2;//包2
 139A 82E0              ldi R24,2
 139C 80933200          sts _Uart0TxData+3,R24
 13A0                   .dbline 991
 13A0           ;                                               Uart0TxData[4]=0x21;
 13A0 81E2              ldi R24,33
 13A2 80933300          sts _Uart0TxData+4,R24
 13A6                   .dbline 992
 13A6           ;                                               Uart0TxData[5]=0x22;
 13A6 82E2              ldi R24,34
 13A8 80933400          sts _Uart0TxData+5,R24
 13AC                   .dbline 993
 13AC           ;                                               Uart0TxData[6]=0x23;
 13AC 83E2              ldi R24,35
 13AE 80933500          sts _Uart0TxData+6,R24
 13B2                   .dbline 994
 13B2           ;                                               Uart0TxData[7]=0x24;
 13B2 84E2              ldi R24,36
 13B4 80933600          sts _Uart0TxData+7,R24
 13B8                   .dbline 995
 13B8           ;                                               Uart0TxData[8]=0x32;     
 13B8 82E3              ldi R24,50
 13BA 80933700          sts _Uart0TxData+8,R24
 13BE                   .dbline 996
 13BE           ;                                               for(k=0;k<64;k++)
 13BE 2224              clr R2
 13C0 3324              clr R3
 13C2 3092BC01          sts _k+1,R3
 13C6 2092BB01          sts _k,R2
 13CA 1CC0              xjmp L455
 13CC           L452:
 13CC                   .dbline 997
 13CC           ;                                               {
 13CC                   .dbline 998
 13CC           ;                                                       Uart0TxData[9+k]=coeffdata[k+128];  
 13CC A090BB01          lds R10,_k
 13D0 B090BC01          lds R11,_k+1
 13D4 80E0              ldi R24,<_coeffdata
 13D6 90E0              ldi R25,>_coeffdata
 13D8 F501              movw R30,R10
 13DA E058              subi R30,128  ; offset = 128
 13DC FF4F              sbci R31,255
 13DE E80F              add R30,R24
 13E0 F91F              adc R31,R25
 13E2 2080              ldd R2,z+0
 13E4 80E0              ldi R24,<_Uart0TxData
 13E6 90E0              ldi R25,>_Uart0TxData
 13E8 F501              movw R30,R10
 13EA 3996              adiw R30,9
 13EC E80F              add R30,R24
 13EE F91F              adc R31,R25
 13F0 2082              std z+0,R2
 13F2                   .dbline 999
 13F2           ;                                               }                
 13F2           L453:
 13F2                   .dbline 996
 13F2 8091BB01          lds R24,_k
 13F6 9091BC01          lds R25,_k+1
 13FA 0196              adiw R24,1
 13FC 9093BC01          sts _k+1,R25
 1400 8093BB01          sts _k,R24
 1404           L455:
 1404                   .dbline 996
 1404 8091BB01          lds R24,_k
 1408 9091BC01          lds R25,_k+1
 140C 8034              cpi R24,64
 140E E0E0              ldi R30,0
 1410 9E07              cpc R25,R30
 1412 E0F2              brlo L452
 1414           X135:
 1414                   .dbline 1000
 1414           ;                                               SendUart0_2(74,20);//超时160ms
 1414 24E1              ldi R18,20
 1416 30E0              ldi R19,0
 1418 0AE4              ldi R16,74
 141A 6CDA              xcall _SendUart0_2
 141C                   .dbline 1001
 141C           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 141C 8091FA01          lds R24,_Uart0RxCounter
 1420 8930              cpi R24,9
 1422 61F4              brne L462
 1424           X136:
 1424 8091FB01          lds R24,_Uart0RxData
 1428 8535              cpi R24,85
 142A 41F4              brne L462
 142C           X137:
 142C 8091FC01          lds R24,_Uart0RxData+1
 1430 8034              cpi R24,64
 1432 21F4              brne L462
 1434           X138:
 1434 8091FD01          lds R24,_Uart0RxData+2
 1438 8438              cpi R24,132
 143A 49F0              breq L456
 143C           X139:
 143C           L462:
 143C                   .dbline 1002
 143C           ;                                               {T_dat|=0x0004; }
 143C                   .dbline 1002
 143C 8091E101          lds R24,_T_dat
 1440 9091E201          lds R25,_T_dat+1
 1444 8460              ori R24,4
 1446 9093E201          sts _T_dat+1,R25
 144A 8093E101          sts _T_dat,R24
 144E                   .dbline 1002
 144E           L456:
 144E                   .dbline 1004
 144E           ; 
 144E           ;                                               Uart0TxData[0]=0xE8;
 144E 88EE              ldi R24,232
 1450 80932F00          sts _Uart0TxData,R24
 1454                   .dbline 1005
 1454           ;                                               Uart0TxData[1]=0x40;
 1454 80E4              ldi R24,64
 1456 80933000          sts _Uart0TxData+1,R24
 145A                   .dbline 1006
 145A           ;                                               Uart0TxData[2]=0x84;
 145A 84E8              ldi R24,132
 145C 80933100          sts _Uart0TxData+2,R24
 1460                   .dbline 1007
 1460           ;                                               Uart0TxData[3]=3;//包3
 1460 83E0              ldi R24,3
 1462 80933200          sts _Uart0TxData+3,R24
 1466                   .dbline 1008
 1466           ;                                               Uart0TxData[4]=0x21;
 1466 81E2              ldi R24,33
 1468 80933300          sts _Uart0TxData+4,R24
 146C                   .dbline 1009
 146C           ;                                               Uart0TxData[5]=0x22;
 146C 82E2              ldi R24,34
 146E 80933400          sts _Uart0TxData+5,R24
 1472                   .dbline 1010
 1472           ;                                               Uart0TxData[6]=0x23;
 1472 83E2              ldi R24,35
 1474 80933500          sts _Uart0TxData+6,R24
 1478                   .dbline 1011
 1478           ;                                               Uart0TxData[7]=0x24;
 1478 84E2              ldi R24,36
 147A 80933600          sts _Uart0TxData+7,R24
 147E                   .dbline 1012
 147E           ;                                               Uart0TxData[8]=0x32;     
 147E 82E3              ldi R24,50
 1480 80933700          sts _Uart0TxData+8,R24
 1484                   .dbline 1013
 1484           ;                                               for(k=0;k<64;k++)
 1484 2224              clr R2
 1486 3324              clr R3
 1488 3092BC01          sts _k+1,R3
 148C 2092BB01          sts _k,R2
 1490 1CC0              xjmp L474
 1492           L471:
 1492                   .dbline 1014
 1492           ;                                               {
 1492                   .dbline 1015
 1492           ;                                                       Uart0TxData[9+k]=coeffdata[k+192];  
 1492 A090BB01          lds R10,_k
 1496 B090BC01          lds R11,_k+1
 149A 80E0              ldi R24,<_coeffdata
 149C 90E0              ldi R25,>_coeffdata
 149E F501              movw R30,R10
 14A0 E054              subi R30,64  ; offset = 192
 14A2 FF4F              sbci R31,255
 14A4 E80F              add R30,R24
 14A6 F91F              adc R31,R25
 14A8 2080              ldd R2,z+0
 14AA 80E0              ldi R24,<_Uart0TxData
 14AC 90E0              ldi R25,>_Uart0TxData
 14AE F501              movw R30,R10
 14B0 3996              adiw R30,9
 14B2 E80F              add R30,R24
 14B4 F91F              adc R31,R25
 14B6 2082              std z+0,R2
 14B8                   .dbline 1016
 14B8           ;                                               }                
 14B8           L472:
 14B8                   .dbline 1013
 14B8 8091BB01          lds R24,_k
 14BC 9091BC01          lds R25,_k+1
 14C0 0196              adiw R24,1
 14C2 9093BC01          sts _k+1,R25
 14C6 8093BB01          sts _k,R24
 14CA           L474:
 14CA                   .dbline 1013
 14CA 8091BB01          lds R24,_k
 14CE 9091BC01          lds R25,_k+1
 14D2 8034              cpi R24,64
 14D4 E0E0              ldi R30,0
 14D6 9E07              cpc R25,R30
 14D8 E0F2              brlo L471
 14DA           X140:
 14DA                   .dbline 1017
 14DA           ;                                               SendUart0_2(74,20);//超时160ms
 14DA 24E1              ldi R18,20
 14DC 30E0              ldi R19,0
 14DE 0AE4              ldi R16,74
 14E0 09DA              xcall _SendUart0_2
 14E2                   .dbline 1018
 14E2           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 14E2 8091FA01          lds R24,_Uart0RxCounter
 14E6 8930              cpi R24,9
 14E8 61F4              brne L481
 14EA           X141:
 14EA 8091FB01          lds R24,_Uart0RxData
 14EE 8535              cpi R24,85
 14F0 41F4              brne L481
 14F2           X142:
 14F2 8091FC01          lds R24,_Uart0RxData+1
 14F6 8034              cpi R24,64
 14F8 21F4              brne L481
 14FA           X143:
 14FA 8091FD01          lds R24,_Uart0RxData+2
 14FE 8438              cpi R24,132
 1500 49F0              breq L475
 1502           X144:
 1502           L481:
 1502                   .dbline 1019
 1502           ;                                               {T_dat|=0x0008; }
 1502                   .dbline 1019
 1502 8091E101          lds R24,_T_dat
 1506 9091E201          lds R25,_T_dat+1
 150A 8860              ori R24,8
 150C 9093E201          sts _T_dat+1,R25
 1510 8093E101          sts _T_dat,R24
 1514                   .dbline 1019
 1514           L475:
 1514                   .dbline 1021
 1514           ; 
 1514           ;                                               Uart0TxData[0]=0xE8;
 1514 88EE              ldi R24,232
 1516 80932F00          sts _Uart0TxData,R24
 151A                   .dbline 1022
 151A           ;                                               Uart0TxData[1]=0x40;
 151A 80E4              ldi R24,64
 151C 80933000          sts _Uart0TxData+1,R24
 1520                   .dbline 1023
 1520           ;                                               Uart0TxData[2]=0x84;
 1520 84E8              ldi R24,132
 1522 80933100          sts _Uart0TxData+2,R24
 1526                   .dbline 1024
 1526           ;                                               Uart0TxData[3]=4;//包4
 1526 84E0              ldi R24,4
 1528 80933200          sts _Uart0TxData+3,R24
 152C                   .dbline 1025
 152C           ;                                               Uart0TxData[4]=0x21;
 152C 81E2              ldi R24,33
 152E 80933300          sts _Uart0TxData+4,R24
 1532                   .dbline 1026
 1532           ;                                               Uart0TxData[5]=0x22;
 1532 82E2              ldi R24,34
 1534 80933400          sts _Uart0TxData+5,R24
 1538                   .dbline 1027
 1538           ;                                               Uart0TxData[6]=0x23;
 1538 83E2              ldi R24,35
 153A 80933500          sts _Uart0TxData+6,R24
 153E                   .dbline 1028
 153E           ;                                               Uart0TxData[7]=0x24;
 153E 84E2              ldi R24,36
 1540 80933600          sts _Uart0TxData+7,R24
 1544                   .dbline 1029
 1544           ;                                               Uart0TxData[8]=0x32;     
 1544 82E3              ldi R24,50
 1546 80933700          sts _Uart0TxData+8,R24
 154A                   .dbline 1030
 154A           ;                                               for(k=0;k<64;k++)
 154A 2224              clr R2
 154C 3324              clr R3
 154E 3092BC01          sts _k+1,R3
 1552 2092BB01          sts _k,R2
 1556 1CC0              xjmp L493
 1558           L490:
 1558                   .dbline 1031
 1558           ;                                               {
 1558                   .dbline 1032
 1558           ;                                                       Uart0TxData[9+k]=coeffdata[k+256];  
 1558 A090BB01          lds R10,_k
 155C B090BC01          lds R11,_k+1
 1560 80E0              ldi R24,<_coeffdata
 1562 90E0              ldi R25,>_coeffdata
 1564 F501              movw R30,R10
 1566 E050              subi R30,0  ; offset = 256
 1568 FF4F              sbci R31,255
 156A E80F              add R30,R24
 156C F91F              adc R31,R25
 156E 2080              ldd R2,z+0
 1570 80E0              ldi R24,<_Uart0TxData
 1572 90E0              ldi R25,>_Uart0TxData
 1574 F501              movw R30,R10
 1576 3996              adiw R30,9
 1578 E80F              add R30,R24
 157A F91F              adc R31,R25
 157C 2082              std z+0,R2
 157E                   .dbline 1033
 157E           ;                                               }                
 157E           L491:
 157E                   .dbline 1030
 157E 8091BB01          lds R24,_k
 1582 9091BC01          lds R25,_k+1
 1586 0196              adiw R24,1
 1588 9093BC01          sts _k+1,R25
 158C 8093BB01          sts _k,R24
 1590           L493:
 1590                   .dbline 1030
 1590 8091BB01          lds R24,_k
 1594 9091BC01          lds R25,_k+1
 1598 8034              cpi R24,64
 159A E0E0              ldi R30,0
 159C 9E07              cpc R25,R30
 159E E0F2              brlo L490
 15A0           X145:
 15A0                   .dbline 1034
 15A0           ;                                               SendUart0_2(74,20);//超时160ms
 15A0 24E1              ldi R18,20
 15A2 30E0              ldi R19,0
 15A4 0AE4              ldi R16,74
 15A6 A6D9              xcall _SendUart0_2
 15A8                   .dbline 1035
 15A8           ;                                               if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 15A8 8091FA01          lds R24,_Uart0RxCounter
 15AC 8930              cpi R24,9
 15AE 61F4              brne L500
 15B0           X146:
 15B0 8091FB01          lds R24,_Uart0RxData
 15B4 8535              cpi R24,85
 15B6 41F4              brne L500
 15B8           X147:
 15B8 8091FC01          lds R24,_Uart0RxData+1
 15BC 8034              cpi R24,64
 15BE 21F4              brne L500
 15C0           X148:
 15C0 8091FD01          lds R24,_Uart0RxData+2
 15C4 8438              cpi R24,132
 15C6 49F0              breq L494
 15C8           X149:
 15C8           L500:
 15C8                   .dbline 1036
 15C8           ;                                               {T_dat|=0x0010; }
 15C8                   .dbline 1036
 15C8 8091E101          lds R24,_T_dat
 15CC 9091E201          lds R25,_T_dat+1
 15D0 8061              ori R24,16
 15D2 9093E201          sts _T_dat+1,R25
 15D6 8093E101          sts _T_dat,R24
 15DA                   .dbline 1036
 15DA           L494:
 15DA                   .dbline 1038
 15DA           ; 
 15DA           ;                                               DataFlag=0;
 15DA 2224              clr R2
 15DC 3324              clr R3
 15DE 3092C201          sts _DataFlag+1,R3
 15E2 2092C101          sts _DataFlag,R2
 15E6                   .dbline 1039
 15E6           ;                                               coeff_len=0;    
 15E6 30922D00          sts _coeff_len+1,R3
 15EA 20922C00          sts _coeff_len,R2
 15EE                   .dbline 1040
 15EE           ;                                               T_com=0x0C;
 15EE 8CE0              ldi R24,12
 15F0 8093DA01          sts _T_com,R24
 15F4                   .dbline 1041
 15F4           ;                                               SendManchester();               
 15F4 0E94151B          xcall _SendManchester
 15F8                   .dbline 1042
 15F8           ;                                       }     
 15F8                   .dbline 1043
 15F8           ;                               }        
 15F8                   .dbline 1044
 15F8           ;                       }
 15F8 0C94081B          xjmp L313
 15FC           L312:
 15FC                   .dbline 1047
 15FC           ; 
 15FC           ;                       else//若不是下发标定系数，则进入以下各个命令的子语句
 15FC           ;                       { 
 15FC                   .dbline 1048
 15FC           ;                               T_com=(R_dat>>4);
 15FC 2090DF01          lds R2,_R_dat
 1600 3090E001          lds R3,_R_dat+1
 1604 3594              asr R3
 1606 2794              ror R2
 1608 3594              asr R3
 160A 2794              ror R2
 160C 3594              asr R3
 160E 2794              ror R2
 1610 3594              asr R3
 1612 2794              ror R2
 1614 2092DA01          sts _T_com,R2
 1618                   .dbline 1049
 1618           ;                               switch(R_dat&0xf0)
 1618 8091DF01          lds R24,_R_dat
 161C 9091E001          lds R25,_R_dat+1
 1620 807F              andi R24,240
 1622 9070              andi R25,0
 1624 5C01              movw R10,R24
 1626 8037              cpi R24,112
 1628 E0E0              ldi R30,0
 162A 9E07              cpc R25,R30
 162C 09F4              brne X268
 162E 57C4              xjmp L590
 1630           X268:
 1630           X150:
 1630 80E7              ldi R24,112
 1632 90E0              ldi R25,0
 1634 8A15              cp R24,R10
 1636 9B05              cpc R25,R11
 1638 0CF4              brge X269
 163A 3AC0              xjmp L912
 163C           X269:
 163C           X151:
 163C           L911:
 163C C501              movw R24,R10
 163E 8033              cpi R24,48
 1640 E0E0              ldi R30,0
 1642 9E07              cpc R25,R30
 1644 09F4              brne X270
 1646 F2C0              xjmp L521
 1648           X270:
 1648           X152:
 1648 80E3              ldi R24,48
 164A 90E0              ldi R25,0
 164C 8A15              cp R24,R10
 164E 9B05              cpc R25,R11
 1650 A4F0              brlt L914
 1652           X153:
 1652           L913:
 1652 C501              movw R24,R10
 1654 8031              cpi R24,16
 1656 E0E0              ldi R30,0
 1658 9E07              cpc R25,R30
 165A 09F4              brne X271
 165C 66C0              xjmp L504
 165E           X271:
 165E           X154:
 165E 8031              cpi R24,16
 1660 E0E0              ldi R30,0
 1662 9E07              cpc R25,R30
 1664 14F4              brge X272
 1666 0C94081B          xjmp L502
 166A           X272:
 166A           X155:
 166A           L915:
 166A C501              movw R24,R10
 166C 8032              cpi R24,32
 166E E0E0              ldi R30,0
 1670 9E07              cpc R25,R30
 1672 09F4              brne X273
 1674 99C0              xjmp L512
 1676           X273:
 1676           X156:
 1676 0C94081B          xjmp L502
 167A           L914:
 167A C501              movw R24,R10
 167C 8035              cpi R24,80
 167E E0E0              ldi R30,0
 1680 9E07              cpc R25,R30
 1682 09F4              brne X274
 1684 13C2              xjmp L542
 1686           X274:
 1686           X157:
 1686 80E5              ldi R24,80
 1688 90E0              ldi R25,0
 168A 8A15              cp R24,R10
 168C 9B05              cpc R25,R11
 168E 44F0              brlt L917
 1690           X158:
 1690           L916:
 1690 C501              movw R24,R10
 1692 8034              cpi R24,64
 1694 E0E0              ldi R30,0
 1696 9E07              cpc R25,R30
 1698 09F4              brne X275
 169A 2CC1              xjmp L525
 169C           X275:
 169C           X159:
 169C 0C94081B          xjmp L502
 16A0           L917:
 16A0 C501              movw R24,R10
 16A2 8036              cpi R24,96
 16A4 E0E0              ldi R30,0
 16A6 9E07              cpc R25,R30
 16A8 09F4              brne X276
 16AA E0C3              xjmp L586
 16AC           X276:
 16AC           X160:
 16AC 0C94081B          xjmp L502
 16B0           L912:
 16B0 C501              movw R24,R10
 16B2 803A              cpi R24,160
 16B4 E0E0              ldi R30,0
 16B6 9E07              cpc R25,R30
 16B8 09F4              brne X277
 16BA F1C7              xjmp L704
 16BC           X277:
 16BC           X161:
 16BC 80EA              ldi R24,160
 16BE 90E0              ldi R25,0
 16C0 8A15              cp R24,R10
 16C2 9B05              cpc R25,R11
 16C4 A4F0              brlt L919
 16C6           X162:
 16C6           L918:
 16C6 C501              movw R24,R10
 16C8 8038              cpi R24,128
 16CA E0E0              ldi R30,0
 16CC 9E07              cpc R25,R30
 16CE 09F4              brne X278
 16D0 40C4              xjmp L595
 16D2           X278:
 16D2           X163:
 16D2 8038              cpi R24,128
 16D4 E0E0              ldi R30,0
 16D6 9E07              cpc R25,R30
 16D8 14F4              brge X279
 16DA 0C94081B          xjmp L502
 16DE           X279:
 16DE           X164:
 16DE           L920:
 16DE C501              movw R24,R10
 16E0 8039              cpi R24,144
 16E2 E0E0              ldi R30,0
 16E4 9E07              cpc R25,R30
 16E6 09F4              brne X280
 16E8 02C5              xjmp L610
 16EA           X280:
 16EA           X165:
 16EA 0C94081B          xjmp L502
 16EE           L919:
 16EE C501              movw R24,R10
 16F0 803C              cpi R24,192
 16F2 E0E0              ldi R30,0
 16F4 9E07              cpc R25,R30
 16F6 11F4              brne X281
 16F8 0C94B315          xjmp L777
 16FC           X281:
 16FC           X166:
 16FC 80EC              ldi R24,192
 16FE 90E0              ldi R25,0
 1700 8A15              cp R24,R10
 1702 9B05              cpc R25,R11
 1704 4CF0              brlt L922
 1706           X167:
 1706           L921:
 1706 C501              movw R24,R10
 1708 803B              cpi R24,176
 170A E0E0              ldi R30,0
 170C 9E07              cpc R25,R30
 170E 11F4              brne X282
 1710 0C941714          xjmp L729
 1714           X282:
 1714           X168:
 1714 0C94081B          xjmp L502
 1718           L922:
 1718 C501              movw R24,R10
 171A 803D              cpi R24,208
 171C E0E0              ldi R30,0
 171E 9E07              cpc R25,R30
 1720 11F4              brne X283
 1722 0C94D71A          xjmp L908
 1726           X283:
 1726           X169:
 1726 0C94081B          xjmp L502
 172A           L504:
 172A                   .dbline 1052
 172A           ;                               { 
 172A           ;                                       case 0x10://复位        
 172A           ;                                               Uart0TxData[0]=0xE8;
 172A 88EE              ldi R24,232
 172C 80932F00          sts _Uart0TxData,R24
 1730                   .dbline 1053
 1730           ;                                               Uart0TxData[1]=0x40;
 1730 80E4              ldi R24,64
 1732 80933000          sts _Uart0TxData+1,R24
 1736                   .dbline 1054
 1736           ;                                               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 1736 8DE8              ldi R24,141
 1738 80933100          sts _Uart0TxData+2,R24
 173C                   .dbline 1055
 173C           ;                                               Uart0TxData[3]=31;
 173C 8FE1              ldi R24,31
 173E 80933200          sts _Uart0TxData+3,R24
 1742                   .dbline 1056
 1742           ;                                               SendUart0_2(9,5); 
 1742 25E0              ldi R18,5
 1744 30E0              ldi R19,0
 1746 09E0              ldi R16,9
 1748 D5D8              xcall _SendUart0_2
 174A                   .dbline 1057
 174A           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 174A 8091FA01          lds R24,_Uart0RxCounter
 174E 8930              cpi R24,9
 1750 99F4              brne L508
 1752           X170:
 1752 8091FB01          lds R24,_Uart0RxData
 1756 8535              cpi R24,85
 1758 79F4              brne L508
 175A           X171:
 175A 8091FC01          lds R24,_Uart0RxData+1
 175E 8034              cpi R24,64
 1760 59F4              brne L508
 1762           X172:
 1762 8091FD01          lds R24,_Uart0RxData+2
 1766 8D38              cpi R24,141
 1768 39F4              brne L508
 176A           X173:
 176A                   .dbline 1058
 176A           ;                                               {T_dat=0x00;}
 176A                   .dbline 1058
 176A 2224              clr R2
 176C 3324              clr R3
 176E 3092E201          sts _T_dat+1,R3
 1772 2092E101          sts _T_dat,R2
 1776                   .dbline 1058
 1776 06C0              xjmp L509
 1778           L508:
 1778                   .dbline 1060
 1778           ;                                               else
 1778           ;                                               {T_dat=0xff;}
 1778                   .dbline 1060
 1778 8FEF              ldi R24,255
 177A 90E0              ldi R25,0
 177C 9093E201          sts _T_dat+1,R25
 1780 8093E101          sts _T_dat,R24
 1784                   .dbline 1060
 1784           L509:
 1784                   .dbline 1061
 1784           ;                                               T_dat<<=8;
 1784 2090E101          lds R2,_T_dat
 1788 3090E201          lds R3,_T_dat+1
 178C 322C              mov R3,R2
 178E 2224              clr R2
 1790 3092E201          sts _T_dat+1,R3
 1794 2092E101          sts _T_dat,R2
 1798                   .dbline 1062
 1798           ;                                               T_dat|=0x00;
 1798 3092E201          sts _T_dat+1,R3
 179C 2092E101          sts _T_dat,R2
 17A0                   .dbline 1063
 17A0           ;                                               SendManchester();       
 17A0 0E94151B          xcall _SendManchester
 17A4                   .dbline 1064
 17A4           ;                                               break;
 17A4 0C94081B          xjmp L502
 17A8           L512:
 17A8                   .dbline 1067
 17A8           ; 
 17A8           ;                                       case 0x20://主控板与采集板版本号
 17A8           ;                                               Uart0TxData[0]=0xE8;
 17A8 88EE              ldi R24,232
 17AA 80932F00          sts _Uart0TxData,R24
 17AE                   .dbline 1068
 17AE           ;                                               Uart0TxData[1]=0x40;
 17AE 80E4              ldi R24,64
 17B0 80933000          sts _Uart0TxData+1,R24
 17B4                   .dbline 1069
 17B4           ;                                               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 17B4 8DE8              ldi R24,141
 17B6 80933100          sts _Uart0TxData+2,R24
 17BA                   .dbline 1070
 17BA           ;                                               Uart0TxData[3]=31;
 17BA 8FE1              ldi R24,31
 17BC 80933200          sts _Uart0TxData+3,R24
 17C0                   .dbline 1071
 17C0           ;                                               SendUart0_2(9,5); 
 17C0 25E0              ldi R18,5
 17C2 30E0              ldi R19,0
 17C4 09E0              ldi R16,9
 17C6 96D8              xcall _SendUart0_2
 17C8                   .dbline 1072
 17C8           ;                                               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 17C8 8091FA01          lds R24,_Uart0RxCounter
 17CC 8930              cpi R24,9
 17CE A1F4              brne L516
 17D0           X174:
 17D0 8091FB01          lds R24,_Uart0RxData
 17D4 8535              cpi R24,85
 17D6 81F4              brne L516
 17D8           X175:
 17D8 8091FC01          lds R24,_Uart0RxData+1
 17DC 8034              cpi R24,64
 17DE 61F4              brne L516
 17E0           X176:
 17E0 8091FD01          lds R24,_Uart0RxData+2
 17E4 8D38              cpi R24,141
 17E6 41F4              brne L516
 17E8           X177:
 17E8                   .dbline 1073
 17E8           ;                                                       {T_dat=Uart0RxData[3];}
 17E8                   .dbline 1073
 17E8 2090FE01          lds R2,_Uart0RxData+3
 17EC 3324              clr R3
 17EE 3092E201          sts _T_dat+1,R3
 17F2 2092E101          sts _T_dat,R2
 17F6                   .dbline 1073
 17F6 06C0              xjmp L517
 17F8           L516:
 17F8                   .dbline 1075
 17F8           ;                                               else
 17F8           ;                                                       {T_dat=0xff;}    
 17F8                   .dbline 1075
 17F8 8FEF              ldi R24,255
 17FA 90E0              ldi R25,0
 17FC 9093E201          sts _T_dat+1,R25
 1800 8093E101          sts _T_dat,R24
 1804                   .dbline 1075
 1804           L517:
 1804                   .dbline 1076
 1804           ;                                               T_dat<<=8;
 1804 2090E101          lds R2,_T_dat
 1808 3090E201          lds R3,_T_dat+1
 180C 322C              mov R3,R2
 180E 2224              clr R2
 1810 3092E201          sts _T_dat+1,R3
 1814 2092E101          sts _T_dat,R2
 1818                   .dbline 1077
 1818           ;                                               T_dat|=BB;
 1818 C101              movw R24,R2
 181A 8161              ori R24,17
 181C 9093E201          sts _T_dat+1,R25
 1820 8093E101          sts _T_dat,R24
 1824                   .dbline 1078
 1824           ;                                               SendManchester();                               
 1824 0E94151B          xcall _SendManchester
 1828                   .dbline 1079
 1828           ;                                               break;
 1828 0C94081B          xjmp L502
 182C           L521:
 182C                   .dbline 1082
 182C           ; 
 182C           ;                                       case 0x30://Cable电压,电机电压
 182C           ;                                               Delay_ms(30);   
 182C 0EE1              ldi R16,30
 182E 10E0              ldi R17,0
 1830 6AD9              xcall _Delay_ms
 1832                   .dbline 1083
 1832           ;                                               f=SampleADC(0);//Cable 
 1832 0027              clr R16
 1834 F9D8              xcall _SampleADC
 1836 A02E              mov R10,R16
 1838 1127              clr R17
 183A 0E940000          xcall int2fp
 183E 0D83              std y+5,R16
 1840 1E83              std y+6,R17
 1842 2F83              std y+7,R18
 1844 3887              std y+8,R19
 1846                   .dbline 1084
 1846           ;                                               f=f*2.56;
 1846 00E0              ldi R16,<L522
 1848 10E0              ldi R17,>L522
 184A 0E940000          xcall elpm32
 184E CE01              movw R24,R28
 1850 0596              adiw R24,5
 1852 9A93              st -y,R25
 1854 8A93              st -y,R24
 1856 0E940000          xcall fpmule1
 185A 0D83              std y+5,R16
 185C 1E83              std y+6,R17
 185E 2F83              std y+7,R18
 1860 3887              std y+8,R19
 1862                   .dbline 1085
 1862           ;                                               f=f*101;
 1862 00E0              ldi R16,<L523
 1864 10E0              ldi R17,>L523
 1866 0E940000          xcall elpm32
 186A CE01              movw R24,R28
 186C 0596              adiw R24,5
 186E 9A93              st -y,R25
 1870 8A93              st -y,R24
 1872 0E940000          xcall fpmule1
 1876 0D83              std y+5,R16
 1878 1E83              std y+6,R17
 187A 2F83              std y+7,R18
 187C 3887              std y+8,R19
 187E                   .dbline 1086
 187E           ;                                               f=f/256;
 187E 2D80              ldd R2,y+5
 1880 3E80              ldd R3,y+6
 1882 4F80              ldd R4,y+7
 1884 5884              ldd R5,y+8
 1886 00E0              ldi R16,<L524
 1888 10E0              ldi R17,>L524
 188A 0E940000          xcall elpm32
 188E 3A93              st -y,R19
 1890 2A93              st -y,R18
 1892 1A93              st -y,R17
 1894 0A93              st -y,R16
 1896 8101              movw R16,R2
 1898 9201              movw R18,R4
 189A 0E940000          xcall fpdiv2
 189E 0D83              std y+5,R16
 18A0 1E83              std y+6,R17
 18A2 2F83              std y+7,R18
 18A4 3887              std y+8,R19
 18A6                   .dbline 1087
 18A6           ;                                               T_dat=f;
 18A6 0D81              ldd R16,y+5
 18A8 1E81              ldd R17,y+6
 18AA 2F81              ldd R18,y+7
 18AC 3885              ldd R19,y+8
 18AE 0E940000          xcall fpint
 18B2 1093E201          sts _T_dat+1,R17
 18B6 0093E101          sts _T_dat,R16
 18BA                   .dbline 1088
 18BA           ;                                               T_dat<<=8;  
 18BA 1801              movw R2,R16
 18BC 322C              mov R3,R2
 18BE 2224              clr R2
 18C0 3092E201          sts _T_dat+1,R3
 18C4 2092E101          sts _T_dat,R2
 18C8                   .dbline 1090
 18C8           ;                                               
 18C8           ;                                               SendUart1(0x30,4);//读电机电压，32ms超时
 18C8 24E0              ldi R18,4
 18CA 30E0              ldi R19,0
 18CC 00E3              ldi R16,48
 18CE 0E944202          xcall _SendUart1
 18D2                   .dbline 1091
 18D2           ;                                               T_dat|=Uart1RxData[0];
 18D2 2090F601          lds R2,_Uart1RxData
 18D6 3324              clr R3
 18D8 4090E101          lds R4,_T_dat
 18DC 5090E201          lds R5,_T_dat+1
 18E0 4228              or R4,R2
 18E2 5328              or R5,R3
 18E4 5092E201          sts _T_dat+1,R5
 18E8 4092E101          sts _T_dat,R4
 18EC                   .dbline 1093
 18EC           ; 
 18EC           ;                                               SendManchester();   
 18EC 0E94151B          xcall _SendManchester
 18F0                   .dbline 1094
 18F0           ;                                               break;
 18F0 0C94081B          xjmp L502
 18F4           L525:
 18F4                   .dbline 1097
 18F4           ; 
 18F4           ;                                       case 0x40: //采集板压力和温度
 18F4           ;                                           if(R_dat==0x4f)// 采集第2个压力温度的数字量，再多发2帧共4字节
 18F4 8091DF01          lds R24,_R_dat
 18F8 9091E001          lds R25,_R_dat+1
 18FC 8F34              cpi R24,79
 18FE E0E0              ldi R30,0
 1900 9E07              cpc R25,R30
 1902 29F5              brne L526
 1904           X178:
 1904                   .dbline 1098
 1904           ;                                               {
 1904                   .dbline 1099
 1904           ;                                                 Delay_ms(30);//等总线稳定，否则会影响到内部总线，则第一个字节收不正常
 1904 0EE1              ldi R16,30
 1906 10E0              ldi R17,0
 1908 FED8              xcall _Delay_ms
 190A                   .dbline 1101
 190A           ;                                                 
 190A           ;                                                 SampleTPS(R_dat);//最快5ms返回，没有挂压力短节时最多20ms返回
 190A 0091DF01          lds R16,_R_dat
 190E 1091E001          lds R17,_R_dat+1
 1912 0E94E403          xcall _SampleTPS
 1916                   .dbline 1103
 1916           ;                                                 
 1916           ;                                                 Delay_ms(30); 
 1916 0EE1              ldi R16,30
 1918 10E0              ldi R17,0
 191A F5D8              xcall _Delay_ms
 191C                   .dbline 1104
 191C           ;                                                 T_dat=TPS_PData;
 191C 2090DD01          lds R2,_TPS_PData
 1920 3090DE01          lds R3,_TPS_PData+1
 1924 3092E201          sts _T_dat+1,R3
 1928 2092E101          sts _T_dat,R2
 192C                   .dbline 1105
 192C           ;                                                 SendManchester();//压力2
 192C 0E94151B          xcall _SendManchester
 1930                   .dbline 1107
 1930           ;                                                 
 1930           ;                                                 Delay_ms(30); 
 1930 0EE1              ldi R16,30
 1932 10E0              ldi R17,0
 1934 E8D8              xcall _Delay_ms
 1936                   .dbline 1108
 1936           ;                                                 T_dat=TPS_TData;
 1936 2090DB01          lds R2,_TPS_TData
 193A 3090DC01          lds R3,_TPS_TData+1
 193E 3092E201          sts _T_dat+1,R3
 1942 2092E101          sts _T_dat,R2
 1946                   .dbline 1109
 1946           ;                                                 SendManchester();//温度2
 1946 0E94151B          xcall _SendManchester
 194A                   .dbline 1110
 194A           ;                                               }
 194A 0C94081B          xjmp L502
 194E           L526:
 194E                   .dbline 1112
 194E           ;                                               else//采集流量板上的压力温度
 194E           ;                                               {
 194E                   .dbline 1113
 194E           ;                                                 Uart0TxData[0]=0xE8;
 194E 88EE              ldi R24,232
 1950 80932F00          sts _Uart0TxData,R24
 1954                   .dbline 1114
 1954           ;                                                 Uart0TxData[1]=0x40;
 1954 80E4              ldi R24,64
 1956 80933000          sts _Uart0TxData+1,R24
 195A                   .dbline 1115
 195A           ;                                                 Uart0TxData[2]=0x89;
 195A 89E8              ldi R24,137
 195C 80933100          sts _Uart0TxData+2,R24
 1960                   .dbline 1116
 1960           ;                                                 Uart0TxData[3]=9;
 1960 89E0              ldi R24,9
 1962 80933200          sts _Uart0TxData+3,R24
 1966                   .dbline 1117
 1966           ;                                                 SendUart0_2(9,50);//流量板直读检测，超时400ms
 1966 22E3              ldi R18,50
 1968 30E0              ldi R19,0
 196A 09E0              ldi R16,9
 196C 0E947A04          xcall _SendUart0_2
 1970                   .dbline 1119
 1970           ;                                                 
 1970           ;                                                if((Uart0RxCounter==16)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x0c)&&(Uart0RxData[2]==0x89))//绝对时间差法流量板，严格按帧格式返回16字节（含12字节有效数据）
 1970 8091FA01          lds R24,_Uart0RxCounter
 1974 8031              cpi R24,16
 1976 09F0              breq X284
 1978 54C0              xjmp L531
 197A           X284:
 197A           X179:
 197A 8091FB01          lds R24,_Uart0RxData
 197E 8535              cpi R24,85
 1980 09F0              breq X285
 1982 4FC0              xjmp L531
 1984           X285:
 1984           X180:
 1984 8091FC01          lds R24,_Uart0RxData+1
 1988 8C30              cpi R24,12
 198A 09F0              breq X286
 198C 4AC0              xjmp L531
 198E           X286:
 198E           X181:
 198E 8091FD01          lds R24,_Uart0RxData+2
 1992 8938              cpi R24,137
 1994 09F0              breq X287
 1996 45C0              xjmp L531
 1998           X287:
 1998           X182:
 1998                   .dbline 1120
 1998           ;                                                {
 1998                   .dbline 1121
 1998           ;                                                 T_dat=Uart0RxData[4];
 1998 2090FF01          lds R2,_Uart0RxData+4
 199C 3324              clr R3
 199E 3092E201          sts _T_dat+1,R3
 19A2 2092E101          sts _T_dat,R2
 19A6                   .dbline 1122
 19A6           ;                                                 T_dat<<=8;
 19A6 2090E101          lds R2,_T_dat
 19AA 3090E201          lds R3,_T_dat+1
 19AE 322C              mov R3,R2
 19B0 2224              clr R2
 19B2 3092E201          sts _T_dat+1,R3
 19B6 2092E101          sts _T_dat,R2
 19BA                   .dbline 1123
 19BA           ;                                                 T_dat|=Uart0RxData[3];
 19BA 2090FE01          lds R2,_Uart0RxData+3
 19BE 3324              clr R3
 19C0 4090E101          lds R4,_T_dat
 19C4 5090E201          lds R5,_T_dat+1
 19C8 4228              or R4,R2
 19CA 5328              or R5,R3
 19CC 5092E201          sts _T_dat+1,R5
 19D0 4092E101          sts _T_dat,R4
 19D4                   .dbline 1124
 19D4           ;                                                 SendManchester();//压力
 19D4 0E94151B          xcall _SendManchester
 19D8                   .dbline 1126
 19D8           ; 
 19D8           ;                                                 Delay_ms(30); 
 19D8 0EE1              ldi R16,30
 19DA 10E0              ldi R17,0
 19DC 94D8              xcall _Delay_ms
 19DE                   .dbline 1127
 19DE           ;                                                 T_dat=Uart0RxData[6];
 19DE 20900102          lds R2,_Uart0RxData+6
 19E2 3324              clr R3
 19E4 3092E201          sts _T_dat+1,R3
 19E8 2092E101          sts _T_dat,R2
 19EC                   .dbline 1128
 19EC           ;                                                 T_dat<<=8;
 19EC 2090E101          lds R2,_T_dat
 19F0 3090E201          lds R3,_T_dat+1
 19F4 322C              mov R3,R2
 19F6 2224              clr R2
 19F8 3092E201          sts _T_dat+1,R3
 19FC 2092E101          sts _T_dat,R2
 1A00                   .dbline 1129
 1A00           ;                                                 T_dat|=Uart0RxData[5];
 1A00 20900002          lds R2,_Uart0RxData+5
 1A04 3324              clr R3
 1A06 4090E101          lds R4,_T_dat
 1A0A 5090E201          lds R5,_T_dat+1
 1A0E 4228              or R4,R2
 1A10 5328              or R5,R3
 1A12 5092E201          sts _T_dat+1,R5
 1A16 4092E101          sts _T_dat,R4
 1A1A                   .dbline 1130
 1A1A           ;                                                 SendManchester();//温度
 1A1A 0E94151B          xcall _SendManchester
 1A1E                   .dbline 1131
 1A1E           ;                                                }
 1A1E 0C94081B          xjmp L502
 1A22           L531:
 1A22                   .dbline 1133
 1A22           ;                                                else//常规流量板
 1A22           ;                                                {
 1A22                   .dbline 1134
 1A22           ;                                                 T_dat=Uart0RxData[1];
 1A22 2090FC01          lds R2,_Uart0RxData+1
 1A26 3324              clr R3
 1A28 3092E201          sts _T_dat+1,R3
 1A2C 2092E101          sts _T_dat,R2
 1A30                   .dbline 1135
 1A30           ;                                                 T_dat<<=8;
 1A30 2090E101          lds R2,_T_dat
 1A34 3090E201          lds R3,_T_dat+1
 1A38 322C              mov R3,R2
 1A3A 2224              clr R2
 1A3C 3092E201          sts _T_dat+1,R3
 1A40 2092E101          sts _T_dat,R2
 1A44                   .dbline 1136
 1A44           ;                                                 T_dat|=Uart0RxData[0];
 1A44 2090FB01          lds R2,_Uart0RxData
 1A48 3324              clr R3
 1A4A 4090E101          lds R4,_T_dat
 1A4E 5090E201          lds R5,_T_dat+1
 1A52 4228              or R4,R2
 1A54 5328              or R5,R3
 1A56 5092E201          sts _T_dat+1,R5
 1A5A 4092E101          sts _T_dat,R4
 1A5E                   .dbline 1137
 1A5E           ;                                                 SendManchester();//压力
 1A5E 0E94151B          xcall _SendManchester
 1A62                   .dbline 1139
 1A62           ; 
 1A62           ;                                                 Delay_ms(30); 
 1A62 0EE1              ldi R16,30
 1A64 10E0              ldi R17,0
 1A66 4FD8              xcall _Delay_ms
 1A68                   .dbline 1140
 1A68           ;                                                 T_dat=Uart0RxData[3];
 1A68 2090FE01          lds R2,_Uart0RxData+3
 1A6C 3324              clr R3
 1A6E 3092E201          sts _T_dat+1,R3
 1A72 2092E101          sts _T_dat,R2
 1A76                   .dbline 1141
 1A76           ;                                                 T_dat<<=8;
 1A76 2090E101          lds R2,_T_dat
 1A7A 3090E201          lds R3,_T_dat+1
 1A7E 322C              mov R3,R2
 1A80 2224              clr R2
 1A82 3092E201          sts _T_dat+1,R3
 1A86 2092E101          sts _T_dat,R2
 1A8A                   .dbline 1142
 1A8A           ;                                                 T_dat|=Uart0RxData[2];
 1A8A 2090FD01          lds R2,_Uart0RxData+2
 1A8E 3324              clr R3
 1A90 4090E101          lds R4,_T_dat
 1A94 5090E201          lds R5,_T_dat+1
 1A98 4228              or R4,R2
 1A9A 5328              or R5,R3
 1A9C 5092E201          sts _T_dat+1,R5
 1AA0 4092E101          sts _T_dat,R4
 1AA4                   .dbline 1143
 1AA4           ;                                                 SendManchester();//温度
 1AA4 0E94151B          xcall _SendManchester
 1AA8                   .dbline 1144
 1AA8           ;                                                }
 1AA8                   .dbline 1145
 1AA8           ;                                               }
 1AA8                   .dbline 1147
 1AA8           ;                                               
 1AA8           ;                                               break;
 1AA8 0C94081B          xjmp L502
 1AAC           L542:
 1AAC                   .dbline 1151
 1AAC           ; 
 1AAC           ;                                       case 0x50://流量采样                                                     
 1AAC           ; 
 1AAC           ;                                               Uart0TxData[0]=0xE8;
 1AAC 88EE              ldi R24,232
 1AAE 80932F00          sts _Uart0TxData,R24
 1AB2                   .dbline 1152
 1AB2           ;                                               Uart0TxData[1]=0x40;
 1AB2 80E4              ldi R24,64
 1AB4 80933000          sts _Uart0TxData+1,R24
 1AB8                   .dbline 1153
 1AB8           ;                                               Uart0TxData[2]=0x89;
 1AB8 89E8              ldi R24,137
 1ABA 80933100          sts _Uart0TxData+2,R24
 1ABE                   .dbline 1154
 1ABE           ;                                               Uart0TxData[3]=9;
 1ABE 89E0              ldi R24,9
 1AC0 80933200          sts _Uart0TxData+3,R24
 1AC4                   .dbline 1155
 1AC4           ;                                               SendUart0_2(9,50);//流量板直读检测，超时400ms
 1AC4 22E3              ldi R18,50
 1AC6 30E0              ldi R19,0
 1AC8 09E0              ldi R16,9
 1ACA 0E947A04          xcall _SendUart0_2
 1ACE                   .dbline 1157
 1ACE           ;                                               
 1ACE           ;                                               if((Uart0RxCounter==16)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x0c)&&(Uart0RxData[2]==0x89))//绝对时间差法流量板，严格按帧格式返回16字节（含12字节有效数据）
 1ACE 8091FA01          lds R24,_Uart0RxCounter
 1AD2 8031              cpi R24,16
 1AD4 09F0              breq X288
 1AD6 94C0              xjmp L546
 1AD8           X288:
 1AD8           X183:
 1AD8 8091FB01          lds R24,_Uart0RxData
 1ADC 8535              cpi R24,85
 1ADE 09F0              breq X289
 1AE0 8FC0              xjmp L546
 1AE2           X289:
 1AE2           X184:
 1AE2 8091FC01          lds R24,_Uart0RxData+1
 1AE6 8C30              cpi R24,12
 1AE8 09F0              breq X290
 1AEA 8AC0              xjmp L546
 1AEC           X290:
 1AEC           X185:
 1AEC 8091FD01          lds R24,_Uart0RxData+2
 1AF0 8938              cpi R24,137
 1AF2 09F0              breq X291
 1AF4 85C0              xjmp L546
 1AF6           X291:
 1AF6           X186:
 1AF6                   .dbline 1158
 1AF6           ;                                               {
 1AF6                   .dbline 1160
 1AF6           ;                                               //顺流时间，浮点数
 1AF6           ;                                               myFIB.b[0]=Uart0RxData[7];
 1AF6 20900202          lds R2,_Uart0RxData+7
 1AFA 20924802          sts _myFIB,R2
 1AFE                   .dbline 1161
 1AFE           ;                                               myFIB.b[1]=Uart0RxData[8];
 1AFE 20900302          lds R2,_Uart0RxData+8
 1B02 20924902          sts _myFIB+1,R2
 1B06                   .dbline 1162
 1B06           ;                                               myFIB.b[2]=Uart0RxData[9];
 1B06 20900402          lds R2,_Uart0RxData+9
 1B0A 20924A02          sts _myFIB+2,R2
 1B0E                   .dbline 1163
 1B0E           ;                                               myFIB.b[3]=Uart0RxData[10];
 1B0E 20900502          lds R2,_Uart0RxData+10
 1B12 20924B02          sts _myFIB+3,R2
 1B16                   .dbline 1165
 1B16           ;                                                
 1B16           ;                                               T_dat=myFIB.i[1];
 1B16 20904A02          lds R2,_myFIB+2
 1B1A 30904B02          lds R3,_myFIB+2+1
 1B1E 3092E201          sts _T_dat+1,R3
 1B22 2092E101          sts _T_dat,R2
 1B26                   .dbline 1166
 1B26           ;                                               SendManchester();//顺流时间
 1B26 0E94151B          xcall _SendManchester
 1B2A                   .dbline 1167
 1B2A           ;                                               crc16array[0]=(unsigned char)(T_dat);
 1B2A 2090E101          lds R2,_T_dat
 1B2E 3090E201          lds R3,_T_dat+1
 1B32 20920000          sts _crc16array,R2
 1B36                   .dbline 1168
 1B36           ;                                               crc16array[1]=(unsigned char)(T_dat>>8);
 1B36 232C              mov R2,R3
 1B38 3324              clr R3
 1B3A 27FC              sbrc R2,7
 1B3C 3094              com R3
 1B3E 20920100          sts _crc16array+1,R2
 1B42                   .dbline 1170
 1B42           ; 
 1B42           ;                                               Delay_ms(30);   
 1B42 0EE1              ldi R16,30
 1B44 10E0              ldi R17,0
 1B46 0E948305          xcall _Delay_ms
 1B4A                   .dbline 1171
 1B4A           ;                                               T_dat=myFIB.i[0];
 1B4A 20904802          lds R2,_myFIB
 1B4E 30904902          lds R3,_myFIB+1
 1B52 3092E201          sts _T_dat+1,R3
 1B56 2092E101          sts _T_dat,R2
 1B5A                   .dbline 1172
 1B5A           ;                                               SendManchester();//顺流时间
 1B5A 0E94151B          xcall _SendManchester
 1B5E                   .dbline 1173
 1B5E           ;                                               crc16array[2]=(unsigned char)(T_dat);
 1B5E 2090E101          lds R2,_T_dat
 1B62 3090E201          lds R3,_T_dat+1
 1B66 20920200          sts _crc16array+2,R2
 1B6A                   .dbline 1174
 1B6A           ;                                               crc16array[3]=(unsigned char)(T_dat>>8);
 1B6A 232C              mov R2,R3
 1B6C 3324              clr R3
 1B6E 27FC              sbrc R2,7
 1B70 3094              com R3
 1B72 20920300          sts _crc16array+3,R2
 1B76                   .dbline 1176
 1B76           ; 
 1B76           ;                                               Delay_ms(30);   
 1B76 0EE1              ldi R16,30
 1B78 10E0              ldi R17,0
 1B7A 0E948305          xcall _Delay_ms
 1B7E                   .dbline 1179
 1B7E           ; 
 1B7E           ;                                               //逆流时间，浮点数
 1B7E           ;                                               myFIB.b[0]=Uart0RxData[11];
 1B7E 20900602          lds R2,_Uart0RxData+11
 1B82 20924802          sts _myFIB,R2
 1B86                   .dbline 1180
 1B86           ;                                               myFIB.b[1]=Uart0RxData[12];
 1B86 20900702          lds R2,_Uart0RxData+12
 1B8A 20924902          sts _myFIB+1,R2
 1B8E                   .dbline 1181
 1B8E           ;                                               myFIB.b[2]=Uart0RxData[13];
 1B8E 20900802          lds R2,_Uart0RxData+13
 1B92 20924A02          sts _myFIB+2,R2
 1B96                   .dbline 1182
 1B96           ;                                               myFIB.b[3]=Uart0RxData[14];
 1B96 20900902          lds R2,_Uart0RxData+14
 1B9A 20924B02          sts _myFIB+3,R2
 1B9E                   .dbline 1184
 1B9E           ; 
 1B9E           ;                                               T_dat=myFIB.i[1];
 1B9E 20904A02          lds R2,_myFIB+2
 1BA2 30904B02          lds R3,_myFIB+2+1
 1BA6 3092E201          sts _T_dat+1,R3
 1BAA 2092E101          sts _T_dat,R2
 1BAE                   .dbline 1185
 1BAE           ;                                               SendManchester();//逆流时间
 1BAE 0E94151B          xcall _SendManchester
 1BB2                   .dbline 1186
 1BB2           ;                                               crc16array[4]=(unsigned char)(T_dat);
 1BB2 2090E101          lds R2,_T_dat
 1BB6 3090E201          lds R3,_T_dat+1
 1BBA 20920400          sts _crc16array+4,R2
 1BBE                   .dbline 1187
 1BBE           ;                                               crc16array[5]=(unsigned char)(T_dat>>8);
 1BBE 232C              mov R2,R3
 1BC0 3324              clr R3
 1BC2 27FC              sbrc R2,7
 1BC4 3094              com R3
 1BC6 20920500          sts _crc16array+5,R2
 1BCA                   .dbline 1190
 1BCA           ; 
 1BCA           ; 
 1BCA           ;                                               Delay_ms(30);   
 1BCA 0EE1              ldi R16,30
 1BCC 10E0              ldi R17,0
 1BCE 0E948305          xcall _Delay_ms
 1BD2                   .dbline 1191
 1BD2           ;                                               T_dat=myFIB.i[0];
 1BD2 20904802          lds R2,_myFIB
 1BD6 30904902          lds R3,_myFIB+1
 1BDA 3092E201          sts _T_dat+1,R3
 1BDE 2092E101          sts _T_dat,R2
 1BE2                   .dbline 1192
 1BE2           ;                                               SendManchester();//逆流时间
 1BE2 0E94151B          xcall _SendManchester
 1BE6                   .dbline 1193
 1BE6           ;                                               crc16array[6]=(unsigned char)(T_dat);
 1BE6 2090E101          lds R2,_T_dat
 1BEA 3090E201          lds R3,_T_dat+1
 1BEE 20920600          sts _crc16array+6,R2
 1BF2                   .dbline 1194
 1BF2           ;                                               crc16array[7]=(unsigned char)(T_dat>>8);
 1BF2 232C              mov R2,R3
 1BF4 3324              clr R3
 1BF6 27FC              sbrc R2,7
 1BF8 3094              com R3
 1BFA 20920700          sts _crc16array+7,R2
 1BFE                   .dbline 1195
 1BFE           ;                                               }
 1BFE 0AC1              xjmp L547
 1C00           L546:
 1C00                   .dbline 1197
 1C00           ;                                               else // 常规流量采样
 1C00           ;                                               {
 1C00                   .dbline 1198
 1C00           ;                                               lfib=Uart0RxData[5];
 1C00 20900002          lds R2,_Uart0RxData+5
 1C04 3324              clr R3
 1C06 4424              clr R4
 1C08 5524              clr R5
 1C0A 30922300          sts _lfib+1,R3
 1C0E 20922200          sts _lfib,R2
 1C12 50922500          sts _lfib+2+1,R5
 1C16 40922400          sts _lfib+2,R4
 1C1A                   .dbline 1199
 1C1A           ;                                               lfib<<=8;
 1C1A 88E0              ldi R24,8
 1C1C 90E0              ldi R25,0
 1C1E 20912400          lds R18,_lfib+2
 1C22 30912500          lds R19,_lfib+2+1
 1C26 00912200          lds R16,_lfib
 1C2A 10912300          lds R17,_lfib+1
 1C2E 8A93              st -y,R24
 1C30 0E940000          xcall lsl32
 1C34 10932300          sts _lfib+1,R17
 1C38 00932200          sts _lfib,R16
 1C3C 30932500          sts _lfib+2+1,R19
 1C40 20932400          sts _lfib+2,R18
 1C44                   .dbline 1200
 1C44           ;                                               lfib|=Uart0RxData[4];
 1C44 2090FF01          lds R2,_Uart0RxData+4
 1C48 3324              clr R3
 1C4A 4424              clr R4
 1C4C 5524              clr R5
 1C4E 3801              movw R6,R16
 1C50 4901              movw R8,R18
 1C52 6228              or R6,R2
 1C54 7328              or R7,R3
 1C56 8428              or R8,R4
 1C58 9528              or R9,R5
 1C5A 70922300          sts _lfib+1,R7
 1C5E 60922200          sts _lfib,R6
 1C62 90922500          sts _lfib+2+1,R9
 1C66 80922400          sts _lfib+2,R8
 1C6A                   .dbline 1201
 1C6A           ;                                               lfib&=0x0000ffff;
 1C6A 4FEF              ldi R20,255
 1C6C 5FEF              ldi R21,255
 1C6E 60E0              ldi R22,0
 1C70 70E0              ldi R23,0
 1C72 1301              movw R2,R6
 1C74 2401              movw R4,R8
 1C76 2422              and R2,R20
 1C78 3522              and R3,R21
 1C7A 4622              and R4,R22
 1C7C 5722              and R5,R23
 1C7E 30922300          sts _lfib+1,R3
 1C82 20922200          sts _lfib,R2
 1C86 50922500          sts _lfib+2+1,R5
 1C8A 40922400          sts _lfib+2,R4
 1C8E                   .dbline 1202
 1C8E           ;                                               myFIB.f=(unsigned long)lfib; 
 1C8E 8101              movw R16,R2
 1C90 9201              movw R18,R4
 1C92 0E940000          xcall ulong2fp
 1C96 10934902          sts _myFIB+1,R17
 1C9A 00934802          sts _myFIB,R16
 1C9E 30934B02          sts _myFIB+2+1,R19
 1CA2 20934A02          sts _myFIB+2,R18
 1CA6                   .dbline 1204
 1CA6           ; 
 1CA6           ;                                               T_dat=myFIB.i[1];
 1CA6 20904A02          lds R2,_myFIB+2
 1CAA 30904B02          lds R3,_myFIB+2+1
 1CAE 3092E201          sts _T_dat+1,R3
 1CB2 2092E101          sts _T_dat,R2
 1CB6                   .dbline 1205
 1CB6           ;                                               SendManchester();//流量-时间
 1CB6 0E94151B          xcall _SendManchester
 1CBA                   .dbline 1206
 1CBA           ;                                               crc16array[0]=(unsigned char)(T_dat);
 1CBA 2090E101          lds R2,_T_dat
 1CBE 3090E201          lds R3,_T_dat+1
 1CC2 20920000          sts _crc16array,R2
 1CC6                   .dbline 1207
 1CC6           ;                                               crc16array[1]=(unsigned char)(T_dat>>8);
 1CC6 232C              mov R2,R3
 1CC8 3324              clr R3
 1CCA 27FC              sbrc R2,7
 1CCC 3094              com R3
 1CCE 20920100          sts _crc16array+1,R2
 1CD2                   .dbline 1209
 1CD2           ; 
 1CD2           ;                                               Delay_ms(30);   
 1CD2 0EE1              ldi R16,30
 1CD4 10E0              ldi R17,0
 1CD6 0E948305          xcall _Delay_ms
 1CDA                   .dbline 1210
 1CDA           ;                                               T_dat=myFIB.i[0];
 1CDA 20904802          lds R2,_myFIB
 1CDE 30904902          lds R3,_myFIB+1
 1CE2 3092E201          sts _T_dat+1,R3
 1CE6 2092E101          sts _T_dat,R2
 1CEA                   .dbline 1211
 1CEA           ;                                               SendManchester();//流量-时间
 1CEA 0E94151B          xcall _SendManchester
 1CEE                   .dbline 1212
 1CEE           ;                                               crc16array[2]=(unsigned char)(T_dat);
 1CEE 2090E101          lds R2,_T_dat
 1CF2 3090E201          lds R3,_T_dat+1
 1CF6 20920200          sts _crc16array+2,R2
 1CFA                   .dbline 1213
 1CFA           ;                                               crc16array[3]=(unsigned char)(T_dat>>8);
 1CFA 232C              mov R2,R3
 1CFC 3324              clr R3
 1CFE 27FC              sbrc R2,7
 1D00 3094              com R3
 1D02 20920300          sts _crc16array+3,R2
 1D06                   .dbline 1215
 1D06           ; 
 1D06           ;                                               Delay_ms(30);   
 1D06 0EE1              ldi R16,30
 1D08 10E0              ldi R17,0
 1D0A 0E948305          xcall _Delay_ms
 1D0E                   .dbline 1217
 1D0E           ; 
 1D0E           ;                                               lfib=Uart0RxData[7];
 1D0E 20900202          lds R2,_Uart0RxData+7
 1D12 3324              clr R3
 1D14 4424              clr R4
 1D16 5524              clr R5
 1D18 30922300          sts _lfib+1,R3
 1D1C 20922200          sts _lfib,R2
 1D20 50922500          sts _lfib+2+1,R5
 1D24 40922400          sts _lfib+2,R4
 1D28                   .dbline 1218
 1D28           ;                                               lfib<<=8;
 1D28 88E0              ldi R24,8
 1D2A 90E0              ldi R25,0
 1D2C 20912400          lds R18,_lfib+2
 1D30 30912500          lds R19,_lfib+2+1
 1D34 00912200          lds R16,_lfib
 1D38 10912300          lds R17,_lfib+1
 1D3C 8A93              st -y,R24
 1D3E 0E940000          xcall lsl32
 1D42 10932300          sts _lfib+1,R17
 1D46 00932200          sts _lfib,R16
 1D4A 30932500          sts _lfib+2+1,R19
 1D4E 20932400          sts _lfib+2,R18
 1D52                   .dbline 1219
 1D52           ;                                               lfib|=Uart0RxData[6];
 1D52 20900102          lds R2,_Uart0RxData+6
 1D56 3324              clr R3
 1D58 4424              clr R4
 1D5A 5524              clr R5
 1D5C 3801              movw R6,R16
 1D5E 4901              movw R8,R18
 1D60 6228              or R6,R2
 1D62 7328              or R7,R3
 1D64 8428              or R8,R4
 1D66 9528              or R9,R5
 1D68 70922300          sts _lfib+1,R7
 1D6C 60922200          sts _lfib,R6
 1D70 90922500          sts _lfib+2+1,R9
 1D74 80922400          sts _lfib+2,R8
 1D78                   .dbline 1220
 1D78           ;                                               lfib&=0x0000ffff;
 1D78 4FEF              ldi R20,255
 1D7A 5FEF              ldi R21,255
 1D7C 60E0              ldi R22,0
 1D7E 70E0              ldi R23,0
 1D80 1301              movw R2,R6
 1D82 2401              movw R4,R8
 1D84 2422              and R2,R20
 1D86 3522              and R3,R21
 1D88 4622              and R4,R22
 1D8A 5722              and R5,R23
 1D8C 30922300          sts _lfib+1,R3
 1D90 20922200          sts _lfib,R2
 1D94 50922500          sts _lfib+2+1,R5
 1D98 40922400          sts _lfib+2,R4
 1D9C                   .dbline 1221
 1D9C           ;                                               myFIB.f=(unsigned long)lfib; 
 1D9C 8101              movw R16,R2
 1D9E 9201              movw R18,R4
 1DA0 0E940000          xcall ulong2fp
 1DA4 10934902          sts _myFIB+1,R17
 1DA8 00934802          sts _myFIB,R16
 1DAC 30934B02          sts _myFIB+2+1,R19
 1DB0 20934A02          sts _myFIB+2,R18
 1DB4                   .dbline 1223
 1DB4           ; 
 1DB4           ;                                               T_dat=myFIB.i[1];
 1DB4 20904A02          lds R2,_myFIB+2
 1DB8 30904B02          lds R3,_myFIB+2+1
 1DBC 3092E201          sts _T_dat+1,R3
 1DC0 2092E101          sts _T_dat,R2
 1DC4                   .dbline 1224
 1DC4           ;                                               SendManchester();//流量-相位1
 1DC4 0E94151B          xcall _SendManchester
 1DC8                   .dbline 1225
 1DC8           ;                                               crc16array[4]=(unsigned char)(T_dat);
 1DC8 2090E101          lds R2,_T_dat
 1DCC 3090E201          lds R3,_T_dat+1
 1DD0 20920400          sts _crc16array+4,R2
 1DD4                   .dbline 1226
 1DD4           ;                                               crc16array[5]=(unsigned char)(T_dat>>8);
 1DD4 232C              mov R2,R3
 1DD6 3324              clr R3
 1DD8 27FC              sbrc R2,7
 1DDA 3094              com R3
 1DDC 20920500          sts _crc16array+5,R2
 1DE0                   .dbline 1229
 1DE0           ; 
 1DE0           ; 
 1DE0           ;                                               Delay_ms(30);   
 1DE0 0EE1              ldi R16,30
 1DE2 10E0              ldi R17,0
 1DE4 0E948305          xcall _Delay_ms
 1DE8                   .dbline 1230
 1DE8           ;                                               T_dat=myFIB.i[0];
 1DE8 20904802          lds R2,_myFIB
 1DEC 30904902          lds R3,_myFIB+1
 1DF0 3092E201          sts _T_dat+1,R3
 1DF4 2092E101          sts _T_dat,R2
 1DF8                   .dbline 1231
 1DF8           ;                                               SendManchester();//流量-相位2
 1DF8 0E94151B          xcall _SendManchester
 1DFC                   .dbline 1232
 1DFC           ;                                               crc16array[6]=(unsigned char)(T_dat);
 1DFC 2090E101          lds R2,_T_dat
 1E00 3090E201          lds R3,_T_dat+1
 1E04 20920600          sts _crc16array+6,R2
 1E08                   .dbline 1233
 1E08           ;                                               crc16array[7]=(unsigned char)(T_dat>>8);
 1E08 232C              mov R2,R3
 1E0A 3324              clr R3
 1E0C 27FC              sbrc R2,7
 1E0E 3094              com R3
 1E10 20920700          sts _crc16array+7,R2
 1E14                   .dbline 1234
 1E14           ;                                               }
 1E14           L547:
 1E14                   .dbline 1236
 1E14           ; 
 1E14           ;                                               Delay_ms(30);   
 1E14 0EE1              ldi R16,30
 1E16 10E0              ldi R17,0
 1E18 0E948305          xcall _Delay_ms
 1E1C                   .dbline 1237
 1E1C           ;                                               crc16(crc16array,8);//0.75ms
 1E1C 28E0              ldi R18,8
 1E1E 30E0              ldi R19,0
 1E20 00E0              ldi R16,<_crc16array
 1E22 10E0              ldi R17,>_crc16array
 1E24 0E945D1F          xcall _crc16
 1E28                   .dbline 1238
 1E28           ;                                               T_dat=crc16hi;
 1E28 20902100          lds R2,_crc16hi
 1E2C 3324              clr R3
 1E2E 3092E201          sts _T_dat+1,R3
 1E32 2092E101          sts _T_dat,R2
 1E36                   .dbline 1239
 1E36           ;                                               T_dat<<=8;
 1E36 2090E101          lds R2,_T_dat
 1E3A 3090E201          lds R3,_T_dat+1
 1E3E 322C              mov R3,R2
 1E40 2224              clr R2
 1E42 3092E201          sts _T_dat+1,R3
 1E46 2092E101          sts _T_dat,R2
 1E4A                   .dbline 1240
 1E4A           ;                                               T_dat|=crc16lo;   
 1E4A 20902000          lds R2,_crc16lo
 1E4E 3324              clr R3
 1E50 4090E101          lds R4,_T_dat
 1E54 5090E201          lds R5,_T_dat+1
 1E58 4228              or R4,R2
 1E5A 5328              or R5,R3
 1E5C 5092E201          sts _T_dat+1,R5
 1E60 4092E101          sts _T_dat,R4
 1E64                   .dbline 1241
 1E64           ;                                               SendManchester();//上传CRC校验共2字节
 1E64 0E94151B          xcall _SendManchester
 1E68                   .dbline 1242
 1E68           ;                                               break;
 1E68 0C94081B          xjmp L502
 1E6C           L586:
 1E6C                   .dbline 1246
 1E6C           ;                                       
 1E6C           ;                                       //收放电机 
 1E6C           ;                                       case 0x60:  
 1E6C           ;                                               if( !(((R_dat)==0x61)  || ((R_dat)==0x62) ) )//既不是正转，也不是反转，则立即返回且不响应上位机
 1E6C A090DF01          lds R10,_R_dat
 1E70 B090E001          lds R11,_R_dat+1
 1E74 C501              movw R24,R10
 1E76 8136              cpi R24,97
 1E78 E0E0              ldi R30,0
 1E7A 9E07              cpc R25,R30
 1E7C 31F0              breq L587
 1E7E           X187:
 1E7E 8236              cpi R24,98
 1E80 E0E0              ldi R30,0
 1E82 9E07              cpc R25,R30
 1E84 11F0              breq L587
 1E86           X188:
 1E86                   .dbline 1247
 1E86           ;                                                       break;
 1E86 0C94081B          xjmp L502
 1E8A           L587:
 1E8A                   .dbline 1249
 1E8A           ; 
 1E8A           ;                                           SendUart1(R_dat,200);//1600ms超时
 1E8A 28EC              ldi R18,200
 1E8C 30E0              ldi R19,0
 1E8E 0091DF01          lds R16,_R_dat
 1E92 1091E001          lds R17,_R_dat+1
 1E96 0E944202          xcall _SendUart1
 1E9A                   .dbline 1250
 1E9A           ;                                               T_dat=Uart1RxData[1];
 1E9A 2090F701          lds R2,_Uart1RxData+1
 1E9E 3324              clr R3
 1EA0 3092E201          sts _T_dat+1,R3
 1EA4 2092E101          sts _T_dat,R2
 1EA8                   .dbline 1251
 1EA8           ;                                               T_dat<<=8;
 1EA8 2090E101          lds R2,_T_dat
 1EAC 3090E201          lds R3,_T_dat+1
 1EB0 322C              mov R3,R2
 1EB2 2224              clr R2
 1EB4 3092E201          sts _T_dat+1,R3
 1EB8 2092E101          sts _T_dat,R2
 1EBC                   .dbline 1252
 1EBC           ;                                               T_dat|=Uart1RxData[0];//返回电机状态
 1EBC 2090F601          lds R2,_Uart1RxData
 1EC0 3324              clr R3
 1EC2 4090E101          lds R4,_T_dat
 1EC6 5090E201          lds R5,_T_dat+1
 1ECA 4228              or R4,R2
 1ECC 5328              or R5,R3
 1ECE 5092E201          sts _T_dat+1,R5
 1ED2 4092E101          sts _T_dat,R4
 1ED6                   .dbline 1253
 1ED6           ;                                               SendManchester();        
 1ED6 0E94151B          xcall _SendManchester
 1EDA                   .dbline 1255
 1EDA           ; 
 1EDA           ;                                               break;
 1EDA 0C94081B          xjmp L502
 1EDE           L590:
 1EDE                   .dbline 1258
 1EDE           ; 
 1EDE           ;                                       case 0x70://调节电机   
 1EDE           ;                                               if( ((R_dat)<0x71)  || ((R_dat)>0x7c)  )//既不是调大，也不是调小，也不微调大，也不是微调小，则立即返回且不响应上位机
 1EDE A090DF01          lds R10,_R_dat
 1EE2 B090E001          lds R11,_R_dat+1
 1EE6 C501              movw R24,R10
 1EE8 8137              cpi R24,113
 1EEA E0E0              ldi R30,0
 1EEC 9E07              cpc R25,R30
 1EEE 2CF0              brlt L593
 1EF0           X189:
 1EF0 8CE7              ldi R24,124
 1EF2 90E0              ldi R25,0
 1EF4 8A15              cp R24,R10
 1EF6 9B05              cpc R25,R11
 1EF8 14F4              brge L591
 1EFA           X190:
 1EFA           L593:
 1EFA                   .dbline 1259
 1EFA           ;                                               break;
 1EFA 0C94081B          xjmp L502
 1EFE           L591:
 1EFE                   .dbline 1261
 1EFE           ; 
 1EFE           ;                                       SendUart1(R_dat,200);//1600ms超时
 1EFE 28EC              ldi R18,200
 1F00 30E0              ldi R19,0
 1F02 0091DF01          lds R16,_R_dat
 1F06 1091E001          lds R17,_R_dat+1
 1F0A 0E944202          xcall _SendUart1
 1F0E                   .dbline 1262
 1F0E           ;                                               T_dat=Uart1RxData[1];
 1F0E 2090F701          lds R2,_Uart1RxData+1
 1F12 3324              clr R3
 1F14 3092E201          sts _T_dat+1,R3
 1F18 2092E101          sts _T_dat,R2
 1F1C                   .dbline 1263
 1F1C           ;                                               T_dat<<=8;
 1F1C 2090E101          lds R2,_T_dat
 1F20 3090E201          lds R3,_T_dat+1
 1F24 322C              mov R3,R2
 1F26 2224              clr R2
 1F28 3092E201          sts _T_dat+1,R3
 1F2C 2092E101          sts _T_dat,R2
 1F30                   .dbline 1264
 1F30           ;                                               T_dat|=Uart1RxData[0];
 1F30 2090F601          lds R2,_Uart1RxData
 1F34 3324              clr R3
 1F36 4090E101          lds R4,_T_dat
 1F3A 5090E201          lds R5,_T_dat+1
 1F3E 4228              or R4,R2
 1F40 5328              or R5,R3
 1F42 5092E201          sts _T_dat+1,R5
 1F46 4092E101          sts _T_dat,R4
 1F4A                   .dbline 1265
 1F4A           ;                                               SendManchester();        
 1F4A 0E94151B          xcall _SendManchester
 1F4E                   .dbline 1266
 1F4E           ;                                               break;
 1F4E 0C94081B          xjmp L502
 1F52           L595:
 1F52                   .dbline 1269
 1F52           ; 
 1F52           ;                                       case 0x80://电机相关
 1F52           ;                                               if(R_dat==0x80)//只开电机电源，不开电机
 1F52 8091DF01          lds R24,_R_dat
 1F56 9091E001          lds R25,_R_dat+1
 1F5A 8038              cpi R24,128
 1F5C E0E0              ldi R30,0
 1F5E 9E07              cpc R25,R30
 1F60 81F4              brne L596
 1F62           X191:
 1F62                   .dbline 1270
 1F62           ;                                               {                 
 1F62                   .dbline 1271
 1F62           ;                                                       SendUart1(0x80,4);//32ms超时
 1F62 24E0              ldi R18,4
 1F64 30E0              ldi R19,0
 1F66 00E8              ldi R16,128
 1F68 0E944202          xcall _SendUart1
 1F6C                   .dbline 1272
 1F6C           ;                                                   T_dat=Uart1RxData[0];
 1F6C 2090F601          lds R2,_Uart1RxData
 1F70 3324              clr R3
 1F72 3092E201          sts _T_dat+1,R3
 1F76 2092E101          sts _T_dat,R2
 1F7A                   .dbline 1273
 1F7A           ;                                                       SendManchester();
 1F7A 0E94151B          xcall _SendManchester
 1F7E                   .dbline 1274
 1F7E           ;                                               }         
 1F7E 0C94081B          xjmp L502
 1F82           L596:
 1F82                   .dbline 1275
 1F82           ;                                               else if(R_dat==0x81)//获取电机状态      
 1F82 8091DF01          lds R24,_R_dat
 1F86 9091E001          lds R25,_R_dat+1
 1F8A 8138              cpi R24,129
 1F8C E0E0              ldi R30,0
 1F8E 9E07              cpc R25,R30
 1F90 09F0              breq X292
 1F92 4BC0              xjmp L598
 1F94           X292:
 1F94           X192:
 1F94                   .dbline 1276
 1F94           ;                                               { 
 1F94                   .dbline 1277
 1F94           ;                                                   SendUart1(0x81,4);//32ms超时
 1F94 24E0              ldi R18,4
 1F96 30E0              ldi R19,0
 1F98 01E8              ldi R16,129
 1F9A 0E944202          xcall _SendUart1
 1F9E                   .dbline 1280
 1F9E           ;                                               
 1F9E           ;                                                       //先处理收放电机
 1F9E           ;                                                       T_dat=Uart1RxData[1];
 1F9E 2090F701          lds R2,_Uart1RxData+1
 1FA2 3324              clr R3
 1FA4 3092E201          sts _T_dat+1,R3
 1FA8 2092E101          sts _T_dat,R2
 1FAC                   .dbline 1281
 1FAC           ;                                                   T_dat<<=8;
 1FAC 2090E101          lds R2,_T_dat
 1FB0 3090E201          lds R3,_T_dat+1
 1FB4 322C              mov R3,R2
 1FB6 2224              clr R2
 1FB8 3092E201          sts _T_dat+1,R3
 1FBC 2092E101          sts _T_dat,R2
 1FC0                   .dbline 1282
 1FC0           ;                                                   T_dat|=Uart1RxData[0];
 1FC0 2090F601          lds R2,_Uart1RxData
 1FC4 3324              clr R3
 1FC6 4090E101          lds R4,_T_dat
 1FCA 5090E201          lds R5,_T_dat+1
 1FCE 4228              or R4,R2
 1FD0 5328              or R5,R3
 1FD2 5092E201          sts _T_dat+1,R5
 1FD6 4092E101          sts _T_dat,R4
 1FDA                   .dbline 1283
 1FDA           ;                                                       SendManchester();
 1FDA 0E94151B          xcall _SendManchester
 1FDE                   .dbline 1286
 1FDE           ; 
 1FDE           ;                                                       //再处理调节电机 
 1FDE           ;                                                       Delay_ms(30);//延迟10ms  
 1FDE 0EE1              ldi R16,30
 1FE0 10E0              ldi R17,0
 1FE2 0E948305          xcall _Delay_ms
 1FE6                   .dbline 1287
 1FE6           ;                                                       T_dat=Uart1RxData[3];
 1FE6 2090F901          lds R2,_Uart1RxData+3
 1FEA 3324              clr R3
 1FEC 3092E201          sts _T_dat+1,R3
 1FF0 2092E101          sts _T_dat,R2
 1FF4                   .dbline 1288
 1FF4           ;                                                   T_dat<<=8;
 1FF4 2090E101          lds R2,_T_dat
 1FF8 3090E201          lds R3,_T_dat+1
 1FFC 322C              mov R3,R2
 1FFE 2224              clr R2
 2000 3092E201          sts _T_dat+1,R3
 2004 2092E101          sts _T_dat,R2
 2008                   .dbline 1289
 2008           ;                                                   T_dat|=Uart1RxData[2];
 2008 2090F801          lds R2,_Uart1RxData+2
 200C 3324              clr R3
 200E 4090E101          lds R4,_T_dat
 2012 5090E201          lds R5,_T_dat+1
 2016 4228              or R4,R2
 2018 5328              or R5,R3
 201A 5092E201          sts _T_dat+1,R5
 201E 4092E101          sts _T_dat,R4
 2022                   .dbline 1290
 2022           ;                                                       SendManchester();
 2022 0E94151B          xcall _SendManchester
 2026                   .dbline 1291
 2026           ;                                               }         
 2026 0C94081B          xjmp L502
 202A           L598:
 202A                   .dbline 1292
 202A           ;                                               else if(R_dat==0x82)//电机停止，同时停止二个电机
 202A 8091DF01          lds R24,_R_dat
 202E 9091E001          lds R25,_R_dat+1
 2032 8238              cpi R24,130
 2034 E0E0              ldi R30,0
 2036 9E07              cpc R25,R30
 2038 81F4              brne L603
 203A           X193:
 203A                   .dbline 1293
 203A           ;                                               {        
 203A                   .dbline 1294
 203A           ;                                                       SendUart1(0x82,30);//240ms超时
 203A 2EE1              ldi R18,30
 203C 30E0              ldi R19,0
 203E 02E8              ldi R16,130
 2040 0E944202          xcall _SendUart1
 2044                   .dbline 1295
 2044           ;                                                   T_dat=Uart1RxData[0];
 2044 2090F601          lds R2,_Uart1RxData
 2048 3324              clr R3
 204A 3092E201          sts _T_dat+1,R3
 204E 2092E101          sts _T_dat,R2
 2052                   .dbline 1296
 2052           ;                                                       SendManchester(); 
 2052 0E94151B          xcall _SendManchester
 2056                   .dbline 1297
 2056           ;                                               }
 2056 0C94081B          xjmp L502
 205A           L603:
 205A                   .dbline 1298
 205A           ;                                               else if(R_dat==0x83)//读取电机堵转电流档位和断路档位
 205A 8091DF01          lds R24,_R_dat
 205E 9091E001          lds R25,_R_dat+1
 2062 8338              cpi R24,131
 2064 E0E0              ldi R30,0
 2066 9E07              cpc R25,R30
 2068 39F5              brne L605
 206A           X194:
 206A                   .dbline 1299
 206A           ;                                               {
 206A                   .dbline 1300
 206A           ;                                                       SendUart1(0x83,4);//32ms超时
 206A 24E0              ldi R18,4
 206C 30E0              ldi R19,0
 206E 03E8              ldi R16,131
 2070 0E944202          xcall _SendUart1
 2074                   .dbline 1301
 2074           ;                                                       T_dat=Uart1RxData[1];
 2074 2090F701          lds R2,_Uart1RxData+1
 2078 3324              clr R3
 207A 3092E201          sts _T_dat+1,R3
 207E 2092E101          sts _T_dat,R2
 2082                   .dbline 1302
 2082           ;                                                   T_dat<<=8;
 2082 2090E101          lds R2,_T_dat
 2086 3090E201          lds R3,_T_dat+1
 208A 322C              mov R3,R2
 208C 2224              clr R2
 208E 3092E201          sts _T_dat+1,R3
 2092 2092E101          sts _T_dat,R2
 2096                   .dbline 1303
 2096           ;                                                   T_dat|=Uart1RxData[0];
 2096 2090F601          lds R2,_Uart1RxData
 209A 3324              clr R3
 209C 4090E101          lds R4,_T_dat
 20A0 5090E201          lds R5,_T_dat+1
 20A4 4228              or R4,R2
 20A6 5328              or R5,R3
 20A8 5092E201          sts _T_dat+1,R5
 20AC 4092E101          sts _T_dat,R4
 20B0                   .dbline 1304
 20B0           ;                                                       SendManchester();
 20B0 0E94151B          xcall _SendManchester
 20B4                   .dbline 1305
 20B4           ;                                               }       
 20B4 0C94081B          xjmp L502
 20B8           L605:
 20B8                   .dbline 1306
 20B8           ;                                               else if(R_dat>0x83)//还剩12档，用于设置电机堵转电流, 收放电机和调节电机各6档
 20B8 83E8              ldi R24,131
 20BA 90E0              ldi R25,0
 20BC 2090DF01          lds R2,_R_dat
 20C0 3090E001          lds R3,_R_dat+1
 20C4 8215              cp R24,R2
 20C6 9305              cpc R25,R3
 20C8 14F0              brlt X293
 20CA 0C94081B          xjmp L502
 20CE           X293:
 20CE           X195:
 20CE                   .dbline 1307
 20CE           ;                                               {
 20CE                   .dbline 1308
 20CE           ;                                                       SendUart1(R_dat,4);//32ms超时
 20CE 24E0              ldi R18,4
 20D0 30E0              ldi R19,0
 20D2 8101              movw R16,R2
 20D4 0E944202          xcall _SendUart1
 20D8                   .dbline 1309
 20D8           ;                                                   T_dat=Uart1RxData[0];
 20D8 2090F601          lds R2,_Uart1RxData
 20DC 3324              clr R3
 20DE 3092E201          sts _T_dat+1,R3
 20E2 2092E101          sts _T_dat,R2
 20E6                   .dbline 1310
 20E6           ;                                                       SendManchester();
 20E6 0E94151B          xcall _SendManchester
 20EA                   .dbline 1311
 20EA           ;                                               }         
 20EA                   .dbline 1312
 20EA           ;                                               break;
 20EA 0C94081B          xjmp L502
 20EE           L610:
 20EE                   .dbline 1317
 20EE           ; 
 20EE           ; 
 20EE           ; 
 20EE           ;                                       case 0x90: //标定数据
 20EE           ;                                               if(R_dat==0x90)//提取测试信息
 20EE 8091DF01          lds R24,_R_dat
 20F2 9091E001          lds R25,_R_dat+1
 20F6 8039              cpi R24,144
 20F8 E0E0              ldi R30,0
 20FA 9E07              cpc R25,R30
 20FC 09F0              breq X294
 20FE 16C1              xjmp L611
 2100           X294:
 2100           X196:
 2100                   .dbline 1318
 2100           ;                                               {
 2100                   .dbline 1319
 2100           ;                                                       Uart0TxData[0]=0xE8;
 2100 88EE              ldi R24,232
 2102 80932F00          sts _Uart0TxData,R24
 2106                   .dbline 1320
 2106           ;                                                       Uart0TxData[1]=0x40;
 2106 80E4              ldi R24,64
 2108 80933000          sts _Uart0TxData+1,R24
 210C                   .dbline 1321
 210C           ;                                                       Uart0TxData[2]=0xc8;
 210C 88EC              ldi R24,200
 210E 80933100          sts _Uart0TxData+2,R24
 2112                   .dbline 1322
 2112           ;                                                       Uart0TxData[3]=0;//测试信息包0
 2112 2224              clr R2
 2114 20923200          sts _Uart0TxData+3,R2
 2118                   .dbline 1323
 2118           ;                                                       SendUart0_2(9,4);// 超时32ms     
 2118 24E0              ldi R18,4
 211A 30E0              ldi R19,0
 211C 09E0              ldi R16,9
 211E 0E947A04          xcall _SendUart0_2
 2122                   .dbline 1324
 2122           ;                                                       for(i=0;i<32;i++)
 2122 AA24              clr R10
 2124 2FC0              xjmp L619
 2126           L616:
 2126                   .dbline 1325
 2126           ;                                                       {
 2126                   .dbline 1326
 2126           ;                                                               Delay_ms(20);
 2126 04E1              ldi R16,20
 2128 10E0              ldi R17,0
 212A 0E948305          xcall _Delay_ms
 212E                   .dbline 1327
 212E           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 212E 80E0              ldi R24,<_Uart0RxData+1
 2130 90E0              ldi R25,>_Uart0RxData+1
 2132 EA2D              mov R30,R10
 2134 FF27              clr R31
 2136 EE0F              lsl R30
 2138 FF1F              rol R31
 213A E80F              add R30,R24
 213C F91F              adc R31,R25
 213E 2080              ldd R2,z+0
 2140 3324              clr R3
 2142 3092E201          sts _T_dat+1,R3
 2146 2092E101          sts _T_dat,R2
 214A                   .dbline 1328
 214A           ;                                                               T_dat<<=8;
 214A 322C              mov R3,R2
 214C 2224              clr R2
 214E 3092E201          sts _T_dat+1,R3
 2152 2092E101          sts _T_dat,R2
 2156                   .dbline 1329
 2156           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 2156 80E0              ldi R24,<_Uart0RxData
 2158 90E0              ldi R25,>_Uart0RxData
 215A EA2D              mov R30,R10
 215C FF27              clr R31
 215E EE0F              lsl R30
 2160 FF1F              rol R31
 2162 E80F              add R30,R24
 2164 F91F              adc R31,R25
 2166 2080              ldd R2,z+0
 2168 3324              clr R3
 216A 4090E101          lds R4,_T_dat
 216E 5090E201          lds R5,_T_dat+1
 2172 4228              or R4,R2
 2174 5328              or R5,R3
 2176 5092E201          sts _T_dat+1,R5
 217A 4092E101          sts _T_dat,R4
 217E                   .dbline 1330
 217E           ;                                                               SendManchester();                
 217E 0E94151B          xcall _SendManchester
 2182                   .dbline 1331
 2182           ;                                                       }               
 2182           L617:
 2182                   .dbline 1324
 2182 A394              inc R10
 2184           L619:
 2184                   .dbline 1324
 2184 8A2D              mov R24,R10
 2186 8032              cpi R24,32
 2188 70F2              brlo L616
 218A           X197:
 218A                   .dbline 1333
 218A           ; 
 218A           ;                                                       Uart0TxData[0]=0xE8;
 218A 88EE              ldi R24,232
 218C 80932F00          sts _Uart0TxData,R24
 2190                   .dbline 1334
 2190           ;                                                       Uart0TxData[1]=0x40;
 2190 80E4              ldi R24,64
 2192 80933000          sts _Uart0TxData+1,R24
 2196                   .dbline 1335
 2196           ;                                                       Uart0TxData[2]=0xc8;
 2196 88EC              ldi R24,200
 2198 80933100          sts _Uart0TxData+2,R24
 219C                   .dbline 1336
 219C           ;                                                       Uart0TxData[3]=1;//测试信息包1
 219C 81E0              ldi R24,1
 219E 80933200          sts _Uart0TxData+3,R24
 21A2                   .dbline 1337
 21A2           ;                                                       SendUart0_2(9,4);// 超时32ms     
 21A2 24E0              ldi R18,4
 21A4 30E0              ldi R19,0
 21A6 09E0              ldi R16,9
 21A8 0E947A04          xcall _SendUart0_2
 21AC                   .dbline 1338
 21AC           ;                                                       for(i=0;i<32;i++)
 21AC AA24              clr R10
 21AE 2FC0              xjmp L627
 21B0           L624:
 21B0                   .dbline 1339
 21B0           ;                                                       {
 21B0                   .dbline 1340
 21B0           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 21B0 80E0              ldi R24,<_Uart0RxData+1
 21B2 90E0              ldi R25,>_Uart0RxData+1
 21B4 EA2D              mov R30,R10
 21B6 FF27              clr R31
 21B8 EE0F              lsl R30
 21BA FF1F              rol R31
 21BC E80F              add R30,R24
 21BE F91F              adc R31,R25
 21C0 2080              ldd R2,z+0
 21C2 3324              clr R3
 21C4 3092E201          sts _T_dat+1,R3
 21C8 2092E101          sts _T_dat,R2
 21CC                   .dbline 1341
 21CC           ;                                                               T_dat<<=8;
 21CC 322C              mov R3,R2
 21CE 2224              clr R2
 21D0 3092E201          sts _T_dat+1,R3
 21D4 2092E101          sts _T_dat,R2
 21D8                   .dbline 1342
 21D8           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 21D8 80E0              ldi R24,<_Uart0RxData
 21DA 90E0              ldi R25,>_Uart0RxData
 21DC EA2D              mov R30,R10
 21DE FF27              clr R31
 21E0 EE0F              lsl R30
 21E2 FF1F              rol R31
 21E4 E80F              add R30,R24
 21E6 F91F              adc R31,R25
 21E8 2080              ldd R2,z+0
 21EA 3324              clr R3
 21EC 4090E101          lds R4,_T_dat
 21F0 5090E201          lds R5,_T_dat+1
 21F4 4228              or R4,R2
 21F6 5328              or R5,R3
 21F8 5092E201          sts _T_dat+1,R5
 21FC 4092E101          sts _T_dat,R4
 2200                   .dbline 1343
 2200           ;                                                               SendManchester();
 2200 0E94151B          xcall _SendManchester
 2204                   .dbline 1344
 2204           ;                                                               Delay_ms(20);
 2204 04E1              ldi R16,20
 2206 10E0              ldi R17,0
 2208 0E948305          xcall _Delay_ms
 220C                   .dbline 1345
 220C           ;                                                       }       
 220C           L625:
 220C                   .dbline 1338
 220C A394              inc R10
 220E           L627:
 220E                   .dbline 1338
 220E 8A2D              mov R24,R10
 2210 8032              cpi R24,32
 2212 70F2              brlo L624
 2214           X198:
 2214                   .dbline 1347
 2214           ; 
 2214           ;                                                       Uart0TxData[0]=0xE8;
 2214 88EE              ldi R24,232
 2216 80932F00          sts _Uart0TxData,R24
 221A                   .dbline 1348
 221A           ;                                                       Uart0TxData[1]=0x40;
 221A 80E4              ldi R24,64
 221C 80933000          sts _Uart0TxData+1,R24
 2220                   .dbline 1349
 2220           ;                                                       Uart0TxData[2]=0xc8;
 2220 88EC              ldi R24,200
 2222 80933100          sts _Uart0TxData+2,R24
 2226                   .dbline 1350
 2226           ;                                                       Uart0TxData[3]=2;//测试信息包2
 2226 82E0              ldi R24,2
 2228 80933200          sts _Uart0TxData+3,R24
 222C                   .dbline 1351
 222C           ;                                                       SendUart0_2(9,4);// 超时32ms     
 222C 24E0              ldi R18,4
 222E 30E0              ldi R19,0
 2230 09E0              ldi R16,9
 2232 0E947A04          xcall _SendUart0_2
 2236                   .dbline 1352
 2236           ;                                                       for(i=0;i<32;i++)
 2236 AA24              clr R10
 2238 2FC0              xjmp L635
 223A           L632:
 223A                   .dbline 1353
 223A           ;                                                       {
 223A                   .dbline 1354
 223A           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 223A 80E0              ldi R24,<_Uart0RxData+1
 223C 90E0              ldi R25,>_Uart0RxData+1
 223E EA2D              mov R30,R10
 2240 FF27              clr R31
 2242 EE0F              lsl R30
 2244 FF1F              rol R31
 2246 E80F              add R30,R24
 2248 F91F              adc R31,R25
 224A 2080              ldd R2,z+0
 224C 3324              clr R3
 224E 3092E201          sts _T_dat+1,R3
 2252 2092E101          sts _T_dat,R2
 2256                   .dbline 1355
 2256           ;                                                               T_dat<<=8;
 2256 322C              mov R3,R2
 2258 2224              clr R2
 225A 3092E201          sts _T_dat+1,R3
 225E 2092E101          sts _T_dat,R2
 2262                   .dbline 1356
 2262           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 2262 80E0              ldi R24,<_Uart0RxData
 2264 90E0              ldi R25,>_Uart0RxData
 2266 EA2D              mov R30,R10
 2268 FF27              clr R31
 226A EE0F              lsl R30
 226C FF1F              rol R31
 226E E80F              add R30,R24
 2270 F91F              adc R31,R25
 2272 2080              ldd R2,z+0
 2274 3324              clr R3
 2276 4090E101          lds R4,_T_dat
 227A 5090E201          lds R5,_T_dat+1
 227E 4228              or R4,R2
 2280 5328              or R5,R3
 2282 5092E201          sts _T_dat+1,R5
 2286 4092E101          sts _T_dat,R4
 228A                   .dbline 1357
 228A           ;                                                               SendManchester();
 228A 0E94151B          xcall _SendManchester
 228E                   .dbline 1358
 228E           ;                                                               Delay_ms(20);
 228E 04E1              ldi R16,20
 2290 10E0              ldi R17,0
 2292 0E948305          xcall _Delay_ms
 2296                   .dbline 1359
 2296           ;                                                       }               
 2296           L633:
 2296                   .dbline 1352
 2296 A394              inc R10
 2298           L635:
 2298                   .dbline 1352
 2298 8A2D              mov R24,R10
 229A 8032              cpi R24,32
 229C 70F2              brlo L632
 229E           X199:
 229E                   .dbline 1361
 229E           ; 
 229E           ;                                                       Uart0TxData[0]=0xE8;
 229E 88EE              ldi R24,232
 22A0 80932F00          sts _Uart0TxData,R24
 22A4                   .dbline 1362
 22A4           ;                                                       Uart0TxData[1]=0x40;
 22A4 80E4              ldi R24,64
 22A6 80933000          sts _Uart0TxData+1,R24
 22AA                   .dbline 1363
 22AA           ;                                                       Uart0TxData[2]=0xc8;
 22AA 88EC              ldi R24,200
 22AC 80933100          sts _Uart0TxData+2,R24
 22B0                   .dbline 1364
 22B0           ;                                                       Uart0TxData[3]=3;//测试信息包3
 22B0 83E0              ldi R24,3
 22B2 80933200          sts _Uart0TxData+3,R24
 22B6                   .dbline 1365
 22B6           ;                                                       SendUart0_2(9,4);// 超时32ms     
 22B6 24E0              ldi R18,4
 22B8 30E0              ldi R19,0
 22BA 09E0              ldi R16,9
 22BC 0E947A04          xcall _SendUart0_2
 22C0                   .dbline 1366
 22C0           ;                                                       for(i=0;i<32;i++)
 22C0 AA24              clr R10
 22C2 2FC0              xjmp L643
 22C4           L640:
 22C4                   .dbline 1367
 22C4           ;                                                       {
 22C4                   .dbline 1368
 22C4           ;                                                               T_dat=Uart0RxData[i*2+1];//高字节
 22C4 80E0              ldi R24,<_Uart0RxData+1
 22C6 90E0              ldi R25,>_Uart0RxData+1
 22C8 EA2D              mov R30,R10
 22CA FF27              clr R31
 22CC EE0F              lsl R30
 22CE FF1F              rol R31
 22D0 E80F              add R30,R24
 22D2 F91F              adc R31,R25
 22D4 2080              ldd R2,z+0
 22D6 3324              clr R3
 22D8 3092E201          sts _T_dat+1,R3
 22DC 2092E101          sts _T_dat,R2
 22E0                   .dbline 1369
 22E0           ;                                                               T_dat<<=8;
 22E0 322C              mov R3,R2
 22E2 2224              clr R2
 22E4 3092E201          sts _T_dat+1,R3
 22E8 2092E101          sts _T_dat,R2
 22EC                   .dbline 1370
 22EC           ;                                                               T_dat|=Uart0RxData[i*2+0];//低字节
 22EC 80E0              ldi R24,<_Uart0RxData
 22EE 90E0              ldi R25,>_Uart0RxData
 22F0 EA2D              mov R30,R10
 22F2 FF27              clr R31
 22F4 EE0F              lsl R30
 22F6 FF1F              rol R31
 22F8 E80F              add R30,R24
 22FA F91F              adc R31,R25
 22FC 2080              ldd R2,z+0
 22FE 3324              clr R3
 2300 4090E101          lds R4,_T_dat
 2304 5090E201          lds R5,_T_dat+1
 2308 4228              or R4,R2
 230A 5328              or R5,R3
 230C 5092E201          sts _T_dat+1,R5
 2310 4092E101          sts _T_dat,R4
 2314                   .dbline 1371
 2314           ;                                                               SendManchester();
 2314 0E94151B          xcall _SendManchester
 2318                   .dbline 1372
 2318           ;                                                               Delay_ms(20);
 2318 04E1              ldi R16,20
 231A 10E0              ldi R17,0
 231C 0E948305          xcall _Delay_ms
 2320                   .dbline 1373
 2320           ;                                                       }                       
 2320           L641:
 2320                   .dbline 1366
 2320 A394              inc R10
 2322           L643:
 2322                   .dbline 1366
 2322 8A2D              mov R24,R10
 2324 8032              cpi R24,32
 2326 70F2              brlo L640
 2328           X200:
 2328                   .dbline 1374
 2328           ;                                               }
 2328 0C94081B          xjmp L502
 232C           L611:
 232C                   .dbline 1375
 232C           ;                                               else if(R_dat==0x91)//上传压力标定数据,20ms/帧  
 232C 8091DF01          lds R24,_R_dat
 2330 9091E001          lds R25,_R_dat+1
 2334 8139              cpi R24,145
 2336 E0E0              ldi R30,0
 2338 9E07              cpc R25,R30
 233A 29F5              brne L645
 233C           X201:
 233C                   .dbline 1376
 233C           ;                                               {
 233C                   .dbline 1378
 233C           ;                                                       //先获取总标定点数    
 233C           ;                                                       DataFlag=3;
 233C 83E0              ldi R24,3
 233E 90E0              ldi R25,0
 2340 9093C201          sts _DataFlag+1,R25
 2344 8093C101          sts _DataFlag,R24
 2348                   .dbline 1379
 2348           ;                                                       coeff_len=4;//上位机还需传4字节，分别为首块地址和包数
 2348 84E0              ldi R24,4
 234A 90932D00          sts _coeff_len+1,R25
 234E 80932C00          sts _coeff_len,R24
 2352                   .dbline 1380
 2352           ;                                                       coeff_count=0;
 2352 2224              clr R2
 2354 3324              clr R3
 2356 30922B00          sts _coeff_count+1,R3
 235A 20922A00          sts _coeff_count,R2
 235E                   .dbline 1381
 235E           ;                                                       TimeOutFlag=0;
 235E 2092D901          sts _TimeOutFlag,R2
 2362                   .dbline 1382
 2362           ;                                                       Timer0Counter=200;//1.6s定时
 2362 88EC              ldi R24,200
 2364 90934602          sts _Timer0Counter+1,R25
 2368 80934502          sts _Timer0Counter,R24
 236C                   .dbline 1383
 236C           ;                                                       TCNT0=0x06; //8ms
 236C 86E0              ldi R24,6
 236E 82BF              out 0x32,R24
 2370                   .dbline 1384
 2370           ;                                                       TCCR0|=0x06;//256分频
 2370 83B7              in R24,0x33
 2372 8660              ori R24,6
 2374 83BF              out 0x33,R24
 2376                   .dbline 1385
 2376           ;                                                       TIFR|=0x01; //清定时器0中断标志
 2376 86B7              in R24,0x36
 2378 8160              ori R24,1
 237A 86BF              out 0x36,R24
 237C                   .dbline 1386
 237C           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 237C 87B7              in R24,0x37
 237E 8160              ori R24,1
 2380 87BF              out 0x37,R24
 2382                   .dbline 1387
 2382           ;                                               }
 2382 0C94081B          xjmp L502
 2386           L645:
 2386                   .dbline 1388
 2386           ;                                               else if(R_dat==0x92)//清空标定数据,整机格式化  
 2386 8091DF01          lds R24,_R_dat
 238A 9091E001          lds R25,_R_dat+1
 238E 8239              cpi R24,146
 2390 E0E0              ldi R30,0
 2392 9E07              cpc R25,R30
 2394 F1F5              brne L647
 2396           X202:
 2396                   .dbline 1389
 2396           ;                                               {       
 2396                   .dbline 1390
 2396           ;                                                       Uart0TxData[0]=0xE8;
 2396 88EE              ldi R24,232
 2398 80932F00          sts _Uart0TxData,R24
 239C                   .dbline 1391
 239C           ;                                                       Uart0TxData[1]=0x40;
 239C 80E4              ldi R24,64
 239E 80933000          sts _Uart0TxData+1,R24
 23A2                   .dbline 1392
 23A2           ;                                                       Uart0TxData[2]=0x8c;
 23A2 8CE8              ldi R24,140
 23A4 80933100          sts _Uart0TxData+2,R24
 23A8                   .dbline 1393
 23A8           ;                                                       Uart0TxData[3]=8;
 23A8 88E0              ldi R24,8
 23AA 80933200          sts _Uart0TxData+3,R24
 23AE                   .dbline 1394
 23AE           ;                                                       Uart0TxData[4]=0;
 23AE 2224              clr R2
 23B0 20923300          sts _Uart0TxData+4,R2
 23B4                   .dbline 1395
 23B4           ;                                                       Uart0TxData[5]=0;
 23B4 20923400          sts _Uart0TxData+5,R2
 23B8                   .dbline 1396
 23B8           ;                                                       Uart0TxData[6]=0xff;
 23B8 8FEF              ldi R24,255
 23BA 80933500          sts _Uart0TxData+6,R24
 23BE                   .dbline 1397
 23BE           ;                                                       Uart0TxData[7]=0xff;
 23BE 80933600          sts _Uart0TxData+7,R24
 23C2                   .dbline 1398
 23C2           ;                                                       SendUart0_3(9,5000,9);// 最大超时40秒
 23C2 89E0              ldi R24,9
 23C4 8883              std y+0,R24
 23C6 28E8              ldi R18,5000
 23C8 33E1              ldi R19,19
 23CA 09E0              ldi R16,9
 23CC 0E94C404          xcall _SendUart0_3
 23D0                   .dbline 1399
 23D0           ;                                                       if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8c))
 23D0 8091FA01          lds R24,_Uart0RxCounter
 23D4 8930              cpi R24,9
 23D6 99F4              brne L656
 23D8           X203:
 23D8 8091FB01          lds R24,_Uart0RxData
 23DC 8535              cpi R24,85
 23DE 79F4              brne L656
 23E0           X204:
 23E0 8091FC01          lds R24,_Uart0RxData+1
 23E4 8034              cpi R24,64
 23E6 59F4              brne L656
 23E8           X205:
 23E8 8091FD01          lds R24,_Uart0RxData+2
 23EC 8C38              cpi R24,140
 23EE 39F4              brne L656
 23F0           X206:
 23F0                   .dbline 1400
 23F0           ;                                                               {T_dat=0x0000;}
 23F0                   .dbline 1400
 23F0 2224              clr R2
 23F2 3324              clr R3
 23F4 3092E201          sts _T_dat+1,R3
 23F8 2092E101          sts _T_dat,R2
 23FC                   .dbline 1400
 23FC 06C0              xjmp L657
 23FE           L656:
 23FE                   .dbline 1402
 23FE           ;                                                       else
 23FE           ;                                                               {T_dat=0xffff;}
 23FE                   .dbline 1402
 23FE 8FEF              ldi R24,65535
 2400 9FEF              ldi R25,255
 2402 9093E201          sts _T_dat+1,R25
 2406 8093E101          sts _T_dat,R24
 240A                   .dbline 1402
 240A           L657:
 240A                   .dbline 1403
 240A           ;                                                       SendManchester();        
 240A 0E94151B          xcall _SendManchester
 240E                   .dbline 1404
 240E           ;                                               }
 240E 0C94081B          xjmp L502
 2412           L647:
 2412                   .dbline 1405
 2412           ;                                               else if(R_dat==0x93)//上传全部系数，共256字节分128帧上传
 2412 8091DF01          lds R24,_R_dat
 2416 9091E001          lds R25,_R_dat+1
 241A 8339              cpi R24,147
 241C E0E0              ldi R30,0
 241E 9E07              cpc R25,R30
 2420 09F0              breq X295
 2422 26C1              xjmp L660
 2424           X295:
 2424           X207:
 2424                   .dbline 1406
 2424           ;                                               {
 2424                   .dbline 1407
 2424           ;                                                       Uart0TxData[0]=0xE8;
 2424 88EE              ldi R24,232
 2426 80932F00          sts _Uart0TxData,R24
 242A                   .dbline 1408
 242A           ;                                                       Uart0TxData[1]=0x40;
 242A 80E4              ldi R24,64
 242C 80933000          sts _Uart0TxData+1,R24
 2430                   .dbline 1409
 2430           ;                                                       Uart0TxData[2]=0x87;
 2430 87E8              ldi R24,135
 2432 80933100          sts _Uart0TxData+2,R24
 2436                   .dbline 1410
 2436           ;                                                       Uart0TxData[3]=0;//系数包0
 2436 2224              clr R2
 2438 20923200          sts _Uart0TxData+3,R2
 243C                   .dbline 1411
 243C           ;                                                       SendUart0_2(9,4);// 超时32ms    
 243C 24E0              ldi R18,4
 243E 30E0              ldi R19,0
 2440 09E0              ldi R16,9
 2442 0E947A04          xcall _SendUart0_2
 2446                   .dbline 1412
 2446           ;                                                       if(Uart0RxCounter==64) 
 2446 8091FA01          lds R24,_Uart0RxCounter
 244A 8034              cpi R24,64
 244C A1F5              brne L665
 244E           X208:
 244E                   .dbline 1413
 244E           ;                                                       {
 244E                   .dbline 1414
 244E           ;                                                               for(i=0;i<32;i++)
 244E AA24              clr R10
 2450 2FC0              xjmp L670
 2452           L667:
 2452                   .dbline 1415
 2452           ;                                                               {
 2452                   .dbline 1416
 2452           ;                                                                       Delay_ms(20);
 2452 04E1              ldi R16,20
 2454 10E0              ldi R17,0
 2456 0E948305          xcall _Delay_ms
 245A                   .dbline 1417
 245A           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 245A 80E0              ldi R24,<_Uart0RxData+1
 245C 90E0              ldi R25,>_Uart0RxData+1
 245E EA2D              mov R30,R10
 2460 FF27              clr R31
 2462 EE0F              lsl R30
 2464 FF1F              rol R31
 2466 E80F              add R30,R24
 2468 F91F              adc R31,R25
 246A 2080              ldd R2,z+0
 246C 3324              clr R3
 246E 3092E201          sts _T_dat+1,R3
 2472 2092E101          sts _T_dat,R2
 2476                   .dbline 1418
 2476           ;                                                                       T_dat<<=8;
 2476 322C              mov R3,R2
 2478 2224              clr R2
 247A 3092E201          sts _T_dat+1,R3
 247E 2092E101          sts _T_dat,R2
 2482                   .dbline 1419
 2482           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2482 80E0              ldi R24,<_Uart0RxData
 2484 90E0              ldi R25,>_Uart0RxData
 2486 EA2D              mov R30,R10
 2488 FF27              clr R31
 248A EE0F              lsl R30
 248C FF1F              rol R31
 248E E80F              add R30,R24
 2490 F91F              adc R31,R25
 2492 2080              ldd R2,z+0
 2494 3324              clr R3
 2496 4090E101          lds R4,_T_dat
 249A 5090E201          lds R5,_T_dat+1
 249E 4228              or R4,R2
 24A0 5328              or R5,R3
 24A2 5092E201          sts _T_dat+1,R5
 24A6 4092E101          sts _T_dat,R4
 24AA                   .dbline 1420
 24AA           ;                                                                       SendManchester();                
 24AA 0E94151B          xcall _SendManchester
 24AE                   .dbline 1421
 24AE           ;                                                               }       
 24AE           L668:
 24AE                   .dbline 1414
 24AE A394              inc R10
 24B0           L670:
 24B0                   .dbline 1414
 24B0 8A2D              mov R24,R10
 24B2 8032              cpi R24,32
 24B4 70F2              brlo L667
 24B6           X209:
 24B6                   .dbline 1422
 24B6           ;                                                       }       
 24B6           L665:
 24B6                   .dbline 1424
 24B6           ; 
 24B6           ;                                                       Uart0TxData[0]=0xE8;
 24B6 88EE              ldi R24,232
 24B8 80932F00          sts _Uart0TxData,R24
 24BC                   .dbline 1425
 24BC           ;                                                       Uart0TxData[1]=0x40;
 24BC 80E4              ldi R24,64
 24BE 80933000          sts _Uart0TxData+1,R24
 24C2                   .dbline 1426
 24C2           ;                                                       Uart0TxData[2]=0x87;
 24C2 87E8              ldi R24,135
 24C4 80933100          sts _Uart0TxData+2,R24
 24C8                   .dbline 1427
 24C8           ;                                                       Uart0TxData[3]=1;//系数包1
 24C8 81E0              ldi R24,1
 24CA 80933200          sts _Uart0TxData+3,R24
 24CE                   .dbline 1428
 24CE           ;                                                       SendUart0_2(9,4);// 超时32ms     
 24CE 24E0              ldi R18,4
 24D0 30E0              ldi R19,0
 24D2 09E0              ldi R16,9
 24D4 0E947A04          xcall _SendUart0_2
 24D8                   .dbline 1429
 24D8           ;                                                       if(Uart0RxCounter==64) 
 24D8 8091FA01          lds R24,_Uart0RxCounter
 24DC 8034              cpi R24,64
 24DE A1F5              brne L675
 24E0           X210:
 24E0                   .dbline 1430
 24E0           ;                                                       {
 24E0                   .dbline 1431
 24E0           ;                                                               for(i=0;i<32;i++)
 24E0 AA24              clr R10
 24E2 2FC0              xjmp L680
 24E4           L677:
 24E4                   .dbline 1432
 24E4           ;                                                               {
 24E4                   .dbline 1433
 24E4           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 24E4 80E0              ldi R24,<_Uart0RxData+1
 24E6 90E0              ldi R25,>_Uart0RxData+1
 24E8 EA2D              mov R30,R10
 24EA FF27              clr R31
 24EC EE0F              lsl R30
 24EE FF1F              rol R31
 24F0 E80F              add R30,R24
 24F2 F91F              adc R31,R25
 24F4 2080              ldd R2,z+0
 24F6 3324              clr R3
 24F8 3092E201          sts _T_dat+1,R3
 24FC 2092E101          sts _T_dat,R2
 2500                   .dbline 1434
 2500           ;                                                                       T_dat<<=8;
 2500 322C              mov R3,R2
 2502 2224              clr R2
 2504 3092E201          sts _T_dat+1,R3
 2508 2092E101          sts _T_dat,R2
 250C                   .dbline 1435
 250C           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 250C 80E0              ldi R24,<_Uart0RxData
 250E 90E0              ldi R25,>_Uart0RxData
 2510 EA2D              mov R30,R10
 2512 FF27              clr R31
 2514 EE0F              lsl R30
 2516 FF1F              rol R31
 2518 E80F              add R30,R24
 251A F91F              adc R31,R25
 251C 2080              ldd R2,z+0
 251E 3324              clr R3
 2520 4090E101          lds R4,_T_dat
 2524 5090E201          lds R5,_T_dat+1
 2528 4228              or R4,R2
 252A 5328              or R5,R3
 252C 5092E201          sts _T_dat+1,R5
 2530 4092E101          sts _T_dat,R4
 2534                   .dbline 1436
 2534           ;                                                                       SendManchester();
 2534 0E94151B          xcall _SendManchester
 2538                   .dbline 1437
 2538           ;                                                                       Delay_ms(20);
 2538 04E1              ldi R16,20
 253A 10E0              ldi R17,0
 253C 0E948305          xcall _Delay_ms
 2540                   .dbline 1438
 2540           ;                                                               }
 2540           L678:
 2540                   .dbline 1431
 2540 A394              inc R10
 2542           L680:
 2542                   .dbline 1431
 2542 8A2D              mov R24,R10
 2544 8032              cpi R24,32
 2546 70F2              brlo L677
 2548           X211:
 2548                   .dbline 1439
 2548           ;                                                       }               
 2548           L675:
 2548                   .dbline 1441
 2548           ; 
 2548           ;                                                       Uart0TxData[0]=0xE8;
 2548 88EE              ldi R24,232
 254A 80932F00          sts _Uart0TxData,R24
 254E                   .dbline 1442
 254E           ;                                                       Uart0TxData[1]=0x40;
 254E 80E4              ldi R24,64
 2550 80933000          sts _Uart0TxData+1,R24
 2554                   .dbline 1443
 2554           ;                                                       Uart0TxData[2]=0x87;
 2554 87E8              ldi R24,135
 2556 80933100          sts _Uart0TxData+2,R24
 255A                   .dbline 1444
 255A           ;                                                       Uart0TxData[3]=2;//系数包2
 255A 82E0              ldi R24,2
 255C 80933200          sts _Uart0TxData+3,R24
 2560                   .dbline 1445
 2560           ;                                                       SendUart0_2(9,4);// 超时32ms    
 2560 24E0              ldi R18,4
 2562 30E0              ldi R19,0
 2564 09E0              ldi R16,9
 2566 0E947A04          xcall _SendUart0_2
 256A                   .dbline 1446
 256A           ;                                                       if(Uart0RxCounter==64) 
 256A 8091FA01          lds R24,_Uart0RxCounter
 256E 8034              cpi R24,64
 2570 A1F5              brne L685
 2572           X212:
 2572                   .dbline 1447
 2572           ;                                                       {
 2572                   .dbline 1448
 2572           ;                                                               for(i=0;i<32;i++)
 2572 AA24              clr R10
 2574 2FC0              xjmp L690
 2576           L687:
 2576                   .dbline 1449
 2576           ;                                                               {
 2576                   .dbline 1450
 2576           ;                                                                       Delay_ms(20);
 2576 04E1              ldi R16,20
 2578 10E0              ldi R17,0
 257A 0E948305          xcall _Delay_ms
 257E                   .dbline 1451
 257E           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 257E 80E0              ldi R24,<_Uart0RxData+1
 2580 90E0              ldi R25,>_Uart0RxData+1
 2582 EA2D              mov R30,R10
 2584 FF27              clr R31
 2586 EE0F              lsl R30
 2588 FF1F              rol R31
 258A E80F              add R30,R24
 258C F91F              adc R31,R25
 258E 2080              ldd R2,z+0
 2590 3324              clr R3
 2592 3092E201          sts _T_dat+1,R3
 2596 2092E101          sts _T_dat,R2
 259A                   .dbline 1452
 259A           ;                                                                       T_dat<<=8;
 259A 322C              mov R3,R2
 259C 2224              clr R2
 259E 3092E201          sts _T_dat+1,R3
 25A2 2092E101          sts _T_dat,R2
 25A6                   .dbline 1453
 25A6           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 25A6 80E0              ldi R24,<_Uart0RxData
 25A8 90E0              ldi R25,>_Uart0RxData
 25AA EA2D              mov R30,R10
 25AC FF27              clr R31
 25AE EE0F              lsl R30
 25B0 FF1F              rol R31
 25B2 E80F              add R30,R24
 25B4 F91F              adc R31,R25
 25B6 2080              ldd R2,z+0
 25B8 3324              clr R3
 25BA 4090E101          lds R4,_T_dat
 25BE 5090E201          lds R5,_T_dat+1
 25C2 4228              or R4,R2
 25C4 5328              or R5,R3
 25C6 5092E201          sts _T_dat+1,R5
 25CA 4092E101          sts _T_dat,R4
 25CE                   .dbline 1454
 25CE           ;                                                                       SendManchester();                
 25CE 0E94151B          xcall _SendManchester
 25D2                   .dbline 1455
 25D2           ;                                                               }       
 25D2           L688:
 25D2                   .dbline 1448
 25D2 A394              inc R10
 25D4           L690:
 25D4                   .dbline 1448
 25D4 8A2D              mov R24,R10
 25D6 8032              cpi R24,32
 25D8 70F2              brlo L687
 25DA           X213:
 25DA                   .dbline 1456
 25DA           ;                                                       }       
 25DA           L685:
 25DA                   .dbline 1458
 25DA           ; 
 25DA           ;                                                       Uart0TxData[0]=0xE8;
 25DA 88EE              ldi R24,232
 25DC 80932F00          sts _Uart0TxData,R24
 25E0                   .dbline 1459
 25E0           ;                                                       Uart0TxData[1]=0x40;
 25E0 80E4              ldi R24,64
 25E2 80933000          sts _Uart0TxData+1,R24
 25E6                   .dbline 1460
 25E6           ;                                                       Uart0TxData[2]=0x87;
 25E6 87E8              ldi R24,135
 25E8 80933100          sts _Uart0TxData+2,R24
 25EC                   .dbline 1461
 25EC           ;                                                       Uart0TxData[3]=3;//系数包3
 25EC 83E0              ldi R24,3
 25EE 80933200          sts _Uart0TxData+3,R24
 25F2                   .dbline 1462
 25F2           ;                                                       SendUart0_2(9,4);// 超时32ms     
 25F2 24E0              ldi R18,4
 25F4 30E0              ldi R19,0
 25F6 09E0              ldi R16,9
 25F8 0E947A04          xcall _SendUart0_2
 25FC                   .dbline 1463
 25FC           ;                                                       if(Uart0RxCounter==64) 
 25FC 8091FA01          lds R24,_Uart0RxCounter
 2600 8034              cpi R24,64
 2602 11F0              breq X296
 2604 0C94081B          xjmp L502
 2608           X296:
 2608           X214:
 2608                   .dbline 1464
 2608           ;                                                       {
 2608                   .dbline 1465
 2608           ;                                                               for(i=0;i<32;i++)
 2608 AA24              clr R10
 260A 2EC0              xjmp L700
 260C           L697:
 260C                   .dbline 1466
 260C           ;                                                               {
 260C                   .dbline 1467
 260C           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 260C 80E0              ldi R24,<_Uart0RxData+1
 260E 90E0              ldi R25,>_Uart0RxData+1
 2610 EA2D              mov R30,R10
 2612 FF27              clr R31
 2614 EE0F              lsl R30
 2616 FF1F              rol R31
 2618 E80F              add R30,R24
 261A F91F              adc R31,R25
 261C 2080              ldd R2,z+0
 261E 3324              clr R3
 2620 3092E201          sts _T_dat+1,R3
 2624 2092E101          sts _T_dat,R2
 2628                   .dbline 1468
 2628           ;                                                                       T_dat<<=8;
 2628 322C              mov R3,R2
 262A 2224              clr R2
 262C 3092E201          sts _T_dat+1,R3
 2630 2092E101          sts _T_dat,R2
 2634                   .dbline 1469
 2634           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2634 80E0              ldi R24,<_Uart0RxData
 2636 90E0              ldi R25,>_Uart0RxData
 2638 EA2D              mov R30,R10
 263A FF27              clr R31
 263C EE0F              lsl R30
 263E FF1F              rol R31
 2640 E80F              add R30,R24
 2642 F91F              adc R31,R25
 2644 2080              ldd R2,z+0
 2646 3324              clr R3
 2648 4090E101          lds R4,_T_dat
 264C 5090E201          lds R5,_T_dat+1
 2650 4228              or R4,R2
 2652 5328              or R5,R3
 2654 5092E201          sts _T_dat+1,R5
 2658 4092E101          sts _T_dat,R4
 265C                   .dbline 1470
 265C           ;                                                                       SendManchester();
 265C E6D7              xcall _SendManchester
 265E                   .dbline 1471
 265E           ;                                                                       Delay_ms(20);
 265E 04E1              ldi R16,20
 2660 10E0              ldi R17,0
 2662 0E948305          xcall _Delay_ms
 2666                   .dbline 1472
 2666           ;                                                               }
 2666           L698:
 2666                   .dbline 1465
 2666 A394              inc R10
 2668           L700:
 2668                   .dbline 1465
 2668 8A2D              mov R24,R10
 266A 8032              cpi R24,32
 266C 78F2              brlo L697
 266E           X215:
 266E                   .dbline 1473
 266E           ;                                                       }               
 266E                   .dbline 1474
 266E           ;                                               }
 266E D0C7              xjmp L502
 2670           L660:
 2670                   .dbline 1475
 2670           ;                                               else if(R_dat>=0x9a)//设置电机断路电流 
 2670 8091DF01          lds R24,_R_dat
 2674 9091E001          lds R25,_R_dat+1
 2678 8A39              cpi R24,154
 267A E0E0              ldi R30,0
 267C 9E07              cpc R25,R30
 267E 0CF4              brge X297
 2680 C7C7              xjmp L502
 2682           X297:
 2682           X216:
 2682                   .dbline 1476
 2682           ;                                               {
 2682                   .dbline 1477
 2682           ;                                                       SendUart1(R_dat,4);//32ms超时
 2682 24E0              ldi R18,4
 2684 30E0              ldi R19,0
 2686 8C01              movw R16,R24
 2688 0E944202          xcall _SendUart1
 268C                   .dbline 1478
 268C           ;                                                   T_dat=Uart1RxData[0];
 268C 2090F601          lds R2,_Uart1RxData
 2690 3324              clr R3
 2692 3092E201          sts _T_dat+1,R3
 2696 2092E101          sts _T_dat,R2
 269A                   .dbline 1479
 269A           ;                                                       SendManchester();
 269A C7D7              xcall _SendManchester
 269C                   .dbline 1480
 269C           ;                                               }
 269C                   .dbline 1482
 269C           ;                                                
 269C           ;                                               break;
 269C B9C7              xjmp L502
 269E           L704:
 269E                   .dbline 1485
 269E           ; 
 269E           ;                                       case 0xa0://压力标定系数
 269E           ;                                               if(R_dat==0xa0)//下发全部标定系数，共128字节,20ms/帧，共2560ms   
 269E 8091DF01          lds R24,_R_dat
 26A2 9091E001          lds R25,_R_dat+1
 26A6 803A              cpi R24,160
 26A8 E0E0              ldi R30,0
 26AA 9E07              cpc R25,R30
 26AC 29F5              brne L705
 26AE           X217:
 26AE                   .dbline 1486
 26AE           ;                                                       { 
 26AE                   .dbline 1487
 26AE           ;                                                       DataFlag=1;
 26AE 81E0              ldi R24,1
 26B0 90E0              ldi R25,0
 26B2 9093C201          sts _DataFlag+1,R25
 26B6 8093C101          sts _DataFlag,R24
 26BA                   .dbline 1488
 26BA           ;                                                       coeff_len=128;
 26BA 80E8              ldi R24,128
 26BC 90932D00          sts _coeff_len+1,R25
 26C0 80932C00          sts _coeff_len,R24
 26C4                   .dbline 1489
 26C4           ;                                                       coeff_count=0;
 26C4 2224              clr R2
 26C6 3324              clr R3
 26C8 30922B00          sts _coeff_count+1,R3
 26CC 20922A00          sts _coeff_count,R2
 26D0                   .dbline 1490
 26D0           ;                                                       TimeOutFlag=0;
 26D0 2092D901          sts _TimeOutFlag,R2
 26D4                   .dbline 1491
 26D4           ;                                                       Timer0Counter=1000;//8s定时
 26D4 88EE              ldi R24,1000
 26D6 93E0              ldi R25,3
 26D8 90934602          sts _Timer0Counter+1,R25
 26DC 80934502          sts _Timer0Counter,R24
 26E0                   .dbline 1492
 26E0           ;                                                       TCNT0=0x06; //8ms
 26E0 86E0              ldi R24,6
 26E2 82BF              out 0x32,R24
 26E4                   .dbline 1493
 26E4           ;                                                       TCCR0|=0x06;//256分频
 26E4 83B7              in R24,0x33
 26E6 8660              ori R24,6
 26E8 83BF              out 0x33,R24
 26EA                   .dbline 1494
 26EA           ;                                                       TIFR|=0x01; //清定时器0中断标志
 26EA 86B7              in R24,0x36
 26EC 8160              ori R24,1
 26EE 86BF              out 0x36,R24
 26F0                   .dbline 1495
 26F0           ;                                                       TIMSK|=0x01;//使能定时器0中断                               
 26F0 87B7              in R24,0x37
 26F2 8160              ori R24,1
 26F4 87BF              out 0x37,R24
 26F6                   .dbline 1496
 26F6           ;                                               }
 26F6 8CC7              xjmp L502
 26F8           L705:
 26F8                   .dbline 1497
 26F8           ;                                               else if(R_dat==0xa1)//上传标定系数,28ms/帧 ，共64帧128字节
 26F8 8091DF01          lds R24,_R_dat
 26FC 9091E001          lds R25,_R_dat+1
 2700 813A              cpi R24,161
 2702 E0E0              ldi R30,0
 2704 9E07              cpc R25,R30
 2706 09F0              breq X298
 2708 83C7              xjmp L502
 270A           X298:
 270A           X218:
 270A                   .dbline 1498
 270A           ;                                               {    
 270A                   .dbline 1499
 270A           ;                                                       Uart0TxData[0]=0xE8;
 270A 88EE              ldi R24,232
 270C 80932F00          sts _Uart0TxData,R24
 2710                   .dbline 1500
 2710           ;                                                       Uart0TxData[1]=0x40;
 2710 80E4              ldi R24,64
 2712 80933000          sts _Uart0TxData+1,R24
 2716                   .dbline 1501
 2716           ;                                                       Uart0TxData[2]=0x87;
 2716 87E8              ldi R24,135
 2718 80933100          sts _Uart0TxData+2,R24
 271C                   .dbline 1502
 271C           ;                                                       Uart0TxData[3]=0;//系数包0
 271C 2224              clr R2
 271E 20923200          sts _Uart0TxData+3,R2
 2722                   .dbline 1503
 2722           ;                                                       SendUart0_2(9,5);// 超时40ms    
 2722 25E0              ldi R18,5
 2724 30E0              ldi R19,0
 2726 09E0              ldi R16,9
 2728 0E947A04          xcall _SendUart0_2
 272C                   .dbline 1504
 272C           ;                                                       if(Uart0RxCounter==64) 
 272C 8091FA01          lds R24,_Uart0RxCounter
 2730 8034              cpi R24,64
 2732 99F5              brne L712
 2734           X219:
 2734                   .dbline 1505
 2734           ;                                                       {
 2734                   .dbline 1506
 2734           ;                                                               for(i=0;i<32;i++)
 2734 AA24              clr R10
 2736 2EC0              xjmp L717
 2738           L714:
 2738                   .dbline 1507
 2738           ;                                                               {
 2738                   .dbline 1508
 2738           ;                                                                       Delay_ms(20);
 2738 04E1              ldi R16,20
 273A 10E0              ldi R17,0
 273C 0E948305          xcall _Delay_ms
 2740                   .dbline 1509
 2740           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 2740 80E0              ldi R24,<_Uart0RxData+1
 2742 90E0              ldi R25,>_Uart0RxData+1
 2744 EA2D              mov R30,R10
 2746 FF27              clr R31
 2748 EE0F              lsl R30
 274A FF1F              rol R31
 274C E80F              add R30,R24
 274E F91F              adc R31,R25
 2750 2080              ldd R2,z+0
 2752 3324              clr R3
 2754 3092E201          sts _T_dat+1,R3
 2758 2092E101          sts _T_dat,R2
 275C                   .dbline 1510
 275C           ;                                                                       T_dat<<=8;
 275C 322C              mov R3,R2
 275E 2224              clr R2
 2760 3092E201          sts _T_dat+1,R3
 2764 2092E101          sts _T_dat,R2
 2768                   .dbline 1511
 2768           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2768 80E0              ldi R24,<_Uart0RxData
 276A 90E0              ldi R25,>_Uart0RxData
 276C EA2D              mov R30,R10
 276E FF27              clr R31
 2770 EE0F              lsl R30
 2772 FF1F              rol R31
 2774 E80F              add R30,R24
 2776 F91F              adc R31,R25
 2778 2080              ldd R2,z+0
 277A 3324              clr R3
 277C 4090E101          lds R4,_T_dat
 2780 5090E201          lds R5,_T_dat+1
 2784 4228              or R4,R2
 2786 5328              or R5,R3
 2788 5092E201          sts _T_dat+1,R5
 278C 4092E101          sts _T_dat,R4
 2790                   .dbline 1512
 2790           ;                                                                       SendManchester();                
 2790 4CD7              xcall _SendManchester
 2792                   .dbline 1513
 2792           ;                                                               }       
 2792           L715:
 2792                   .dbline 1506
 2792 A394              inc R10
 2794           L717:
 2794                   .dbline 1506
 2794 8A2D              mov R24,R10
 2796 8032              cpi R24,32
 2798 78F2              brlo L714
 279A           X220:
 279A                   .dbline 1514
 279A           ;                                                       }       
 279A           L712:
 279A                   .dbline 1516
 279A           ; 
 279A           ;                                                       Uart0TxData[0]=0xE8;
 279A 88EE              ldi R24,232
 279C 80932F00          sts _Uart0TxData,R24
 27A0                   .dbline 1517
 27A0           ;                                                       Uart0TxData[1]=0x40;
 27A0 80E4              ldi R24,64
 27A2 80933000          sts _Uart0TxData+1,R24
 27A6                   .dbline 1518
 27A6           ;                                                       Uart0TxData[2]=0x87;
 27A6 87E8              ldi R24,135
 27A8 80933100          sts _Uart0TxData+2,R24
 27AC                   .dbline 1519
 27AC           ;                                                       Uart0TxData[3]=1;//系数包1
 27AC 81E0              ldi R24,1
 27AE 80933200          sts _Uart0TxData+3,R24
 27B2                   .dbline 1520
 27B2           ;                                                       SendUart0_2(9,5);// 超时40ms             
 27B2 25E0              ldi R18,5
 27B4 30E0              ldi R19,0
 27B6 09E0              ldi R16,9
 27B8 0E947A04          xcall _SendUart0_2
 27BC                   .dbline 1521
 27BC           ;                                                       if(Uart0RxCounter==64) 
 27BC 8091FA01          lds R24,_Uart0RxCounter
 27C0 8034              cpi R24,64
 27C2 09F0              breq X299
 27C4 25C7              xjmp L502
 27C6           X299:
 27C6           X221:
 27C6                   .dbline 1522
 27C6           ;                                                       {
 27C6                   .dbline 1523
 27C6           ;                                                               for(i=0;i<32;i++)
 27C6 AA24              clr R10
 27C8 2EC0              xjmp L727
 27CA           L724:
 27CA                   .dbline 1524
 27CA           ;                                                               {
 27CA                   .dbline 1525
 27CA           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 27CA 80E0              ldi R24,<_Uart0RxData+1
 27CC 90E0              ldi R25,>_Uart0RxData+1
 27CE EA2D              mov R30,R10
 27D0 FF27              clr R31
 27D2 EE0F              lsl R30
 27D4 FF1F              rol R31
 27D6 E80F              add R30,R24
 27D8 F91F              adc R31,R25
 27DA 2080              ldd R2,z+0
 27DC 3324              clr R3
 27DE 3092E201          sts _T_dat+1,R3
 27E2 2092E101          sts _T_dat,R2
 27E6                   .dbline 1526
 27E6           ;                                                                       T_dat<<=8;
 27E6 322C              mov R3,R2
 27E8 2224              clr R2
 27EA 3092E201          sts _T_dat+1,R3
 27EE 2092E101          sts _T_dat,R2
 27F2                   .dbline 1527
 27F2           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 27F2 80E0              ldi R24,<_Uart0RxData
 27F4 90E0              ldi R25,>_Uart0RxData
 27F6 EA2D              mov R30,R10
 27F8 FF27              clr R31
 27FA EE0F              lsl R30
 27FC FF1F              rol R31
 27FE E80F              add R30,R24
 2800 F91F              adc R31,R25
 2802 2080              ldd R2,z+0
 2804 3324              clr R3
 2806 4090E101          lds R4,_T_dat
 280A 5090E201          lds R5,_T_dat+1
 280E 4228              or R4,R2
 2810 5328              or R5,R3
 2812 5092E201          sts _T_dat+1,R5
 2816 4092E101          sts _T_dat,R4
 281A                   .dbline 1528
 281A           ;                                                                       SendManchester();
 281A 07D7              xcall _SendManchester
 281C                   .dbline 1529
 281C           ;                                                                       Delay_ms(20);
 281C 04E1              ldi R16,20
 281E 10E0              ldi R17,0
 2820 0E948305          xcall _Delay_ms
 2824                   .dbline 1530
 2824           ;                                                               }
 2824           L725:
 2824                   .dbline 1523
 2824 A394              inc R10
 2826           L727:
 2826                   .dbline 1523
 2826 8A2D              mov R24,R10
 2828 8032              cpi R24,32
 282A 78F2              brlo L724
 282C           X222:
 282C                   .dbline 1531
 282C           ;                                                       }               
 282C                   .dbline 1532
 282C           ;                                               }
 282C                   .dbline 1533
 282C           ;                                               break;
 282C F1C6              xjmp L502
 282E           L729:
 282E                   .dbline 1537
 282E           ; 
 282E           ; 
 282E           ;                                       case 0xB0://流量相关
 282E           ;                                               if(R_dat==0xb0) //下发流量系数
 282E 8091DF01          lds R24,_R_dat
 2832 9091E001          lds R25,_R_dat+1
 2836 803B              cpi R24,176
 2838 E0E0              ldi R30,0
 283A 9E07              cpc R25,R30
 283C 29F5              brne L730
 283E           X223:
 283E                   .dbline 1538
 283E           ;                                               {
 283E                   .dbline 1539
 283E           ;                                                       DataFlag=2;
 283E 82E0              ldi R24,2
 2840 90E0              ldi R25,0
 2842 9093C201          sts _DataFlag+1,R25
 2846 8093C101          sts _DataFlag,R24
 284A                   .dbline 1540
 284A           ;                                                       coeff_len=128;
 284A 80E8              ldi R24,128
 284C 90932D00          sts _coeff_len+1,R25
 2850 80932C00          sts _coeff_len,R24
 2854                   .dbline 1541
 2854           ;                                                       coeff_count=0;
 2854 2224              clr R2
 2856 3324              clr R3
 2858 30922B00          sts _coeff_count+1,R3
 285C 20922A00          sts _coeff_count,R2
 2860                   .dbline 1542
 2860           ;                                                       TimeOutFlag=0;
 2860 2092D901          sts _TimeOutFlag,R2
 2864                   .dbline 1543
 2864           ;                                                       Timer0Counter=1000;//8s定时
 2864 88EE              ldi R24,1000
 2866 93E0              ldi R25,3
 2868 90934602          sts _Timer0Counter+1,R25
 286C 80934502          sts _Timer0Counter,R24
 2870                   .dbline 1544
 2870           ;                                                       TCNT0=0x06; //8ms
 2870 86E0              ldi R24,6
 2872 82BF              out 0x32,R24
 2874                   .dbline 1545
 2874           ;                                                       TCCR0|=0x06;//256分频
 2874 83B7              in R24,0x33
 2876 8660              ori R24,6
 2878 83BF              out 0x33,R24
 287A                   .dbline 1546
 287A           ;                                                       TIFR|=0x01; //清定时器0中断标志
 287A 86B7              in R24,0x36
 287C 8160              ori R24,1
 287E 86BF              out 0x36,R24
 2880                   .dbline 1547
 2880           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 2880 87B7              in R24,0x37
 2882 8160              ori R24,1
 2884 87BF              out 0x37,R24
 2886                   .dbline 1548
 2886           ;                                               }
 2886 C4C6              xjmp L502
 2888           L730:
 2888                   .dbline 1549
 2888           ;                                               else  if(R_dat==0xb1)//上提流量系数
 2888 8091DF01          lds R24,_R_dat
 288C 9091E001          lds R25,_R_dat+1
 2890 813B              cpi R24,177
 2892 E0E0              ldi R30,0
 2894 9E07              cpc R25,R30
 2896 09F0              breq X300
 2898 92C0              xjmp L732
 289A           X300:
 289A           X224:
 289A                   .dbline 1550
 289A           ;                                               {
 289A                   .dbline 1551
 289A           ;                                                       Uart0TxData[0]=0xE8;
 289A 88EE              ldi R24,232
 289C 80932F00          sts _Uart0TxData,R24
 28A0                   .dbline 1552
 28A0           ;                                                       Uart0TxData[1]=0x40;
 28A0 80E4              ldi R24,64
 28A2 80933000          sts _Uart0TxData+1,R24
 28A6                   .dbline 1553
 28A6           ;                                                       Uart0TxData[2]=0x87;
 28A6 87E8              ldi R24,135
 28A8 80933100          sts _Uart0TxData+2,R24
 28AC                   .dbline 1554
 28AC           ;                                                       Uart0TxData[3]=2;//系数包2
 28AC 82E0              ldi R24,2
 28AE 80933200          sts _Uart0TxData+3,R24
 28B2                   .dbline 1555
 28B2           ;                                                       SendUart0_2(9,5);// 超时40ms    
 28B2 25E0              ldi R18,5
 28B4 30E0              ldi R19,0
 28B6 09E0              ldi R16,9
 28B8 0E947A04          xcall _SendUart0_2
 28BC                   .dbline 1556
 28BC           ;                                                       if(Uart0RxCounter==64) 
 28BC 8091FA01          lds R24,_Uart0RxCounter
 28C0 8034              cpi R24,64
 28C2 99F5              brne L737
 28C4           X225:
 28C4                   .dbline 1557
 28C4           ;                                                       {
 28C4                   .dbline 1558
 28C4           ;                                                               for(i=0;i<32;i++)
 28C4 AA24              clr R10
 28C6 2EC0              xjmp L742
 28C8           L739:
 28C8                   .dbline 1559
 28C8           ;                                                               {
 28C8                   .dbline 1560
 28C8           ;                                                                       Delay_ms(20);
 28C8 04E1              ldi R16,20
 28CA 10E0              ldi R17,0
 28CC 0E948305          xcall _Delay_ms
 28D0                   .dbline 1561
 28D0           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 28D0 80E0              ldi R24,<_Uart0RxData+1
 28D2 90E0              ldi R25,>_Uart0RxData+1
 28D4 EA2D              mov R30,R10
 28D6 FF27              clr R31
 28D8 EE0F              lsl R30
 28DA FF1F              rol R31
 28DC E80F              add R30,R24
 28DE F91F              adc R31,R25
 28E0 2080              ldd R2,z+0
 28E2 3324              clr R3
 28E4 3092E201          sts _T_dat+1,R3
 28E8 2092E101          sts _T_dat,R2
 28EC                   .dbline 1562
 28EC           ;                                                                       T_dat<<=8;
 28EC 322C              mov R3,R2
 28EE 2224              clr R2
 28F0 3092E201          sts _T_dat+1,R3
 28F4 2092E101          sts _T_dat,R2
 28F8                   .dbline 1563
 28F8           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 28F8 80E0              ldi R24,<_Uart0RxData
 28FA 90E0              ldi R25,>_Uart0RxData
 28FC EA2D              mov R30,R10
 28FE FF27              clr R31
 2900 EE0F              lsl R30
 2902 FF1F              rol R31
 2904 E80F              add R30,R24
 2906 F91F              adc R31,R25
 2908 2080              ldd R2,z+0
 290A 3324              clr R3
 290C 4090E101          lds R4,_T_dat
 2910 5090E201          lds R5,_T_dat+1
 2914 4228              or R4,R2
 2916 5328              or R5,R3
 2918 5092E201          sts _T_dat+1,R5
 291C 4092E101          sts _T_dat,R4
 2920                   .dbline 1564
 2920           ;                                                                       SendManchester();                
 2920 84D6              xcall _SendManchester
 2922                   .dbline 1565
 2922           ;                                                               }       
 2922           L740:
 2922                   .dbline 1558
 2922 A394              inc R10
 2924           L742:
 2924                   .dbline 1558
 2924 8A2D              mov R24,R10
 2926 8032              cpi R24,32
 2928 78F2              brlo L739
 292A           X226:
 292A                   .dbline 1566
 292A           ;                                                       }       
 292A           L737:
 292A                   .dbline 1568
 292A           ; 
 292A           ;                                                       Uart0TxData[0]=0xE8;
 292A 88EE              ldi R24,232
 292C 80932F00          sts _Uart0TxData,R24
 2930                   .dbline 1569
 2930           ;                                                       Uart0TxData[1]=0x40;
 2930 80E4              ldi R24,64
 2932 80933000          sts _Uart0TxData+1,R24
 2936                   .dbline 1570
 2936           ;                                                       Uart0TxData[2]=0x87;
 2936 87E8              ldi R24,135
 2938 80933100          sts _Uart0TxData+2,R24
 293C                   .dbline 1571
 293C           ;                                                       Uart0TxData[3]=3;//系数包3
 293C 83E0              ldi R24,3
 293E 80933200          sts _Uart0TxData+3,R24
 2942                   .dbline 1572
 2942           ;                                                       SendUart0_2(9,5);// 超时40ms     
 2942 25E0              ldi R18,5
 2944 30E0              ldi R19,0
 2946 09E0              ldi R16,9
 2948 0E947A04          xcall _SendUart0_2
 294C                   .dbline 1573
 294C           ;                                                       if(Uart0RxCounter==64) 
 294C 8091FA01          lds R24,_Uart0RxCounter
 2950 8034              cpi R24,64
 2952 09F0              breq X301
 2954 5DC6              xjmp L502
 2956           X301:
 2956           X227:
 2956                   .dbline 1574
 2956           ;                                                       {
 2956                   .dbline 1575
 2956           ;                                                               for(i=0;i<32;i++)
 2956 AA24              clr R10
 2958 2EC0              xjmp L752
 295A           L749:
 295A                   .dbline 1576
 295A           ;                                                               {
 295A                   .dbline 1577
 295A           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 295A 80E0              ldi R24,<_Uart0RxData+1
 295C 90E0              ldi R25,>_Uart0RxData+1
 295E EA2D              mov R30,R10
 2960 FF27              clr R31
 2962 EE0F              lsl R30
 2964 FF1F              rol R31
 2966 E80F              add R30,R24
 2968 F91F              adc R31,R25
 296A 2080              ldd R2,z+0
 296C 3324              clr R3
 296E 3092E201          sts _T_dat+1,R3
 2972 2092E101          sts _T_dat,R2
 2976                   .dbline 1578
 2976           ;                                                                       T_dat<<=8;
 2976 322C              mov R3,R2
 2978 2224              clr R2
 297A 3092E201          sts _T_dat+1,R3
 297E 2092E101          sts _T_dat,R2
 2982                   .dbline 1579
 2982           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 2982 80E0              ldi R24,<_Uart0RxData
 2984 90E0              ldi R25,>_Uart0RxData
 2986 EA2D              mov R30,R10
 2988 FF27              clr R31
 298A EE0F              lsl R30
 298C FF1F              rol R31
 298E E80F              add R30,R24
 2990 F91F              adc R31,R25
 2992 2080              ldd R2,z+0
 2994 3324              clr R3
 2996 4090E101          lds R4,_T_dat
 299A 5090E201          lds R5,_T_dat+1
 299E 4228              or R4,R2
 29A0 5328              or R5,R3
 29A2 5092E201          sts _T_dat+1,R5
 29A6 4092E101          sts _T_dat,R4
 29AA                   .dbline 1580
 29AA           ;                                                                       SendManchester();
 29AA 3FD6              xcall _SendManchester
 29AC                   .dbline 1581
 29AC           ;                                                                       Delay_ms(20);
 29AC 04E1              ldi R16,20
 29AE 10E0              ldi R17,0
 29B0 0E948305          xcall _Delay_ms
 29B4                   .dbline 1582
 29B4           ;                                                               }
 29B4           L750:
 29B4                   .dbline 1575
 29B4 A394              inc R10
 29B6           L752:
 29B6                   .dbline 1575
 29B6 8A2D              mov R24,R10
 29B8 8032              cpi R24,32
 29BA 78F2              brlo L749
 29BC           X228:
 29BC                   .dbline 1583
 29BC           ;                                                       }               
 29BC                   .dbline 1584
 29BC           ;                                               }
 29BC 29C6              xjmp L502
 29BE           L732:
 29BE                   .dbline 1585
 29BE           ;                                               else if(R_dat==0xb2)//读参数，包括顺、逆幅和顺、逆阈值，暂只考虑上流量计，共8字节
 29BE 8091DF01          lds R24,_R_dat
 29C2 9091E001          lds R25,_R_dat+1
 29C6 823B              cpi R24,178
 29C8 E0E0              ldi R30,0
 29CA 9E07              cpc R25,R30
 29CC 09F0              breq X302
 29CE 54C0              xjmp L754
 29D0           X302:
 29D0           X229:
 29D0                   .dbline 1586
 29D0           ;                                               {
 29D0                   .dbline 1587
 29D0           ;                                                   Uart0TxData[0]=0xE8;
 29D0 88EE              ldi R24,232
 29D2 80932F00          sts _Uart0TxData,R24
 29D6                   .dbline 1588
 29D6           ;                                                       Uart0TxData[1]=0x40;
 29D6 80E4              ldi R24,64
 29D8 80933000          sts _Uart0TxData+1,R24
 29DC                   .dbline 1589
 29DC           ;                                                       Uart0TxData[2]=0xb2;
 29DC 82EB              ldi R24,178
 29DE 80933100          sts _Uart0TxData+2,R24
 29E2                   .dbline 1590
 29E2           ;                                                       SendUart0_2(9,5);// 超时40ms    
 29E2 25E0              ldi R18,5
 29E4 30E0              ldi R19,0
 29E6 09E0              ldi R16,9
 29E8 0E947A04          xcall _SendUart0_2
 29EC                   .dbline 1591
 29EC           ;                                                       for(k=0;k<8;k+=2)
 29EC 2224              clr R2
 29EE 3324              clr R3
 29F0 3092BC01          sts _k+1,R3
 29F4 2092BB01          sts _k,R2
 29F8 35C0              xjmp L761
 29FA           L758:
 29FA                   .dbline 1592
 29FA           ;                                                       {
 29FA                   .dbline 1593
 29FA           ;                                                       T_dat=Uart0RxData[k];
 29FA 80E0              ldi R24,<_Uart0RxData
 29FC 90E0              ldi R25,>_Uart0RxData
 29FE E091BB01          lds R30,_k
 2A02 F091BC01          lds R31,_k+1
 2A06 E80F              add R30,R24
 2A08 F91F              adc R31,R25
 2A0A 2080              ldd R2,z+0
 2A0C 3324              clr R3
 2A0E 3092E201          sts _T_dat+1,R3
 2A12 2092E101          sts _T_dat,R2
 2A16                   .dbline 1594
 2A16           ;                                                       T_dat<<=8;
 2A16 322C              mov R3,R2
 2A18 2224              clr R2
 2A1A 3092E201          sts _T_dat+1,R3
 2A1E 2092E101          sts _T_dat,R2
 2A22                   .dbline 1595
 2A22           ;                                                       T_dat|=Uart0RxData[k+1];
 2A22 E091BB01          lds R30,_k
 2A26 F091BC01          lds R31,_k+1
 2A2A 3196              adiw R30,1
 2A2C E80F              add R30,R24
 2A2E F91F              adc R31,R25
 2A30 2080              ldd R2,z+0
 2A32 3324              clr R3
 2A34 4090E101          lds R4,_T_dat
 2A38 5090E201          lds R5,_T_dat+1
 2A3C 4228              or R4,R2
 2A3E 5328              or R5,R3
 2A40 5092E201          sts _T_dat+1,R5
 2A44 4092E101          sts _T_dat,R4
 2A48                   .dbline 1596
 2A48           ;                                                       SendManchester();
 2A48 F0D5              xcall _SendManchester
 2A4A                   .dbline 1597
 2A4A           ;                                                       Delay_ms(40);
 2A4A 08E2              ldi R16,40
 2A4C 10E0              ldi R17,0
 2A4E 0E948305          xcall _Delay_ms
 2A52                   .dbline 1598
 2A52           ;                                                       }
 2A52           L759:
 2A52                   .dbline 1591
 2A52 8091BB01          lds R24,_k
 2A56 9091BC01          lds R25,_k+1
 2A5A 0296              adiw R24,2
 2A5C 9093BC01          sts _k+1,R25
 2A60 8093BB01          sts _k,R24
 2A64           L761:
 2A64                   .dbline 1591
 2A64 8091BB01          lds R24,_k
 2A68 9091BC01          lds R25,_k+1
 2A6C 8830              cpi R24,8
 2A6E E0E0              ldi R30,0
 2A70 9E07              cpc R25,R30
 2A72 08F4              brsh X303
 2A74 C2CF              xjmp L758
 2A76           X303:
 2A76           X230:
 2A76                   .dbline 1599
 2A76           ;                                               }
 2A76 CCC5              xjmp L502
 2A78           L754:
 2A78                   .dbline 1600
 2A78           ;                                               else  if(R_dat>0xbb)//1800点提取,连续提取流量测试数据，4个通道分别提取，命令为0xBC-0xBF
 2A78 8BEB              ldi R24,187
 2A7A 90E0              ldi R25,0
 2A7C 2090DF01          lds R2,_R_dat
 2A80 3090E001          lds R3,_R_dat+1
 2A84 8215              cp R24,R2
 2A86 9305              cpc R25,R3
 2A88 0CF0              brlt X304
 2A8A C2C5              xjmp L502
 2A8C           X304:
 2A8C           X231:
 2A8C                   .dbline 1601
 2A8C           ;                                               {   
 2A8C                   .dbline 1602
 2A8C           ;                                                       Uart0TxData[0]=0xE8;
 2A8C 88EE              ldi R24,232
 2A8E 80932F00          sts _Uart0TxData,R24
 2A92                   .dbline 1603
 2A92           ;                                                       Uart0TxData[1]=0x40;
 2A92 80E4              ldi R24,64
 2A94 80933000          sts _Uart0TxData+1,R24
 2A98                   .dbline 1604
 2A98           ;                                                       Uart0TxData[2]=R_dat;
 2A98 20923100          sts _Uart0TxData+2,R2
 2A9C                   .dbline 1605
 2A9C           ;                                                       SendUart0_2(9,125);// 超时1秒
 2A9C 2DE7              ldi R18,125
 2A9E 30E0              ldi R19,0
 2AA0 09E0              ldi R16,9
 2AA2 0E947A04          xcall _SendUart0_2
 2AA6                   .dbline 1606
 2AA6           ;                                                       if((Uart0RxCounter==4)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x00)&&(Uart0RxData[2]==R_dat))//流量采样完毕并正确响应了
 2AA6 8091FA01          lds R24,_Uart0RxCounter
 2AAA 8430              cpi R24,4
 2AAC 09F0              breq X305
 2AAE B0C5              xjmp L502
 2AB0           X305:
 2AB0           X232:
 2AB0 8091FB01          lds R24,_Uart0RxData
 2AB4 8535              cpi R24,85
 2AB6 09F0              breq X306
 2AB8 ABC5              xjmp L502
 2ABA           X306:
 2ABA           X233:
 2ABA 2090FC01          lds R2,_Uart0RxData+1
 2ABE 2220              tst R2
 2AC0 09F0              breq X307
 2AC2 A6C5              xjmp L502
 2AC4           X307:
 2AC4           X234:
 2AC4 2090DF01          lds R2,_R_dat
 2AC8 3090E001          lds R3,_R_dat+1
 2ACC 4090FD01          lds R4,_Uart0RxData+2
 2AD0 5524              clr R5
 2AD2 4214              cp R4,R2
 2AD4 5304              cpc R5,R3
 2AD6 09F0              breq X308
 2AD8 9BC5              xjmp L502
 2ADA           X308:
 2ADA           X235:
 2ADA                   .dbline 1607
 2ADA           ;                                                       {
 2ADA                   .dbline 1608
 2ADA           ;                                                        for(k=0;k<1800;k++)//共1800帧数据，全部提取
 2ADA 2224              clr R2
 2ADC 3324              clr R3
 2ADE 3092BC01          sts _k+1,R3
 2AE2 2092BB01          sts _k,R2
 2AE6 36C0              xjmp L773
 2AE8           L770:
 2AE8                   .dbline 1609
 2AE8           ;                                                        {
 2AE8                   .dbline 1610
 2AE8           ;                                                         Uart0TxData[0]=0xE8;
 2AE8 88EE              ldi R24,232
 2AEA 80932F00          sts _Uart0TxData,R24
 2AEE                   .dbline 1611
 2AEE           ;                                                         Uart0TxData[1]=0x40;
 2AEE 80E4              ldi R24,64
 2AF0 80933000          sts _Uart0TxData+1,R24
 2AF4                   .dbline 1612
 2AF4           ;                                                         Uart0TxData[2]=0xbb;//连续提取波形命令
 2AF4 8BEB              ldi R24,187
 2AF6 80933100          sts _Uart0TxData+2,R24
 2AFA                   .dbline 1613
 2AFA           ;                                                         SendUart0_2(9,4);// 超时32ms 
 2AFA 24E0              ldi R18,4
 2AFC 30E0              ldi R19,0
 2AFE 09E0              ldi R16,9
 2B00 0E947A04          xcall _SendUart0_2
 2B04                   .dbline 1614
 2B04           ;                                                         T_dat=Uart0RxData[1];//应该返回2字节有效数据
 2B04 2090FC01          lds R2,_Uart0RxData+1
 2B08 3324              clr R3
 2B0A 3092E201          sts _T_dat+1,R3
 2B0E 2092E101          sts _T_dat,R2
 2B12                   .dbline 1615
 2B12           ;                                                         T_dat<<=8;
 2B12 2090E101          lds R2,_T_dat
 2B16 3090E201          lds R3,_T_dat+1
 2B1A 322C              mov R3,R2
 2B1C 2224              clr R2
 2B1E 3092E201          sts _T_dat+1,R3
 2B22 2092E101          sts _T_dat,R2
 2B26                   .dbline 1616
 2B26           ;                                                         T_dat|=Uart0RxData[0];
 2B26 2090FB01          lds R2,_Uart0RxData
 2B2A 3324              clr R3
 2B2C 4090E101          lds R4,_T_dat
 2B30 5090E201          lds R5,_T_dat+1
 2B34 4228              or R4,R2
 2B36 5328              or R5,R3
 2B38 5092E201          sts _T_dat+1,R5
 2B3C 4092E101          sts _T_dat,R4
 2B40                   .dbline 1617
 2B40           ;                                                         SendManchester();
 2B40 74D5              xcall _SendManchester
 2B42                   .dbline 1618
 2B42           ;                                                        }
 2B42           L771:
 2B42                   .dbline 1608
 2B42 8091BB01          lds R24,_k
 2B46 9091BC01          lds R25,_k+1
 2B4A 0196              adiw R24,1
 2B4C 9093BC01          sts _k+1,R25
 2B50 8093BB01          sts _k,R24
 2B54           L773:
 2B54                   .dbline 1608
 2B54 8091BB01          lds R24,_k
 2B58 9091BC01          lds R25,_k+1
 2B5C 8830              cpi R24,8
 2B5E E7E0              ldi R30,7
 2B60 9E07              cpc R25,R30
 2B62 10F2              brlo L770
 2B64           X236:
 2B64                   .dbline 1619
 2B64           ;                                                  }
 2B64                   .dbline 1620
 2B64           ;                                               } 
 2B64                   .dbline 1621
 2B64           ;                                               break;
 2B64 55C5              xjmp L502
 2B66           L777:
 2B66                   .dbline 1624
 2B66           ; 
 2B66           ;                                       case 0xc0://所有参数全采，上传16字节共8帧
 2B66           ;                                               if( (R_dat==0xc0) || (R_dat==0xcf) )
 2B66 C090DF01          lds R12,_R_dat
 2B6A D090E001          lds R13,_R_dat+1
 2B6E C601              movw R24,R12
 2B70 803C              cpi R24,192
 2B72 E0E0              ldi R30,0
 2B74 9E07              cpc R25,R30
 2B76 29F0              breq L780
 2B78           X237:
 2B78 8F3C              cpi R24,207
 2B7A E0E0              ldi R30,0
 2B7C 9E07              cpc R25,R30
 2B7E 09F0              breq X309
 2B80 74C3              xjmp L778
 2B82           X309:
 2B82           X238:
 2B82           L780:
 2B82                   .dbline 1625
 2B82           ;                                               {
 2B82                   .dbline 1626
 2B82           ;                                                       Uart0TxData[0]=0xE8;
 2B82 88EE              ldi R24,232
 2B84 80932F00          sts _Uart0TxData,R24
 2B88                   .dbline 1627
 2B88           ;                                                       Uart0TxData[1]=0x40;
 2B88 80E4              ldi R24,64
 2B8A 80933000          sts _Uart0TxData+1,R24
 2B8E                   .dbline 1628
 2B8E           ;                                                       Uart0TxData[2]=0x89;
 2B8E 89E8              ldi R24,137
 2B90 80933100          sts _Uart0TxData+2,R24
 2B94                   .dbline 1629
 2B94           ;                                                       Uart0TxData[3]=9;
 2B94 89E0              ldi R24,9
 2B96 80933200          sts _Uart0TxData+3,R24
 2B9A                   .dbline 1630
 2B9A           ;                                                       SendUart0_2(9,50);//流量板直读检测，超时400ms
 2B9A 22E3              ldi R18,50
 2B9C 30E0              ldi R19,0
 2B9E 09E0              ldi R16,9
 2BA0 0E947A04          xcall _SendUart0_2
 2BA4                   .dbline 1632
 2BA4           ;                                                       //if(Uart0RxCounter==64)//成功接收到压力、温度、流量数据，先低字节后高字节
 2BA4           ;                                                       {
 2BA4                   .dbline 1634
 2BA4           ;                                                               
 2BA4           ;                                                               if((Uart0RxCounter==16)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x0c)&&(Uart0RxData[2]==0x89))//绝对时间差法流量板，严格按帧格式返回16字节（含12字节有效数据）
 2BA4 8091FA01          lds R24,_Uart0RxCounter
 2BA8 8031              cpi R24,16
 2BAA 09F0              breq X310
 2BAC EEC0              xjmp L784
 2BAE           X310:
 2BAE           X239:
 2BAE 8091FB01          lds R24,_Uart0RxData
 2BB2 8535              cpi R24,85
 2BB4 09F0              breq X311
 2BB6 E9C0              xjmp L784
 2BB8           X311:
 2BB8           X240:
 2BB8 8091FC01          lds R24,_Uart0RxData+1
 2BBC 8C30              cpi R24,12
 2BBE 09F0              breq X312
 2BC0 E4C0              xjmp L784
 2BC2           X312:
 2BC2           X241:
 2BC2 8091FD01          lds R24,_Uart0RxData+2
 2BC6 8938              cpi R24,137
 2BC8 09F0              breq X313
 2BCA DFC0              xjmp L784
 2BCC           X313:
 2BCC           X242:
 2BCC                   .dbline 1635
 2BCC           ;                                                               {
 2BCC                   .dbline 1636
 2BCC           ;                                                               T_dat=Uart0RxData[4];
 2BCC 2090FF01          lds R2,_Uart0RxData+4
 2BD0 3324              clr R3
 2BD2 3092E201          sts _T_dat+1,R3
 2BD6 2092E101          sts _T_dat,R2
 2BDA                   .dbline 1637
 2BDA           ;                                                               T_dat<<=8;
 2BDA 2090E101          lds R2,_T_dat
 2BDE 3090E201          lds R3,_T_dat+1
 2BE2 322C              mov R3,R2
 2BE4 2224              clr R2
 2BE6 3092E201          sts _T_dat+1,R3
 2BEA 2092E101          sts _T_dat,R2
 2BEE                   .dbline 1638
 2BEE           ;                                                               T_dat|=Uart0RxData[3];
 2BEE 2090FE01          lds R2,_Uart0RxData+3
 2BF2 3324              clr R3
 2BF4 4090E101          lds R4,_T_dat
 2BF8 5090E201          lds R5,_T_dat+1
 2BFC 4228              or R4,R2
 2BFE 5328              or R5,R3
 2C00 5092E201          sts _T_dat+1,R5
 2C04 4092E101          sts _T_dat,R4
 2C08                   .dbline 1639
 2C08           ;                                                               SendManchester();//压力
 2C08 10D5              xcall _SendManchester
 2C0A                   .dbline 1640
 2C0A           ;                                                               crc16array[0]=(unsigned char)(T_dat);
 2C0A 2090E101          lds R2,_T_dat
 2C0E 3090E201          lds R3,_T_dat+1
 2C12 20920000          sts _crc16array,R2
 2C16                   .dbline 1641
 2C16           ;                                                               crc16array[1]=(unsigned char)(T_dat>>8);
 2C16 232C              mov R2,R3
 2C18 3324              clr R3
 2C1A 27FC              sbrc R2,7
 2C1C 3094              com R3
 2C1E 20920100          sts _crc16array+1,R2
 2C22                   .dbline 1644
 2C22           ; 
 2C22           ; 
 2C22           ;                                                               Delay_ms(30);   
 2C22 0EE1              ldi R16,30
 2C24 10E0              ldi R17,0
 2C26 0E948305          xcall _Delay_ms
 2C2A                   .dbline 1645
 2C2A           ;                                                               T_dat=Uart0RxData[6];
 2C2A 20900102          lds R2,_Uart0RxData+6
 2C2E 3324              clr R3
 2C30 3092E201          sts _T_dat+1,R3
 2C34 2092E101          sts _T_dat,R2
 2C38                   .dbline 1646
 2C38           ;                                                               T_dat<<=8;
 2C38 2090E101          lds R2,_T_dat
 2C3C 3090E201          lds R3,_T_dat+1
 2C40 322C              mov R3,R2
 2C42 2224              clr R2
 2C44 3092E201          sts _T_dat+1,R3
 2C48 2092E101          sts _T_dat,R2
 2C4C                   .dbline 1647
 2C4C           ;                                                               T_dat|=Uart0RxData[5];
 2C4C 20900002          lds R2,_Uart0RxData+5
 2C50 3324              clr R3
 2C52 4090E101          lds R4,_T_dat
 2C56 5090E201          lds R5,_T_dat+1
 2C5A 4228              or R4,R2
 2C5C 5328              or R5,R3
 2C5E 5092E201          sts _T_dat+1,R5
 2C62 4092E101          sts _T_dat,R4
 2C66                   .dbline 1648
 2C66           ;                                                               SendManchester();//温度
 2C66 E1D4              xcall _SendManchester
 2C68                   .dbline 1649
 2C68           ;                                                               crc16array[2]=(unsigned char)(T_dat);
 2C68 2090E101          lds R2,_T_dat
 2C6C 3090E201          lds R3,_T_dat+1
 2C70 20920200          sts _crc16array+2,R2
 2C74                   .dbline 1650
 2C74           ;                                                               crc16array[3]=(unsigned char)(T_dat>>8);
 2C74 232C              mov R2,R3
 2C76 3324              clr R3
 2C78 27FC              sbrc R2,7
 2C7A 3094              com R3
 2C7C 20920300          sts _crc16array+3,R2
 2C80                   .dbline 1652
 2C80           ; 
 2C80           ;                                                               Delay_ms(30);    
 2C80 0EE1              ldi R16,30
 2C82 10E0              ldi R17,0
 2C84 0E948305          xcall _Delay_ms
 2C88                   .dbline 1655
 2C88           ;                                                               
 2C88           ;                                                               //顺流时间，浮点数
 2C88           ;                                                               myFIB.b[0]=Uart0RxData[7];
 2C88 20900202          lds R2,_Uart0RxData+7
 2C8C 20924802          sts _myFIB,R2
 2C90                   .dbline 1656
 2C90           ;                                                               myFIB.b[1]=Uart0RxData[8];
 2C90 20900302          lds R2,_Uart0RxData+8
 2C94 20924902          sts _myFIB+1,R2
 2C98                   .dbline 1657
 2C98           ;                                                               myFIB.b[2]=Uart0RxData[9];
 2C98 20900402          lds R2,_Uart0RxData+9
 2C9C 20924A02          sts _myFIB+2,R2
 2CA0                   .dbline 1658
 2CA0           ;                                                               myFIB.b[3]=Uart0RxData[10];
 2CA0 20900502          lds R2,_Uart0RxData+10
 2CA4 20924B02          sts _myFIB+3,R2
 2CA8                   .dbline 1660
 2CA8           ;                                                
 2CA8           ;                                                       T_dat=myFIB.i[1];
 2CA8 20904A02          lds R2,_myFIB+2
 2CAC 30904B02          lds R3,_myFIB+2+1
 2CB0 3092E201          sts _T_dat+1,R3
 2CB4 2092E101          sts _T_dat,R2
 2CB8                   .dbline 1661
 2CB8           ;                                                       SendManchester();//顺流时间
 2CB8 B8D4              xcall _SendManchester
 2CBA                   .dbline 1662
 2CBA           ;                                                               crc16array[4]=(unsigned char)(T_dat);
 2CBA 2090E101          lds R2,_T_dat
 2CBE 3090E201          lds R3,_T_dat+1
 2CC2 20920400          sts _crc16array+4,R2
 2CC6                   .dbline 1663
 2CC6           ;                                                               crc16array[5]=(unsigned char)(T_dat>>8);
 2CC6 232C              mov R2,R3
 2CC8 3324              clr R3
 2CCA 27FC              sbrc R2,7
 2CCC 3094              com R3
 2CCE 20920500          sts _crc16array+5,R2
 2CD2                   .dbline 1665
 2CD2           ; 
 2CD2           ;                                                               Delay_ms(30);   
 2CD2 0EE1              ldi R16,30
 2CD4 10E0              ldi R17,0
 2CD6 0E948305          xcall _Delay_ms
 2CDA                   .dbline 1666
 2CDA           ;                                                               T_dat=myFIB.i[0];
 2CDA 20904802          lds R2,_myFIB
 2CDE 30904902          lds R3,_myFIB+1
 2CE2 3092E201          sts _T_dat+1,R3
 2CE6 2092E101          sts _T_dat,R2
 2CEA                   .dbline 1667
 2CEA           ;                                                               SendManchester();//顺流时间
 2CEA 9FD4              xcall _SendManchester
 2CEC                   .dbline 1668
 2CEC           ;                                                               crc16array[6]=(unsigned char)(T_dat);
 2CEC 2090E101          lds R2,_T_dat
 2CF0 3090E201          lds R3,_T_dat+1
 2CF4 20920600          sts _crc16array+6,R2
 2CF8                   .dbline 1669
 2CF8           ;                                                               crc16array[7]=(unsigned char)(T_dat>>8);
 2CF8 232C              mov R2,R3
 2CFA 3324              clr R3
 2CFC 27FC              sbrc R2,7
 2CFE 3094              com R3
 2D00 20920700          sts _crc16array+7,R2
 2D04                   .dbline 1671
 2D04           ; 
 2D04           ;                                                               Delay_ms(30);   
 2D04 0EE1              ldi R16,30
 2D06 10E0              ldi R17,0
 2D08 0E948305          xcall _Delay_ms
 2D0C                   .dbline 1674
 2D0C           ; 
 2D0C           ;                                                               //逆流时间，浮点数
 2D0C           ;                                                               myFIB.b[0]=Uart0RxData[11];
 2D0C 20900602          lds R2,_Uart0RxData+11
 2D10 20924802          sts _myFIB,R2
 2D14                   .dbline 1675
 2D14           ;                                                               myFIB.b[1]=Uart0RxData[12];
 2D14 20900702          lds R2,_Uart0RxData+12
 2D18 20924902          sts _myFIB+1,R2
 2D1C                   .dbline 1676
 2D1C           ;                                                               myFIB.b[2]=Uart0RxData[13];
 2D1C 20900802          lds R2,_Uart0RxData+13
 2D20 20924A02          sts _myFIB+2,R2
 2D24                   .dbline 1677
 2D24           ;                                                               myFIB.b[3]=Uart0RxData[14];
 2D24 20900902          lds R2,_Uart0RxData+14
 2D28 20924B02          sts _myFIB+3,R2
 2D2C                   .dbline 1679
 2D2C           ; 
 2D2C           ;                                                               T_dat=myFIB.i[1];
 2D2C 20904A02          lds R2,_myFIB+2
 2D30 30904B02          lds R3,_myFIB+2+1
 2D34 3092E201          sts _T_dat+1,R3
 2D38 2092E101          sts _T_dat,R2
 2D3C                   .dbline 1680
 2D3C           ;                                                               SendManchester();//逆流时间
 2D3C 76D4              xcall _SendManchester
 2D3E                   .dbline 1681
 2D3E           ;                                                               crc16array[8]=(unsigned char)(T_dat);
 2D3E 2090E101          lds R2,_T_dat
 2D42 3090E201          lds R3,_T_dat+1
 2D46 20920800          sts _crc16array+8,R2
 2D4A                   .dbline 1682
 2D4A           ;                                                               crc16array[9]=(unsigned char)(T_dat>>8);
 2D4A 232C              mov R2,R3
 2D4C 3324              clr R3
 2D4E 27FC              sbrc R2,7
 2D50 3094              com R3
 2D52 20920900          sts _crc16array+9,R2
 2D56                   .dbline 1685
 2D56           ; 
 2D56           ; 
 2D56           ;                                                               Delay_ms(30);   
 2D56 0EE1              ldi R16,30
 2D58 10E0              ldi R17,0
 2D5A 0E948305          xcall _Delay_ms
 2D5E                   .dbline 1686
 2D5E           ;                                                               T_dat=myFIB.i[0];
 2D5E 20904802          lds R2,_myFIB
 2D62 30904902          lds R3,_myFIB+1
 2D66 3092E201          sts _T_dat+1,R3
 2D6A 2092E101          sts _T_dat,R2
 2D6E                   .dbline 1687
 2D6E           ;                                                               SendManchester();//逆流时间
 2D6E 5DD4              xcall _SendManchester
 2D70                   .dbline 1688
 2D70           ;                                                               crc16array[10]=(unsigned char)(T_dat);
 2D70 2090E101          lds R2,_T_dat
 2D74 3090E201          lds R3,_T_dat+1
 2D78 20920A00          sts _crc16array+10,R2
 2D7C                   .dbline 1689
 2D7C           ;                                                               crc16array[11]=(unsigned char)(T_dat>>8);
 2D7C 232C              mov R2,R3
 2D7E 3324              clr R3
 2D80 27FC              sbrc R2,7
 2D82 3094              com R3
 2D84 20920B00          sts _crc16array+11,R2
 2D88                   .dbline 1690
 2D88           ;                                                               }
 2D88 64C1              xjmp L785
 2D8A           L784:
 2D8A                   .dbline 1692
 2D8A           ;                                                      else//常规流量计
 2D8A           ;                                                           {
 2D8A                   .dbline 1693
 2D8A           ;                                                               T_dat=Uart0RxData[1];
 2D8A 2090FC01          lds R2,_Uart0RxData+1
 2D8E 3324              clr R3
 2D90 3092E201          sts _T_dat+1,R3
 2D94 2092E101          sts _T_dat,R2
 2D98                   .dbline 1694
 2D98           ;                                                               T_dat<<=8;
 2D98 2090E101          lds R2,_T_dat
 2D9C 3090E201          lds R3,_T_dat+1
 2DA0 322C              mov R3,R2
 2DA2 2224              clr R2
 2DA4 3092E201          sts _T_dat+1,R3
 2DA8 2092E101          sts _T_dat,R2
 2DAC                   .dbline 1695
 2DAC           ;                                                               T_dat|=Uart0RxData[0];
 2DAC 2090FB01          lds R2,_Uart0RxData
 2DB0 3324              clr R3
 2DB2 4090E101          lds R4,_T_dat
 2DB6 5090E201          lds R5,_T_dat+1
 2DBA 4228              or R4,R2
 2DBC 5328              or R5,R3
 2DBE 5092E201          sts _T_dat+1,R5
 2DC2 4092E101          sts _T_dat,R4
 2DC6                   .dbline 1696
 2DC6           ;                                                               SendManchester();//压力
 2DC6 31D4              xcall _SendManchester
 2DC8                   .dbline 1697
 2DC8           ;                                                               crc16array[0]=(unsigned char)(T_dat);
 2DC8 2090E101          lds R2,_T_dat
 2DCC 3090E201          lds R3,_T_dat+1
 2DD0 20920000          sts _crc16array,R2
 2DD4                   .dbline 1698
 2DD4           ;                                                               crc16array[1]=(unsigned char)(T_dat>>8);
 2DD4 232C              mov R2,R3
 2DD6 3324              clr R3
 2DD8 27FC              sbrc R2,7
 2DDA 3094              com R3
 2DDC 20920100          sts _crc16array+1,R2
 2DE0                   .dbline 1701
 2DE0           ; 
 2DE0           ; 
 2DE0           ;                                                               Delay_ms(30);   
 2DE0 0EE1              ldi R16,30
 2DE2 10E0              ldi R17,0
 2DE4 0E948305          xcall _Delay_ms
 2DE8                   .dbline 1702
 2DE8           ;                                                               T_dat=Uart0RxData[3];
 2DE8 2090FE01          lds R2,_Uart0RxData+3
 2DEC 3324              clr R3
 2DEE 3092E201          sts _T_dat+1,R3
 2DF2 2092E101          sts _T_dat,R2
 2DF6                   .dbline 1703
 2DF6           ;                                                               T_dat<<=8;
 2DF6 2090E101          lds R2,_T_dat
 2DFA 3090E201          lds R3,_T_dat+1
 2DFE 322C              mov R3,R2
 2E00 2224              clr R2
 2E02 3092E201          sts _T_dat+1,R3
 2E06 2092E101          sts _T_dat,R2
 2E0A                   .dbline 1704
 2E0A           ;                                                               T_dat|=Uart0RxData[2];
 2E0A 2090FD01          lds R2,_Uart0RxData+2
 2E0E 3324              clr R3
 2E10 4090E101          lds R4,_T_dat
 2E14 5090E201          lds R5,_T_dat+1
 2E18 4228              or R4,R2
 2E1A 5328              or R5,R3
 2E1C 5092E201          sts _T_dat+1,R5
 2E20 4092E101          sts _T_dat,R4
 2E24                   .dbline 1705
 2E24           ;                                                               SendManchester();//温度
 2E24 02D4              xcall _SendManchester
 2E26                   .dbline 1706
 2E26           ;                                                               crc16array[2]=(unsigned char)(T_dat);
 2E26 2090E101          lds R2,_T_dat
 2E2A 3090E201          lds R3,_T_dat+1
 2E2E 20920200          sts _crc16array+2,R2
 2E32                   .dbline 1707
 2E32           ;                                                               crc16array[3]=(unsigned char)(T_dat>>8);
 2E32 232C              mov R2,R3
 2E34 3324              clr R3
 2E36 27FC              sbrc R2,7
 2E38 3094              com R3
 2E3A 20920300          sts _crc16array+3,R2
 2E3E                   .dbline 1709
 2E3E           ; 
 2E3E           ;                                                               Delay_ms(30);   
 2E3E 0EE1              ldi R16,30
 2E40 10E0              ldi R17,0
 2E42 0E948305          xcall _Delay_ms
 2E46                   .dbline 1711
 2E46           ;                                                               
 2E46           ;                                                               lfib=Uart0RxData[5];
 2E46 20900002          lds R2,_Uart0RxData+5
 2E4A 3324              clr R3
 2E4C 4424              clr R4
 2E4E 5524              clr R5
 2E50 30922300          sts _lfib+1,R3
 2E54 20922200          sts _lfib,R2
 2E58 50922500          sts _lfib+2+1,R5
 2E5C 40922400          sts _lfib+2,R4
 2E60                   .dbline 1712
 2E60           ;                                                               lfib<<=8;
 2E60 88E0              ldi R24,8
 2E62 90E0              ldi R25,0
 2E64 20912400          lds R18,_lfib+2
 2E68 30912500          lds R19,_lfib+2+1
 2E6C 00912200          lds R16,_lfib
 2E70 10912300          lds R17,_lfib+1
 2E74 8A93              st -y,R24
 2E76 0E940000          xcall lsl32
 2E7A 10932300          sts _lfib+1,R17
 2E7E 00932200          sts _lfib,R16
 2E82 30932500          sts _lfib+2+1,R19
 2E86 20932400          sts _lfib+2,R18
 2E8A                   .dbline 1713
 2E8A           ;                                                               lfib|=Uart0RxData[4];
 2E8A 2090FF01          lds R2,_Uart0RxData+4
 2E8E 3324              clr R3
 2E90 4424              clr R4
 2E92 5524              clr R5
 2E94 3801              movw R6,R16
 2E96 4901              movw R8,R18
 2E98 6228              or R6,R2
 2E9A 7328              or R7,R3
 2E9C 8428              or R8,R4
 2E9E 9528              or R9,R5
 2EA0 70922300          sts _lfib+1,R7
 2EA4 60922200          sts _lfib,R6
 2EA8 90922500          sts _lfib+2+1,R9
 2EAC 80922400          sts _lfib+2,R8
 2EB0                   .dbline 1714
 2EB0           ;                                                               lfib&=0x0000ffff;
 2EB0 4FEF              ldi R20,255
 2EB2 5FEF              ldi R21,255
 2EB4 60E0              ldi R22,0
 2EB6 70E0              ldi R23,0
 2EB8 1301              movw R2,R6
 2EBA 2401              movw R4,R8
 2EBC 2422              and R2,R20
 2EBE 3522              and R3,R21
 2EC0 4622              and R4,R22
 2EC2 5722              and R5,R23
 2EC4 30922300          sts _lfib+1,R3
 2EC8 20922200          sts _lfib,R2
 2ECC 50922500          sts _lfib+2+1,R5
 2ED0 40922400          sts _lfib+2,R4
 2ED4                   .dbline 1715
 2ED4           ;                                                               myFIB.f=(unsigned long)lfib; 
 2ED4 8101              movw R16,R2
 2ED6 9201              movw R18,R4
 2ED8 0E940000          xcall ulong2fp
 2EDC 10934902          sts _myFIB+1,R17
 2EE0 00934802          sts _myFIB,R16
 2EE4 30934B02          sts _myFIB+2+1,R19
 2EE8 20934A02          sts _myFIB+2,R18
 2EEC                   .dbline 1717
 2EEC           ; 
 2EEC           ;                                                               T_dat=myFIB.i[1];
 2EEC 20904A02          lds R2,_myFIB+2
 2EF0 30904B02          lds R3,_myFIB+2+1
 2EF4 3092E201          sts _T_dat+1,R3
 2EF8 2092E101          sts _T_dat,R2
 2EFC                   .dbline 1718
 2EFC           ;                                                               SendManchester();//流量-时间1
 2EFC 96D3              xcall _SendManchester
 2EFE                   .dbline 1719
 2EFE           ;                                                               crc16array[4]=(unsigned char)(T_dat);
 2EFE 2090E101          lds R2,_T_dat
 2F02 3090E201          lds R3,_T_dat+1
 2F06 20920400          sts _crc16array+4,R2
 2F0A                   .dbline 1720
 2F0A           ;                                                               crc16array[5]=(unsigned char)(T_dat>>8);
 2F0A 232C              mov R2,R3
 2F0C 3324              clr R3
 2F0E 27FC              sbrc R2,7
 2F10 3094              com R3
 2F12 20920500          sts _crc16array+5,R2
 2F16                   .dbline 1722
 2F16           ; 
 2F16           ;                                                               Delay_ms(30);   
 2F16 0EE1              ldi R16,30
 2F18 10E0              ldi R17,0
 2F1A 0E948305          xcall _Delay_ms
 2F1E                   .dbline 1723
 2F1E           ;                                                               T_dat=myFIB.i[0];
 2F1E 20904802          lds R2,_myFIB
 2F22 30904902          lds R3,_myFIB+1
 2F26 3092E201          sts _T_dat+1,R3
 2F2A 2092E101          sts _T_dat,R2
 2F2E                   .dbline 1724
 2F2E           ;                                                               SendManchester();//流量-时间2
 2F2E 7DD3              xcall _SendManchester
 2F30                   .dbline 1725
 2F30           ;                                                               crc16array[6]=(unsigned char)(T_dat);
 2F30 2090E101          lds R2,_T_dat
 2F34 3090E201          lds R3,_T_dat+1
 2F38 20920600          sts _crc16array+6,R2
 2F3C                   .dbline 1726
 2F3C           ;                                                               crc16array[7]=(unsigned char)(T_dat>>8);
 2F3C 232C              mov R2,R3
 2F3E 3324              clr R3
 2F40 27FC              sbrc R2,7
 2F42 3094              com R3
 2F44 20920700          sts _crc16array+7,R2
 2F48                   .dbline 1728
 2F48           ; 
 2F48           ;                                                               Delay_ms(30);   
 2F48 0EE1              ldi R16,30
 2F4A 10E0              ldi R17,0
 2F4C 0E948305          xcall _Delay_ms
 2F50                   .dbline 1730
 2F50           ; 
 2F50           ;                                                               lfib=Uart0RxData[7];
 2F50 20900202          lds R2,_Uart0RxData+7
 2F54 3324              clr R3
 2F56 4424              clr R4
 2F58 5524              clr R5
 2F5A 30922300          sts _lfib+1,R3
 2F5E 20922200          sts _lfib,R2
 2F62 50922500          sts _lfib+2+1,R5
 2F66 40922400          sts _lfib+2,R4
 2F6A                   .dbline 1731
 2F6A           ;                                                               lfib<<=8;
 2F6A 88E0              ldi R24,8
 2F6C 90E0              ldi R25,0
 2F6E 20912400          lds R18,_lfib+2
 2F72 30912500          lds R19,_lfib+2+1
 2F76 00912200          lds R16,_lfib
 2F7A 10912300          lds R17,_lfib+1
 2F7E 8A93              st -y,R24
 2F80 0E940000          xcall lsl32
 2F84 10932300          sts _lfib+1,R17
 2F88 00932200          sts _lfib,R16
 2F8C 30932500          sts _lfib+2+1,R19
 2F90 20932400          sts _lfib+2,R18
 2F94                   .dbline 1732
 2F94           ;                                                               lfib|=Uart0RxData[6];
 2F94 20900102          lds R2,_Uart0RxData+6
 2F98 3324              clr R3
 2F9A 4424              clr R4
 2F9C 5524              clr R5
 2F9E 3801              movw R6,R16
 2FA0 4901              movw R8,R18
 2FA2 6228              or R6,R2
 2FA4 7328              or R7,R3
 2FA6 8428              or R8,R4
 2FA8 9528              or R9,R5
 2FAA 70922300          sts _lfib+1,R7
 2FAE 60922200          sts _lfib,R6
 2FB2 90922500          sts _lfib+2+1,R9
 2FB6 80922400          sts _lfib+2,R8
 2FBA                   .dbline 1733
 2FBA           ;                                                               lfib&=0x0000ffff;
 2FBA 4FEF              ldi R20,255
 2FBC 5FEF              ldi R21,255
 2FBE 60E0              ldi R22,0
 2FC0 70E0              ldi R23,0
 2FC2 1301              movw R2,R6
 2FC4 2401              movw R4,R8
 2FC6 2422              and R2,R20
 2FC8 3522              and R3,R21
 2FCA 4622              and R4,R22
 2FCC 5722              and R5,R23
 2FCE 30922300          sts _lfib+1,R3
 2FD2 20922200          sts _lfib,R2
 2FD6 50922500          sts _lfib+2+1,R5
 2FDA 40922400          sts _lfib+2,R4
 2FDE                   .dbline 1734
 2FDE           ;                                                               myFIB.f=(unsigned long)lfib; 
 2FDE 8101              movw R16,R2
 2FE0 9201              movw R18,R4
 2FE2 0E940000          xcall ulong2fp
 2FE6 10934902          sts _myFIB+1,R17
 2FEA 00934802          sts _myFIB,R16
 2FEE 30934B02          sts _myFIB+2+1,R19
 2FF2 20934A02          sts _myFIB+2,R18
 2FF6                   .dbline 1736
 2FF6           ; 
 2FF6           ;                                                               T_dat=myFIB.i[1];
 2FF6 20904A02          lds R2,_myFIB+2
 2FFA 30904B02          lds R3,_myFIB+2+1
 2FFE 3092E201          sts _T_dat+1,R3
 3002 2092E101          sts _T_dat,R2
 3006                   .dbline 1737
 3006           ;                                                               SendManchester();//流量-相位1
 3006 11D3              xcall _SendManchester
 3008                   .dbline 1738
 3008           ;                                                               crc16array[8]=(unsigned char)(T_dat);
 3008 2090E101          lds R2,_T_dat
 300C 3090E201          lds R3,_T_dat+1
 3010 20920800          sts _crc16array+8,R2
 3014                   .dbline 1739
 3014           ;                                                               crc16array[9]=(unsigned char)(T_dat>>8);
 3014 232C              mov R2,R3
 3016 3324              clr R3
 3018 27FC              sbrc R2,7
 301A 3094              com R3
 301C 20920900          sts _crc16array+9,R2
 3020                   .dbline 1741
 3020           ; 
 3020           ;                                                               Delay_ms(30);   
 3020 0EE1              ldi R16,30
 3022 10E0              ldi R17,0
 3024 0E948305          xcall _Delay_ms
 3028                   .dbline 1742
 3028           ;                                                               T_dat=myFIB.i[0];
 3028 20904802          lds R2,_myFIB
 302C 30904902          lds R3,_myFIB+1
 3030 3092E201          sts _T_dat+1,R3
 3034 2092E101          sts _T_dat,R2
 3038                   .dbline 1743
 3038           ;                                                               SendManchester();//流量-相位2
 3038 F8D2              xcall _SendManchester
 303A                   .dbline 1744
 303A           ;                                                               crc16array[10]=(unsigned char)(T_dat);
 303A 2090E101          lds R2,_T_dat
 303E 3090E201          lds R3,_T_dat+1
 3042 20920A00          sts _crc16array+10,R2
 3046                   .dbline 1745
 3046           ;                                                               crc16array[11]=(unsigned char)(T_dat>>8);
 3046 232C              mov R2,R3
 3048 3324              clr R3
 304A 27FC              sbrc R2,7
 304C 3094              com R3
 304E 20920B00          sts _crc16array+11,R2
 3052                   .dbline 1746
 3052           ;                                                               }
 3052           L785:
 3052                   .dbline 1749
 3052           ; 
 3052           ;                                                                
 3052           ;                                                               SendUart1(0x81,4);//电机状态，32ms超时
 3052 24E0              ldi R18,4
 3054 30E0              ldi R19,0
 3056 01E8              ldi R16,129
 3058 0E944202          xcall _SendUart1
 305C                   .dbline 1751
 305C           ;                                                               
 305C           ;                                                           T_dat=Uart1RxData[1];
 305C 2090F701          lds R2,_Uart1RxData+1
 3060 3324              clr R3
 3062 3092E201          sts _T_dat+1,R3
 3066 2092E101          sts _T_dat,R2
 306A                   .dbline 1752
 306A           ;                                                       T_dat<<=8;
 306A 2090E101          lds R2,_T_dat
 306E 3090E201          lds R3,_T_dat+1
 3072 322C              mov R3,R2
 3074 2224              clr R2
 3076 3092E201          sts _T_dat+1,R3
 307A 2092E101          sts _T_dat,R2
 307E                   .dbline 1753
 307E           ;                                                       T_dat|=Uart1RxData[0];                                           
 307E 2090F601          lds R2,_Uart1RxData
 3082 3324              clr R3
 3084 4090E101          lds R4,_T_dat
 3088 5090E201          lds R5,_T_dat+1
 308C 4228              or R4,R2
 308E 5328              or R5,R3
 3090 5092E201          sts _T_dat+1,R5
 3094 4092E101          sts _T_dat,R4
 3098                   .dbline 1754
 3098           ;                                                               SendManchester();//收放电机状态
 3098 C8D2              xcall _SendManchester
 309A                   .dbline 1755
 309A           ;                                                               crc16array[12]=(unsigned char)(T_dat);
 309A 2090E101          lds R2,_T_dat
 309E 3090E201          lds R3,_T_dat+1
 30A2 20920C00          sts _crc16array+12,R2
 30A6                   .dbline 1756
 30A6           ;                                                               crc16array[13]=(unsigned char)(T_dat>>8);
 30A6 232C              mov R2,R3
 30A8 3324              clr R3
 30AA 27FC              sbrc R2,7
 30AC 3094              com R3
 30AE 20920D00          sts _crc16array+13,R2
 30B2                   .dbline 1758
 30B2           ; 
 30B2           ;                                                               Delay_ms(30);    
 30B2 0EE1              ldi R16,30
 30B4 10E0              ldi R17,0
 30B6 0E948305          xcall _Delay_ms
 30BA                   .dbline 1759
 30BA           ;                                                               T_dat=Uart1RxData[3];
 30BA 2090F901          lds R2,_Uart1RxData+3
 30BE 3324              clr R3
 30C0 3092E201          sts _T_dat+1,R3
 30C4 2092E101          sts _T_dat,R2
 30C8                   .dbline 1760
 30C8           ;                                                       T_dat<<=8;
 30C8 2090E101          lds R2,_T_dat
 30CC 3090E201          lds R3,_T_dat+1
 30D0 322C              mov R3,R2
 30D2 2224              clr R2
 30D4 3092E201          sts _T_dat+1,R3
 30D8 2092E101          sts _T_dat,R2
 30DC                   .dbline 1761
 30DC           ;                                                       T_dat|=Uart1RxData[2];
 30DC 2090F801          lds R2,_Uart1RxData+2
 30E0 3324              clr R3
 30E2 4090E101          lds R4,_T_dat
 30E6 5090E201          lds R5,_T_dat+1
 30EA 4228              or R4,R2
 30EC 5328              or R5,R3
 30EE 5092E201          sts _T_dat+1,R5
 30F2 4092E101          sts _T_dat,R4
 30F6                   .dbline 1762
 30F6           ;                                                               SendManchester();//调节电机状态
 30F6 99D2              xcall _SendManchester
 30F8                   .dbline 1763
 30F8           ;                                                               crc16array[14]=(unsigned char)(T_dat);
 30F8 2090E101          lds R2,_T_dat
 30FC 3090E201          lds R3,_T_dat+1
 3100 20920E00          sts _crc16array+14,R2
 3104                   .dbline 1764
 3104           ;                                                               crc16array[15]=(unsigned char)(T_dat>>8);
 3104 232C              mov R2,R3
 3106 3324              clr R3
 3108 27FC              sbrc R2,7
 310A 3094              com R3
 310C 20920F00          sts _crc16array+15,R2
 3110                   .dbline 1766
 3110           ; 
 3110           ;                                                               Delay_ms(1);                                            
 3110 01E0              ldi R16,1
 3112 10E0              ldi R17,0
 3114 0E948305          xcall _Delay_ms
 3118                   .dbline 1767
 3118           ;                                                       SendUart1(0x31,4);//读电机电压，32ms超时
 3118 24E0              ldi R18,4
 311A 30E0              ldi R19,0
 311C 01E3              ldi R16,49
 311E 0E944202          xcall _SendUart1
 3122                   .dbline 1768
 3122           ;                                                       T_dat=Uart1RxData[0];
 3122 2090F601          lds R2,_Uart1RxData
 3126 3324              clr R3
 3128 3092E201          sts _T_dat+1,R3
 312C 2092E101          sts _T_dat,R2
 3130                   .dbline 1769
 3130           ;                                                               SendManchester();
 3130 7CD2              xcall _SendManchester
 3132                   .dbline 1770
 3132           ;                                                               crc16array[16]=(unsigned char)(T_dat);
 3132 2090E101          lds R2,_T_dat
 3136 3090E201          lds R3,_T_dat+1
 313A 20921000          sts _crc16array+16,R2
 313E                   .dbline 1771
 313E           ;                                                               crc16array[17]=(unsigned char)(T_dat>>8);
 313E 232C              mov R2,R3
 3140 3324              clr R3
 3142 27FC              sbrc R2,7
 3144 3094              com R3
 3146 20921100          sts _crc16array+17,R2
 314A                   .dbline 1773
 314A           ; 
 314A           ;                                                               if(R_dat==0xcf)// 采集第2个压力温度的工程量，再多发2帧共4字节
 314A 8091DF01          lds R24,_R_dat
 314E 9091E001          lds R25,_R_dat+1
 3152 8F3C              cpi R24,207
 3154 E0E0              ldi R30,0
 3156 9E07              cpc R25,R30
 3158 09F0              breq X314
 315A 5EC0              xjmp L848
 315C           X314:
 315C           X243:
 315C                   .dbline 1774
 315C           ;                                                               {
 315C                   .dbline 1775
 315C           ;                                                                SampleTPS(R_dat);//正常情况下10ms返回，不挂压力短节的话20*4=80ms超时后返回
 315C 8C01              movw R16,R24
 315E 0E94E403          xcall _SampleTPS
 3162                   .dbline 1777
 3162           ;                                                 
 3162           ;                                                                Delay_ms(25);  
 3162 09E1              ldi R16,25
 3164 10E0              ldi R17,0
 3166 0E948305          xcall _Delay_ms
 316A                   .dbline 1778
 316A           ;                                                                T_dat=TPS_PData;
 316A 2090DD01          lds R2,_TPS_PData
 316E 3090DE01          lds R3,_TPS_PData+1
 3172 3092E201          sts _T_dat+1,R3
 3176 2092E101          sts _T_dat,R2
 317A                   .dbline 1779
 317A           ;                                                                SendManchester();//压力
 317A 57D2              xcall _SendManchester
 317C                   .dbline 1780
 317C           ;                                                                crc16array[18]=(unsigned char)(T_dat);
 317C 2090E101          lds R2,_T_dat
 3180 3090E201          lds R3,_T_dat+1
 3184 20921200          sts _crc16array+18,R2
 3188                   .dbline 1781
 3188           ;                                                                crc16array[19]=(unsigned char)(T_dat>>8);
 3188 232C              mov R2,R3
 318A 3324              clr R3
 318C 27FC              sbrc R2,7
 318E 3094              com R3
 3190 20921300          sts _crc16array+19,R2
 3194                   .dbline 1783
 3194           ;                                                 
 3194           ;                                                                Delay_ms(30);  
 3194 0EE1              ldi R16,30
 3196 10E0              ldi R17,0
 3198 0E948305          xcall _Delay_ms
 319C                   .dbline 1784
 319C           ;                                                                T_dat=TPS_TData;
 319C 2090DB01          lds R2,_TPS_TData
 31A0 3090DC01          lds R3,_TPS_TData+1
 31A4 3092E201          sts _T_dat+1,R3
 31A8 2092E101          sts _T_dat,R2
 31AC                   .dbline 1785
 31AC           ;                                                                SendManchester();//温度
 31AC 3ED2              xcall _SendManchester
 31AE                   .dbline 1786
 31AE           ;                                                                crc16array[20]=(unsigned char)(T_dat);
 31AE 2090E101          lds R2,_T_dat
 31B2 3090E201          lds R3,_T_dat+1
 31B6 20921400          sts _crc16array+20,R2
 31BA                   .dbline 1787
 31BA           ;                                                                crc16array[21]=(unsigned char)(T_dat>>8);
 31BA 232C              mov R2,R3
 31BC 3324              clr R3
 31BE 27FC              sbrc R2,7
 31C0 3094              com R3
 31C2 20921500          sts _crc16array+21,R2
 31C6                   .dbline 1789
 31C6           ;                                                                
 31C6           ;                                                                Delay_ms(30);  
 31C6 0EE1              ldi R16,30
 31C8 10E0              ldi R17,0
 31CA 0E948305          xcall _Delay_ms
 31CE                   .dbline 1790
 31CE           ;                                                                crc16(crc16array,22);//0.75ms
 31CE 26E1              ldi R18,22
 31D0 30E0              ldi R19,0
 31D2 00E0              ldi R16,<_crc16array
 31D4 10E0              ldi R17,>_crc16array
 31D6 71D6              xcall _crc16
 31D8                   .dbline 1791
 31D8           ;                                                                T_dat=crc16hi;
 31D8 20902100          lds R2,_crc16hi
 31DC 3324              clr R3
 31DE 3092E201          sts _T_dat+1,R3
 31E2 2092E101          sts _T_dat,R2
 31E6                   .dbline 1792
 31E6           ;                                                                T_dat<<=8;
 31E6 2090E101          lds R2,_T_dat
 31EA 3090E201          lds R3,_T_dat+1
 31EE 322C              mov R3,R2
 31F0 2224              clr R2
 31F2 3092E201          sts _T_dat+1,R3
 31F6 2092E101          sts _T_dat,R2
 31FA                   .dbline 1793
 31FA           ;                                                                T_dat|=crc16lo;          
 31FA 20902000          lds R2,_crc16lo
 31FE 3324              clr R3
 3200 4090E101          lds R4,_T_dat
 3204 5090E201          lds R5,_T_dat+1
 3208 4228              or R4,R2
 320A 5328              or R5,R3
 320C 5092E201          sts _T_dat+1,R5
 3210 4092E101          sts _T_dat,R4
 3214                   .dbline 1794
 3214           ;                                                                SendManchester();//上传CRC校验共2字节，从收到命令到上传完毕共耗时约850ms
 3214 0AD2              xcall _SendManchester
 3216                   .dbline 1795
 3216           ;                                                               }
 3216 FCC1              xjmp L502
 3218           L848:
 3218                   .dbline 1797
 3218           ;                                                               else
 3218           ;                                                               {
 3218                   .dbline 1798
 3218           ;                                                                Delay_ms(30);  
 3218 0EE1              ldi R16,30
 321A 10E0              ldi R17,0
 321C 0E948305          xcall _Delay_ms
 3220                   .dbline 1799
 3220           ;                                                                crc16(crc16array,18);//0.75ms
 3220 22E1              ldi R18,18
 3222 30E0              ldi R19,0
 3224 00E0              ldi R16,<_crc16array
 3226 10E0              ldi R17,>_crc16array
 3228 48D6              xcall _crc16
 322A                   .dbline 1800
 322A           ;                                                                T_dat=crc16hi;
 322A 20902100          lds R2,_crc16hi
 322E 3324              clr R3
 3230 3092E201          sts _T_dat+1,R3
 3234 2092E101          sts _T_dat,R2
 3238                   .dbline 1801
 3238           ;                                                                T_dat<<=8;
 3238 2090E101          lds R2,_T_dat
 323C 3090E201          lds R3,_T_dat+1
 3240 322C              mov R3,R2
 3242 2224              clr R2
 3244 3092E201          sts _T_dat+1,R3
 3248 2092E101          sts _T_dat,R2
 324C                   .dbline 1802
 324C           ;                                                                T_dat|=crc16lo;          
 324C 20902000          lds R2,_crc16lo
 3250 3324              clr R3
 3252 4090E101          lds R4,_T_dat
 3256 5090E201          lds R5,_T_dat+1
 325A 4228              or R4,R2
 325C 5328              or R5,R3
 325E 5092E201          sts _T_dat+1,R5
 3262 4092E101          sts _T_dat,R4
 3266                   .dbline 1803
 3266           ;                                                                SendManchester();//上传CRC校验共2字节，从收到命令到上传完毕共耗时约760ms
 3266 E1D1              xcall _SendManchester
 3268                   .dbline 1804
 3268           ;                                                               }
 3268                   .dbline 1805
 3268           ;                                                       }       
 3268                   .dbline 1806
 3268           ;                                               }
 3268 D3C1              xjmp L502
 326A           L778:
 326A                   .dbline 1807
 326A           ;                                               else  if(R_dat==0xc5) //读仪器信息,共320字节，分5次从流量板中提取，每包64字节
 326A 8091DF01          lds R24,_R_dat
 326E 9091E001          lds R25,_R_dat+1
 3272 853C              cpi R24,197
 3274 E0E0              ldi R30,0
 3276 9E07              cpc R25,R30
 3278 09F0              breq X315
 327A 6AC1              xjmp L854
 327C           X315:
 327C           X244:
 327C                   .dbline 1808
 327C           ;                                               {
 327C                   .dbline 1809
 327C           ;                                                       Uart0TxData[0]=0xE8;
 327C 88EE              ldi R24,232
 327E 80932F00          sts _Uart0TxData,R24
 3282                   .dbline 1810
 3282           ;                                                       Uart0TxData[1]=0x40;
 3282 80E4              ldi R24,64
 3284 80933000          sts _Uart0TxData+1,R24
 3288                   .dbline 1811
 3288           ;                                                       Uart0TxData[2]=0x83;
 3288 83E8              ldi R24,131
 328A 80933100          sts _Uart0TxData+2,R24
 328E                   .dbline 1812
 328E           ;                                                       Uart0TxData[3]=0;//包0
 328E 2224              clr R2
 3290 20923200          sts _Uart0TxData+3,R2
 3294                   .dbline 1813
 3294           ;                                                       SendUart0_2(9,5);// 超时40ms    
 3294 25E0              ldi R18,5
 3296 30E0              ldi R19,0
 3298 09E0              ldi R16,9
 329A 0E947A04          xcall _SendUart0_2
 329E                   .dbline 1814
 329E           ;                                                       if(Uart0RxCounter==64) 
 329E 8091FA01          lds R24,_Uart0RxCounter
 32A2 8034              cpi R24,64
 32A4 99F5              brne L859
 32A6           X245:
 32A6                   .dbline 1815
 32A6           ;                                                       {
 32A6                   .dbline 1816
 32A6           ;                                                               for(i=0;i<32;i++)
 32A6 AA24              clr R10
 32A8 2EC0              xjmp L864
 32AA           L861:
 32AA                   .dbline 1817
 32AA           ;                                                               {
 32AA                   .dbline 1818
 32AA           ;                                                                       Delay_ms(20);
 32AA 04E1              ldi R16,20
 32AC 10E0              ldi R17,0
 32AE 0E948305          xcall _Delay_ms
 32B2                   .dbline 1819
 32B2           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 32B2 80E0              ldi R24,<_Uart0RxData+1
 32B4 90E0              ldi R25,>_Uart0RxData+1
 32B6 EA2D              mov R30,R10
 32B8 FF27              clr R31
 32BA EE0F              lsl R30
 32BC FF1F              rol R31
 32BE E80F              add R30,R24
 32C0 F91F              adc R31,R25
 32C2 2080              ldd R2,z+0
 32C4 3324              clr R3
 32C6 3092E201          sts _T_dat+1,R3
 32CA 2092E101          sts _T_dat,R2
 32CE                   .dbline 1820
 32CE           ;                                                                       T_dat<<=8;
 32CE 322C              mov R3,R2
 32D0 2224              clr R2
 32D2 3092E201          sts _T_dat+1,R3
 32D6 2092E101          sts _T_dat,R2
 32DA                   .dbline 1821
 32DA           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 32DA 80E0              ldi R24,<_Uart0RxData
 32DC 90E0              ldi R25,>_Uart0RxData
 32DE EA2D              mov R30,R10
 32E0 FF27              clr R31
 32E2 EE0F              lsl R30
 32E4 FF1F              rol R31
 32E6 E80F              add R30,R24
 32E8 F91F              adc R31,R25
 32EA 2080              ldd R2,z+0
 32EC 3324              clr R3
 32EE 4090E101          lds R4,_T_dat
 32F2 5090E201          lds R5,_T_dat+1
 32F6 4228              or R4,R2
 32F8 5328              or R5,R3
 32FA 5092E201          sts _T_dat+1,R5
 32FE 4092E101          sts _T_dat,R4
 3302                   .dbline 1822
 3302           ;                                                                       SendManchester();                
 3302 93D1              xcall _SendManchester
 3304                   .dbline 1823
 3304           ;                                                               }       
 3304           L862:
 3304                   .dbline 1816
 3304 A394              inc R10
 3306           L864:
 3306                   .dbline 1816
 3306 8A2D              mov R24,R10
 3308 8032              cpi R24,32
 330A 78F2              brlo L861
 330C           X246:
 330C                   .dbline 1824
 330C           ;                                                       }       
 330C           L859:
 330C                   .dbline 1826
 330C           ; 
 330C           ;                                                       Uart0TxData[0]=0xE8;
 330C 88EE              ldi R24,232
 330E 80932F00          sts _Uart0TxData,R24
 3312                   .dbline 1827
 3312           ;                                                       Uart0TxData[1]=0x40;
 3312 80E4              ldi R24,64
 3314 80933000          sts _Uart0TxData+1,R24
 3318                   .dbline 1828
 3318           ;                                                       Uart0TxData[2]=0x83;
 3318 83E8              ldi R24,131
 331A 80933100          sts _Uart0TxData+2,R24
 331E                   .dbline 1829
 331E           ;                                                       Uart0TxData[3]=1;//包1
 331E 81E0              ldi R24,1
 3320 80933200          sts _Uart0TxData+3,R24
 3324                   .dbline 1830
 3324           ;                                                       SendUart0_2(9,5);// 超时40ms     
 3324 25E0              ldi R18,5
 3326 30E0              ldi R19,0
 3328 09E0              ldi R16,9
 332A 0E947A04          xcall _SendUart0_2
 332E                   .dbline 1831
 332E           ;                                                       if(Uart0RxCounter==64) 
 332E 8091FA01          lds R24,_Uart0RxCounter
 3332 8034              cpi R24,64
 3334 99F5              brne L869
 3336           X247:
 3336                   .dbline 1832
 3336           ;                                                       {
 3336                   .dbline 1833
 3336           ;                                                               for(i=0;i<32;i++)
 3336 AA24              clr R10
 3338 2EC0              xjmp L874
 333A           L871:
 333A                   .dbline 1834
 333A           ;                                                               {
 333A                   .dbline 1835
 333A           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 333A 80E0              ldi R24,<_Uart0RxData+1
 333C 90E0              ldi R25,>_Uart0RxData+1
 333E EA2D              mov R30,R10
 3340 FF27              clr R31
 3342 EE0F              lsl R30
 3344 FF1F              rol R31
 3346 E80F              add R30,R24
 3348 F91F              adc R31,R25
 334A 2080              ldd R2,z+0
 334C 3324              clr R3
 334E 3092E201          sts _T_dat+1,R3
 3352 2092E101          sts _T_dat,R2
 3356                   .dbline 1836
 3356           ;                                                                       T_dat<<=8;
 3356 322C              mov R3,R2
 3358 2224              clr R2
 335A 3092E201          sts _T_dat+1,R3
 335E 2092E101          sts _T_dat,R2
 3362                   .dbline 1837
 3362           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 3362 80E0              ldi R24,<_Uart0RxData
 3364 90E0              ldi R25,>_Uart0RxData
 3366 EA2D              mov R30,R10
 3368 FF27              clr R31
 336A EE0F              lsl R30
 336C FF1F              rol R31
 336E E80F              add R30,R24
 3370 F91F              adc R31,R25
 3372 2080              ldd R2,z+0
 3374 3324              clr R3
 3376 4090E101          lds R4,_T_dat
 337A 5090E201          lds R5,_T_dat+1
 337E 4228              or R4,R2
 3380 5328              or R5,R3
 3382 5092E201          sts _T_dat+1,R5
 3386 4092E101          sts _T_dat,R4
 338A                   .dbline 1838
 338A           ;                                                                       SendManchester();
 338A 4FD1              xcall _SendManchester
 338C                   .dbline 1839
 338C           ;                                                                       Delay_ms(20);
 338C 04E1              ldi R16,20
 338E 10E0              ldi R17,0
 3390 0E948305          xcall _Delay_ms
 3394                   .dbline 1840
 3394           ;                                                               }
 3394           L872:
 3394                   .dbline 1833
 3394 A394              inc R10
 3396           L874:
 3396                   .dbline 1833
 3396 8A2D              mov R24,R10
 3398 8032              cpi R24,32
 339A 78F2              brlo L871
 339C           X248:
 339C                   .dbline 1841
 339C           ;                                                       }       
 339C           L869:
 339C                   .dbline 1843
 339C           ; 
 339C           ;                                                       Uart0TxData[0]=0xE8;
 339C 88EE              ldi R24,232
 339E 80932F00          sts _Uart0TxData,R24
 33A2                   .dbline 1844
 33A2           ;                                                       Uart0TxData[1]=0x40;
 33A2 80E4              ldi R24,64
 33A4 80933000          sts _Uart0TxData+1,R24
 33A8                   .dbline 1845
 33A8           ;                                                       Uart0TxData[2]=0x83;
 33A8 83E8              ldi R24,131
 33AA 80933100          sts _Uart0TxData+2,R24
 33AE                   .dbline 1846
 33AE           ;                                                       Uart0TxData[3]=2;//包2
 33AE 82E0              ldi R24,2
 33B0 80933200          sts _Uart0TxData+3,R24
 33B4                   .dbline 1847
 33B4           ;                                                       SendUart0_2(9,5);// 超时40ms     
 33B4 25E0              ldi R18,5
 33B6 30E0              ldi R19,0
 33B8 09E0              ldi R16,9
 33BA 0E947A04          xcall _SendUart0_2
 33BE                   .dbline 1848
 33BE           ;                                                       if(Uart0RxCounter==64) 
 33BE 8091FA01          lds R24,_Uart0RxCounter
 33C2 8034              cpi R24,64
 33C4 99F5              brne L879
 33C6           X249:
 33C6                   .dbline 1849
 33C6           ;                                                       {
 33C6                   .dbline 1850
 33C6           ;                                                               for(i=0;i<32;i++)
 33C6 AA24              clr R10
 33C8 2EC0              xjmp L884
 33CA           L881:
 33CA                   .dbline 1851
 33CA           ;                                                               {
 33CA                   .dbline 1852
 33CA           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 33CA 80E0              ldi R24,<_Uart0RxData+1
 33CC 90E0              ldi R25,>_Uart0RxData+1
 33CE EA2D              mov R30,R10
 33D0 FF27              clr R31
 33D2 EE0F              lsl R30
 33D4 FF1F              rol R31
 33D6 E80F              add R30,R24
 33D8 F91F              adc R31,R25
 33DA 2080              ldd R2,z+0
 33DC 3324              clr R3
 33DE 3092E201          sts _T_dat+1,R3
 33E2 2092E101          sts _T_dat,R2
 33E6                   .dbline 1853
 33E6           ;                                                                       T_dat<<=8;
 33E6 322C              mov R3,R2
 33E8 2224              clr R2
 33EA 3092E201          sts _T_dat+1,R3
 33EE 2092E101          sts _T_dat,R2
 33F2                   .dbline 1854
 33F2           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 33F2 80E0              ldi R24,<_Uart0RxData
 33F4 90E0              ldi R25,>_Uart0RxData
 33F6 EA2D              mov R30,R10
 33F8 FF27              clr R31
 33FA EE0F              lsl R30
 33FC FF1F              rol R31
 33FE E80F              add R30,R24
 3400 F91F              adc R31,R25
 3402 2080              ldd R2,z+0
 3404 3324              clr R3
 3406 4090E101          lds R4,_T_dat
 340A 5090E201          lds R5,_T_dat+1
 340E 4228              or R4,R2
 3410 5328              or R5,R3
 3412 5092E201          sts _T_dat+1,R5
 3416 4092E101          sts _T_dat,R4
 341A                   .dbline 1855
 341A           ;                                                                       SendManchester();
 341A 07D1              xcall _SendManchester
 341C                   .dbline 1856
 341C           ;                                                                       Delay_ms(20);
 341C 04E1              ldi R16,20
 341E 10E0              ldi R17,0
 3420 0E948305          xcall _Delay_ms
 3424                   .dbline 1857
 3424           ;                                                               }
 3424           L882:
 3424                   .dbline 1850
 3424 A394              inc R10
 3426           L884:
 3426                   .dbline 1850
 3426 8A2D              mov R24,R10
 3428 8032              cpi R24,32
 342A 78F2              brlo L881
 342C           X250:
 342C                   .dbline 1858
 342C           ;                                                       }       
 342C           L879:
 342C                   .dbline 1860
 342C           ; 
 342C           ;                                                       Uart0TxData[0]=0xE8;
 342C 88EE              ldi R24,232
 342E 80932F00          sts _Uart0TxData,R24
 3432                   .dbline 1861
 3432           ;                                                       Uart0TxData[1]=0x40;
 3432 80E4              ldi R24,64
 3434 80933000          sts _Uart0TxData+1,R24
 3438                   .dbline 1862
 3438           ;                                                       Uart0TxData[2]=0x83;
 3438 83E8              ldi R24,131
 343A 80933100          sts _Uart0TxData+2,R24
 343E                   .dbline 1863
 343E           ;                                                       Uart0TxData[3]=3;//包3
 343E 83E0              ldi R24,3
 3440 80933200          sts _Uart0TxData+3,R24
 3444                   .dbline 1864
 3444           ;                                                       SendUart0_2(9,5);// 超时40ms     
 3444 25E0              ldi R18,5
 3446 30E0              ldi R19,0
 3448 09E0              ldi R16,9
 344A 0E947A04          xcall _SendUart0_2
 344E                   .dbline 1865
 344E           ;                                                       if(Uart0RxCounter==64) 
 344E 8091FA01          lds R24,_Uart0RxCounter
 3452 8034              cpi R24,64
 3454 99F5              brne L889
 3456           X251:
 3456                   .dbline 1866
 3456           ;                                                       {
 3456                   .dbline 1867
 3456           ;                                                               for(i=0;i<32;i++)
 3456 AA24              clr R10
 3458 2EC0              xjmp L894
 345A           L891:
 345A                   .dbline 1868
 345A           ;                                                               {
 345A                   .dbline 1869
 345A           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 345A 80E0              ldi R24,<_Uart0RxData+1
 345C 90E0              ldi R25,>_Uart0RxData+1
 345E EA2D              mov R30,R10
 3460 FF27              clr R31
 3462 EE0F              lsl R30
 3464 FF1F              rol R31
 3466 E80F              add R30,R24
 3468 F91F              adc R31,R25
 346A 2080              ldd R2,z+0
 346C 3324              clr R3
 346E 3092E201          sts _T_dat+1,R3
 3472 2092E101          sts _T_dat,R2
 3476                   .dbline 1870
 3476           ;                                                                       T_dat<<=8;
 3476 322C              mov R3,R2
 3478 2224              clr R2
 347A 3092E201          sts _T_dat+1,R3
 347E 2092E101          sts _T_dat,R2
 3482                   .dbline 1871
 3482           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 3482 80E0              ldi R24,<_Uart0RxData
 3484 90E0              ldi R25,>_Uart0RxData
 3486 EA2D              mov R30,R10
 3488 FF27              clr R31
 348A EE0F              lsl R30
 348C FF1F              rol R31
 348E E80F              add R30,R24
 3490 F91F              adc R31,R25
 3492 2080              ldd R2,z+0
 3494 3324              clr R3
 3496 4090E101          lds R4,_T_dat
 349A 5090E201          lds R5,_T_dat+1
 349E 4228              or R4,R2
 34A0 5328              or R5,R3
 34A2 5092E201          sts _T_dat+1,R5
 34A6 4092E101          sts _T_dat,R4
 34AA                   .dbline 1872
 34AA           ;                                                                       SendManchester();
 34AA BFD0              xcall _SendManchester
 34AC                   .dbline 1873
 34AC           ;                                                                       Delay_ms(20);
 34AC 04E1              ldi R16,20
 34AE 10E0              ldi R17,0
 34B0 0E948305          xcall _Delay_ms
 34B4                   .dbline 1874
 34B4           ;                                                               }
 34B4           L892:
 34B4                   .dbline 1867
 34B4 A394              inc R10
 34B6           L894:
 34B6                   .dbline 1867
 34B6 8A2D              mov R24,R10
 34B8 8032              cpi R24,32
 34BA 78F2              brlo L891
 34BC           X252:
 34BC                   .dbline 1875
 34BC           ;                                                       }       
 34BC           L889:
 34BC                   .dbline 1877
 34BC           ; 
 34BC           ;                                                       Uart0TxData[0]=0xE8;
 34BC 88EE              ldi R24,232
 34BE 80932F00          sts _Uart0TxData,R24
 34C2                   .dbline 1878
 34C2           ;                                                       Uart0TxData[1]=0x40;
 34C2 80E4              ldi R24,64
 34C4 80933000          sts _Uart0TxData+1,R24
 34C8                   .dbline 1879
 34C8           ;                                                       Uart0TxData[2]=0x83;
 34C8 83E8              ldi R24,131
 34CA 80933100          sts _Uart0TxData+2,R24
 34CE                   .dbline 1880
 34CE           ;                                                       Uart0TxData[3]=4;//包4
 34CE 84E0              ldi R24,4
 34D0 80933200          sts _Uart0TxData+3,R24
 34D4                   .dbline 1881
 34D4           ;                                                       SendUart0_2(9,5);// 超时40ms     
 34D4 25E0              ldi R18,5
 34D6 30E0              ldi R19,0
 34D8 09E0              ldi R16,9
 34DA 0E947A04          xcall _SendUart0_2
 34DE                   .dbline 1882
 34DE           ;                                                       if(Uart0RxCounter==64) 
 34DE 8091FA01          lds R24,_Uart0RxCounter
 34E2 8034              cpi R24,64
 34E4 09F0              breq X316
 34E6 94C0              xjmp L502
 34E8           X316:
 34E8           X253:
 34E8                   .dbline 1883
 34E8           ;                                                       {
 34E8                   .dbline 1884
 34E8           ;                                                               for(i=0;i<32;i++)
 34E8 AA24              clr R10
 34EA 2EC0              xjmp L904
 34EC           L901:
 34EC                   .dbline 1885
 34EC           ;                                                               {
 34EC                   .dbline 1886
 34EC           ;                                                                       T_dat=Uart0RxData[i*2+1];//高字节
 34EC 80E0              ldi R24,<_Uart0RxData+1
 34EE 90E0              ldi R25,>_Uart0RxData+1
 34F0 EA2D              mov R30,R10
 34F2 FF27              clr R31
 34F4 EE0F              lsl R30
 34F6 FF1F              rol R31
 34F8 E80F              add R30,R24
 34FA F91F              adc R31,R25
 34FC 2080              ldd R2,z+0
 34FE 3324              clr R3
 3500 3092E201          sts _T_dat+1,R3
 3504 2092E101          sts _T_dat,R2
 3508                   .dbline 1887
 3508           ;                                                                       T_dat<<=8;
 3508 322C              mov R3,R2
 350A 2224              clr R2
 350C 3092E201          sts _T_dat+1,R3
 3510 2092E101          sts _T_dat,R2
 3514                   .dbline 1888
 3514           ;                                                                       T_dat|=Uart0RxData[i*2+0];//低字节
 3514 80E0              ldi R24,<_Uart0RxData
 3516 90E0              ldi R25,>_Uart0RxData
 3518 EA2D              mov R30,R10
 351A FF27              clr R31
 351C EE0F              lsl R30
 351E FF1F              rol R31
 3520 E80F              add R30,R24
 3522 F91F              adc R31,R25
 3524 2080              ldd R2,z+0
 3526 3324              clr R3
 3528 4090E101          lds R4,_T_dat
 352C 5090E201          lds R5,_T_dat+1
 3530 4228              or R4,R2
 3532 5328              or R5,R3
 3534 5092E201          sts _T_dat+1,R5
 3538 4092E101          sts _T_dat,R4
 353C                   .dbline 1889
 353C           ;                                                                       SendManchester();
 353C 76D0              xcall _SendManchester
 353E                   .dbline 1890
 353E           ;                                                                       Delay_ms(20);
 353E 04E1              ldi R16,20
 3540 10E0              ldi R17,0
 3542 0E948305          xcall _Delay_ms
 3546                   .dbline 1891
 3546           ;                                                               }
 3546           L902:
 3546                   .dbline 1884
 3546 A394              inc R10
 3548           L904:
 3548                   .dbline 1884
 3548 8A2D              mov R24,R10
 354A 8032              cpi R24,32
 354C 78F2              brlo L901
 354E           X254:
 354E                   .dbline 1892
 354E           ;                                                       }       
 354E                   .dbline 1893
 354E           ;                                               }
 354E 60C0              xjmp L502
 3550           L854:
 3550                   .dbline 1894
 3550           ;                                               else  if(R_dat==0xca) //写仪器信息
 3550 8091DF01          lds R24,_R_dat
 3554 9091E001          lds R25,_R_dat+1
 3558 8A3C              cpi R24,202
 355A E0E0              ldi R30,0
 355C 9E07              cpc R25,R30
 355E 09F0              breq X317
 3560 57C0              xjmp L502
 3562           X317:
 3562           X255:
 3562                   .dbline 1895
 3562           ;                                               {
 3562                   .dbline 1896
 3562           ;                                                       DataFlag=4;
 3562 84E0              ldi R24,4
 3564 90E0              ldi R25,0
 3566 9093C201          sts _DataFlag+1,R25
 356A 8093C101          sts _DataFlag,R24
 356E                   .dbline 1897
 356E           ;                                                       coeff_len=320;
 356E 80E4              ldi R24,320
 3570 91E0              ldi R25,1
 3572 90932D00          sts _coeff_len+1,R25
 3576 80932C00          sts _coeff_len,R24
 357A                   .dbline 1898
 357A           ;                                                       coeff_count=0;
 357A 2224              clr R2
 357C 3324              clr R3
 357E 30922B00          sts _coeff_count+1,R3
 3582 20922A00          sts _coeff_count,R2
 3586                   .dbline 1899
 3586           ;                                                       TimeOutFlag=0;
 3586 2092D901          sts _TimeOutFlag,R2
 358A                   .dbline 1900
 358A           ;                                                       Timer0Counter=2000;//16s定时
 358A 80ED              ldi R24,2000
 358C 97E0              ldi R25,7
 358E 90934602          sts _Timer0Counter+1,R25
 3592 80934502          sts _Timer0Counter,R24
 3596                   .dbline 1901
 3596           ;                                                       TCNT0=0x06; //8ms
 3596 86E0              ldi R24,6
 3598 82BF              out 0x32,R24
 359A                   .dbline 1902
 359A           ;                                                       TCCR0|=0x06;//256分频
 359A 83B7              in R24,0x33
 359C 8660              ori R24,6
 359E 83BF              out 0x33,R24
 35A0                   .dbline 1903
 35A0           ;                                                       TIFR|=0x01; //清定时器0中断标志
 35A0 86B7              in R24,0x36
 35A2 8160              ori R24,1
 35A4 86BF              out 0x36,R24
 35A6                   .dbline 1904
 35A6           ;                                                       TIMSK|=0x01;//使能定时器0中断           
 35A6 87B7              in R24,0x37
 35A8 8160              ori R24,1
 35AA 87BF              out 0x37,R24
 35AC                   .dbline 1905
 35AC           ;                                               }
 35AC                   .dbline 1906
 35AC           ;                                               break;
 35AC 31C0              xjmp L502
 35AE           L908:
 35AE                   .dbline 1909
 35AE           ;                                       
 35AE           ;                                       case 0xd0://压力板与电机板版本
 35AE           ;                                          if(R_dat==0xdf)//电机板与第2路压力板版本号   
 35AE 8091DF01          lds R24,_R_dat
 35B2 9091E001          lds R25,_R_dat+1
 35B6 8F3D              cpi R24,223
 35B8 E0E0              ldi R30,0
 35BA 9E07              cpc R25,R30
 35BC 49F5              brne L502
 35BE           X256:
 35BE                   .dbline 1910
 35BE           ;                                           {                    
 35BE                   .dbline 1911
 35BE           ;                                                 SendUart1(0xdf,3);//电机板
 35BE 23E0              ldi R18,3
 35C0 30E0              ldi R19,0
 35C2 0FED              ldi R16,223
 35C4 0E944202          xcall _SendUart1
 35C8                   .dbline 1912
 35C8           ;                                                 T_dat=Uart1RxData[0];
 35C8 2090F601          lds R2,_Uart1RxData
 35CC 3324              clr R3
 35CE 3092E201          sts _T_dat+1,R3
 35D2 2092E101          sts _T_dat,R2
 35D6                   .dbline 1913
 35D6           ;                                                 T_dat<<=8;
 35D6 2090E101          lds R2,_T_dat
 35DA 3090E201          lds R3,_T_dat+1
 35DE 322C              mov R3,R2
 35E0 2224              clr R2
 35E2 3092E201          sts _T_dat+1,R3
 35E6 2092E101          sts _T_dat,R2
 35EA                   .dbline 1915
 35EA           ;                                                 
 35EA           ;                                                 SendTPS(0xdf);//第2路压力板
 35EA 0FED              ldi R16,223
 35EC 0E949F02          xcall _SendTPS
 35F0                   .dbline 1916
 35F0           ;                                                 T_dat|=ReceiveTPS();
 35F0 0E940903          xcall _ReceiveTPS
 35F4 A02E              mov R10,R16
 35F6 2A2C              mov R2,R10
 35F8 3324              clr R3
 35FA 4090E101          lds R4,_T_dat
 35FE 5090E201          lds R5,_T_dat+1
 3602 4228              or R4,R2
 3604 5328              or R5,R3
 3606 5092E201          sts _T_dat+1,R5
 360A 4092E101          sts _T_dat,R4
 360E                   .dbline 1918
 360E           ;                                                 
 360E           ;                                                 SendManchester();     
 360E 0DD0              xcall _SendManchester
 3610                   .dbline 1919
 3610           ;                                               }
 3610                   .dbline 1920
 3610           ;                                       break;
 3610                   .dbline 1923
 3610           ;                                       
 3610           ;                                       default: 
 3610           ;                                               break;  
 3610           L502:
 3610                   .dbline 1925
 3610           ;                               }
 3610           ;                       }
 3610           L313:
 3610           L923:
 3610                   .dbline 1928
 3610           ;                       
 3610           ;               RDataEnd:
 3610           ;                       IntFlag=0;
 3610 2224              clr R2
 3612 2092BF01          sts _IntFlag,R2
 3616                   .dbline 1929
 3616           ;                       EIFR|=0x01;//清INT0中断标志
 3616 88B7              in R24,0x38
 3618 8160              ori R24,1
 361A 88BF              out 0x38,R24
 361C                   .dbline 1930
 361C           ;                       EIMSK|=0x01;//使能INT0中断 
 361C 89B7              in R24,0x39
 361E 8160              ori R24,1
 3620 89BF              out 0x39,R24
 3622                   .dbline 1931
 3622           ;               }  
 3622           L310:
 3622           L309:
 3622                   .dbline 1932
 3622           ;       }
 3622           L306:
 3622                   .dbline 796
 3622 0C942C06          xjmp L305
 3626           X257:
 3626                   .dbline -2
 3626           L291:
 3626                   .dbline 0 ; func end
 3626 2996              adiw R28,9
 3628 0895              ret
 362A                   .dbsym l pt 2 i
 362A                   .dbsym l mk 2 i
 362A                   .dbsym l at 2 i
 362A                   .dbsym l add 2 i
 362A                   .dbsym l f 5 D
 362A                   .dbsym r TestDataBlockCount 12 i
 362A                   .dbsym r TestDataBlockIndex 10 i
 362A                   .dbsym r i 10 c
 362A                   .dbsym l l 1 l
 362A                   .dbsym r j 10 i
 362A                   .dbend
 362A                   .dbfunc e SendManchester _SendManchester fV
 362A           ;              L -> R20
                        .even
 362A           _SendManchester::
 362A 4A93              st -y,R20
 362C                   .dbline -1
 362C                   .dbline 1938
 362C           ; }
 362C           ; 
 362C           ;  
 362C           ; 
 362C           ; void SendManchester(void) //曼码发送程序,总耗时最大约120+560+8400+720=9800us，最小约120+560+5040+720=6440us
 362C           ; { //每位80us
 362C                   .dbline 1943
 362C           ;  //同步：1高6低
 362C           ;  //1:    1高2低
 362C           ;  //0：   1高4低  
 362C           ;   unsigned char L;
 362C           ;   SREG&=0x7f;//关总中断 
 362C 8FB7              in R24,0x3f
 362E 8F77              andi R24,127
 3630 8FBF              out 0x3f,R24
 3632                   .dbline 1945
 3632           ;   
 3632           ;     M1_H //先给总线放电，耗时约120us
 3632                   .dbline 1945
 3632 80916500          lds R24,101
 3636 8860              ori R24,8
 3638 80936500          sts 101,R24
 363C                   .dbline 1945
 363C                   .dbline 1949
 363C           ;       
 363C           ;   //模拟同步头数据
 363C           ;       //4位命令
 363C           ;       T_dat_buf[21]=(T_com&0x08)>>3;
 363C 8091DA01          lds R24,_T_com
 3640 8870              andi R24,8
 3642 8695              lsr R24
 3644 8695              lsr R24
 3646 8695              lsr R24
 3648 8093D801          sts _T_dat_buf+21,R24
 364C                   .dbline 1950
 364C           ;       T_dat_buf[20]=(T_com&0x04)>>2;
 364C 8091DA01          lds R24,_T_com
 3650 8470              andi R24,4
 3652 8695              lsr R24
 3654 8695              lsr R24
 3656 8093D701          sts _T_dat_buf+20,R24
 365A                   .dbline 1951
 365A           ;       T_dat_buf[19]=(T_com&0x02)>>1;
 365A 8091DA01          lds R24,_T_com
 365E 8270              andi R24,2
 3660 8695              lsr R24
 3662 8093D601          sts _T_dat_buf+19,R24
 3666                   .dbline 1952
 3666           ;       T_dat_buf[18]=T_com&0x01;
 3666 8091DA01          lds R24,_T_com
 366A 8170              andi R24,1
 366C 8093D501          sts _T_dat_buf+18,R24
 3670                   .dbline 1954
 3670           ;       //16位数据
 3670           ;       T_dat_buf[17]=(T_dat&0x8000)>>15;
 3670 2FE0              ldi R18,15
 3672 30E0              ldi R19,0
 3674 0091E101          lds R16,_T_dat
 3678 1091E201          lds R17,_T_dat+1
 367C 0070              andi R16,0
 367E 1078              andi R17,128
 3680 0E940000          xcall lsr16
 3684 0093D401          sts _T_dat_buf+17,R16
 3688                   .dbline 1955
 3688           ;       T_dat_buf[16]=(T_dat&0x4000)>>14;
 3688 2EE0              ldi R18,14
 368A 30E0              ldi R19,0
 368C 0091E101          lds R16,_T_dat
 3690 1091E201          lds R17,_T_dat+1
 3694 0070              andi R16,0
 3696 1074              andi R17,64
 3698 0E940000          xcall asr16
 369C 0093D301          sts _T_dat_buf+16,R16
 36A0                   .dbline 1956
 36A0           ;       T_dat_buf[15]=(T_dat&0x2000)>>13;
 36A0 2DE0              ldi R18,13
 36A2 30E0              ldi R19,0
 36A4 0091E101          lds R16,_T_dat
 36A8 1091E201          lds R17,_T_dat+1
 36AC 0070              andi R16,0
 36AE 1072              andi R17,32
 36B0 0E940000          xcall asr16
 36B4 0093D201          sts _T_dat_buf+15,R16
 36B8                   .dbline 1957
 36B8           ;       T_dat_buf[14]=(T_dat&0x1000)>>12;
 36B8 2CE0              ldi R18,12
 36BA 30E0              ldi R19,0
 36BC 0091E101          lds R16,_T_dat
 36C0 1091E201          lds R17,_T_dat+1
 36C4 0070              andi R16,0
 36C6 1071              andi R17,16
 36C8 0E940000          xcall asr16
 36CC 0093D101          sts _T_dat_buf+14,R16
 36D0                   .dbline 1958
 36D0           ;       T_dat_buf[13]=(T_dat&0x0800)>>11;
 36D0 2BE0              ldi R18,11
 36D2 30E0              ldi R19,0
 36D4 0091E101          lds R16,_T_dat
 36D8 1091E201          lds R17,_T_dat+1
 36DC 0070              andi R16,0
 36DE 1870              andi R17,8
 36E0 0E940000          xcall asr16
 36E4 0093D001          sts _T_dat_buf+13,R16
 36E8                   .dbline 1959
 36E8           ;     T_dat_buf[12]=(T_dat&0x0400)>>10;
 36E8 2AE0              ldi R18,10
 36EA 30E0              ldi R19,0
 36EC 0091E101          lds R16,_T_dat
 36F0 1091E201          lds R17,_T_dat+1
 36F4 0070              andi R16,0
 36F6 1470              andi R17,4
 36F8 0E940000          xcall asr16
 36FC 0093CF01          sts _T_dat_buf+12,R16
 3700                   .dbline 1960
 3700           ;     T_dat_buf[11]=(T_dat&0x0200)>>9;
 3700 29E0              ldi R18,9
 3702 30E0              ldi R19,0
 3704 0091E101          lds R16,_T_dat
 3708 1091E201          lds R17,_T_dat+1
 370C 0070              andi R16,0
 370E 1270              andi R17,2
 3710 0E940000          xcall asr16
 3714 0093CE01          sts _T_dat_buf+11,R16
 3718                   .dbline 1961
 3718           ;       T_dat_buf[10]=(T_dat&0x0100)>>8;
 3718 8091E101          lds R24,_T_dat
 371C 9091E201          lds R25,_T_dat+1
 3720 8070              andi R24,0
 3722 9170              andi R25,1
 3724 1C01              movw R2,R24
 3726 232C              mov R2,R3
 3728 3324              clr R3
 372A 27FC              sbrc R2,7
 372C 3094              com R3
 372E 2092CD01          sts _T_dat_buf+10,R2
 3732                   .dbline 1962
 3732           ;       T_dat_buf[9]=(T_dat&0x0080)>>7;
 3732 27E0              ldi R18,7
 3734 30E0              ldi R19,0
 3736 0091E101          lds R16,_T_dat
 373A 1091E201          lds R17,_T_dat+1
 373E 0078              andi R16,128
 3740 1070              andi R17,0
 3742 0E940000          xcall asr16
 3746 0093CC01          sts _T_dat_buf+9,R16
 374A                   .dbline 1963
 374A           ;       T_dat_buf[8]=(T_dat&0x0040)>>6;
 374A 26E0              ldi R18,6
 374C 30E0              ldi R19,0
 374E 0091E101          lds R16,_T_dat
 3752 1091E201          lds R17,_T_dat+1
 3756 0074              andi R16,64
 3758 1070              andi R17,0
 375A 0E940000          xcall asr16
 375E 0093CB01          sts _T_dat_buf+8,R16
 3762                   .dbline 1964
 3762           ;       T_dat_buf[7]=(T_dat&0x0020)>>5;
 3762 25E0              ldi R18,5
 3764 30E0              ldi R19,0
 3766 0091E101          lds R16,_T_dat
 376A 1091E201          lds R17,_T_dat+1
 376E 0072              andi R16,32
 3770 1070              andi R17,0
 3772 0E940000          xcall asr16
 3776 0093CA01          sts _T_dat_buf+7,R16
 377A                   .dbline 1965
 377A           ;       T_dat_buf[6]=(T_dat&0x0010)>>4;
 377A 8091E101          lds R24,_T_dat
 377E 9091E201          lds R25,_T_dat+1
 3782 8071              andi R24,16
 3784 9070              andi R25,0
 3786 1C01              movw R2,R24
 3788 3594              asr R3
 378A 2794              ror R2
 378C 3594              asr R3
 378E 2794              ror R2
 3790 3594              asr R3
 3792 2794              ror R2
 3794 3594              asr R3
 3796 2794              ror R2
 3798 2092C901          sts _T_dat_buf+6,R2
 379C                   .dbline 1966
 379C           ;       T_dat_buf[5]=(T_dat&0x0008)>>3;
 379C 8091E101          lds R24,_T_dat
 37A0 9091E201          lds R25,_T_dat+1
 37A4 8870              andi R24,8
 37A6 9070              andi R25,0
 37A8 1C01              movw R2,R24
 37AA 3594              asr R3
 37AC 2794              ror R2
 37AE 3594              asr R3
 37B0 2794              ror R2
 37B2 3594              asr R3
 37B4 2794              ror R2
 37B6 2092C801          sts _T_dat_buf+5,R2
 37BA                   .dbline 1967
 37BA           ;       T_dat_buf[4]=(T_dat&0x0004)>>2;
 37BA 8091E101          lds R24,_T_dat
 37BE 9091E201          lds R25,_T_dat+1
 37C2 8470              andi R24,4
 37C4 9070              andi R25,0
 37C6 1C01              movw R2,R24
 37C8 3594              asr R3
 37CA 2794              ror R2
 37CC 3594              asr R3
 37CE 2794              ror R2
 37D0 2092C701          sts _T_dat_buf+4,R2
 37D4                   .dbline 1968
 37D4           ;       T_dat_buf[3]=(T_dat&0x0002)>>1;
 37D4 8091E101          lds R24,_T_dat
 37D8 9091E201          lds R25,_T_dat+1
 37DC 8270              andi R24,2
 37DE 9070              andi R25,0
 37E0 1C01              movw R2,R24
 37E2 3594              asr R3
 37E4 2794              ror R2
 37E6 2092C601          sts _T_dat_buf+3,R2
 37EA                   .dbline 1969
 37EA           ;       T_dat_buf[2]=T_dat&0x0001;
 37EA 8091E101          lds R24,_T_dat
 37EE 9091E201          lds R25,_T_dat+1
 37F2 8170              andi R24,1
 37F4 9070              andi R25,0
 37F6 8093C501          sts _T_dat_buf+2,R24
 37FA                   .dbline 1971
 37FA           ;       //计算校验位，奇校验
 37FA           ;       T_dat_buf[1]=1;
 37FA 81E0              ldi R24,1
 37FC 8093C401          sts _T_dat_buf+1,R24
 3800                   .dbline 1972
 3800           ;       for(L=2;L<22;L++)
 3800 42E0              ldi R20,2
 3802 0DC0              xjmp L949
 3804           L946:
 3804                   .dbline 1973
 3804           ;               {T_dat_buf[1]^=T_dat_buf[L];}
 3804                   .dbline 1973
 3804 80E0              ldi R24,<_T_dat_buf
 3806 90E0              ldi R25,>_T_dat_buf
 3808 E42F              mov R30,R20
 380A FF27              clr R31
 380C E80F              add R30,R24
 380E F91F              adc R31,R25
 3810 2080              ldd R2,z+0
 3812 3090C401          lds R3,_T_dat_buf+1
 3816 3224              eor R3,R2
 3818 3092C401          sts _T_dat_buf+1,R3
 381C                   .dbline 1973
 381C           L947:
 381C                   .dbline 1972
 381C 4395              inc R20
 381E           L949:
 381E                   .dbline 1972
 381E 4631              cpi R20,22
 3820 88F3              brlo L946
 3822           X318:
 3822                   .dbline 1974
 3822           ;     DELAY80
 3822 2224              clr R2
 3824 3324              clr R3
 3826 3092BE01          sts _Tt+1,R3
 382A 2092BD01          sts _Tt,R2
 382E 09C0              xjmp L954
 3830           L951:
 3830                   .dbline 1974
 3830           L952:
 3830                   .dbline 1974
 3830 8091BD01          lds R24,_Tt
 3834 9091BE01          lds R25,_Tt+1
 3838 0196              adiw R24,1
 383A 9093BE01          sts _Tt+1,R25
 383E 8093BD01          sts _Tt,R24
 3842           L954:
 3842                   .dbline 1974
 3842 8091BD01          lds R24,_Tt
 3846 9091BE01          lds R25,_Tt+1
 384A 8032              cpi R24,32
 384C E0E0              ldi R30,0
 384E 9E07              cpc R25,R30
 3850 78F3              brlo L951
 3852           X319:
 3852                   .dbline 1975
 3852           ;     M1_L
 3852                   .dbline 1975
 3852 80916500          lds R24,101
 3856 877F              andi R24,247
 3858 80936500          sts 101,R24
 385C                   .dbline 1975
 385C                   .dbline 1976
 385C           ;       DELAY40
 385C 2224              clr R2
 385E 3324              clr R3
 3860 3092BE01          sts _Tt+1,R3
 3864 2092BD01          sts _Tt,R2
 3868 09C0              xjmp L958
 386A           L955:
 386A                   .dbline 1976
 386A           L956:
 386A                   .dbline 1976
 386A 8091BD01          lds R24,_Tt
 386E 9091BE01          lds R25,_Tt+1
 3872 0196              adiw R24,1
 3874 9093BE01          sts _Tt+1,R25
 3878 8093BD01          sts _Tt,R24
 387C           L958:
 387C                   .dbline 1976
 387C 8091BD01          lds R24,_Tt
 3880 9091BE01          lds R25,_Tt+1
 3884 8031              cpi R24,16
 3886 E0E0              ldi R30,0
 3888 9E07              cpc R25,R30
 388A 78F3              brlo L955
 388C           X320:
 388C                   .dbline 1981
 388C           ;    
 388C           ;    
 388C           ;       //同步头,560us
 388C           ;       //充电开始，高80us       
 388C           ;       M2_H    
 388C                   .dbline 1981
 388C 80916500          lds R24,101
 3890 8061              ori R24,16
 3892 80936500          sts 101,R24
 3896                   .dbline 1981
 3896                   .dbline 1982
 3896           ;       DELAY80
 3896 2224              clr R2
 3898 3324              clr R3
 389A 3092BE01          sts _Tt+1,R3
 389E 2092BD01          sts _Tt,R2
 38A2 09C0              xjmp L962
 38A4           L959:
 38A4                   .dbline 1982
 38A4           L960:
 38A4                   .dbline 1982
 38A4 8091BD01          lds R24,_Tt
 38A8 9091BE01          lds R25,_Tt+1
 38AC 0196              adiw R24,1
 38AE 9093BE01          sts _Tt+1,R25
 38B2 8093BD01          sts _Tt,R24
 38B6           L962:
 38B6                   .dbline 1982
 38B6 8091BD01          lds R24,_Tt
 38BA 9091BE01          lds R25,_Tt+1
 38BE 8032              cpi R24,32
 38C0 E0E0              ldi R30,0
 38C2 9E07              cpc R25,R30
 38C4 78F3              brlo L959
 38C6           X321:
 38C6                   .dbline 1983
 38C6           ;       M2_L   //充电结束       
 38C6                   .dbline 1983
 38C6 80916500          lds R24,101
 38CA 8F7E              andi R24,239
 38CC 80936500          sts 101,R24
 38D0                   .dbline 1983
 38D0                   .dbline 1985
 38D0           ;       //放电开始，低80*6=480us
 38D0           ;       DELAY40
 38D0 2224              clr R2
 38D2 3324              clr R3
 38D4 3092BE01          sts _Tt+1,R3
 38D8 2092BD01          sts _Tt,R2
 38DC 09C0              xjmp L966
 38DE           L963:
 38DE                   .dbline 1985
 38DE           L964:
 38DE                   .dbline 1985
 38DE 8091BD01          lds R24,_Tt
 38E2 9091BE01          lds R25,_Tt+1
 38E6 0196              adiw R24,1
 38E8 9093BE01          sts _Tt+1,R25
 38EC 8093BD01          sts _Tt,R24
 38F0           L966:
 38F0                   .dbline 1985
 38F0 8091BD01          lds R24,_Tt
 38F4 9091BE01          lds R25,_Tt+1
 38F8 8031              cpi R24,16
 38FA E0E0              ldi R30,0
 38FC 9E07              cpc R25,R30
 38FE 78F3              brlo L963
 3900           X322:
 3900                   .dbline 1986
 3900           ;       M1_H    
 3900                   .dbline 1986
 3900 80916500          lds R24,101
 3904 8860              ori R24,8
 3906 80936500          sts 101,R24
 390A                   .dbline 1986
 390A                   .dbline 1987
 390A           ;     DELAY80
 390A 2224              clr R2
 390C 3324              clr R3
 390E 3092BE01          sts _Tt+1,R3
 3912 2092BD01          sts _Tt,R2
 3916 09C0              xjmp L970
 3918           L967:
 3918                   .dbline 1987
 3918           L968:
 3918                   .dbline 1987
 3918 8091BD01          lds R24,_Tt
 391C 9091BE01          lds R25,_Tt+1
 3920 0196              adiw R24,1
 3922 9093BE01          sts _Tt+1,R25
 3926 8093BD01          sts _Tt,R24
 392A           L970:
 392A                   .dbline 1987
 392A 8091BD01          lds R24,_Tt
 392E 9091BE01          lds R25,_Tt+1
 3932 8032              cpi R24,32
 3934 E0E0              ldi R30,0
 3936 9E07              cpc R25,R30
 3938 78F3              brlo L967
 393A           X323:
 393A                   .dbline 1988
 393A           ;       DELAY80
 393A 2224              clr R2
 393C 3324              clr R3
 393E 3092BE01          sts _Tt+1,R3
 3942 2092BD01          sts _Tt,R2
 3946 09C0              xjmp L974
 3948           L971:
 3948                   .dbline 1988
 3948           L972:
 3948                   .dbline 1988
 3948 8091BD01          lds R24,_Tt
 394C 9091BE01          lds R25,_Tt+1
 3950 0196              adiw R24,1
 3952 9093BE01          sts _Tt+1,R25
 3956 8093BD01          sts _Tt,R24
 395A           L974:
 395A                   .dbline 1988
 395A 8091BD01          lds R24,_Tt
 395E 9091BE01          lds R25,_Tt+1
 3962 8032              cpi R24,32
 3964 E0E0              ldi R30,0
 3966 9E07              cpc R25,R30
 3968 78F3              brlo L971
 396A           X324:
 396A                   .dbline 1989
 396A           ;       DELAY80
 396A 2224              clr R2
 396C 3324              clr R3
 396E 3092BE01          sts _Tt+1,R3
 3972 2092BD01          sts _Tt,R2
 3976 09C0              xjmp L978
 3978           L975:
 3978                   .dbline 1989
 3978           L976:
 3978                   .dbline 1989
 3978 8091BD01          lds R24,_Tt
 397C 9091BE01          lds R25,_Tt+1
 3980 0196              adiw R24,1
 3982 9093BE01          sts _Tt+1,R25
 3986 8093BD01          sts _Tt,R24
 398A           L978:
 398A                   .dbline 1989
 398A 8091BD01          lds R24,_Tt
 398E 9091BE01          lds R25,_Tt+1
 3992 8032              cpi R24,32
 3994 E0E0              ldi R30,0
 3996 9E07              cpc R25,R30
 3998 78F3              brlo L975
 399A           X325:
 399A                   .dbline 1990
 399A           ;       DELAY80
 399A 2224              clr R2
 399C 3324              clr R3
 399E 3092BE01          sts _Tt+1,R3
 39A2 2092BD01          sts _Tt,R2
 39A6 09C0              xjmp L982
 39A8           L979:
 39A8                   .dbline 1990
 39A8           L980:
 39A8                   .dbline 1990
 39A8 8091BD01          lds R24,_Tt
 39AC 9091BE01          lds R25,_Tt+1
 39B0 0196              adiw R24,1
 39B2 9093BE01          sts _Tt+1,R25
 39B6 8093BD01          sts _Tt,R24
 39BA           L982:
 39BA                   .dbline 1990
 39BA 8091BD01          lds R24,_Tt
 39BE 9091BE01          lds R25,_Tt+1
 39C2 8032              cpi R24,32
 39C4 E0E0              ldi R30,0
 39C6 9E07              cpc R25,R30
 39C8 78F3              brlo L979
 39CA           X326:
 39CA                   .dbline 1991
 39CA           ;       DELAY80
 39CA 2224              clr R2
 39CC 3324              clr R3
 39CE 3092BE01          sts _Tt+1,R3
 39D2 2092BD01          sts _Tt,R2
 39D6 09C0              xjmp L986
 39D8           L983:
 39D8                   .dbline 1991
 39D8           L984:
 39D8                   .dbline 1991
 39D8 8091BD01          lds R24,_Tt
 39DC 9091BE01          lds R25,_Tt+1
 39E0 0196              adiw R24,1
 39E2 9093BE01          sts _Tt+1,R25
 39E6 8093BD01          sts _Tt,R24
 39EA           L986:
 39EA                   .dbline 1991
 39EA 8091BD01          lds R24,_Tt
 39EE 9091BE01          lds R25,_Tt+1
 39F2 8032              cpi R24,32
 39F4 E0E0              ldi R30,0
 39F6 9E07              cpc R25,R30
 39F8 78F3              brlo L983
 39FA           X327:
 39FA                   .dbline 1992
 39FA           ;       M1_L    
 39FA                   .dbline 1992
 39FA 80916500          lds R24,101
 39FE 877F              andi R24,247
 3A00 80936500          sts 101,R24
 3A04                   .dbline 1992
 3A04                   .dbline 1993
 3A04           ;       DELAY40  //放电结束
 3A04 2224              clr R2
 3A06 3324              clr R3
 3A08 3092BE01          sts _Tt+1,R3
 3A0C 2092BD01          sts _Tt,R2
 3A10 09C0              xjmp L990
 3A12           L987:
 3A12                   .dbline 1993
 3A12           L988:
 3A12                   .dbline 1993
 3A12 8091BD01          lds R24,_Tt
 3A16 9091BE01          lds R25,_Tt+1
 3A1A 0196              adiw R24,1
 3A1C 9093BE01          sts _Tt+1,R25
 3A20 8093BD01          sts _Tt,R24
 3A24           L990:
 3A24                   .dbline 1993
 3A24 8091BD01          lds R24,_Tt
 3A28 9091BE01          lds R25,_Tt+1
 3A2C 8031              cpi R24,16
 3A2E E0E0              ldi R30,0
 3A30 9E07              cpc R25,R30
 3A32 78F3              brlo L987
 3A34           X328:
 3A34                   .dbline 1996
 3A34           ;       
 3A34           ;      //连续发送 ,全0时每位400us，共8400us，全1时每位240us，共5040us
 3A34           ;       for(L=21;L>0;L--)
 3A34 45E1              ldi R20,21
 3A36 24C1              xjmp L994
 3A38           L991:
 3A38                   .dbline 1997
 3A38           ;       {   
 3A38                   .dbline 1998
 3A38           ;         if(T_dat_buf[L])//1，一高二低
 3A38 80E0              ldi R24,<_T_dat_buf
 3A3A 90E0              ldi R25,>_T_dat_buf
 3A3C E42F              mov R30,R20
 3A3E FF27              clr R31
 3A40 E80F              add R30,R24
 3A42 F91F              adc R31,R25
 3A44 2080              ldd R2,z+0
 3A46 2220              tst R2
 3A48 09F4              brne X351
 3A4A 75C0              xjmp L995
 3A4C           X351:
 3A4C           X329:
 3A4C                   .dbline 1999
 3A4C           ;         {                             
 3A4C                   .dbline 2000
 3A4C           ;               M2_H 
 3A4C                   .dbline 2000
 3A4C 80916500          lds R24,101
 3A50 8061              ori R24,16
 3A52 80936500          sts 101,R24
 3A56                   .dbline 2000
 3A56                   .dbline 2001
 3A56           ;               DELAY80
 3A56 2224              clr R2
 3A58 3324              clr R3
 3A5A 3092BE01          sts _Tt+1,R3
 3A5E 2092BD01          sts _Tt,R2
 3A62 09C0              xjmp L1000
 3A64           L997:
 3A64                   .dbline 2001
 3A64           L998:
 3A64                   .dbline 2001
 3A64 8091BD01          lds R24,_Tt
 3A68 9091BE01          lds R25,_Tt+1
 3A6C 0196              adiw R24,1
 3A6E 9093BE01          sts _Tt+1,R25
 3A72 8093BD01          sts _Tt,R24
 3A76           L1000:
 3A76                   .dbline 2001
 3A76 8091BD01          lds R24,_Tt
 3A7A 9091BE01          lds R25,_Tt+1
 3A7E 8032              cpi R24,32
 3A80 E0E0              ldi R30,0
 3A82 9E07              cpc R25,R30
 3A84 78F3              brlo L997
 3A86           X330:
 3A86                   .dbline 2002
 3A86           ;               M2_L
 3A86                   .dbline 2002
 3A86 80916500          lds R24,101
 3A8A 8F7E              andi R24,239
 3A8C 80936500          sts 101,R24
 3A90                   .dbline 2002
 3A90                   .dbline 2003
 3A90           ;                       DELAY40
 3A90 2224              clr R2
 3A92 3324              clr R3
 3A94 3092BE01          sts _Tt+1,R3
 3A98 2092BD01          sts _Tt,R2
 3A9C 09C0              xjmp L1004
 3A9E           L1001:
 3A9E                   .dbline 2003
 3A9E           L1002:
 3A9E                   .dbline 2003
 3A9E 8091BD01          lds R24,_Tt
 3AA2 9091BE01          lds R25,_Tt+1
 3AA6 0196              adiw R24,1
 3AA8 9093BE01          sts _Tt+1,R25
 3AAC 8093BD01          sts _Tt,R24
 3AB0           L1004:
 3AB0                   .dbline 2003
 3AB0 8091BD01          lds R24,_Tt
 3AB4 9091BE01          lds R25,_Tt+1
 3AB8 8031              cpi R24,16
 3ABA E0E0              ldi R30,0
 3ABC 9E07              cpc R25,R30
 3ABE 78F3              brlo L1001
 3AC0           X331:
 3AC0                   .dbline 2004
 3AC0           ;               M1_H       
 3AC0                   .dbline 2004
 3AC0 80916500          lds R24,101
 3AC4 8860              ori R24,8
 3AC6 80936500          sts 101,R24
 3ACA                   .dbline 2004
 3ACA                   .dbline 2005
 3ACA           ;               DELAY80
 3ACA 2224              clr R2
 3ACC 3324              clr R3
 3ACE 3092BE01          sts _Tt+1,R3
 3AD2 2092BD01          sts _Tt,R2
 3AD6 09C0              xjmp L1008
 3AD8           L1005:
 3AD8                   .dbline 2005
 3AD8           L1006:
 3AD8                   .dbline 2005
 3AD8 8091BD01          lds R24,_Tt
 3ADC 9091BE01          lds R25,_Tt+1
 3AE0 0196              adiw R24,1
 3AE2 9093BE01          sts _Tt+1,R25
 3AE6 8093BD01          sts _Tt,R24
 3AEA           L1008:
 3AEA                   .dbline 2005
 3AEA 8091BD01          lds R24,_Tt
 3AEE 9091BE01          lds R25,_Tt+1
 3AF2 8032              cpi R24,32
 3AF4 E0E0              ldi R30,0
 3AF6 9E07              cpc R25,R30
 3AF8 78F3              brlo L1005
 3AFA           X332:
 3AFA                   .dbline 2006
 3AFA           ;                       M1_L
 3AFA                   .dbline 2006
 3AFA 80916500          lds R24,101
 3AFE 877F              andi R24,247
 3B00 80936500          sts 101,R24
 3B04                   .dbline 2006
 3B04                   .dbline 2007
 3B04           ;                       DELAY40
 3B04 2224              clr R2
 3B06 3324              clr R3
 3B08 3092BE01          sts _Tt+1,R3
 3B0C 2092BD01          sts _Tt,R2
 3B10 09C0              xjmp L1012
 3B12           L1009:
 3B12                   .dbline 2007
 3B12           L1010:
 3B12                   .dbline 2007
 3B12 8091BD01          lds R24,_Tt
 3B16 9091BE01          lds R25,_Tt+1
 3B1A 0196              adiw R24,1
 3B1C 9093BE01          sts _Tt+1,R25
 3B20 8093BD01          sts _Tt,R24
 3B24           L1012:
 3B24                   .dbline 2007
 3B24 8091BD01          lds R24,_Tt
 3B28 9091BE01          lds R25,_Tt+1
 3B2C 8031              cpi R24,16
 3B2E E0E0              ldi R30,0
 3B30 9E07              cpc R25,R30
 3B32 78F3              brlo L1009
 3B34           X333:
 3B34                   .dbline 2008
 3B34           ;               } 
 3B34 A4C0              xjmp L996
 3B36           L995:
 3B36                   .dbline 2010
 3B36           ;        else           //0，一高四低                                           
 3B36           ;         {
 3B36                   .dbline 2011
 3B36           ;                       M2_H 
 3B36                   .dbline 2011
 3B36 80916500          lds R24,101
 3B3A 8061              ori R24,16
 3B3C 80936500          sts 101,R24
 3B40                   .dbline 2011
 3B40                   .dbline 2012
 3B40           ;               DELAY80
 3B40 2224              clr R2
 3B42 3324              clr R3
 3B44 3092BE01          sts _Tt+1,R3
 3B48 2092BD01          sts _Tt,R2
 3B4C 09C0              xjmp L1016
 3B4E           L1013:
 3B4E                   .dbline 2012
 3B4E           L1014:
 3B4E                   .dbline 2012
 3B4E 8091BD01          lds R24,_Tt
 3B52 9091BE01          lds R25,_Tt+1
 3B56 0196              adiw R24,1
 3B58 9093BE01          sts _Tt+1,R25
 3B5C 8093BD01          sts _Tt,R24
 3B60           L1016:
 3B60                   .dbline 2012
 3B60 8091BD01          lds R24,_Tt
 3B64 9091BE01          lds R25,_Tt+1
 3B68 8032              cpi R24,32
 3B6A E0E0              ldi R30,0
 3B6C 9E07              cpc R25,R30
 3B6E 78F3              brlo L1013
 3B70           X334:
 3B70                   .dbline 2013
 3B70           ;               M2_L
 3B70                   .dbline 2013
 3B70 80916500          lds R24,101
 3B74 8F7E              andi R24,239
 3B76 80936500          sts 101,R24
 3B7A                   .dbline 2013
 3B7A                   .dbline 2014
 3B7A           ;                       DELAY40
 3B7A 2224              clr R2
 3B7C 3324              clr R3
 3B7E 3092BE01          sts _Tt+1,R3
 3B82 2092BD01          sts _Tt,R2
 3B86 09C0              xjmp L1020
 3B88           L1017:
 3B88                   .dbline 2014
 3B88           L1018:
 3B88                   .dbline 2014
 3B88 8091BD01          lds R24,_Tt
 3B8C 9091BE01          lds R25,_Tt+1
 3B90 0196              adiw R24,1
 3B92 9093BE01          sts _Tt+1,R25
 3B96 8093BD01          sts _Tt,R24
 3B9A           L1020:
 3B9A                   .dbline 2014
 3B9A 8091BD01          lds R24,_Tt
 3B9E 9091BE01          lds R25,_Tt+1
 3BA2 8031              cpi R24,16
 3BA4 E0E0              ldi R30,0
 3BA6 9E07              cpc R25,R30
 3BA8 78F3              brlo L1017
 3BAA           X335:
 3BAA                   .dbline 2015
 3BAA           ;               M1_H       
 3BAA                   .dbline 2015
 3BAA 80916500          lds R24,101
 3BAE 8860              ori R24,8
 3BB0 80936500          sts 101,R24
 3BB4                   .dbline 2015
 3BB4                   .dbline 2016
 3BB4           ;               DELAY80
 3BB4 2224              clr R2
 3BB6 3324              clr R3
 3BB8 3092BE01          sts _Tt+1,R3
 3BBC 2092BD01          sts _Tt,R2
 3BC0 09C0              xjmp L1024
 3BC2           L1021:
 3BC2                   .dbline 2016
 3BC2           L1022:
 3BC2                   .dbline 2016
 3BC2 8091BD01          lds R24,_Tt
 3BC6 9091BE01          lds R25,_Tt+1
 3BCA 0196              adiw R24,1
 3BCC 9093BE01          sts _Tt+1,R25
 3BD0 8093BD01          sts _Tt,R24
 3BD4           L1024:
 3BD4                   .dbline 2016
 3BD4 8091BD01          lds R24,_Tt
 3BD8 9091BE01          lds R25,_Tt+1
 3BDC 8032              cpi R24,32
 3BDE E0E0              ldi R30,0
 3BE0 9E07              cpc R25,R30
 3BE2 78F3              brlo L1021
 3BE4           X336:
 3BE4                   .dbline 2017
 3BE4           ;                       DELAY80
 3BE4 2224              clr R2
 3BE6 3324              clr R3
 3BE8 3092BE01          sts _Tt+1,R3
 3BEC 2092BD01          sts _Tt,R2
 3BF0 09C0              xjmp L1028
 3BF2           L1025:
 3BF2                   .dbline 2017
 3BF2           L1026:
 3BF2                   .dbline 2017
 3BF2 8091BD01          lds R24,_Tt
 3BF6 9091BE01          lds R25,_Tt+1
 3BFA 0196              adiw R24,1
 3BFC 9093BE01          sts _Tt+1,R25
 3C00 8093BD01          sts _Tt,R24
 3C04           L1028:
 3C04                   .dbline 2017
 3C04 8091BD01          lds R24,_Tt
 3C08 9091BE01          lds R25,_Tt+1
 3C0C 8032              cpi R24,32
 3C0E E0E0              ldi R30,0
 3C10 9E07              cpc R25,R30
 3C12 78F3              brlo L1025
 3C14           X337:
 3C14                   .dbline 2018
 3C14           ;                       DELAY80
 3C14 2224              clr R2
 3C16 3324              clr R3
 3C18 3092BE01          sts _Tt+1,R3
 3C1C 2092BD01          sts _Tt,R2
 3C20 09C0              xjmp L1032
 3C22           L1029:
 3C22                   .dbline 2018
 3C22           L1030:
 3C22                   .dbline 2018
 3C22 8091BD01          lds R24,_Tt
 3C26 9091BE01          lds R25,_Tt+1
 3C2A 0196              adiw R24,1
 3C2C 9093BE01          sts _Tt+1,R25
 3C30 8093BD01          sts _Tt,R24
 3C34           L1032:
 3C34                   .dbline 2018
 3C34 8091BD01          lds R24,_Tt
 3C38 9091BE01          lds R25,_Tt+1
 3C3C 8032              cpi R24,32
 3C3E E0E0              ldi R30,0
 3C40 9E07              cpc R25,R30
 3C42 78F3              brlo L1029
 3C44           X338:
 3C44                   .dbline 2019
 3C44           ;                       M1_L
 3C44                   .dbline 2019
 3C44 80916500          lds R24,101
 3C48 877F              andi R24,247
 3C4A 80936500          sts 101,R24
 3C4E                   .dbline 2019
 3C4E                   .dbline 2020
 3C4E           ;                       DELAY40
 3C4E 2224              clr R2
 3C50 3324              clr R3
 3C52 3092BE01          sts _Tt+1,R3
 3C56 2092BD01          sts _Tt,R2
 3C5A 09C0              xjmp L1036
 3C5C           L1033:
 3C5C                   .dbline 2020
 3C5C           L1034:
 3C5C                   .dbline 2020
 3C5C 8091BD01          lds R24,_Tt
 3C60 9091BE01          lds R25,_Tt+1
 3C64 0196              adiw R24,1
 3C66 9093BE01          sts _Tt+1,R25
 3C6A 8093BD01          sts _Tt,R24
 3C6E           L1036:
 3C6E                   .dbline 2020
 3C6E 8091BD01          lds R24,_Tt
 3C72 9091BE01          lds R25,_Tt+1
 3C76 8031              cpi R24,16
 3C78 E0E0              ldi R30,0
 3C7A 9E07              cpc R25,R30
 3C7C 78F3              brlo L1033
 3C7E           X339:
 3C7E                   .dbline 2021
 3C7E           ;               }
 3C7E           L996:
 3C7E                   .dbline 2022
 3C7E           ;     }            
 3C7E           L992:
 3C7E                   .dbline 1996
 3C7E 4A95              dec R20
 3C80           L994:
 3C80                   .dbline 1996
 3C80 80E0              ldi R24,0
 3C82 8417              cp R24,R20
 3C84 08F4              brsh X352
 3C86 D8CE              xjmp L991
 3C88           X352:
 3C88           X340:
 3C88                   .dbline 2024
 3C88           ;                  //结束位，一高八低，720us
 3C88           ;                   M2_H 
 3C88                   .dbline 2024
 3C88 80916500          lds R24,101
 3C8C 8061              ori R24,16
 3C8E 80936500          sts 101,R24
 3C92                   .dbline 2024
 3C92                   .dbline 2025
 3C92           ;                   DELAY80
 3C92 2224              clr R2
 3C94 3324              clr R3
 3C96 3092BE01          sts _Tt+1,R3
 3C9A 2092BD01          sts _Tt,R2
 3C9E 09C0              xjmp L1040
 3CA0           L1037:
 3CA0                   .dbline 2025
 3CA0           L1038:
 3CA0                   .dbline 2025
 3CA0 8091BD01          lds R24,_Tt
 3CA4 9091BE01          lds R25,_Tt+1
 3CA8 0196              adiw R24,1
 3CAA 9093BE01          sts _Tt+1,R25
 3CAE 8093BD01          sts _Tt,R24
 3CB2           L1040:
 3CB2                   .dbline 2025
 3CB2 8091BD01          lds R24,_Tt
 3CB6 9091BE01          lds R25,_Tt+1
 3CBA 8032              cpi R24,32
 3CBC E0E0              ldi R30,0
 3CBE 9E07              cpc R25,R30
 3CC0 78F3              brlo L1037
 3CC2           X341:
 3CC2                   .dbline 2026
 3CC2           ;               M2_L
 3CC2                   .dbline 2026
 3CC2 80916500          lds R24,101
 3CC6 8F7E              andi R24,239
 3CC8 80936500          sts 101,R24
 3CCC                   .dbline 2026
 3CCC                   .dbline 2027
 3CCC           ;                       DELAY40
 3CCC 2224              clr R2
 3CCE 3324              clr R3
 3CD0 3092BE01          sts _Tt+1,R3
 3CD4 2092BD01          sts _Tt,R2
 3CD8 09C0              xjmp L1044
 3CDA           L1041:
 3CDA                   .dbline 2027
 3CDA           L1042:
 3CDA                   .dbline 2027
 3CDA 8091BD01          lds R24,_Tt
 3CDE 9091BE01          lds R25,_Tt+1
 3CE2 0196              adiw R24,1
 3CE4 9093BE01          sts _Tt+1,R25
 3CE8 8093BD01          sts _Tt,R24
 3CEC           L1044:
 3CEC                   .dbline 2027
 3CEC 8091BD01          lds R24,_Tt
 3CF0 9091BE01          lds R25,_Tt+1
 3CF4 8031              cpi R24,16
 3CF6 E0E0              ldi R30,0
 3CF8 9E07              cpc R25,R30
 3CFA 78F3              brlo L1041
 3CFC           X342:
 3CFC                   .dbline 2028
 3CFC           ;               M1_H       
 3CFC                   .dbline 2028
 3CFC 80916500          lds R24,101
 3D00 8860              ori R24,8
 3D02 80936500          sts 101,R24
 3D06                   .dbline 2028
 3D06                   .dbline 2029
 3D06           ;               DELAY80
 3D06 2224              clr R2
 3D08 3324              clr R3
 3D0A 3092BE01          sts _Tt+1,R3
 3D0E 2092BD01          sts _Tt,R2
 3D12 09C0              xjmp L1048
 3D14           L1045:
 3D14                   .dbline 2029
 3D14           L1046:
 3D14                   .dbline 2029
 3D14 8091BD01          lds R24,_Tt
 3D18 9091BE01          lds R25,_Tt+1
 3D1C 0196              adiw R24,1
 3D1E 9093BE01          sts _Tt+1,R25
 3D22 8093BD01          sts _Tt,R24
 3D26           L1048:
 3D26                   .dbline 2029
 3D26 8091BD01          lds R24,_Tt
 3D2A 9091BE01          lds R25,_Tt+1
 3D2E 8032              cpi R24,32
 3D30 E0E0              ldi R30,0
 3D32 9E07              cpc R25,R30
 3D34 78F3              brlo L1045
 3D36           X343:
 3D36                   .dbline 2030
 3D36           ;                       DELAY80
 3D36 2224              clr R2
 3D38 3324              clr R3
 3D3A 3092BE01          sts _Tt+1,R3
 3D3E 2092BD01          sts _Tt,R2
 3D42 09C0              xjmp L1052
 3D44           L1049:
 3D44                   .dbline 2030
 3D44           L1050:
 3D44                   .dbline 2030
 3D44 8091BD01          lds R24,_Tt
 3D48 9091BE01          lds R25,_Tt+1
 3D4C 0196              adiw R24,1
 3D4E 9093BE01          sts _Tt+1,R25
 3D52 8093BD01          sts _Tt,R24
 3D56           L1052:
 3D56                   .dbline 2030
 3D56 8091BD01          lds R24,_Tt
 3D5A 9091BE01          lds R25,_Tt+1
 3D5E 8032              cpi R24,32
 3D60 E0E0              ldi R30,0
 3D62 9E07              cpc R25,R30
 3D64 78F3              brlo L1049
 3D66           X344:
 3D66                   .dbline 2031
 3D66           ;                       DELAY80
 3D66 2224              clr R2
 3D68 3324              clr R3
 3D6A 3092BE01          sts _Tt+1,R3
 3D6E 2092BD01          sts _Tt,R2
 3D72 09C0              xjmp L1056
 3D74           L1053:
 3D74                   .dbline 2031
 3D74           L1054:
 3D74                   .dbline 2031
 3D74 8091BD01          lds R24,_Tt
 3D78 9091BE01          lds R25,_Tt+1
 3D7C 0196              adiw R24,1
 3D7E 9093BE01          sts _Tt+1,R25
 3D82 8093BD01          sts _Tt,R24
 3D86           L1056:
 3D86                   .dbline 2031
 3D86 8091BD01          lds R24,_Tt
 3D8A 9091BE01          lds R25,_Tt+1
 3D8E 8032              cpi R24,32
 3D90 E0E0              ldi R30,0
 3D92 9E07              cpc R25,R30
 3D94 78F3              brlo L1053
 3D96           X345:
 3D96                   .dbline 2032
 3D96           ;                       DELAY80
 3D96 2224              clr R2
 3D98 3324              clr R3
 3D9A 3092BE01          sts _Tt+1,R3
 3D9E 2092BD01          sts _Tt,R2
 3DA2 09C0              xjmp L1060
 3DA4           L1057:
 3DA4                   .dbline 2032
 3DA4           L1058:
 3DA4                   .dbline 2032
 3DA4 8091BD01          lds R24,_Tt
 3DA8 9091BE01          lds R25,_Tt+1
 3DAC 0196              adiw R24,1
 3DAE 9093BE01          sts _Tt+1,R25
 3DB2 8093BD01          sts _Tt,R24
 3DB6           L1060:
 3DB6                   .dbline 2032
 3DB6 8091BD01          lds R24,_Tt
 3DBA 9091BE01          lds R25,_Tt+1
 3DBE 8032              cpi R24,32
 3DC0 E0E0              ldi R30,0
 3DC2 9E07              cpc R25,R30
 3DC4 78F3              brlo L1057
 3DC6           X346:
 3DC6                   .dbline 2033
 3DC6           ;                       DELAY80
 3DC6 2224              clr R2
 3DC8 3324              clr R3
 3DCA 3092BE01          sts _Tt+1,R3
 3DCE 2092BD01          sts _Tt,R2
 3DD2 09C0              xjmp L1064
 3DD4           L1061:
 3DD4                   .dbline 2033
 3DD4           L1062:
 3DD4                   .dbline 2033
 3DD4 8091BD01          lds R24,_Tt
 3DD8 9091BE01          lds R25,_Tt+1
 3DDC 0196              adiw R24,1
 3DDE 9093BE01          sts _Tt+1,R25
 3DE2 8093BD01          sts _Tt,R24
 3DE6           L1064:
 3DE6                   .dbline 2033
 3DE6 8091BD01          lds R24,_Tt
 3DEA 9091BE01          lds R25,_Tt+1
 3DEE 8032              cpi R24,32
 3DF0 E0E0              ldi R30,0
 3DF2 9E07              cpc R25,R30
 3DF4 78F3              brlo L1061
 3DF6           X347:
 3DF6                   .dbline 2034
 3DF6           ;                       DELAY80
 3DF6 2224              clr R2
 3DF8 3324              clr R3
 3DFA 3092BE01          sts _Tt+1,R3
 3DFE 2092BD01          sts _Tt,R2
 3E02 09C0              xjmp L1068
 3E04           L1065:
 3E04                   .dbline 2034
 3E04           L1066:
 3E04                   .dbline 2034
 3E04 8091BD01          lds R24,_Tt
 3E08 9091BE01          lds R25,_Tt+1
 3E0C 0196              adiw R24,1
 3E0E 9093BE01          sts _Tt+1,R25
 3E12 8093BD01          sts _Tt,R24
 3E16           L1068:
 3E16                   .dbline 2034
 3E16 8091BD01          lds R24,_Tt
 3E1A 9091BE01          lds R25,_Tt+1
 3E1E 8032              cpi R24,32
 3E20 E0E0              ldi R30,0
 3E22 9E07              cpc R25,R30
 3E24 78F3              brlo L1065
 3E26           X348:
 3E26                   .dbline 2035
 3E26           ;                       DELAY80
 3E26 2224              clr R2
 3E28 3324              clr R3
 3E2A 3092BE01          sts _Tt+1,R3
 3E2E 2092BD01          sts _Tt,R2
 3E32 09C0              xjmp L1072
 3E34           L1069:
 3E34                   .dbline 2035
 3E34           L1070:
 3E34                   .dbline 2035
 3E34 8091BD01          lds R24,_Tt
 3E38 9091BE01          lds R25,_Tt+1
 3E3C 0196              adiw R24,1
 3E3E 9093BE01          sts _Tt+1,R25
 3E42 8093BD01          sts _Tt,R24
 3E46           L1072:
 3E46                   .dbline 2035
 3E46 8091BD01          lds R24,_Tt
 3E4A 9091BE01          lds R25,_Tt+1
 3E4E 8032              cpi R24,32
 3E50 E0E0              ldi R30,0
 3E52 9E07              cpc R25,R30
 3E54 78F3              brlo L1069
 3E56           X349:
 3E56                   .dbline 2036
 3E56           ;                       M1_L
 3E56                   .dbline 2036
 3E56 80916500          lds R24,101
 3E5A 877F              andi R24,247
 3E5C 80936500          sts 101,R24
 3E60                   .dbline 2036
 3E60                   .dbline 2037
 3E60           ;                       DELAY40
 3E60 2224              clr R2
 3E62 3324              clr R3
 3E64 3092BE01          sts _Tt+1,R3
 3E68 2092BD01          sts _Tt,R2
 3E6C 09C0              xjmp L1076
 3E6E           L1073:
 3E6E                   .dbline 2037
 3E6E           L1074:
 3E6E                   .dbline 2037
 3E6E 8091BD01          lds R24,_Tt
 3E72 9091BE01          lds R25,_Tt+1
 3E76 0196              adiw R24,1
 3E78 9093BE01          sts _Tt+1,R25
 3E7C 8093BD01          sts _Tt,R24
 3E80           L1076:
 3E80                   .dbline 2037
 3E80 8091BD01          lds R24,_Tt
 3E84 9091BE01          lds R25,_Tt+1
 3E88 8031              cpi R24,16
 3E8A E0E0              ldi R30,0
 3E8C 9E07              cpc R25,R30
 3E8E 78F3              brlo L1073
 3E90           X350:
 3E90                   .dbline 2039
 3E90           ;       
 3E90           ;       EIFR|=0x08;//清INT3中断标志 
 3E90 88B7              in R24,0x38
 3E92 8860              ori R24,8
 3E94 88BF              out 0x38,R24
 3E96                   .dbline 2040
 3E96           ;       SREG|=0x80; //开总中断
 3E96 7894              bset 7
 3E98                   .dbline -2
 3E98           L924:
 3E98                   .dbline 0 ; func end
 3E98 4991              ld R20,y+
 3E9A 0895              ret
 3E9C                   .dbsym r L 20 c
 3E9C                   .dbend
 3E9C                   .dbfunc e EEPROM_write _EEPROM_write fV
 3E9C           ;           Data -> R18
 3E9C           ;        Address -> R16,R17
                        .even
 3E9C           _EEPROM_write::
 3E9C                   .dbline -1
 3E9C                   .dbline 2046
 3E9C           ; }
 3E9C           ; 
 3E9C           ; 
 3E9C           ; 
 3E9C           ; void EEPROM_write(unsigned int Address,unsigned char Data)    //内部EEPROM写
 3E9C           ; {//时钟频率为1MHz，典型的EEPROM字节写耗时约8.5ms
 3E9C           L1078:
 3E9C                   .dbline 2047
 3E9C           ;     while(EECR&0x02);                   // 等待上一次写操作结束
 3E9C           L1079:
 3E9C                   .dbline 2047
 3E9C E199              sbic 0x1c,1
 3E9E FECF              rjmp L1078
 3EA0           X353:
 3EA0                   .dbline 2048
 3EA0           ;     EEAR=Address;
 3EA0 1FBB              out 0x1f,R17
 3EA2 0EBB              out 0x1e,R16
 3EA4                   .dbline 2049
 3EA4           ;     EEDR=Data;                                // 设置地址和数据寄存器
 3EA4 2DBB              out 0x1d,R18
 3EA6                   .dbline 2050
 3EA6           ;     EECR|=0x04;                         //置位EEMWE
 3EA6 E29A              sbi 0x1c,2
 3EA8                   .dbline 2051
 3EA8           ;     EECR|=0x02;                         //置位EEWE 以启动写操作
 3EA8 E19A              sbi 0x1c,1
 3EAA                   .dbline -2
 3EAA           L1077:
 3EAA                   .dbline 0 ; func end
 3EAA 0895              ret
 3EAC                   .dbsym r Data 18 c
 3EAC                   .dbsym r Address 16 i
 3EAC                   .dbend
 3EAC                   .dbfunc e EEPROM_read _EEPROM_read fc
 3EAC           ;        Address -> R16,R17
                        .even
 3EAC           _EEPROM_read::
 3EAC                   .dbline -1
 3EAC                   .dbline 2055
 3EAC           ; }
 3EAC           ; 
 3EAC           ; unsigned char EEPROM_read(unsigned int Address)                               //内部EEPROM读
 3EAC           ; {
 3EAC           L1082:
 3EAC                   .dbline 2056
 3EAC           ;     while(EECR&0x02);                                 //等待上一次操作结束
 3EAC           L1083:
 3EAC                   .dbline 2056
 3EAC E199              sbic 0x1c,1
 3EAE FECF              rjmp L1082
 3EB0           X354:
 3EB0                   .dbline 2057
 3EB0           ;     EEAR = Address;                     //设置地址寄存器                                              
 3EB0 1FBB              out 0x1f,R17
 3EB2 0EBB              out 0x1e,R16
 3EB4                   .dbline 2058
 3EB4           ;       EECR|=0x01;                                     //设置EERE 以启动读操作
 3EB4 E09A              sbi 0x1c,0
 3EB6                   .dbline 2059
 3EB6           ;     return EEDR;                              //自数据寄存器返回数据
 3EB6 0DB3              in R16,0x1d
 3EB8                   .dbline -2
 3EB8           L1081:
 3EB8                   .dbline 0 ; func end
 3EB8 0895              ret
 3EBA                   .dbsym r Address 16 i
 3EBA                   .dbend
 3EBA                   .dbfunc e crc16 _crc16 fV
 3EBA           ;             ii -> R20,R21
 3EBA           ;             ch -> R10
 3EBA           ;             cl -> R22
 3EBA           ;         savelo -> R14
 3EBA           ;         savehi -> y+0
 3EBA           ;           flag -> R12,R13
 3EBA           ;         length -> R18,R19
 3EBA           ;         r_data -> y+11
                        .even
 3EBA           _crc16::
 3EBA 0E940000          xcall push_arg4
 3EBE 0E940000          xcall push_xgsetF0FC
 3EC2 2197              sbiw R28,1
 3EC4                   .dbline -1
 3EC4                   .dbline 2063
 3EC4           ; }    
 3EC4           ; 
 3EC4           ; void crc16(unsigned char r_data[],unsigned int length)
 3EC4           ; {
 3EC4                   .dbline 2067
 3EC4           ;         unsigned char cl,ch;
 3EC4           ;         unsigned char savehi,savelo;
 3EC4           ;         int ii,flag;
 3EC4           ;         crc16hi=0xFF;
 3EC4 8FEF              ldi R24,255
 3EC6 80932100          sts _crc16hi,R24
 3ECA                   .dbline 2068
 3ECA           ;         crc16lo=0xFF;
 3ECA 80932000          sts _crc16lo,R24
 3ECE                   .dbline 2069
 3ECE           ;         cl=0x1;
 3ECE 61E0              ldi R22,1
 3ED0                   .dbline 2070
 3ED0           ;         ch=0xA0;
 3ED0 80EA              ldi R24,160
 3ED2 A82E              mov R10,R24
 3ED4                   .dbline 2071
 3ED4           ;         for (ii=0;ii<length-2;ii++)
 3ED4 4427              clr R20
 3ED6 5527              clr R21
 3ED8 38C0              xjmp L1089
 3EDA           L1086:
 3EDA                   .dbline 2072
 3EDA           ;         {
 3EDA                   .dbline 2073
 3EDA           ;             crc16lo=(crc16lo ^ r_data[ii]);
 3EDA FA01              movw R30,R20
 3EDC 0B84              ldd R0,y+11
 3EDE 1C84              ldd R1,y+12
 3EE0 E00D              add R30,R0
 3EE2 F11D              adc R31,R1
 3EE4 2080              ldd R2,z+0
 3EE6 30902000          lds R3,_crc16lo
 3EEA 3224              eor R3,R2
 3EEC 30922000          sts _crc16lo,R3
 3EF0                   .dbline 2074
 3EF0           ;                 for (flag=0;flag<8;flag++)
 3EF0 CC24              clr R12
 3EF2 DD24              clr R13
 3EF4           L1090:
 3EF4                   .dbline 2075
 3EF4           ;                 {
 3EF4                   .dbline 2076
 3EF4           ;                        savehi=crc16hi;
 3EF4 20902100          lds R2,_crc16hi
 3EF8 2882              std y+0,R2
 3EFA                   .dbline 2077
 3EFA           ;                         savelo=crc16lo;
 3EFA E0902000          lds R14,_crc16lo
 3EFE                   .dbline 2078
 3EFE           ;                        crc16hi=(crc16hi>>1);
 3EFE 2694              lsr R2
 3F00 20922100          sts _crc16hi,R2
 3F04                   .dbline 2079
 3F04           ;                        crc16lo=(crc16lo>>1);
 3F04 2E2C              mov R2,R14
 3F06 2694              lsr R2
 3F08 20922000          sts _crc16lo,R2
 3F0C                   .dbline 2080
 3F0C           ;                         if ((savehi & 0x01)==0x01)
 3F0C 8881              ldd R24,y+0
 3F0E 8170              andi R24,1
 3F10 8130              cpi R24,1
 3F12 21F4              brne L1094
 3F14           X355:
 3F14                   .dbline 2081
 3F14           ;                                 crc16lo=(crc16lo | 0x80);
 3F14 822D              mov R24,R2
 3F16 8068              ori R24,128
 3F18 80932000          sts _crc16lo,R24
 3F1C           L1094:
 3F1C                   .dbline 2082
 3F1C           ;                         if        ((savelo & 0x01)==0x01)
 3F1C 8E2D              mov R24,R14
 3F1E 8170              andi R24,1
 3F20 8130              cpi R24,1
 3F22 51F4              brne L1096
 3F24           X356:
 3F24                   .dbline 2083
 3F24           ;                         {
 3F24                   .dbline 2084
 3F24           ;                                 crc16hi = (crc16hi ^ ch);
 3F24 20902100          lds R2,_crc16hi
 3F28 2A24              eor R2,R10
 3F2A 20922100          sts _crc16hi,R2
 3F2E                   .dbline 2085
 3F2E           ;                                                               crc16lo = (crc16lo ^ cl);
 3F2E 20902000          lds R2,_crc16lo
 3F32 2626              eor R2,R22
 3F34 20922000          sts _crc16lo,R2
 3F38                   .dbline 2086
 3F38           ;                         }        
 3F38           L1096:
 3F38                   .dbline 2087
 3F38           ;                 }
 3F38           L1091:
 3F38                   .dbline 2074
 3F38 C601              movw R24,R12
 3F3A 0196              adiw R24,1
 3F3C 6C01              movw R12,R24
 3F3E                   .dbline 2074
 3F3E 8830              cpi R24,8
 3F40 E0E0              ldi R30,0
 3F42 9E07              cpc R25,R30
 3F44 BCF2              brlt L1090
 3F46           X357:
 3F46                   .dbline 2088
 3F46           ;         }
 3F46           L1087:
 3F46                   .dbline 2071
 3F46 4F5F              subi R20,255  ; offset = 1
 3F48 5F4F              sbci R21,255
 3F4A           L1089:
 3F4A                   .dbline 2071
 3F4A C901              movw R24,R18
 3F4C 0297              sbiw R24,2
 3F4E 4817              cp R20,R24
 3F50 5907              cpc R21,R25
 3F52 08F4              brsh X359
 3F54 C2CF              xjmp L1086
 3F56           X359:
 3F56           X358:
 3F56                   .dbline -2
 3F56           L1085:
 3F56                   .dbline 0 ; func end
 3F56 2196              adiw R28,1
 3F58 0E940000          xcall pop_xgsetF0FC
 3F5C 2496              adiw R28,4
 3F5E 0895              ret
 3F60                   .dbsym r ii 20 I
 3F60                   .dbsym r ch 10 c
 3F60                   .dbsym r cl 22 c
 3F60                   .dbsym r savelo 14 c
 3F60                   .dbsym l savehi 0 c
 3F60                   .dbsym r flag 12 I
 3F60                   .dbsym r length 18 i
 3F60                   .dbsym l r_data 11 pc
 3F60                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CT_MAIN_V30\main.c
 0000           _crc16array::
 0000                   .blkb 32
 0020                   .dbsym e crc16array _crc16array A[32:32]c
 0020           _crc16lo::
 0020                   .blkb 1
 0021                   .dbsym e crc16lo _crc16lo c
 0021           _crc16hi::
 0021                   .blkb 1
 0022                   .dbsym e crc16hi _crc16hi c
 0022           _lfib::
 0022                   .blkb 4
 0026                   .dbsym e lfib _lfib l
 0026           _bf::
 0026                   .blkb 2
 0028                   .dbsym e bf _bf i
 0028           _CompCounter::
 0028                   .blkb 2
 002A                   .dbsym e CompCounter _CompCounter i
 002A           _coeff_count::
 002A                   .blkb 2
 002C                   .dbsym e coeff_count _coeff_count i
 002C           _coeff_len::
 002C                   .blkb 2
 002E                   .dbsym e coeff_len _coeff_len i
 002E           _EEPAdd::
 002E                   .blkb 1
 002F                   .dbsym e EEPAdd _EEPAdd c
 002F           _Uart0TxData::
 002F                   .blkb 74
 0079                   .dbsym e Uart0TxData _Uart0TxData A[74:74]c
 0079           _coeffdata::
 0079                   .blkb 320
 01B9                   .dbsym e coeffdata _coeffdata A[320:320]c
 01B9           _T2cn::
 01B9                   .blkb 2
 01BB                   .dbsym e T2cn _T2cn i
 01BB           _k::
 01BB                   .blkb 2
 01BD                   .dbsym e k _k i
 01BD           _Tt::
 01BD                   .blkb 2
 01BF                   .dbsym e Tt _Tt i
 01BF           _IntFlag::
 01BF                   .blkb 1
 01C0                   .dbsym e IntFlag _IntFlag c
 01C0           _Int_count::
 01C0                   .blkb 1
 01C1                   .dbsym e Int_count _Int_count c
 01C1           _DataFlag::
 01C1                   .blkb 2
 01C3                   .dbsym e DataFlag _DataFlag i
 01C3           _T_dat_buf::
 01C3                   .blkb 22
 01D9                   .dbsym e T_dat_buf _T_dat_buf A[22:22]c
 01D9           _TimeOutFlag::
 01D9                   .blkb 1
 01DA                   .dbsym e TimeOutFlag _TimeOutFlag c
 01DA           _T_com::
 01DA                   .blkb 1
 01DB                   .dbsym e T_com _T_com c
 01DB           _TPS_TData::
 01DB                   .blkb 2
 01DD                   .dbsym e TPS_TData _TPS_TData I
 01DD           _TPS_PData::
 01DD                   .blkb 2
 01DF                   .dbsym e TPS_PData _TPS_PData I
 01DF           _R_dat::
 01DF                   .blkb 2
 01E1                   .dbsym e R_dat _R_dat I
 01E1           _T_dat::
 01E1                   .blkb 2
 01E3                   .dbsym e T_dat _T_dat I
 01E3           _Rx::
 01E3                   .blkb 18
 01F5                   .dbsym e Rx _Rx A[18:18]c
 01F5           _Uart1RxCounter::
 01F5                   .blkb 1
 01F6                   .dbsym e Uart1RxCounter _Uart1RxCounter c
 01F6           _Uart1RxData::
 01F6                   .blkb 4
 01FA                   .dbsym e Uart1RxData _Uart1RxData A[4:4]c
 01FA           _Uart0RxCounter::
 01FA                   .blkb 1
 01FB                   .dbsym e Uart0RxCounter _Uart0RxCounter c
 01FB           _Uart0RxData::
 01FB                   .blkb 74
 0245                   .dbsym e Uart0RxData _Uart0RxData A[74:74]c
 0245           _Timer0Counter::
 0245                   .blkb 2
 0247                   .dbsym e Timer0Counter _Timer0Counter i
 0247           _T_Flag::
 0247                   .blkb 1
 0248                   .dbsym e T_Flag _T_Flag c
 0248           _myFIB::
 0248                   .blkb 4
 024C                   .dbunion 0 4 FIB
 024C                   .dbfield 0 f D
 024C                   .dbfield 0 i A[4:2]i
 024C                   .dbfield 0 b A[4:4]c
 024C                   .dbend
 024C                   .dbsym e myFIB _myFIB S[FIB]
                        .area lit(rom, con, rel)
 0000           L524:
 0000 00008043          .word 0x0,0x4380
 0004           L523:
 0004 0000CA42          .word 0x0,0x42ca
 0008           L522:
 0008 0AD72340          .word 0xd70a,0x4023
 000C           L286:
 000C 0000FA40          .word 0x0,0x40fa
 0010           ; }
