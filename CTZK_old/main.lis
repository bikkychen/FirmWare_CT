                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 0000                   .dbfunc e InitialIO _InitialIO fV
                        .even
 0000           _InitialIO::
 0000                   .dbline -1
 0000                   .dbline 137
 0000           ;  /**************************************************
 0000           ; CTZK
 0000           ; //20161110 增加了流量采样和全部采样的CRC16校验
 0000           ; //20161113 改进了流量数据中时间和相位由无符号短整型转为浮点数时的转换方法，以防上位机软件出现相位超大值
 0000           ; **************************************************/
 0000           ; #include <iom128v.h>                                                                  
 0000           ; #include <macros.h>
 0000           ; #include <stdio.h>
 0000           ; 
 0000           ; #define  BB     0x32        //固件版本号
 0000           ; 
 0000           ; #define M1_L    PORTD&=0xfb;
 0000           ; #define M1_H    PORTD|=0x04;
 0000           ; #define M2_L    PORTD&=0xfd;
 0000           ; #define M2_H    PORTD|=0x02;
 0000           ; 
 0000           ;  
 0000           ; //收放电机管脚定义和控制项
 0000           ; #define DIR1_PIN    ((PINA&0x04)>>2)
 0000           ; #define PWM1_PIN    ((PINA&0x02)>>1)
 0000           ; #define BREAKE1_PIN (PINA&0x01)
 0000           ; 
 0000           ; #define DIR1_H      {DDRA|=0x04;PORTA|=0x04;}
 0000           ; #define PWM1_H      {DDRA|=0x02;PORTA|=0x02;}
 0000           ; #define BREAKE1_H   {DDRA|=0x01;PORTA|=0x01;}
 0000           ; 
 0000           ; #define DIR1_L      {DDRA|=0x04;PORTA&=0xfb;}
 0000           ; #define PWM1_L      {DDRA|=0x02;PORTA&=0xFD;}
 0000           ; #define BREAKE1_L   {DDRA|=0x01;PORTA&=0xFE;}
 0000           ; 
 0000           ; //调节电机管脚定义和控制项
 0000           ; #define PWM2_PIN    ((PINF&0x04)>>2)
 0000           ; #define BREAKE2_PIN ((PINF&0x02)>>1)
 0000           ; #define DIR2_PIN    (PINF&0x01)
 0000           ; 
 0000           ; #define PWM2_H      {DDRF|=0x04;PORTF|=0x04;}
 0000           ; #define BREAKE2_H   {DDRF|=0x02;PORTF|=0x02;}
 0000           ; #define DIR2_H      {DDRF|=0x01;PORTF|=0x01;}
 0000           ; 
 0000           ; #define PWM2_L      {DDRF|=0x04;PORTF&=0xfb;}
 0000           ; #define BREAKE2_L   {DDRF|=0x02;PORTF&=0xFD;}
 0000           ; #define DIR2_L      {DDRF|=0x01;PORTF&=0xFE;}
 0000           ; 
 0000           ; //电机电源
 0000           ; #define VM_H        {DDRB|=0x80;PORTB|=0x80;}
 0000           ; 
 0000           ; //同时关二个电机，先把PWM置低，后把DIR和BREAK置低，最后关电机电源
 0000           ; //最好不关刹车，这样电机堵转停止后不会有1.6秒的反向电压，电机不会喘气
 0000           ; #define MOTORSTOP   {DDRA|=0x07;PORTA&=0xFD;PORTA&=0xF8;   DDRF|=0x07;PORTF&=0xFB;PORTF&=0xF8;     DDRB|=0x80;PORTB&=0x7f;}
 0000           ; 
 0000           ; #define DELAY10 for(Tt=0;Tt<4;Tt++);
 0000           ; #define DELAY20 for(Tt=0;Tt<4;Tt++);
 0000           ; #define DELAY40 for(Tt=0;Tt<16;Tt++); 
 0000           ; #define DELAY50 for(Tt=0;Tt<21;Tt++); 
 0000           ; #define DELAY80 for(Tt=0;Tt<32;Tt++); 
 0000           ; #define DELAY89 for(Tt=0;Tt<36;Tt++); 
 0000           ; #define DELAY100 for(Tt=0;Tt<42;Tt++); 
 0000           ; #define DELAY170 for(Tt=0;Tt<72;Tt++);
 0000           ; #define DELAY268 for(Tt=0;Tt<113;Tt++);
 0000           ; #define DELAY397 for(Tt=0;Tt<165;Tt++);
 0000           ; #define DELAY400 for(Tt=0;Tt<168;Tt++);
 0000           ; 
 0000           ; union FIB
 0000           ; {
 0000           ;  float f;
 0000           ;  unsigned int i[2];
 0000           ;  unsigned char b[4];
 0000           ; }myFIB;
 0000           ; 
 0000           ; union MotorStatus
 0000           ; {
 0000           ;  unsigned int i;
 0000           ;  struct 
 0000           ;  { 
 0000           ;    unsigned int PWM:1;//bit0,电机运行状态，0：停止，1：运行
 0000           ;    unsigned int DIR:1;//bit1,电机运行方向，0：收臂-调小，1：张臂-调大
 0000           ;    unsigned int BrokenStop:1;//bit2, 断路停
 0000           ;    unsigned int CommandStop:1;//bit3,手动停
 0000           ;    unsigned int OverCurrent:1;//bit4,过流停
 0000           ;    unsigned int UnderVoltage:1;//bit5,欠压停
 0000           ;    unsigned int StartResult:2;//bit6-bit7,电机最近一次启动结果(0：正常上电启动，1：本电机同向运行，2：本电机反向运行，3：另一个电机正在运行)
 0000           ;    
 0000           ;    unsigned int ThisCurrent:8;//bit8-bit15 ,  电机当前或停止前最近一次电流
 0000           ;  }s;
 0000           ; }Motor1Status,Motor2Status;//电机状态
 0000           ; 
 0000           ; unsigned char Motor1Thr,Motor2Thr;//电机堵转过流阈值
 0000           ; 
 0000           ; unsigned char T_Flag;
 0000           ; 
 0000           ; unsigned int Timer0Counter;//定时器0超过4ms时的计数
 0000           ; 
 0000           ; unsigned char Uart0RxData[74];//串口接收数据缓存
 0000           ; unsigned char Uart0RxCounter;
 0000           ; 
 0000           ; unsigned char Rx[18];//解码接收9位共18个半位
 0000           ; int  T_dat,R_dat;//曼码发送数据
 0000           ; unsigned char T_com;//曼码发送命令
 0000           ; 
 0000           ; unsigned char TimeOutFlag;//发送超时标志
 0000           ; 
 0000           ; unsigned char T_dat_buf[22];//曼码发送缓冲 
 0000           ; 
 0000           ; unsigned int DataFlag;//下发标定系数开始标志
 0000           ; unsigned char Int_count;
 0000           ; unsigned char IntFlag;//接收帧状态
 0000           ; 
 0000           ; unsigned int Tt,k;
 0000           ; unsigned int T2cn;
 0000           ; unsigned char coeffdata[320];
 0000           ; 
 0000           ; unsigned char Uart0TxData[74];//串口发送数据缓存
 0000           ; 
 0000           ; unsigned char EEPAdd;//接收系数存放地址索引
 0000           ; unsigned int coeff_len,coeff_count;//接收系数长度，接收系数计数
 0000           ; unsigned int CompCounter;
 0000           ; 
 0000           ; unsigned int bf;
 0000           ; 
 0000           ; unsigned long lfib;//短整型转浮点数时用的临时变量
 0000           ; unsigned char crc16hi,crc16lo,crc16array[16];
 0000           ; 
 0000           ; void InitialIO(void);
 0000           ; void init_USART0(void);
 0000           ; void SendUart0_2(unsigned char len,unsigned int s);
 0000           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn);
 0000           ; void Pwm_startup(unsigned char motor);
 0000           ; void Start(void);
 0000           ; void SendManchester(void); 
 0000           ; unsigned char SampleADC(unsigned char ch);
 0000           ; void EEPROM_write(unsigned int Address,unsigned char Data);
 0000           ; unsigned char EEPROM_read(unsigned int Address);
 0000           ; void CheckMotor(unsigned int t);
 0000           ; void crc16(unsigned char r_data[],unsigned int length);
 0000           ; 
 0000           ; void InitialIO(void)
 0000           ; {//1输出，0输入
 0000                   .dbline 138
 0000           ;  PORTA=0x00;
 0000 2224              clr R2
 0002 2BBA              out 0x1b,R2
 0004                   .dbline 139
 0004           ;  DDRA=0x07; //PA0=BREAKE1 PA1=PWM1 PA2=DIR1
 0004 87E0              ldi R24,7
 0006 8ABB              out 0x1a,R24
 0008                   .dbline 141
 0008           ; 
 0008           ;  PORTB=0x00; 
 0008 28BA              out 0x18,R2
 000A                   .dbline 142
 000A           ;  DDRB=0x80; //PB7=VM_CTRL
 000A 80E8              ldi R24,128
 000C 87BB              out 0x17,R24
 000E                   .dbline 144
 000E           ;  
 000E           ;  PORTC=0x00;
 000E 25BA              out 0x15,R2
 0010                   .dbline 145
 0010           ;  DDRC=0x00; 
 0010 24BA              out 0x14,R2
 0012                   .dbline 147
 0012           ;  
 0012           ;  PORTD=0x00; 
 0012 22BA              out 0x12,R2
 0014                   .dbline 148
 0014           ;  DDRD=0x06;//PD1=M2 PD2=M1
 0014 86E0              ldi R24,6
 0016 81BB              out 0x11,R24
 0018                   .dbline 150
 0018           ;  
 0018           ;  PORTE=0x00; 
 0018 23B8              out 0x3,R2
 001A                   .dbline 151
 001A           ;  DDRE=0x00;
 001A 22B8              out 0x2,R2
 001C                   .dbline 153
 001C           ;  
 001C           ;  PORTF=0x00; 
 001C 20926200          sts 98,R2
 0020                   .dbline 154
 0020           ;  DDRF=0x07;//PF0=DIR2 PF1=BREAKE2 PF2=PWM2
 0020 87E0              ldi R24,7
 0022 80936100          sts 97,R24
 0026                   .dbline 156
 0026           ;  
 0026           ;  PORTG=0x00; 
 0026 20926500          sts 101,R2
 002A                   .dbline 157
 002A           ;  DDRG=0x00; 
 002A 20926400          sts 100,R2
 002E                   .dbline -2
 002E           L2:
 002E                   .dbline 0 ; func end
 002E 0895              ret
 0030                   .dbend
 0030                   .dbfunc e uart0_init _uart0_init fV
                        .even
 0030           _uart0_init::
 0030                   .dbline -1
 0030                   .dbline 166
 0030           ; }
 0030           ; 
 0030           ; //UART0 initialize
 0030           ; // desired baud rate: 57600
 0030           ; // actual: baud rate:58824 (2.1%)
 0030           ; // char size: 8 bit
 0030           ; // parity: Disabled
 0030           ; void uart0_init(void)
 0030           ; {
 0030                   .dbline 167
 0030           ;  UCSR0B = 0x00; //disable while setting baud rate
 0030 2224              clr R2
 0032 2AB8              out 0xa,R2
 0034                   .dbline 168
 0034           ;  UCSR0A = 0x02;
 0034 82E0              ldi R24,2
 0036 8BB9              out 0xb,R24
 0038                   .dbline 169
 0038           ;  UCSR0C = 0x06;
 0038 86E0              ldi R24,6
 003A 80939500          sts 149,R24
 003E                   .dbline 170
 003E           ;  UBRR0L = 0x10; //set baud rate lo
 003E 80E1              ldi R24,16
 0040 89B9              out 0x9,R24
 0042                   .dbline 171
 0042           ;  UBRR0H = 0x00; //set baud rate hi
 0042 20929000          sts 144,R2
 0046                   .dbline 172
 0046           ;  UCSR0B = 0x98;
 0046 88E9              ldi R24,152
 0048 8AB9              out 0xa,R24
 004A                   .dbline -2
 004A           L3:
 004A                   .dbline 0 ; func end
 004A 0895              ret
 004C                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C942600          jmp _uart0_rx_isr
                        .area text(rom, con, rel)
 004C                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 004C                   .dbfunc e uart0_rx_isr _uart0_rx_isr fV
                        .even
 004C           _uart0_rx_isr::
 004C                   .dbline -1
 004C                   .dbline 177
 004C           ; }
 004C           ; 
 004C           ; #pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
 004C           ; void uart0_rx_isr(void)
 004C           ; {
 004C                   .dbline -2
 004C           L4:
 004C                   .dbline 0 ; func end
 004C 1895              reti
 004E                   .dbend
                        .area vector(rom, abs)
                        .org 64
 0040 0C942700          jmp _timer0_ovf_isr
                        .area text(rom, con, rel)
 004E                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 004E                   .dbfunc e timer0_ovf_isr _timer0_ovf_isr fV
                        .even
 004E           _timer0_ovf_isr::
 004E 2A92              st -y,R2
 0050 8A93              st -y,R24
 0052 9A93              st -y,R25
 0054 2FB6              IN R2,63
 0056 2A92              st -y,R2
 0058                   .dbline -1
 0058                   .dbline 183
 0058           ;  //uart has received a character in UDR
 0058           ; }
 0058           ; 
 0058           ; #pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
 0058           ; void timer0_ovf_isr(void)
 0058           ; {
 0058                   .dbline 184
 0058           ; Timer0Counter--;
 0058 80912C02          lds R24,_Timer0Counter
 005C 90912D02          lds R25,_Timer0Counter+1
 0060 0197              sbiw R24,1
 0062 90932D02          sts _Timer0Counter+1,R25
 0066 80932C02          sts _Timer0Counter,R24
 006A                   .dbline 185
 006A           ; if(Timer0Counter==0)
 006A 8030              cpi R24,0
 006C 8907              cpc R24,R25
 006E 61F4              brne L6
 0070           X0:
 0070                   .dbline 186
 0070           ; {
 0070                   .dbline 187
 0070           ;  TCNT0=0;
 0070 2224              clr R2
 0072 22BE              out 0x32,R2
 0074                   .dbline 188
 0074           ;  TimeOutFlag=1;
 0074 81E0              ldi R24,1
 0076 8093C901          sts _TimeOutFlag,R24
 007A                   .dbline 189
 007A           ;  TIMSK&=0xFE;//关定时器0中断
 007A 87B7              in R24,0x37
 007C 8E7F              andi R24,254
 007E 87BF              out 0x37,R24
 0080                   .dbline 190
 0080           ;  UCSR0B&=0x7f;//关串口接收中断
 0080 8AB1              in R24,0xa
 0082 8F77              andi R24,127
 0084 8AB9              out 0xa,R24
 0086                   .dbline 191
 0086           ;  }
 0086 02C0              xjmp L7
 0088           L6:
 0088                   .dbline 193
 0088           ;  else
 0088           ;  {
 0088                   .dbline 194
 0088           ;  TCNT0=0x06;//定时8ms
 0088 86E0              ldi R24,6
 008A 82BF              out 0x32,R24
 008C                   .dbline 195
 008C           ;  }
 008C           L7:
 008C                   .dbline -2
 008C           L5:
 008C                   .dbline 0 ; func end
 008C 2990              ld R2,y+
 008E 2FBE              OUT 63,R2
 0090 9991              ld R25,y+
 0092 8991              ld R24,y+
 0094 2990              ld R2,y+
 0096 1895              reti
 0098                   .dbend
 0098                   .dbfunc e SendUart0_2 _SendUart0_2 fV
 0098           ;              t -> R20
 0098           ;              i -> R22
 0098           ;              s -> R10,R11
 0098           ;            len -> R12
                        .even
 0098           _SendUart0_2::
 0098 0E940000          xcall push_xgsetF03C
 009C 5901              movw R10,R18
 009E C02E              mov R12,R16
 00A0                   .dbline -1
 00A0                   .dbline 199
 00A0           ; }
 00A0           ; 
 00A0           ; void SendUart0_2(unsigned char len,unsigned int s)   //串口发送数据
 00A0           ; {//要求流量板在s个8ms内通过串口返回数据
 00A0                   .dbline 202
 00A0           ; unsigned char t,i;    
 00A0           ; 
 00A0           ; for(t=0;t<74;t++)
 00A0 4427              clr R20
 00A2 09C0              xjmp L12
 00A4           L9:
 00A4                   .dbline 203
 00A4           ;   Uart0RxData[t]=0xff;
 00A4 80E0              ldi R24,<_Uart0RxData
 00A6 90E0              ldi R25,>_Uart0RxData
 00A8 E42F              mov R30,R20
 00AA FF27              clr R31
 00AC E80F              add R30,R24
 00AE F91F              adc R31,R25
 00B0 8FEF              ldi R24,255
 00B2 8083              std z+0,R24
 00B4           L10:
 00B4                   .dbline 202
 00B4 4395              inc R20
 00B6           L12:
 00B6                   .dbline 202
 00B6 4A34              cpi R20,74
 00B8 A8F3              brlo L9
 00BA           X1:
 00BA                   .dbline 205
 00BA           ;   
 00BA           ; Uart0RxCounter=0; //清串口接受计数  
 00BA 2224              clr R2
 00BC 2092E101          sts _Uart0RxCounter,R2
 00C0                   .dbline 207
 00C0           ; 
 00C0           ; for(t=0;t<len;t++)
 00C0 4427              clr R20
 00C2 10C0              xjmp L16
 00C4           L17:
 00C4                   .dbline 209
 00C4           ; {
 00C4           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 00C4           L18:
 00C4                   .dbline 209
 00C4 5D9B              sbis 0xb,5
 00C6 FECF              rjmp L17
 00C8           X2:
 00C8                   .dbline 210
 00C8           ; for(i=0;i<200;i++);
 00C8 6627              clr R22
 00CA 01C0              xjmp L23
 00CC           L20:
 00CC                   .dbline 210
 00CC           L21:
 00CC                   .dbline 210
 00CC 6395              inc R22
 00CE           L23:
 00CE                   .dbline 210
 00CE 683C              cpi R22,200
 00D0 E8F3              brlo L20
 00D2           X3:
 00D2                   .dbline 211
 00D2           ; UDR0=Uart0TxData[t];  
 00D2 80E0              ldi R24,<_Uart0TxData
 00D4 90E0              ldi R25,>_Uart0TxData
 00D6 E42F              mov R30,R20
 00D8 FF27              clr R31
 00DA E80F              add R30,R24
 00DC F91F              adc R31,R25
 00DE 2080              ldd R2,z+0
 00E0 2CB8              out 0xc,R2
 00E2                   .dbline 212
 00E2           ; }
 00E2           L14:
 00E2                   .dbline 207
 00E2 4395              inc R20
 00E4           L16:
 00E4                   .dbline 207
 00E4 4C15              cp R20,R12
 00E6 70F3              brlo L18
 00E8           X4:
 00E8                   .dbline 214
 00E8           ;                   
 00E8           ; if(s>0)
 00E8 AA20              tst R10
 00EA 11F4              brne X5
 00EC BB20              tst R11
 00EE 11F1              breq L24
 00F0           X5:
 00F0                   .dbline 215
 00F0           ; {
 00F0                   .dbline 217
 00F0           ;  //超时设定
 00F0           ; TimeOutFlag=0; //超时标志置0
 00F0 2224              clr R2
 00F2 2092C901          sts _TimeOutFlag,R2
 00F6                   .dbline 218
 00F6           ; Timer0Counter=s; //8ms定时循环次数
 00F6 B0922D02          sts _Timer0Counter+1,R11
 00FA A0922C02          sts _Timer0Counter,R10
 00FE                   .dbline 219
 00FE           ; TCNT0=0x06;//定时8ms
 00FE 86E0              ldi R24,6
 0100 82BF              out 0x32,R24
 0102                   .dbline 220
 0102           ; TCCR0|=0x06;//256分频
 0102 83B7              in R24,0x33
 0104 8660              ori R24,6
 0106 83BF              out 0x33,R24
 0108                   .dbline 221
 0108           ; TIFR|=0x01; //清定时器0中断标志
 0108 86B7              in R24,0x36
 010A 8160              ori R24,1
 010C 86BF              out 0x36,R24
 010E                   .dbline 222
 010E           ; TIMSK|=0x01;//使能定时器0中断
 010E 87B7              in R24,0x37
 0110 8160              ori R24,1
 0112 87BF              out 0x37,R24
 0114                   .dbline 223
 0114           ; t=UDR0;//开串口接收中断前读空缓存
 0114 4CB1              in R20,0xc
 0116                   .dbline 224
 0116           ; UCSR0B|=0x80;//开串口接收中断
 0116 579A              sbi 0xa,7
 0118 03C0              xjmp L27
 011A           L26:
 011A                   .dbline 226
 011A           ; while(TimeOutFlag==0)
 011A           ; {
 011A                   .dbline 227
 011A           ; CheckMotor(0);
 011A 0027              clr R16
 011C 1127              clr R17
 011E FAD1              xcall _CheckMotor
 0120                   .dbline 228
 0120           ; }
 0120           L27:
 0120                   .dbline 225
 0120 2090C901          lds R2,_TimeOutFlag
 0124 2220              tst R2
 0126 C9F3              breq L26
 0128           X6:
 0128                   .dbline 229
 0128           ; TIMSK&=0xFE;//关定时器0中断
 0128 87B7              in R24,0x37
 012A 8E7F              andi R24,254
 012C 87BF              out 0x37,R24
 012E                   .dbline 230
 012E           ; UCSR0B&=0x7f;//关串口接收中断
 012E 8AB1              in R24,0xa
 0130 8F77              andi R24,127
 0132 8AB9              out 0xa,R24
 0134                   .dbline 231
 0134           ; }
 0134           L24:
 0134                   .dbline -2
 0134           L8:
 0134                   .dbline 0 ; func end
 0134 0C940000          xjmp pop_xgsetF03C
 0138                   .dbsym r t 20 c
 0138                   .dbsym r i 22 c
 0138                   .dbsym r s 10 i
 0138                   .dbsym r len 12 c
 0138                   .dbend
 0138                   .dbfunc e SendUart0_3 _SendUart0_3 fV
 0138           ;              t -> R20
 0138           ;              i -> R22
 0138           ;             cn -> R10
 0138           ;              s -> R12,R13
 0138           ;            len -> R14
                        .even
 0138           _SendUart0_3::
 0138 0E940000          xcall push_xgsetF0FC
 013C 6901              movw R12,R18
 013E E02E              mov R14,R16
 0140 AA84              ldd R10,y+10
 0142                   .dbline -1
 0142                   .dbline 235
 0142           ; }
 0142           ; 
 0142           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn)   //串口发送数据，不死等，收到采集板返回的cn个字节后即退出，如一直没收到cn个字节，则超时时间s*8ms到后也退出
 0142           ; {//要求流量板在s个8ms内通过串口返回数据
 0142                   .dbline 238
 0142           ; unsigned char t,i;    
 0142           ; 
 0142           ; for(t=0;t<74;t++)
 0142 4427              clr R20
 0144 09C0              xjmp L33
 0146           L30:
 0146                   .dbline 239
 0146           ;   Uart0RxData[t]=0xff;
 0146 80E0              ldi R24,<_Uart0RxData
 0148 90E0              ldi R25,>_Uart0RxData
 014A E42F              mov R30,R20
 014C FF27              clr R31
 014E E80F              add R30,R24
 0150 F91F              adc R31,R25
 0152 8FEF              ldi R24,255
 0154 8083              std z+0,R24
 0156           L31:
 0156                   .dbline 238
 0156 4395              inc R20
 0158           L33:
 0158                   .dbline 238
 0158 4A34              cpi R20,74
 015A A8F3              brlo L30
 015C           X7:
 015C                   .dbline 241
 015C           ;   
 015C           ; Uart0RxCounter=0; //清串口接受计数  
 015C 2224              clr R2
 015E 2092E101          sts _Uart0RxCounter,R2
 0162                   .dbline 243
 0162           ; 
 0162           ; for(t=0;t<len;t++)
 0162 4427              clr R20
 0164 10C0              xjmp L37
 0166           L38:
 0166                   .dbline 245
 0166           ; {
 0166           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 0166           L39:
 0166                   .dbline 245
 0166 5D9B              sbis 0xb,5
 0168 FECF              rjmp L38
 016A           X8:
 016A                   .dbline 246
 016A           ; for(i=0;i<200;i++);
 016A 6627              clr R22
 016C 01C0              xjmp L44
 016E           L41:
 016E                   .dbline 246
 016E           L42:
 016E                   .dbline 246
 016E 6395              inc R22
 0170           L44:
 0170                   .dbline 246
 0170 683C              cpi R22,200
 0172 E8F3              brlo L41
 0174           X9:
 0174                   .dbline 247
 0174           ; UDR0=Uart0TxData[t];  
 0174 80E0              ldi R24,<_Uart0TxData
 0176 90E0              ldi R25,>_Uart0TxData
 0178 E42F              mov R30,R20
 017A FF27              clr R31
 017C E80F              add R30,R24
 017E F91F              adc R31,R25
 0180 2080              ldd R2,z+0
 0182 2CB8              out 0xc,R2
 0184                   .dbline 248
 0184           ; }
 0184           L35:
 0184                   .dbline 243
 0184 4395              inc R20
 0186           L37:
 0186                   .dbline 243
 0186 4E15              cp R20,R14
 0188 70F3              brlo L39
 018A           X10:
 018A                   .dbline 250
 018A           ;                   
 018A           ; if(s>0)
 018A CC20              tst R12
 018C 11F4              brne X11
 018E DD20              tst R13
 0190 39F1              breq L45
 0192           X11:
 0192                   .dbline 251
 0192           ; {
 0192                   .dbline 253
 0192           ;  //超时设定
 0192           ; TimeOutFlag=0; //超时标志置0
 0192 2224              clr R2
 0194 2092C901          sts _TimeOutFlag,R2
 0198                   .dbline 254
 0198           ; Timer0Counter=s; //8ms定时循环次数
 0198 D0922D02          sts _Timer0Counter+1,R13
 019C C0922C02          sts _Timer0Counter,R12
 01A0                   .dbline 255
 01A0           ; TCNT0=0x06;//定时8ms
 01A0 86E0              ldi R24,6
 01A2 82BF              out 0x32,R24
 01A4                   .dbline 256
 01A4           ; TCCR0|=0x06;//256分频
 01A4 83B7              in R24,0x33
 01A6 8660              ori R24,6
 01A8 83BF              out 0x33,R24
 01AA                   .dbline 257
 01AA           ; TIFR|=0x01; //清定时器0中断标志
 01AA 86B7              in R24,0x36
 01AC 8160              ori R24,1
 01AE 86BF              out 0x36,R24
 01B0                   .dbline 258
 01B0           ; TIMSK|=0x01;//使能定时器0中断
 01B0 87B7              in R24,0x37
 01B2 8160              ori R24,1
 01B4 87BF              out 0x37,R24
 01B6                   .dbline 259
 01B6           ; t=UDR0;//开串口接收中断前读空缓存
 01B6 4CB1              in R20,0xc
 01B8                   .dbline 260
 01B8           ; UCSR0B|=0x80;//开串口接收中断
 01B8 579A              sbi 0xa,7
 01BA 08C0              xjmp L48
 01BC           L47:
 01BC                   .dbline 262
 01BC           ; while(TimeOutFlag==0)
 01BC           ; {
 01BC                   .dbline 263
 01BC           ; CheckMotor(0);
 01BC 0027              clr R16
 01BE 1127              clr R17
 01C0 A9D1              xcall _CheckMotor
 01C2                   .dbline 264
 01C2           ;  if(Uart0RxCounter>=cn)
 01C2 2090E101          lds R2,_Uart0RxCounter
 01C6 2A14              cp R2,R10
 01C8 08F0              brlo L50
 01CA           X12:
 01CA                   .dbline 265
 01CA           ;    break;
 01CA 04C0              xjmp L49
 01CC           L50:
 01CC                   .dbline 266
 01CC           ; }
 01CC           L48:
 01CC                   .dbline 261
 01CC 2090C901          lds R2,_TimeOutFlag
 01D0 2220              tst R2
 01D2 A1F3              breq L47
 01D4           X13:
 01D4           L49:
 01D4                   .dbline 267
 01D4           ; TIMSK&=0xFE;//关定时器0中断
 01D4 87B7              in R24,0x37
 01D6 8E7F              andi R24,254
 01D8 87BF              out 0x37,R24
 01DA                   .dbline 268
 01DA           ; UCSR0B&=0x7f;//关串口接收中断
 01DA 8AB1              in R24,0xa
 01DC 8F77              andi R24,127
 01DE 8AB9              out 0xa,R24
 01E0                   .dbline 269
 01E0           ; }
 01E0           L45:
 01E0                   .dbline -2
 01E0           L29:
 01E0                   .dbline 0 ; func end
 01E0 0C940000          xjmp pop_xgsetF0FC
 01E4                   .dbsym r t 20 c
 01E4                   .dbsym r i 22 c
 01E4                   .dbsym r cn 10 c
 01E4                   .dbsym r s 12 i
 01E4                   .dbsym r len 14 c
 01E4                   .dbend
 01E4                   .dbfunc e Pwm_startup _Pwm_startup fV
 01E4           ;              c -> R20
 01E4           ;              b -> R22
 01E4           ;          motor -> R16
                        .even
 01E4           _Pwm_startup::
 01E4 4A93              st -y,R20
 01E6 6A93              st -y,R22
 01E8                   .dbline -1
 01E8                   .dbline 274
 01E8           ; }
 01E8           ; 
 01E8           ; 
 01E8           ; void Pwm_startup(unsigned char motor)//电机软启动
 01E8           ; {     unsigned char c,b;
 01E8                   .dbline 276
 01E8           ; 
 01E8           ;       if(motor==1)
 01E8 0130              cpi R16,1
 01EA 09F0              breq X30
 01EC 7FC0              xjmp L53
 01EE           X30:
 01EE           X14:
 01EE                   .dbline 277
 01EE           ;       {         
 01EE                   .dbline 278
 01EE           ;            for(b=0;b<30;b++)//6ms采用降低占空比启动电机
 01EE 6627              clr R22
 01F0 37C0              xjmp L58
 01F2           L55:
 01F2                   .dbline 279
 01F2           ;                {
 01F2                   .dbline 280
 01F2           ;                 PWM1_H
 01F2                   .dbline 280
 01F2 D19A              sbi 0x1a,1
 01F4                   .dbline 280
 01F4 D99A              sbi 0x1b,1
 01F6                   .dbline 280
 01F6                   .dbline 281
 01F6           ;                 DELAY100
 01F6 2224              clr R2
 01F8 3324              clr R3
 01FA 3092AE01          sts _Tt+1,R3
 01FE 2092AD01          sts _Tt,R2
 0202 09C0              xjmp L62
 0204           L59:
 0204                   .dbline 281
 0204           L60:
 0204                   .dbline 281
 0204 8091AD01          lds R24,_Tt
 0208 9091AE01          lds R25,_Tt+1
 020C 0196              adiw R24,1
 020E 9093AE01          sts _Tt+1,R25
 0212 8093AD01          sts _Tt,R24
 0216           L62:
 0216                   .dbline 281
 0216 8091AD01          lds R24,_Tt
 021A 9091AE01          lds R25,_Tt+1
 021E 8A32              cpi R24,42
 0220 E0E0              ldi R30,0
 0222 9E07              cpc R25,R30
 0224 78F3              brlo L59
 0226           X15:
 0226                   .dbline 282
 0226           ;                 PWM1_L
 0226                   .dbline 282
 0226 D19A              sbi 0x1a,1
 0228                   .dbline 282
 0228 8BB3              in R24,0x1b
 022A 8D7F              andi R24,253
 022C 8BBB              out 0x1b,R24
 022E                   .dbline 282
 022E                   .dbline 283
 022E           ;                 DELAY100
 022E 2224              clr R2
 0230 3324              clr R3
 0232 3092AE01          sts _Tt+1,R3
 0236 2092AD01          sts _Tt,R2
 023A 09C0              xjmp L66
 023C           L63:
 023C                   .dbline 283
 023C           L64:
 023C                   .dbline 283
 023C 8091AD01          lds R24,_Tt
 0240 9091AE01          lds R25,_Tt+1
 0244 0196              adiw R24,1
 0246 9093AE01          sts _Tt+1,R25
 024A 8093AD01          sts _Tt,R24
 024E           L66:
 024E                   .dbline 283
 024E 8091AD01          lds R24,_Tt
 0252 9091AE01          lds R25,_Tt+1
 0256 8A32              cpi R24,42
 0258 E0E0              ldi R30,0
 025A 9E07              cpc R25,R30
 025C 78F3              brlo L63
 025E           X16:
 025E                   .dbline 284
 025E           ;                }
 025E           L56:
 025E                   .dbline 278
 025E 6395              inc R22
 0260           L58:
 0260                   .dbline 278
 0260 6E31              cpi R22,30
 0262 38F2              brlo L55
 0264           X17:
 0264                   .dbline 286
 0264           ;  
 0264           ;        for(c=0;c<200;c++)//150ms采用降低占空比启动电机
 0264 4427              clr R20
 0266 3EC0              xjmp L70
 0268           L67:
 0268                   .dbline 287
 0268           ;                {
 0268                   .dbline 288
 0268           ;              PWM1_L
 0268                   .dbline 288
 0268 D19A              sbi 0x1a,1
 026A                   .dbline 288
 026A 8BB3              in R24,0x1b
 026C 8D7F              andi R24,253
 026E 8BBB              out 0x1b,R24
 0270                   .dbline 288
 0270                   .dbline 289
 0270           ;                  for(b=0;b<(200-c);b++)
 0270 6627              clr R22
 0272 0CC0              xjmp L74
 0274           L71:
 0274                   .dbline 290
 0274           ;                   {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 0274                   .dbline 290
 0274 0000              nop
 0276                   .dbline 290
 0276 0000              nop
 0278                   .dbline 290
 0278 0000              nop
 027A                   .dbline 290
 027A 0000              nop
 027C                   .dbline 290
 027C 0000              nop
 027E                   .dbline 290
 027E 0000              nop
 0280                   .dbline 290
 0280 0000              nop
 0282                   .dbline 290
 0282 0000              nop
 0284                   .dbline 290
 0284 0000              nop
 0286                   .dbline 290
 0286 0000              nop
 0288                   .dbline 290
 0288 0000              nop
 028A                   .dbline 290
 028A           L72:
 028A                   .dbline 289
 028A 6395              inc R22
 028C           L74:
 028C                   .dbline 289
 028C 242E              mov R2,R20
 028E 3324              clr R3
 0290 88EC              ldi R24,200
 0292 90E0              ldi R25,0
 0294 2C01              movw R4,R24
 0296 4218              sub R4,R2
 0298 5308              sbc R5,R3
 029A 262E              mov R2,R22
 029C 3324              clr R3
 029E 2414              cp R2,R4
 02A0 3504              cpc R3,R5
 02A2 44F3              brlt L71
 02A4           X18:
 02A4                   .dbline 292
 02A4           ;                       
 02A4           ;              if(Motor1Status.s.UnderVoltage==0)//如意启动过程中没有发生欠压，则继续启动
 02A4 20903302          lds R2,_Motor1Status
 02A8 30903402          lds R3,_Motor1Status+1
 02AC 25FC              sbrc R2,5
 02AE 03C0              rjmp L75
 02B0           X19:
 02B0                   .dbline 293
 02B0           ;                  {PWM1_H}
 02B0                   .dbline 293
 02B0                   .dbline 293
 02B0 D19A              sbi 0x1a,1
 02B2                   .dbline 293
 02B2 D99A              sbi 0x1b,1
 02B4                   .dbline 293
 02B4                   .dbline 293
 02B4 04C0              xjmp L76
 02B6           L75:
 02B6                   .dbline 295
 02B6           ;                  else 
 02B6           ;                  {PWM1_L}
 02B6                   .dbline 295
 02B6                   .dbline 295
 02B6 D19A              sbi 0x1a,1
 02B8                   .dbline 295
 02B8 8BB3              in R24,0x1b
 02BA 8D7F              andi R24,253
 02BC 8BBB              out 0x1b,R24
 02BE                   .dbline 295
 02BE                   .dbline 295
 02BE           L76:
 02BE                   .dbline 297
 02BE           ;                  
 02BE           ;              for(b=0;b<(c+50);b++)
 02BE 6627              clr R22
 02C0 0CC0              xjmp L80
 02C2           L77:
 02C2                   .dbline 298
 02C2           ;                  {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 02C2                   .dbline 298
 02C2 0000              nop
 02C4                   .dbline 298
 02C4 0000              nop
 02C6                   .dbline 298
 02C6 0000              nop
 02C8                   .dbline 298
 02C8 0000              nop
 02CA                   .dbline 298
 02CA 0000              nop
 02CC                   .dbline 298
 02CC 0000              nop
 02CE                   .dbline 298
 02CE 0000              nop
 02D0                   .dbline 298
 02D0 0000              nop
 02D2                   .dbline 298
 02D2 0000              nop
 02D4                   .dbline 298
 02D4 0000              nop
 02D6                   .dbline 298
 02D6 0000              nop
 02D8                   .dbline 298
 02D8           L78:
 02D8                   .dbline 297
 02D8 6395              inc R22
 02DA           L80:
 02DA                   .dbline 297
 02DA 842F              mov R24,R20
 02DC 8E5C              subi R24,206    ; addi 50
 02DE 6817              cp R22,R24
 02E0 80F3              brlo L77
 02E2           X20:
 02E2                   .dbline 299
 02E2           ;                }      
 02E2           L68:
 02E2                   .dbline 286
 02E2 4395              inc R20
 02E4           L70:
 02E4                   .dbline 286
 02E4 483C              cpi R20,200
 02E6 08F4              brsh X31
 02E8 BFCF              xjmp L67
 02EA           X31:
 02EA           X21:
 02EA                   .dbline 300
 02EA           ;       } 
 02EA A4C0              xjmp L54
 02EC           L53:
 02EC                   .dbline 301
 02EC           ;       else if(motor==2)
 02EC 0230              cpi R16,2
 02EE 09F0              breq X32
 02F0 A1C0              xjmp L81
 02F2           X32:
 02F2           X22:
 02F2                   .dbline 302
 02F2           ;       {  
 02F2                   .dbline 303
 02F2           ;            for(b=0;b<30;b++)//6ms采用降低占空比启动电机
 02F2 6627              clr R22
 02F4 45C0              xjmp L86
 02F6           L83:
 02F6                   .dbline 304
 02F6           ;                {
 02F6                   .dbline 305
 02F6           ;                 PWM2_H
 02F6                   .dbline 305
 02F6 80916100          lds R24,97
 02FA 8460              ori R24,4
 02FC 80936100          sts 97,R24
 0300                   .dbline 305
 0300 80916200          lds R24,98
 0304 8460              ori R24,4
 0306 80936200          sts 98,R24
 030A                   .dbline 305
 030A                   .dbline 306
 030A           ;                 DELAY100
 030A 2224              clr R2
 030C 3324              clr R3
 030E 3092AE01          sts _Tt+1,R3
 0312 2092AD01          sts _Tt,R2
 0316 09C0              xjmp L90
 0318           L87:
 0318                   .dbline 306
 0318           L88:
 0318                   .dbline 306
 0318 8091AD01          lds R24,_Tt
 031C 9091AE01          lds R25,_Tt+1
 0320 0196              adiw R24,1
 0322 9093AE01          sts _Tt+1,R25
 0326 8093AD01          sts _Tt,R24
 032A           L90:
 032A                   .dbline 306
 032A 8091AD01          lds R24,_Tt
 032E 9091AE01          lds R25,_Tt+1
 0332 8A32              cpi R24,42
 0334 E0E0              ldi R30,0
 0336 9E07              cpc R25,R30
 0338 78F3              brlo L87
 033A           X23:
 033A                   .dbline 307
 033A           ;                 PWM2_L
 033A                   .dbline 307
 033A 80916100          lds R24,97
 033E 8460              ori R24,4
 0340 80936100          sts 97,R24
 0344                   .dbline 307
 0344 80916200          lds R24,98
 0348 8B7F              andi R24,251
 034A 80936200          sts 98,R24
 034E                   .dbline 307
 034E                   .dbline 308
 034E           ;                 DELAY100
 034E 2224              clr R2
 0350 3324              clr R3
 0352 3092AE01          sts _Tt+1,R3
 0356 2092AD01          sts _Tt,R2
 035A 09C0              xjmp L94
 035C           L91:
 035C                   .dbline 308
 035C           L92:
 035C                   .dbline 308
 035C 8091AD01          lds R24,_Tt
 0360 9091AE01          lds R25,_Tt+1
 0364 0196              adiw R24,1
 0366 9093AE01          sts _Tt+1,R25
 036A 8093AD01          sts _Tt,R24
 036E           L94:
 036E                   .dbline 308
 036E 8091AD01          lds R24,_Tt
 0372 9091AE01          lds R25,_Tt+1
 0376 8A32              cpi R24,42
 0378 E0E0              ldi R30,0
 037A 9E07              cpc R25,R30
 037C 78F3              brlo L91
 037E           X24:
 037E                   .dbline 309
 037E           ;                }
 037E           L84:
 037E                   .dbline 303
 037E 6395              inc R22
 0380           L86:
 0380                   .dbline 303
 0380 6E31              cpi R22,30
 0382 08F4              brsh X33
 0384 B8CF              xjmp L83
 0386           X33:
 0386           X25:
 0386                   .dbline 311
 0386           ;  
 0386           ;        for(c=0;c<200;c++)//150ms采用降低占空比启动电机
 0386 4427              clr R20
 0388 52C0              xjmp L98
 038A           L95:
 038A                   .dbline 312
 038A           ;                {
 038A                   .dbline 313
 038A           ;              PWM2_L
 038A                   .dbline 313
 038A 80916100          lds R24,97
 038E 8460              ori R24,4
 0390 80936100          sts 97,R24
 0394                   .dbline 313
 0394 80916200          lds R24,98
 0398 8B7F              andi R24,251
 039A 80936200          sts 98,R24
 039E                   .dbline 313
 039E                   .dbline 314
 039E           ;                  for(b=0;b<(200-c);b++)
 039E 6627              clr R22
 03A0 0CC0              xjmp L102
 03A2           L99:
 03A2                   .dbline 315
 03A2           ;                   {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 03A2                   .dbline 315
 03A2 0000              nop
 03A4                   .dbline 315
 03A4 0000              nop
 03A6                   .dbline 315
 03A6 0000              nop
 03A8                   .dbline 315
 03A8 0000              nop
 03AA                   .dbline 315
 03AA 0000              nop
 03AC                   .dbline 315
 03AC 0000              nop
 03AE                   .dbline 315
 03AE 0000              nop
 03B0                   .dbline 315
 03B0 0000              nop
 03B2                   .dbline 315
 03B2 0000              nop
 03B4                   .dbline 315
 03B4 0000              nop
 03B6                   .dbline 315
 03B6 0000              nop
 03B8                   .dbline 315
 03B8           L100:
 03B8                   .dbline 314
 03B8 6395              inc R22
 03BA           L102:
 03BA                   .dbline 314
 03BA 242E              mov R2,R20
 03BC 3324              clr R3
 03BE 88EC              ldi R24,200
 03C0 90E0              ldi R25,0
 03C2 2C01              movw R4,R24
 03C4 4218              sub R4,R2
 03C6 5308              sbc R5,R3
 03C8 262E              mov R2,R22
 03CA 3324              clr R3
 03CC 2414              cp R2,R4
 03CE 3504              cpc R3,R5
 03D0 44F3              brlt L99
 03D2           X26:
 03D2                   .dbline 317
 03D2           ;                       
 03D2           ;              if(Motor2Status.s.UnderVoltage==0)//如意启动过程中没有发生欠压，则继续启动
 03D2 20903102          lds R2,_Motor2Status
 03D6 30903202          lds R3,_Motor2Status+1
 03DA 25FC              sbrc R2,5
 03DC 0BC0              rjmp L103
 03DE           X27:
 03DE                   .dbline 318
 03DE           ;                  {PWM2_H}
 03DE                   .dbline 318
 03DE                   .dbline 318
 03DE 80916100          lds R24,97
 03E2 8460              ori R24,4
 03E4 80936100          sts 97,R24
 03E8                   .dbline 318
 03E8 80916200          lds R24,98
 03EC 8460              ori R24,4
 03EE 80936200          sts 98,R24
 03F2                   .dbline 318
 03F2                   .dbline 318
 03F2 0AC0              xjmp L104
 03F4           L103:
 03F4                   .dbline 320
 03F4           ;                  else 
 03F4           ;                  {PWM2_L}
 03F4                   .dbline 320
 03F4                   .dbline 320
 03F4 80916100          lds R24,97
 03F8 8460              ori R24,4
 03FA 80936100          sts 97,R24
 03FE                   .dbline 320
 03FE 80916200          lds R24,98
 0402 8B7F              andi R24,251
 0404 80936200          sts 98,R24
 0408                   .dbline 320
 0408                   .dbline 320
 0408           L104:
 0408                   .dbline 322
 0408           ;                  
 0408           ;              for(b=0;b<(c+50);b++)
 0408 6627              clr R22
 040A 0CC0              xjmp L108
 040C           L105:
 040C                   .dbline 323
 040C           ;                  {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 040C                   .dbline 323
 040C 0000              nop
 040E                   .dbline 323
 040E 0000              nop
 0410                   .dbline 323
 0410 0000              nop
 0412                   .dbline 323
 0412 0000              nop
 0414                   .dbline 323
 0414 0000              nop
 0416                   .dbline 323
 0416 0000              nop
 0418                   .dbline 323
 0418 0000              nop
 041A                   .dbline 323
 041A 0000              nop
 041C                   .dbline 323
 041C 0000              nop
 041E                   .dbline 323
 041E 0000              nop
 0420                   .dbline 323
 0420 0000              nop
 0422                   .dbline 323
 0422           L106:
 0422                   .dbline 322
 0422 6395              inc R22
 0424           L108:
 0424                   .dbline 322
 0424 842F              mov R24,R20
 0426 8E5C              subi R24,206    ; addi 50
 0428 6817              cp R22,R24
 042A 80F3              brlo L105
 042C           X28:
 042C                   .dbline 324
 042C           ;                }      
 042C           L96:
 042C                   .dbline 311
 042C 4395              inc R20
 042E           L98:
 042E                   .dbline 311
 042E 483C              cpi R20,200
 0430 08F4              brsh X34
 0432 ABCF              xjmp L95
 0434           X34:
 0434           X29:
 0434                   .dbline 325
 0434           ;       }
 0434           L81:
 0434           L54:
 0434                   .dbline -2
 0434           L52:
 0434                   .dbline 0 ; func end
 0434 6991              ld R22,y+
 0436 4991              ld R20,y+
 0438 0895              ret
 043A                   .dbsym r c 20 c
 043A                   .dbsym r b 22 c
 043A                   .dbsym r motor 16 c
 043A                   .dbend
 043A                   .dbfunc e SampleADC _SampleADC fc
 043A           ;           adcl -> y+0
 043A           ;              c -> R10
 043A           ;         ADdata -> R12,R13
 043A           ;             ch -> R10
                        .even
 043A           _SampleADC::
 043A 0E940000          xcall push_xgsetF03C
 043E A02E              mov R10,R16
 0440 2497              sbiw R28,4
 0442                   .dbline -1
 0442                   .dbline 330
 0442           ; }
 0442           ; 
 0442           ;    
 0442           ; unsigned char SampleADC(unsigned char ch)//耗时约5ms
 0442           ; {     unsigned char c;
 0442                   .dbline 334
 0442           ;       unsigned long adcl;
 0442           ;         unsigned int ADdata;
 0442           ; 
 0442           ;         ADMUX  = ch;//片外基准，选择单端输入通道 
 0442 A7B8              out 0x7,R10
 0444                   .dbline 335
 0444           ;         ADCSRA =0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0444 83EC              ldi R24,195
 0446 86B9              out 0x6,R24
 0448                   .dbline 338
 0448           ;    
 0448           ;         //第一次采样值不要
 0448           ;         for(ADdata=0;ADdata<100;ADdata++);
 0448 CC24              clr R12
 044A DD24              clr R13
 044C 03C0              xjmp L113
 044E           L110:
 044E                   .dbline 338
 044E           L111:
 044E                   .dbline 338
 044E C601              movw R24,R12
 0450 0196              adiw R24,1
 0452 6C01              movw R12,R24
 0454           L113:
 0454                   .dbline 338
 0454 C601              movw R24,R12
 0456 8436              cpi R24,100
 0458 E0E0              ldi R30,0
 045A 9E07              cpc R25,R30
 045C C0F3              brlo L110
 045E           X35:
 045E           L114:
 045E                   .dbline 339
 045E           ;         while((ADCSRA&0x40)==0x40);//等待转换完成
 045E           L115:
 045E                   .dbline 339
 045E 86B1              in R24,0x6
 0460 8074              andi R24,64
 0462 8034              cpi R24,64
 0464 E1F3              breq L114
 0466           X36:
 0466                   .dbline 340
 0466           ;         ADdata=ADCL;
 0466 C4B0              in R12,0x4
 0468 DD24              clr R13
 046A                   .dbline 341
 046A           ;         ADdata=ADCH;  
 046A C5B0              in R12,0x5
 046C DD24              clr R13
 046E                   .dbline 343
 046E           ;   
 046E           ;         adcl=0;
 046E 80E0              ldi R24,0
 0470 8883              std y+0,R24
 0472 8983              std y+1,R24
 0474 8A83              std y+2,R24
 0476 8B83              std y+3,R24
 0478                   .dbline 344
 0478           ;         for(c=0;c<32;c++)//32次值取平均
 0478 AA24              clr R10
 047A 2CC0              xjmp L120
 047C           L117:
 047C                   .dbline 345
 047C           ;         {
 047C                   .dbline 346
 047C           ;          ADCSRA = 0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 047C 83EC              ldi R24,195
 047E 86B9              out 0x6,R24
 0480                   .dbline 347
 0480           ;          for(ADdata=0;ADdata<100;ADdata++);
 0480 CC24              clr R12
 0482 DD24              clr R13
 0484 03C0              xjmp L124
 0486           L121:
 0486                   .dbline 347
 0486           L122:
 0486                   .dbline 347
 0486 C601              movw R24,R12
 0488 0196              adiw R24,1
 048A 6C01              movw R12,R24
 048C           L124:
 048C                   .dbline 347
 048C C601              movw R24,R12
 048E 8436              cpi R24,100
 0490 E0E0              ldi R30,0
 0492 9E07              cpc R25,R30
 0494 C0F3              brlo L121
 0496           X37:
 0496           L125:
 0496                   .dbline 348
 0496           ;          while((ADCSRA&0x40)==0x40);//等待转换完成    
 0496           L126:
 0496                   .dbline 348
 0496 86B1              in R24,0x6
 0498 8074              andi R24,64
 049A 8034              cpi R24,64
 049C E1F3              breq L125
 049E           X38:
 049E                   .dbline 349
 049E           ;          ADdata=ADCL;   
 049E C4B0              in R12,0x4
 04A0 DD24              clr R13
 04A2                   .dbline 350
 04A2           ;          ADdata|=(ADCH<<8);
 04A2 25B0              in R2,0x5
 04A4 3324              clr R3
 04A6 322C              mov R3,R2
 04A8 2224              clr R2
 04AA C228              or R12,R2
 04AC D328              or R13,R3
 04AE                   .dbline 351
 04AE           ;          ADdata&=0x03ff;//10位有效转换结果
 04AE C601              movw R24,R12
 04B0 9370              andi R25,3
 04B2 6C01              movw R12,R24
 04B4                   .dbline 352
 04B4           ;          adcl+=ADdata;
 04B4 1C01              movw R2,R24
 04B6 4424              clr R4
 04B8 5524              clr R5
 04BA 6880              ldd R6,y+0
 04BC 7980              ldd R7,y+1
 04BE 8A80              ldd R8,y+2
 04C0 9B80              ldd R9,y+3
 04C2 620C              add R6,R2
 04C4 731C              adc R7,R3
 04C6 841C              adc R8,R4
 04C8 951C              adc R9,R5
 04CA 6882              std y+0,R6
 04CC 7982              std y+1,R7
 04CE 8A82              std y+2,R8
 04D0 9B82              std y+3,R9
 04D2                   .dbline 353
 04D2           ;         }
 04D2           L118:
 04D2                   .dbline 344
 04D2 A394              inc R10
 04D4           L120:
 04D4                   .dbline 344
 04D4 8A2D              mov R24,R10
 04D6 8032              cpi R24,32
 04D8 88F2              brlo L117
 04DA           X39:
 04DA                   .dbline 355
 04DA           ; 
 04DA           ;         adcl>>=7;//除以32，再除以4，相当于8位AD
 04DA 87E0              ldi R24,7
 04DC 90E0              ldi R25,0
 04DE 0881              ldd R16,y+0
 04E0 1981              ldd R17,y+1
 04E2 2A81              ldd R18,y+2
 04E4 3B81              ldd R19,y+3
 04E6 8A93              st -y,R24
 04E8 0E940000          xcall lsr32
 04EC 0883              std y+0,R16
 04EE 1983              std y+1,R17
 04F0 2A83              std y+2,R18
 04F2 3B83              std y+3,R19
 04F4                   .dbline 356
 04F4           ;         return (adcl&0x000000ff);//取8位有效位
 04F4 4FEF              ldi R20,255
 04F6 50E0              ldi R21,0
 04F8 60E0              ldi R22,0
 04FA 70E0              ldi R23,0
 04FC 2880              ldd R2,y+0
 04FE 3980              ldd R3,y+1
 0500 4A80              ldd R4,y+2
 0502 5B80              ldd R5,y+3
 0504 2422              and R2,R20
 0506 3522              and R3,R21
 0508 4622              and R4,R22
 050A 5722              and R5,R23
 050C 022D              mov R16,R2
 050E                   .dbline -2
 050E           L109:
 050E                   .dbline 0 ; func end
 050E 2496              adiw R28,4
 0510 0C940000          xjmp pop_xgsetF03C
 0514                   .dbsym l adcl 0 l
 0514                   .dbsym r c 10 c
 0514                   .dbsym r ADdata 12 i
 0514                   .dbsym r ch 10 c
 0514                   .dbend
 0514                   .dbfunc e CheckMotor _CheckMotor fV
 0514           ;              n -> R12,R13
 0514           ;              f -> y+0
 0514           ;              t -> R10,R11
                        .even
 0514           _CheckMotor::
 0514 0E940000          xcall push_xgsetF03C
 0518 5801              movw R10,R16
 051A 2497              sbiw R28,4
 051C                   .dbline -1
 051C                   .dbline 360
 051C           ; }
 051C           ; 
 051C           ; void CheckMotor(unsigned int t)//电机不转时耗时5us，最大定时8388ms
 051C           ; {   
 051C                   .dbline 363
 051C           ;     float f;
 051C           ;     unsigned int n;
 051C           ;     TCCR1B = 0x00; //stop
 051C 2224              clr R2
 051E 2EBC              out 0x2e,R2
 0520                   .dbline 364
 0520           ;       if(t>8388)
 0520 84EC              ldi R24,8388
 0522 90E2              ldi R25,32
 0524 8A15              cp R24,R10
 0526 9B05              cpc R25,R11
 0528 08F4              brsh L129
 052A           X40:
 052A                   .dbline 365
 052A           ;          t=8388;
 052A 5C01              movw R10,R24
 052C           L129:
 052C                   .dbline 366
 052C           ;       f=t;
 052C 8501              movw R16,R10
 052E 0E940000          xcall uint2fp
 0532 0883              std y+0,R16
 0534 1983              std y+1,R17
 0536 2A83              std y+2,R18
 0538 3B83              std y+3,R19
 053A                   .dbline 367
 053A           ;       f*=7.8125;
 053A 00E0              ldi R16,<L131
 053C 10E0              ldi R17,>L131
 053E 0E940000          xcall elpm32
 0542 CE01              movw R24,R28
 0544 9A93              st -y,R25
 0546 8A93              st -y,R24
 0548 0E940000          xcall fpmule1
 054C 0883              std y+0,R16
 054E 1983              std y+1,R17
 0550 2A83              std y+2,R18
 0552 3B83              std y+3,R19
 0554                   .dbline 368
 0554           ;       n=f;
 0554 0881              ldd R16,y+0
 0556 1981              ldd R17,y+1
 0558 2A81              ldd R18,y+2
 055A 3B81              ldd R19,y+3
 055C 0E940000          xcall fpint
 0560 6801              movw R12,R16
 0562                   .dbline 369
 0562           ;     TCNT1 = 65536-n;   
 0562 1601              movw R2,R12
 0564 4424              clr R4
 0566 5524              clr R5
 0568 40E0              ldi R20,0
 056A 50E0              ldi R21,0
 056C 61E0              ldi R22,1
 056E 70E0              ldi R23,0
 0570 4219              sub R20,R2
 0572 5309              sbc R21,R3
 0574 6409              sbc R22,R4
 0576 7509              sbc R23,R5
 0578 5DBD              out 0x2d,R21
 057A 4CBD              out 0x2c,R20
 057C                   .dbline 370
 057C           ;       TCCR1B = 0x05; //1024分频
 057C 85E0              ldi R24,5
 057E 8EBD              out 0x2e,R24
 0580                   .dbline 371
 0580           ;       TIFR|=0x04; //清定时器1中断标志
 0580 86B7              in R24,0x36
 0582 8460              ori R24,4
 0584 86BF              out 0x36,R24
 0586 40C1              xjmp L133
 0588           L132:
 0588                   .dbline 373
 0588           ;       while((TIFR&0x04)==0x00) 
 0588           ;    {
 0588                   .dbline 374
 0588           ;    if(PWM1_PIN==1)//电机运行时才实时检测电流，否则电流保存最后一次的测试值
 0588 89B3              in R24,0x19
 058A 8270              andi R24,2
 058C 8695              lsr R24
 058E 8130              cpi R24,1
 0590 09F0              breq X49
 0592 70C0              xjmp L135
 0594           X49:
 0594           X41:
 0594                   .dbline 375
 0594           ;    {
 0594                   .dbline 376
 0594           ;     Motor1Status.s.ThisCurrent=SampleADC(7);
 0594 07E0              ldi R16,7
 0596 51DF              xcall _SampleADC
 0598 802F              mov R24,R16
 059A 9927              clr R25
 059C 9070              andi R25,0
 059E 982F              mov R25,R24
 05A0 8827              clr R24
 05A2 8070              andi R24,0
 05A4 E0913302          lds R30,_Motor1Status
 05A8 F0913402          lds R31,_Motor1Status+1
 05AC F070              andi R31,0
 05AE E82B              or R30,R24
 05B0 F92B              or R31,R25
 05B2 F0933402          sts _Motor1Status+1,R31
 05B6 E0933302          sts _Motor1Status,R30
 05BA                   .dbline 377
 05BA           ;     if(Motor1Status.s.ThisCurrent>Motor1Thr)//过流关电机
 05BA 20903002          lds R2,_Motor1Thr
 05BE 3324              clr R3
 05C0 CF01              movw R24,R30
 05C2 892F              mov R24,R25
 05C4 9927              clr R25
 05C6 9070              andi R25,0
 05C8 2816              cp R2,R24
 05CA 3906              cpc R3,R25
 05CC 18F5              brsh L137
 05CE           X42:
 05CE                   .dbline 378
 05CE           ;     {
 05CE                   .dbline 379
 05CE           ;        MOTORSTOP//关电机
 05CE                   .dbline 379
 05CE 8AB3              in R24,0x1a
 05D0 8760              ori R24,7
 05D2 8ABB              out 0x1a,R24
 05D4                   .dbline 379
 05D4 8BB3              in R24,0x1b
 05D6 8D7F              andi R24,253
 05D8 8BBB              out 0x1b,R24
 05DA                   .dbline 379
 05DA 8BB3              in R24,0x1b
 05DC 887F              andi R24,248
 05DE 8BBB              out 0x1b,R24
 05E0                   .dbline 379
 05E0 80916100          lds R24,97
 05E4 8760              ori R24,7
 05E6 80936100          sts 97,R24
 05EA                   .dbline 379
 05EA 80916200          lds R24,98
 05EE 8B7F              andi R24,251
 05F0 80936200          sts 98,R24
 05F4                   .dbline 379
 05F4 80916200          lds R24,98
 05F8 887F              andi R24,248
 05FA 80936200          sts 98,R24
 05FE                   .dbline 379
 05FE BF9A              sbi 0x17,7
 0600                   .dbline 379
 0600 88B3              in R24,0x18
 0602 8F77              andi R24,127
 0604 88BB              out 0x18,R24
 0606                   .dbline 379
 0606                   .dbline 380
 0606           ;      Motor1Status.s.OverCurrent=1;//过流状态置1，表示电机上次停止原因为过流停
 0606 CF01              movw R24,R30
 0608 8061              ori R24,16
 060A 90933402          sts _Motor1Status+1,R25
 060E 80933302          sts _Motor1Status,R24
 0612                   .dbline 381
 0612           ;       }
 0612 30C0              xjmp L138
 0614           L137:
 0614                   .dbline 382
 0614           ;       else if(Motor1Status.s.ThisCurrent<20)//断路关电机，电流小于26mA认为是断路
 0614 80913302          lds R24,_Motor1Status
 0618 90913402          lds R25,_Motor1Status+1
 061C 892F              mov R24,R25
 061E 9927              clr R25
 0620 9070              andi R25,0
 0622 8431              cpi R24,20
 0624 E0E0              ldi R30,0
 0626 9E07              cpc R25,R30
 0628 28F5              brsh L139
 062A           X43:
 062A                   .dbline 383
 062A           ;       {
 062A                   .dbline 384
 062A           ;        MOTORSTOP//关电机
 062A                   .dbline 384
 062A 8AB3              in R24,0x1a
 062C 8760              ori R24,7
 062E 8ABB              out 0x1a,R24
 0630                   .dbline 384
 0630 8BB3              in R24,0x1b
 0632 8D7F              andi R24,253
 0634 8BBB              out 0x1b,R24
 0636                   .dbline 384
 0636 8BB3              in R24,0x1b
 0638 887F              andi R24,248
 063A 8BBB              out 0x1b,R24
 063C                   .dbline 384
 063C 80916100          lds R24,97
 0640 8760              ori R24,7
 0642 80936100          sts 97,R24
 0646                   .dbline 384
 0646 80916200          lds R24,98
 064A 8B7F              andi R24,251
 064C 80936200          sts 98,R24
 0650                   .dbline 384
 0650 80916200          lds R24,98
 0654 887F              andi R24,248
 0656 80936200          sts 98,R24
 065A                   .dbline 384
 065A BF9A              sbi 0x17,7
 065C                   .dbline 384
 065C 88B3              in R24,0x18
 065E 8F77              andi R24,127
 0660 88BB              out 0x18,R24
 0662                   .dbline 384
 0662                   .dbline 385
 0662           ;      Motor1Status.s.BrokenStop=1;//断路状态置1，表示电机上次停止原因为断路停
 0662 80913302          lds R24,_Motor1Status
 0666 90913402          lds R25,_Motor1Status+1
 066A 8460              ori R24,4
 066C 90933402          sts _Motor1Status+1,R25
 0670 80933302          sts _Motor1Status,R24
 0674                   .dbline 386
 0674           ;       }
 0674           L139:
 0674           L138:
 0674                   .dbline 387
 0674           ;    }
 0674           L135:
 0674                   .dbline 388
 0674           ;     Motor1Status.s.PWM=PWM1_PIN; 
 0674 89B3              in R24,0x19
 0676 9927              clr R25
 0678 8270              andi R24,2
 067A 9070              andi R25,0
 067C 9595              asr R25
 067E 8795              ror R24
 0680 8170              andi R24,1
 0682 9070              andi R25,0
 0684 E0913302          lds R30,_Motor1Status
 0688 F0913402          lds R31,_Motor1Status+1
 068C EE7F              andi R30,254
 068E E82B              or R30,R24
 0690 F92B              or R31,R25
 0692 F0933402          sts _Motor1Status+1,R31
 0696 E0933302          sts _Motor1Status,R30
 069A                   .dbline 389
 069A           ;       Motor1Status.s.DIR=DIR1_PIN;
 069A 89B3              in R24,0x19
 069C 9927              clr R25
 069E 8470              andi R24,4
 06A0 9070              andi R25,0
 06A2 9595              asr R25
 06A4 8795              ror R24
 06A6 9595              asr R25
 06A8 8795              ror R24
 06AA 8170              andi R24,1
 06AC 9070              andi R25,0
 06AE 880F              lsl R24
 06B0 991F              rol R25
 06B2 8270              andi R24,2
 06B4 9070              andi R25,0
 06B6 ED7F              andi R30,253
 06B8 E82B              or R30,R24
 06BA F92B              or R31,R25
 06BC F0933402          sts _Motor1Status+1,R31
 06C0 E0933302          sts _Motor1Status,R30
 06C4                   .dbline 392
 06C4           ;        
 06C4           ;                          
 06C4           ;    if(PWM2_PIN==1)//电机运行时才实时检测电流，否则电流保存最后一次的测试值
 06C4 80B1              in R24,0x0
 06C6 8470              andi R24,4
 06C8 8695              lsr R24
 06CA 8695              lsr R24
 06CC 8130              cpi R24,1
 06CE 09F0              breq X50
 06D0 70C0              xjmp L141
 06D2           X50:
 06D2           X44:
 06D2                   .dbline 393
 06D2           ;    {
 06D2                   .dbline 394
 06D2           ;       Motor2Status.s.ThisCurrent=SampleADC(6);
 06D2 06E0              ldi R16,6
 06D4 B2DE              xcall _SampleADC
 06D6 802F              mov R24,R16
 06D8 9927              clr R25
 06DA 9070              andi R25,0
 06DC 982F              mov R25,R24
 06DE 8827              clr R24
 06E0 8070              andi R24,0
 06E2 E0913102          lds R30,_Motor2Status
 06E6 F0913202          lds R31,_Motor2Status+1
 06EA F070              andi R31,0
 06EC E82B              or R30,R24
 06EE F92B              or R31,R25
 06F0 F0933202          sts _Motor2Status+1,R31
 06F4 E0933102          sts _Motor2Status,R30
 06F8                   .dbline 395
 06F8           ;     if(Motor2Status.s.ThisCurrent>Motor2Thr)//过流关电机
 06F8 20902F02          lds R2,_Motor2Thr
 06FC 3324              clr R3
 06FE CF01              movw R24,R30
 0700 892F              mov R24,R25
 0702 9927              clr R25
 0704 9070              andi R25,0
 0706 2816              cp R2,R24
 0708 3906              cpc R3,R25
 070A 18F5              brsh L143
 070C           X45:
 070C                   .dbline 396
 070C           ;     {
 070C                   .dbline 397
 070C           ;        MOTORSTOP//关电机
 070C                   .dbline 397
 070C 8AB3              in R24,0x1a
 070E 8760              ori R24,7
 0710 8ABB              out 0x1a,R24
 0712                   .dbline 397
 0712 8BB3              in R24,0x1b
 0714 8D7F              andi R24,253
 0716 8BBB              out 0x1b,R24
 0718                   .dbline 397
 0718 8BB3              in R24,0x1b
 071A 887F              andi R24,248
 071C 8BBB              out 0x1b,R24
 071E                   .dbline 397
 071E 80916100          lds R24,97
 0722 8760              ori R24,7
 0724 80936100          sts 97,R24
 0728                   .dbline 397
 0728 80916200          lds R24,98
 072C 8B7F              andi R24,251
 072E 80936200          sts 98,R24
 0732                   .dbline 397
 0732 80916200          lds R24,98
 0736 887F              andi R24,248
 0738 80936200          sts 98,R24
 073C                   .dbline 397
 073C BF9A              sbi 0x17,7
 073E                   .dbline 397
 073E 88B3              in R24,0x18
 0740 8F77              andi R24,127
 0742 88BB              out 0x18,R24
 0744                   .dbline 397
 0744                   .dbline 398
 0744           ;      Motor2Status.s.OverCurrent=1;//过流状态置1，表示电机上次停止原因为过流停
 0744 CF01              movw R24,R30
 0746 8061              ori R24,16
 0748 90933202          sts _Motor2Status+1,R25
 074C 80933102          sts _Motor2Status,R24
 0750                   .dbline 399
 0750           ;       } 
 0750 30C0              xjmp L144
 0752           L143:
 0752                   .dbline 400
 0752           ;       else if(Motor2Status.s.ThisCurrent<20) //断路关电机，电流小于26mA认为是断路
 0752 80913102          lds R24,_Motor2Status
 0756 90913202          lds R25,_Motor2Status+1
 075A 892F              mov R24,R25
 075C 9927              clr R25
 075E 9070              andi R25,0
 0760 8431              cpi R24,20
 0762 E0E0              ldi R30,0
 0764 9E07              cpc R25,R30
 0766 28F5              brsh L145
 0768           X46:
 0768                   .dbline 401
 0768           ;       {
 0768                   .dbline 402
 0768           ;        MOTORSTOP//关电机
 0768                   .dbline 402
 0768 8AB3              in R24,0x1a
 076A 8760              ori R24,7
 076C 8ABB              out 0x1a,R24
 076E                   .dbline 402
 076E 8BB3              in R24,0x1b
 0770 8D7F              andi R24,253
 0772 8BBB              out 0x1b,R24
 0774                   .dbline 402
 0774 8BB3              in R24,0x1b
 0776 887F              andi R24,248
 0778 8BBB              out 0x1b,R24
 077A                   .dbline 402
 077A 80916100          lds R24,97
 077E 8760              ori R24,7
 0780 80936100          sts 97,R24
 0784                   .dbline 402
 0784 80916200          lds R24,98
 0788 8B7F              andi R24,251
 078A 80936200          sts 98,R24
 078E                   .dbline 402
 078E 80916200          lds R24,98
 0792 887F              andi R24,248
 0794 80936200          sts 98,R24
 0798                   .dbline 402
 0798 BF9A              sbi 0x17,7
 079A                   .dbline 402
 079A 88B3              in R24,0x18
 079C 8F77              andi R24,127
 079E 88BB              out 0x18,R24
 07A0                   .dbline 402
 07A0                   .dbline 403
 07A0           ;      Motor2Status.s.BrokenStop=1;//断路状态置1，表示电机上次停止原因为断路停
 07A0 80913102          lds R24,_Motor2Status
 07A4 90913202          lds R25,_Motor2Status+1
 07A8 8460              ori R24,4
 07AA 90933202          sts _Motor2Status+1,R25
 07AE 80933102          sts _Motor2Status,R24
 07B2                   .dbline 404
 07B2           ;       }
 07B2           L145:
 07B2           L144:
 07B2                   .dbline 405
 07B2           ;    }
 07B2           L141:
 07B2                   .dbline 406
 07B2           ;    Motor2Status.s.PWM=PWM2_PIN; 
 07B2 80B1              in R24,0x0
 07B4 9927              clr R25
 07B6 8470              andi R24,4
 07B8 9070              andi R25,0
 07BA 9595              asr R25
 07BC 8795              ror R24
 07BE 9595              asr R25
 07C0 8795              ror R24
 07C2 8170              andi R24,1
 07C4 9070              andi R25,0
 07C6 E0913102          lds R30,_Motor2Status
 07CA F0913202          lds R31,_Motor2Status+1
 07CE EE7F              andi R30,254
 07D0 E82B              or R30,R24
 07D2 F92B              or R31,R25
 07D4 F0933202          sts _Motor2Status+1,R31
 07D8 E0933102          sts _Motor2Status,R30
 07DC                   .dbline 407
 07DC           ;    Motor2Status.s.DIR=DIR2_PIN;  
 07DC 80B1              in R24,0x0
 07DE 9927              clr R25
 07E0 8170              andi R24,1
 07E2 9070              andi R25,0
 07E4 8170              andi R24,1
 07E6 9070              andi R25,0
 07E8 880F              lsl R24
 07EA 991F              rol R25
 07EC 8270              andi R24,2
 07EE 9070              andi R25,0
 07F0 ED7F              andi R30,253
 07F2 E82B              or R30,R24
 07F4 F92B              or R31,R25
 07F6 F0933202          sts _Motor2Status+1,R31
 07FA E0933102          sts _Motor2Status,R30
 07FE                   .dbline 408
 07FE           ;    if(t==0){break;}//不定时则检测一次电机状态后直接跳出
 07FE AA20              tst R10
 0800 19F4              brne L147
 0802 BB20              tst R11
 0804 09F4              brne L147
 0806           X47:
 0806                   .dbline 408
 0806                   .dbline 408
 0806 03C0              xjmp L134
 0808           L147:
 0808                   .dbline 409
 0808           ;    } 
 0808           L133:
 0808                   .dbline 372
 0808 26B6              in R2,0x36
 080A 22FE              sbrs R2,2
 080C BDCE              rjmp L132
 080E           X48:
 080E           L134:
 080E                   .dbline 410
 080E           ;    TCCR1B = 0x00; //stop
 080E 2224              clr R2
 0810 2EBC              out 0x2e,R2
 0812                   .dbline -2
 0812           L128:
 0812                   .dbline 0 ; func end
 0812 2496              adiw R28,4
 0814 0C940000          xjmp pop_xgsetF03C
 0818                   .dbsym r n 12 i
 0818                   .dbsym l f 0 D
 0818                   .dbsym r t 10 i
 0818                   .dbend
 0818                   .dbfunc e Start _Start fV
                        .even
 0818           _Start::
 0818                   .dbline -1
 0818                   .dbline 415
 0818           ; }
 0818           ; 
 0818           ; 
 0818           ; void Start(void)
 0818           ; {
 0818                   .dbline 416
 0818           ;  InitialIO();
 0818 F3DB              xcall _InitialIO
 081A                   .dbline 417
 081A           ;  uart0_init();
 081A 0ADC              xcall _uart0_init
 081C                   .dbline 419
 081C           ;  
 081C           ;  MOTORSTOP//关电机
 081C                   .dbline 419
 081C 8AB3              in R24,0x1a
 081E 8760              ori R24,7
 0820 8ABB              out 0x1a,R24
 0822                   .dbline 419
 0822 8BB3              in R24,0x1b
 0824 8D7F              andi R24,253
 0826 8BBB              out 0x1b,R24
 0828                   .dbline 419
 0828 8BB3              in R24,0x1b
 082A 887F              andi R24,248
 082C 8BBB              out 0x1b,R24
 082E                   .dbline 419
 082E 80916100          lds R24,97
 0832 8760              ori R24,7
 0834 80936100          sts 97,R24
 0838                   .dbline 419
 0838 80916200          lds R24,98
 083C 8B7F              andi R24,251
 083E 80936200          sts 98,R24
 0842                   .dbline 419
 0842 80916200          lds R24,98
 0846 887F              andi R24,248
 0848 80936200          sts 98,R24
 084C                   .dbline 419
 084C BF9A              sbi 0x17,7
 084E                   .dbline 419
 084E 88B3              in R24,0x18
 0850 8F77              andi R24,127
 0852 88BB              out 0x18,R24
 0854                   .dbline 419
 0854                   .dbline 420
 0854           ;  BREAKE1_L//放开刹车
 0854                   .dbline 420
 0854 D09A              sbi 0x1a,0
 0856                   .dbline 420
 0856 8BB3              in R24,0x1b
 0858 8E7F              andi R24,254
 085A 8BBB              out 0x1b,R24
 085C                   .dbline 420
 085C                   .dbline 421
 085C           ;  BREAKE2_L//放开刹车
 085C                   .dbline 421
 085C 80916100          lds R24,97
 0860 8260              ori R24,2
 0862 80936100          sts 97,R24
 0866                   .dbline 421
 0866 80916200          lds R24,98
 086A 8D7F              andi R24,253
 086C 80936200          sts 98,R24
 0870                   .dbline 421
 0870                   .dbline 423
 0870           ;  
 0870           ;  Motor1Status.s.PWM=PWM1_PIN; 
 0870 89B3              in R24,0x19
 0872 9927              clr R25
 0874 8270              andi R24,2
 0876 9070              andi R25,0
 0878 9595              asr R25
 087A 8795              ror R24
 087C 8170              andi R24,1
 087E 9070              andi R25,0
 0880 E0913302          lds R30,_Motor1Status
 0884 F0913402          lds R31,_Motor1Status+1
 0888 EE7F              andi R30,254
 088A E82B              or R30,R24
 088C F92B              or R31,R25
 088E F0933402          sts _Motor1Status+1,R31
 0892 E0933302          sts _Motor1Status,R30
 0896                   .dbline 424
 0896           ;  Motor1Status.s.DIR=DIR1_PIN;
 0896 89B3              in R24,0x19
 0898 9927              clr R25
 089A 8470              andi R24,4
 089C 9070              andi R25,0
 089E 9595              asr R25
 08A0 8795              ror R24
 08A2 9595              asr R25
 08A4 8795              ror R24
 08A6 8170              andi R24,1
 08A8 9070              andi R25,0
 08AA 880F              lsl R24
 08AC 991F              rol R25
 08AE 8270              andi R24,2
 08B0 9070              andi R25,0
 08B2 ED7F              andi R30,253
 08B4 E82B              or R30,R24
 08B6 F92B              or R31,R25
 08B8 F0933402          sts _Motor1Status+1,R31
 08BC E0933302          sts _Motor1Status,R30
 08C0                   .dbline 425
 08C0           ;  Motor1Status.s.BrokenStop=0;
 08C0 CF01              movw R24,R30
 08C2 8B7F              andi R24,251
 08C4 90933402          sts _Motor1Status+1,R25
 08C8 80933302          sts _Motor1Status,R24
 08CC                   .dbline 426
 08CC           ;  Motor1Status.s.CommandStop=0;
 08CC 877F              andi R24,247
 08CE 90933402          sts _Motor1Status+1,R25
 08D2 80933302          sts _Motor1Status,R24
 08D6                   .dbline 427
 08D6           ;  Motor1Status.s.OverCurrent=0;
 08D6 8F7E              andi R24,239
 08D8 90933402          sts _Motor1Status+1,R25
 08DC 80933302          sts _Motor1Status,R24
 08E0                   .dbline 428
 08E0           ;  Motor1Status.s.UnderVoltage=0;
 08E0 8F7D              andi R24,223
 08E2 90933402          sts _Motor1Status+1,R25
 08E6 80933302          sts _Motor1Status,R24
 08EA                   .dbline 429
 08EA           ;  Motor1Status.s.StartResult=0;
 08EA 8F73              andi R24,63
 08EC 90933402          sts _Motor1Status+1,R25
 08F0 80933302          sts _Motor1Status,R24
 08F4                   .dbline 430
 08F4           ;  Motor1Status.s.ThisCurrent=0;
 08F4 9070              andi R25,0
 08F6 90933402          sts _Motor1Status+1,R25
 08FA 80933302          sts _Motor1Status,R24
 08FE                   .dbline 432
 08FE           ;  
 08FE           ;  Motor2Status.s.PWM=PWM2_PIN; 
 08FE 80B1              in R24,0x0
 0900 9927              clr R25
 0902 8470              andi R24,4
 0904 9070              andi R25,0
 0906 9595              asr R25
 0908 8795              ror R24
 090A 9595              asr R25
 090C 8795              ror R24
 090E 8170              andi R24,1
 0910 9070              andi R25,0
 0912 E0913102          lds R30,_Motor2Status
 0916 F0913202          lds R31,_Motor2Status+1
 091A EE7F              andi R30,254
 091C E82B              or R30,R24
 091E F92B              or R31,R25
 0920 F0933202          sts _Motor2Status+1,R31
 0924 E0933102          sts _Motor2Status,R30
 0928                   .dbline 433
 0928           ;  Motor2Status.s.DIR=DIR2_PIN;
 0928 80B1              in R24,0x0
 092A 9927              clr R25
 092C 8170              andi R24,1
 092E 9070              andi R25,0
 0930 8170              andi R24,1
 0932 9070              andi R25,0
 0934 880F              lsl R24
 0936 991F              rol R25
 0938 8270              andi R24,2
 093A 9070              andi R25,0
 093C ED7F              andi R30,253
 093E E82B              or R30,R24
 0940 F92B              or R31,R25
 0942 F0933202          sts _Motor2Status+1,R31
 0946 E0933102          sts _Motor2Status,R30
 094A                   .dbline 434
 094A           ;  Motor2Status.s.BrokenStop=0;
 094A CF01              movw R24,R30
 094C 8B7F              andi R24,251
 094E 90933202          sts _Motor2Status+1,R25
 0952 80933102          sts _Motor2Status,R24
 0956                   .dbline 435
 0956           ;  Motor2Status.s.CommandStop=0;
 0956 877F              andi R24,247
 0958 90933202          sts _Motor2Status+1,R25
 095C 80933102          sts _Motor2Status,R24
 0960                   .dbline 436
 0960           ;  Motor2Status.s.OverCurrent=0;
 0960 8F7E              andi R24,239
 0962 90933202          sts _Motor2Status+1,R25
 0966 80933102          sts _Motor2Status,R24
 096A                   .dbline 437
 096A           ;  Motor2Status.s.UnderVoltage=0;
 096A 8F7D              andi R24,223
 096C 90933202          sts _Motor2Status+1,R25
 0970 80933102          sts _Motor2Status,R24
 0974                   .dbline 438
 0974           ;  Motor2Status.s.StartResult=0;
 0974 8F73              andi R24,63
 0976 90933202          sts _Motor2Status+1,R25
 097A 80933102          sts _Motor2Status,R24
 097E                   .dbline 439
 097E           ;  Motor2Status.s.ThisCurrent=0;
 097E 9070              andi R25,0
 0980 90933202          sts _Motor2Status+1,R25
 0984 80933102          sts _Motor2Status,R24
 0988                   .dbline 441
 0988           ;  
 0988           ;  IntFlag=0;//无接收帧中断
 0988 2224              clr R2
 098A 2092AF01          sts _IntFlag,R2
 098E                   .dbline 442
 098E           ;  DataFlag=0;//无标定系数下发 
 098E 3324              clr R3
 0990 3092B201          sts _DataFlag+1,R3
 0994 2092B101          sts _DataFlag,R2
 0998                   .dbline 443
 0998           ;  coeff_len=0;
 0998 30921D00          sts _coeff_len+1,R3
 099C 20921C00          sts _coeff_len,R2
 09A0                   .dbline 444
 09A0           ;  coeff_count=0;//标定系数计数
 09A0 30921B00          sts _coeff_count+1,R3
 09A4 20921A00          sts _coeff_count,R2
 09A8                   .dbline 446
 09A8           ;  
 09A8           ;  ACSR|=0x10;//清模拟比较器中断标志
 09A8 449A              sbi 0x8,4
 09AA                   .dbline 447
 09AA           ;  ACSR=0x03;//开模拟比较器    
 09AA 83E0              ldi R24,3
 09AC 88B9              out 0x8,R24
 09AE                   .dbline 448
 09AE           ;  ACSR|=0x08;//开模拟比较器中断，任何时候都要进行欠压监测      
 09AE 439A              sbi 0x8,3
 09B0                   .dbline 449
 09B0           ;  ACSR|=0x10;//清模拟比较器中断标志    
 09B0 449A              sbi 0x8,4
 09B2                   .dbline 452
 09B2           ;       
 09B2           ; 
 09B2           ;  EIFR|=0x08;//清INT3中断标志,每位控制一个中断，可控制8个中断
 09B2 88B7              in R24,0x38
 09B4 8860              ori R24,8
 09B6 88BF              out 0x38,R24
 09B8                   .dbline 453
 09B8           ;  EICRA|=0xc0; //INT3上升沿触发 ，每2位控制一个中断，共4个中断，0-低电平触发，1-保留，2-下降沿触发，3-上升沿触发
 09B8 80916A00          lds R24,106
 09BC 806C              ori R24,192
 09BE 80936A00          sts 106,R24
 09C2                   .dbline 454
 09C2           ;  EIMSK|=0x08;//使能INT3中断 ,每位控制一个中断，可控制8个中断
 09C2 89B7              in R24,0x39
 09C4 8860              ori R24,8
 09C6 89BF              out 0x39,R24
 09C8                   .dbline 456
 09C8           ;  
 09C8           ;  SREG=0x80;//总中断使能
 09C8 80E8              ldi R24,128
 09CA 8FBF              out 0x3f,R24
 09CC                   .dbline 458
 09CC           ;  
 09CC           ;  M1_H
 09CC 929A              sbi 0x12,2
 09CE                   .dbline 459
 09CE           ;  CheckMotor(50);
 09CE 02E3              ldi R16,50
 09D0 10E0              ldi R17,0
 09D2 A0DD              xcall _CheckMotor
 09D4                   .dbline 460
 09D4           ;  M1_L
 09D4 82B3              in R24,0x12
 09D6 8B7F              andi R24,251
 09D8 82BB              out 0x12,R24
 09DA                   .dbline -2
 09DA           L149:
 09DA                   .dbline 0 ; func end
 09DA 0895              ret
 09DC                   .dbend
 09DC                   .dbfunc e main _main fV
 09DC           ;              l -> y+1
 09DC           ;             pt -> <dead>
 09DC           ;             mk -> <dead>
 09DC           ;             at -> <dead>
 09DC           ;            add -> <dead>
 09DC           ; TestDataBlockCount -> R12,R13
 09DC           ; TestDataBlockIndex -> R10,R11
 09DC           ;              i -> R10
                        .even
 09DC           _main::
 09DC 2597              sbiw R28,5
 09DE                   .dbline -1
 09DE                   .dbline 465
 09DE           ;  
 09DE           ; }
 09DE           ; 
 09DE           ; void main(void)
 09DE           ; { 
 09DE                   .dbline 471
 09DE           ;   unsigned char i;
 09DE           ;   unsigned int add,at,mk,pt;
 09DE           ;   unsigned long l;
 09DE           ;   unsigned int TestDataBlockIndex,TestDataBlockCount;
 09DE           ;  
 09DE           ;   Start();
 09DE 1CDF              xcall _Start
 09E0                   .dbline 473
 09E0           ;   
 09E0           ;   CheckMotor(50); 
 09E0 02E3              ldi R16,50
 09E2 10E0              ldi R17,0
 09E4 97DD              xcall _CheckMotor
 09E6                   .dbline 475
 09E6           ;   
 09E6           ;   Motor1Thr=EEPROM_read(0);
 09E6 0027              clr R16
 09E8 1127              clr R17
 09EA 0E94451E          xcall _EEPROM_read
 09EE 00933002          sts _Motor1Thr,R16
 09F2                   .dbline 476
 09F2           ;   Motor2Thr=EEPROM_read(1);
 09F2 01E0              ldi R16,1
 09F4 10E0              ldi R17,0
 09F6 0E94451E          xcall _EEPROM_read
 09FA 00932F02          sts _Motor2Thr,R16
 09FE                   .dbline 477
 09FE           ;   if(Motor1Thr<77) {Motor1Thr=77;}//堵转电流最小为100mA
 09FE 80913002          lds R24,_Motor1Thr
 0A02 8D34              cpi R24,77
 0A04 18F4              brsh L151
 0A06           X51:
 0A06                   .dbline 477
 0A06                   .dbline 477
 0A06 8DE4              ldi R24,77
 0A08 80933002          sts _Motor1Thr,R24
 0A0C                   .dbline 477
 0A0C           L151:
 0A0C                   .dbline 478
 0A0C           ;   if(Motor1Thr>154) {Motor1Thr=154;}//堵转电流最大为200mA
 0A0C 8AE9              ldi R24,154
 0A0E 20903002          lds R2,_Motor1Thr
 0A12 8215              cp R24,R2
 0A14 10F4              brsh L153
 0A16           X52:
 0A16                   .dbline 478
 0A16                   .dbline 478
 0A16 80933002          sts _Motor1Thr,R24
 0A1A                   .dbline 478
 0A1A           L153:
 0A1A                   .dbline 479
 0A1A           ;   if(Motor2Thr<77) {Motor2Thr=77;}//堵转电流最小为100mA
 0A1A 80912F02          lds R24,_Motor2Thr
 0A1E 8D34              cpi R24,77
 0A20 18F4              brsh L155
 0A22           X53:
 0A22                   .dbline 479
 0A22                   .dbline 479
 0A22 8DE4              ldi R24,77
 0A24 80932F02          sts _Motor2Thr,R24
 0A28                   .dbline 479
 0A28           L155:
 0A28                   .dbline 480
 0A28           ;   if(Motor2Thr>154) {Motor2Thr=154;}//堵转电流最大为200mA
 0A28 8AE9              ldi R24,154
 0A2A 20902F02          lds R2,_Motor2Thr
 0A2E 8215              cp R24,R2
 0A30 10F4              brsh L157
 0A32           X54:
 0A32                   .dbline 480
 0A32                   .dbline 480
 0A32 80932F02          sts _Motor2Thr,R24
 0A36                   .dbline 480
 0A36           L157:
 0A36                   .dbline 483
 0A36           ;  
 0A36           ;   //采集总线电压，判断是否进入存储状态  
 0A36           ;   if(SampleADC(5)<45)//Cable端的电压低于30V 
 0A36 05E0              ldi R16,5
 0A38 00DD              xcall _SampleADC
 0A3A A02E              mov R10,R16
 0A3C 0D32              cpi R16,45
 0A3E 10F0              brlo X232
 0A40 0C94B817          xjmp L165
 0A44           X232:
 0A44           X55:
 0A44                   .dbline 484
 0A44           ;       {         UCSR0B = 0x00;
 0A44                   .dbline 484
 0A44 2224              clr R2
 0A46 2AB8              out 0xa,R2
 0A48                   .dbline 485
 0A48           ;             PORTE&=0xFD;
 0A48 83B1              in R24,0x3
 0A4A 8D7F              andi R24,253
 0A4C 83B9              out 0x3,R24
 0A4E                   .dbline 486
 0A4E           ;                 DDRE|=0x02;
 0A4E 119A              sbi 0x2,1
 0A50                   .dbline 487
 0A50           ;                 PORTE&=0xFD;   
 0A50 83B1              in R24,0x3
 0A52 8D7F              andi R24,253
 0A54 83B9              out 0x3,R24
 0A56           L161:
 0A56                   .dbline 488
 0A56           ;                 while(1); 
 0A56           L162:
 0A56                   .dbline 488
 0A56 FFCF              xjmp L161
 0A58           L164:
 0A58                   .dbline 492
 0A58           ;       }
 0A58           ;            
 0A58           ; while(1)//若Cable端为高电压，则进入正常的通讯状态
 0A58           ; { 
 0A58                   .dbline 493
 0A58           ;    CheckMotor(0);//实时进行电机过流检测
 0A58 0027              clr R16
 0A5A 1127              clr R17
 0A5C 5BDD              xcall _CheckMotor
 0A5E                   .dbline 495
 0A5E           ; 
 0A5E           ;    if(IntFlag==2)//校验位错误，不上传任何响应，上位机按超时处理
 0A5E 8091AF01          lds R24,_IntFlag
 0A62 8230              cpi R24,2
 0A64 59F4              brne L167
 0A66           X56:
 0A66                   .dbline 496
 0A66           ;    { 
 0A66                   .dbline 497
 0A66           ;       IntFlag=0;//无命令帧
 0A66 2224              clr R2
 0A68 2092AF01          sts _IntFlag,R2
 0A6C                   .dbline 498
 0A6C           ;       EIFR|=0x08;//清INT3中断标志
 0A6C 88B7              in R24,0x38
 0A6E 8860              ori R24,8
 0A70 88BF              out 0x38,R24
 0A72                   .dbline 499
 0A72           ;     EIMSK|=0x08;//使能INT3中断         
 0A72 89B7              in R24,0x39
 0A74 8860              ori R24,8
 0A76 89BF              out 0x39,R24
 0A78                   .dbline 500
 0A78           ;    }
 0A78 0C94B817          xjmp L168
 0A7C           L167:
 0A7C                   .dbline 501
 0A7C           ;    else if(IntFlag==1)//接收到了正常命令帧
 0A7C 8091AF01          lds R24,_IntFlag
 0A80 8130              cpi R24,1
 0A82 11F0              breq X233
 0A84 0C94B817          xjmp L169
 0A88           X233:
 0A88           X57:
 0A88                   .dbline 502
 0A88           ;    {
 0A88                   .dbline 503
 0A88           ;       if(DataFlag)
 0A88 2090B101          lds R2,_DataFlag
 0A8C 3090B201          lds R3,_DataFlag+1
 0A90 2220              tst R2
 0A92 19F4              brne X58
 0A94 3320              tst R3
 0A96 09F4              brne X234
 0A98 B8C4              xjmp L171
 0A9A           X234:
 0A9A           X58:
 0A9A                   .dbline 504
 0A9A           ;      {                  
 0A9A                   .dbline 505
 0A9A           ;         coeffdata[coeff_count]=R_dat;
 0A9A 80E0              ldi R24,<_coeffdata
 0A9C 90E0              ldi R25,>_coeffdata
 0A9E E0911A00          lds R30,_coeff_count
 0AA2 F0911B00          lds R31,_coeff_count+1
 0AA6 E80F              add R30,R24
 0AA8 F91F              adc R31,R25
 0AAA 2090CB01          lds R2,_R_dat
 0AAE 3090CC01          lds R3,_R_dat+1
 0AB2 2082              std z+0,R2
 0AB4                   .dbline 506
 0AB4           ;         coeff_count++;          
 0AB4 80911A00          lds R24,_coeff_count
 0AB8 90911B00          lds R25,_coeff_count+1
 0ABC 0196              adiw R24,1
 0ABE 90931B00          sts _coeff_count+1,R25
 0AC2 80931A00          sts _coeff_count,R24
 0AC6                   .dbline 508
 0AC6           ;  
 0AC6           ;         if(coeff_count==coeff_len)
 0AC6 20901C00          lds R2,_coeff_len
 0ACA 30901D00          lds R3,_coeff_len+1
 0ACE 8215              cp R24,R2
 0AD0 9305              cpc R25,R3
 0AD2 11F0              breq X235
 0AD4 0C94AF17          xjmp L172
 0AD8           X235:
 0AD8           X59:
 0AD8                   .dbline 509
 0AD8           ;         {
 0AD8                   .dbline 510
 0AD8           ;               if(DataFlag==1)//下发压力温度系数
 0AD8 8091B101          lds R24,_DataFlag
 0ADC 9091B201          lds R25,_DataFlag+1
 0AE0 8130              cpi R24,1
 0AE2 E0E0              ldi R30,0
 0AE4 9E07              cpc R25,R30
 0AE6 09F0              breq X236
 0AE8 E5C0              xjmp L175
 0AEA           X236:
 0AEA           X60:
 0AEA                   .dbline 511
 0AEA           ;           {
 0AEA                   .dbline 512
 0AEA           ;                Uart0TxData[0]=0xE8;
 0AEA 88EE              ldi R24,232
 0AEC 80931F00          sts _Uart0TxData,R24
 0AF0                   .dbline 513
 0AF0           ;                Uart0TxData[1]=0x40;
 0AF0 80E4              ldi R24,64
 0AF2 80932000          sts _Uart0TxData+1,R24
 0AF6                   .dbline 514
 0AF6           ;                Uart0TxData[2]=0x88;
 0AF6 88E8              ldi R24,136
 0AF8 80932100          sts _Uart0TxData+2,R24
 0AFC                   .dbline 515
 0AFC           ;                Uart0TxData[3]=0;//压力温度系数包0
 0AFC 2224              clr R2
 0AFE 20922200          sts _Uart0TxData+3,R2
 0B02                   .dbline 516
 0B02           ;                Uart0TxData[4]=0x21;
 0B02 81E2              ldi R24,33
 0B04 80932300          sts _Uart0TxData+4,R24
 0B08                   .dbline 517
 0B08           ;                Uart0TxData[5]=0x22;
 0B08 82E2              ldi R24,34
 0B0A 80932400          sts _Uart0TxData+5,R24
 0B0E                   .dbline 518
 0B0E           ;                Uart0TxData[6]=0x23;
 0B0E 83E2              ldi R24,35
 0B10 80932500          sts _Uart0TxData+6,R24
 0B14                   .dbline 519
 0B14           ;                Uart0TxData[7]=0x24;
 0B14 84E2              ldi R24,36
 0B16 80932600          sts _Uart0TxData+7,R24
 0B1A                   .dbline 520
 0B1A           ;                Uart0TxData[8]=0x32;    
 0B1A 82E3              ldi R24,50
 0B1C 80932700          sts _Uart0TxData+8,R24
 0B20                   .dbline 521
 0B20           ;                for(k=0;k<64;k++)
 0B20 3324              clr R3
 0B22 3092AC01          sts _k+1,R3
 0B26 2092AB01          sts _k,R2
 0B2A 1AC0              xjmp L188
 0B2C           L185:
 0B2C                   .dbline 522
 0B2C           ;                {
 0B2C                   .dbline 523
 0B2C           ;                Uart0TxData[9+k]=coeffdata[k];  
 0B2C A090AB01          lds R10,_k
 0B30 B090AC01          lds R11,_k+1
 0B34 80E0              ldi R24,<_coeffdata
 0B36 90E0              ldi R25,>_coeffdata
 0B38 F501              movw R30,R10
 0B3A E80F              add R30,R24
 0B3C F91F              adc R31,R25
 0B3E 2080              ldd R2,z+0
 0B40 80E0              ldi R24,<_Uart0TxData
 0B42 90E0              ldi R25,>_Uart0TxData
 0B44 F501              movw R30,R10
 0B46 3996              adiw R30,9
 0B48 E80F              add R30,R24
 0B4A F91F              adc R31,R25
 0B4C 2082              std z+0,R2
 0B4E                   .dbline 524
 0B4E           ;                }               
 0B4E           L186:
 0B4E                   .dbline 521
 0B4E 8091AB01          lds R24,_k
 0B52 9091AC01          lds R25,_k+1
 0B56 0196              adiw R24,1
 0B58 9093AC01          sts _k+1,R25
 0B5C 8093AB01          sts _k,R24
 0B60           L188:
 0B60                   .dbline 521
 0B60 8091AB01          lds R24,_k
 0B64 9091AC01          lds R25,_k+1
 0B68 8034              cpi R24,64
 0B6A E0E0              ldi R30,0
 0B6C 9E07              cpc R25,R30
 0B6E F0F2              brlo L185
 0B70           X61:
 0B70                   .dbline 525
 0B70           ;                SendUart0_2(74,20);//超时160ms
 0B70 24E1              ldi R18,20
 0B72 30E0              ldi R19,0
 0B74 0AE4              ldi R16,74
 0B76 90DA              xcall _SendUart0_2
 0B78                   .dbline 526
 0B78           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0B78 8091E101          lds R24,_Uart0RxCounter
 0B7C 8930              cpi R24,9
 0B7E B1F4              brne L189
 0B80           X62:
 0B80 8091E201          lds R24,_Uart0RxData
 0B84 8535              cpi R24,85
 0B86 91F4              brne L189
 0B88           X63:
 0B88 8091E301          lds R24,_Uart0RxData+1
 0B8C 8034              cpi R24,64
 0B8E 71F4              brne L189
 0B90           X64:
 0B90 8091E401          lds R24,_Uart0RxData+2
 0B94 8838              cpi R24,136
 0B96 51F4              brne L189
 0B98           X65:
 0B98                   .dbline 527
 0B98           ;                {T_dat&=0xff00; }
 0B98                   .dbline 527
 0B98 8091CD01          lds R24,_T_dat
 0B9C 9091CE01          lds R25,_T_dat+1
 0BA0 8070              andi R24,0
 0BA2 9093CE01          sts _T_dat+1,R25
 0BA6 8093CD01          sts _T_dat,R24
 0BAA                   .dbline 527
 0BAA 06C0              xjmp L190
 0BAC           L189:
 0BAC                   .dbline 529
 0BAC           ;                else
 0BAC           ;                {T_dat=0x00aa; }
 0BAC                   .dbline 529
 0BAC 8AEA              ldi R24,170
 0BAE 90E0              ldi R25,0
 0BB0 9093CE01          sts _T_dat+1,R25
 0BB4 8093CD01          sts _T_dat,R24
 0BB8                   .dbline 529
 0BB8           L190:
 0BB8                   .dbline 531
 0BB8           ;                
 0BB8           ;                Uart0TxData[0]=0xE8;
 0BB8 88EE              ldi R24,232
 0BBA 80931F00          sts _Uart0TxData,R24
 0BBE                   .dbline 532
 0BBE           ;                Uart0TxData[1]=0x40;
 0BBE 80E4              ldi R24,64
 0BC0 80932000          sts _Uart0TxData+1,R24
 0BC4                   .dbline 533
 0BC4           ;                Uart0TxData[2]=0x88;
 0BC4 88E8              ldi R24,136
 0BC6 80932100          sts _Uart0TxData+2,R24
 0BCA                   .dbline 534
 0BCA           ;                Uart0TxData[3]=1;//压力温度系数包1
 0BCA 81E0              ldi R24,1
 0BCC 80932200          sts _Uart0TxData+3,R24
 0BD0                   .dbline 535
 0BD0           ;                Uart0TxData[4]=0x21;
 0BD0 81E2              ldi R24,33
 0BD2 80932300          sts _Uart0TxData+4,R24
 0BD6                   .dbline 536
 0BD6           ;                Uart0TxData[5]=0x22;
 0BD6 82E2              ldi R24,34
 0BD8 80932400          sts _Uart0TxData+5,R24
 0BDC                   .dbline 537
 0BDC           ;                Uart0TxData[6]=0x23;
 0BDC 83E2              ldi R24,35
 0BDE 80932500          sts _Uart0TxData+6,R24
 0BE2                   .dbline 538
 0BE2           ;                Uart0TxData[7]=0x24;
 0BE2 84E2              ldi R24,36
 0BE4 80932600          sts _Uart0TxData+7,R24
 0BE8                   .dbline 539
 0BE8           ;                Uart0TxData[8]=0x32;    
 0BE8 82E3              ldi R24,50
 0BEA 80932700          sts _Uart0TxData+8,R24
 0BEE                   .dbline 540
 0BEE           ;                for(k=0;k<64;k++)
 0BEE 2224              clr R2
 0BF0 3324              clr R3
 0BF2 3092AC01          sts _k+1,R3
 0BF6 2092AB01          sts _k,R2
 0BFA 1CC0              xjmp L204
 0BFC           L201:
 0BFC                   .dbline 541
 0BFC           ;                {
 0BFC                   .dbline 542
 0BFC           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 0BFC A090AB01          lds R10,_k
 0C00 B090AC01          lds R11,_k+1
 0C04 80E0              ldi R24,<_coeffdata
 0C06 90E0              ldi R25,>_coeffdata
 0C08 F501              movw R30,R10
 0C0A E05C              subi R30,192  ; offset = 64
 0C0C FF4F              sbci R31,255
 0C0E E80F              add R30,R24
 0C10 F91F              adc R31,R25
 0C12 2080              ldd R2,z+0
 0C14 80E0              ldi R24,<_Uart0TxData
 0C16 90E0              ldi R25,>_Uart0TxData
 0C18 F501              movw R30,R10
 0C1A 3996              adiw R30,9
 0C1C E80F              add R30,R24
 0C1E F91F              adc R31,R25
 0C20 2082              std z+0,R2
 0C22                   .dbline 543
 0C22           ;                }               
 0C22           L202:
 0C22                   .dbline 540
 0C22 8091AB01          lds R24,_k
 0C26 9091AC01          lds R25,_k+1
 0C2A 0196              adiw R24,1
 0C2C 9093AC01          sts _k+1,R25
 0C30 8093AB01          sts _k,R24
 0C34           L204:
 0C34                   .dbline 540
 0C34 8091AB01          lds R24,_k
 0C38 9091AC01          lds R25,_k+1
 0C3C 8034              cpi R24,64
 0C3E E0E0              ldi R30,0
 0C40 9E07              cpc R25,R30
 0C42 E0F2              brlo L201
 0C44           X66:
 0C44                   .dbline 544
 0C44           ;                SendUart0_2(74,20);//超时160ms
 0C44 24E1              ldi R18,20
 0C46 30E0              ldi R19,0
 0C48 0AE4              ldi R16,74
 0C4A 26DA              xcall _SendUart0_2
 0C4C                   .dbline 545
 0C4C           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0C4C 8091E101          lds R24,_Uart0RxCounter
 0C50 8930              cpi R24,9
 0C52 B1F4              brne L205
 0C54           X67:
 0C54 8091E201          lds R24,_Uart0RxData
 0C58 8535              cpi R24,85
 0C5A 91F4              brne L205
 0C5C           X68:
 0C5C 8091E301          lds R24,_Uart0RxData+1
 0C60 8034              cpi R24,64
 0C62 71F4              brne L205
 0C64           X69:
 0C64 8091E401          lds R24,_Uart0RxData+2
 0C68 8838              cpi R24,136
 0C6A 51F4              brne L205
 0C6C           X70:
 0C6C                   .dbline 546
 0C6C           ;                {T_dat&=0x00ff; }
 0C6C                   .dbline 546
 0C6C 8091CD01          lds R24,_T_dat
 0C70 9091CE01          lds R25,_T_dat+1
 0C74 9070              andi R25,0
 0C76 9093CE01          sts _T_dat+1,R25
 0C7A 8093CD01          sts _T_dat,R24
 0C7E                   .dbline 546
 0C7E 09C0              xjmp L206
 0C80           L205:
 0C80                   .dbline 548
 0C80           ;                else
 0C80           ;                {T_dat|=0x5500; }
 0C80                   .dbline 548
 0C80 8091CD01          lds R24,_T_dat
 0C84 9091CE01          lds R25,_T_dat+1
 0C88 9565              ori R25,85
 0C8A 9093CE01          sts _T_dat+1,R25
 0C8E 8093CD01          sts _T_dat,R24
 0C92                   .dbline 548
 0C92           L206:
 0C92                   .dbline 550
 0C92           ;                
 0C92           ;                DataFlag=0;
 0C92 2224              clr R2
 0C94 3324              clr R3
 0C96 3092B201          sts _DataFlag+1,R3
 0C9A 2092B101          sts _DataFlag,R2
 0C9E                   .dbline 551
 0C9E           ;                coeff_len=0;   
 0C9E 30921D00          sts _coeff_len+1,R3
 0CA2 20921C00          sts _coeff_len,R2
 0CA6                   .dbline 552
 0CA6           ;                T_com=0x0A;
 0CA6 8AE0              ldi R24,10
 0CA8 8093CA01          sts _T_com,R24
 0CAC                   .dbline 553
 0CAC           ;                SendManchester();              
 0CAC 0E943A1A          xcall _SendManchester
 0CB0                   .dbline 554
 0CB0           ;               }
 0CB0 0C94AF17          xjmp L172
 0CB4           L175:
 0CB4                   .dbline 555
 0CB4           ;               else if(DataFlag==2)//下发流量系数
 0CB4 8091B101          lds R24,_DataFlag
 0CB8 9091B201          lds R25,_DataFlag+1
 0CBC 8230              cpi R24,2
 0CBE E0E0              ldi R30,0
 0CC0 9E07              cpc R25,R30
 0CC2 09F0              breq X237
 0CC4 E6C0              xjmp L209
 0CC6           X237:
 0CC6           X71:
 0CC6                   .dbline 556
 0CC6           ;               {
 0CC6                   .dbline 557
 0CC6           ;                 Uart0TxData[0]=0xE8;
 0CC6 88EE              ldi R24,232
 0CC8 80931F00          sts _Uart0TxData,R24
 0CCC                   .dbline 558
 0CCC           ;                Uart0TxData[1]=0x40;
 0CCC 80E4              ldi R24,64
 0CCE 80932000          sts _Uart0TxData+1,R24
 0CD2                   .dbline 559
 0CD2           ;                Uart0TxData[2]=0x88;
 0CD2 88E8              ldi R24,136
 0CD4 80932100          sts _Uart0TxData+2,R24
 0CD8                   .dbline 560
 0CD8           ;                Uart0TxData[3]=2;//流量系数包2
 0CD8 82E0              ldi R24,2
 0CDA 80932200          sts _Uart0TxData+3,R24
 0CDE                   .dbline 561
 0CDE           ;                Uart0TxData[4]=0x21;
 0CDE 81E2              ldi R24,33
 0CE0 80932300          sts _Uart0TxData+4,R24
 0CE4                   .dbline 562
 0CE4           ;                Uart0TxData[5]=0x22;
 0CE4 82E2              ldi R24,34
 0CE6 80932400          sts _Uart0TxData+5,R24
 0CEA                   .dbline 563
 0CEA           ;                Uart0TxData[6]=0x23;
 0CEA 83E2              ldi R24,35
 0CEC 80932500          sts _Uart0TxData+6,R24
 0CF0                   .dbline 564
 0CF0           ;                Uart0TxData[7]=0x24;
 0CF0 84E2              ldi R24,36
 0CF2 80932600          sts _Uart0TxData+7,R24
 0CF6                   .dbline 565
 0CF6           ;                Uart0TxData[8]=0x32;    
 0CF6 82E3              ldi R24,50
 0CF8 80932700          sts _Uart0TxData+8,R24
 0CFC                   .dbline 566
 0CFC           ;                for(k=0;k<64;k++)
 0CFC 2224              clr R2
 0CFE 3324              clr R3
 0D00 3092AC01          sts _k+1,R3
 0D04 2092AB01          sts _k,R2
 0D08 1AC0              xjmp L222
 0D0A           L219:
 0D0A                   .dbline 567
 0D0A           ;                {
 0D0A                   .dbline 568
 0D0A           ;                Uart0TxData[9+k]=coeffdata[k];  
 0D0A A090AB01          lds R10,_k
 0D0E B090AC01          lds R11,_k+1
 0D12 80E0              ldi R24,<_coeffdata
 0D14 90E0              ldi R25,>_coeffdata
 0D16 F501              movw R30,R10
 0D18 E80F              add R30,R24
 0D1A F91F              adc R31,R25
 0D1C 2080              ldd R2,z+0
 0D1E 80E0              ldi R24,<_Uart0TxData
 0D20 90E0              ldi R25,>_Uart0TxData
 0D22 F501              movw R30,R10
 0D24 3996              adiw R30,9
 0D26 E80F              add R30,R24
 0D28 F91F              adc R31,R25
 0D2A 2082              std z+0,R2
 0D2C                   .dbline 569
 0D2C           ;                }               
 0D2C           L220:
 0D2C                   .dbline 566
 0D2C 8091AB01          lds R24,_k
 0D30 9091AC01          lds R25,_k+1
 0D34 0196              adiw R24,1
 0D36 9093AC01          sts _k+1,R25
 0D3A 8093AB01          sts _k,R24
 0D3E           L222:
 0D3E                   .dbline 566
 0D3E 8091AB01          lds R24,_k
 0D42 9091AC01          lds R25,_k+1
 0D46 8034              cpi R24,64
 0D48 E0E0              ldi R30,0
 0D4A 9E07              cpc R25,R30
 0D4C F0F2              brlo L219
 0D4E           X72:
 0D4E                   .dbline 570
 0D4E           ;                SendUart0_2(74,20);//超时160ms
 0D4E 24E1              ldi R18,20
 0D50 30E0              ldi R19,0
 0D52 0AE4              ldi R16,74
 0D54 A1D9              xcall _SendUart0_2
 0D56                   .dbline 571
 0D56           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0D56 8091E101          lds R24,_Uart0RxCounter
 0D5A 8930              cpi R24,9
 0D5C B1F4              brne L223
 0D5E           X73:
 0D5E 8091E201          lds R24,_Uart0RxData
 0D62 8535              cpi R24,85
 0D64 91F4              brne L223
 0D66           X74:
 0D66 8091E301          lds R24,_Uart0RxData+1
 0D6A 8034              cpi R24,64
 0D6C 71F4              brne L223
 0D6E           X75:
 0D6E 8091E401          lds R24,_Uart0RxData+2
 0D72 8838              cpi R24,136
 0D74 51F4              brne L223
 0D76           X76:
 0D76                   .dbline 572
 0D76           ;                {T_dat&=0xff00; }
 0D76                   .dbline 572
 0D76 8091CD01          lds R24,_T_dat
 0D7A 9091CE01          lds R25,_T_dat+1
 0D7E 8070              andi R24,0
 0D80 9093CE01          sts _T_dat+1,R25
 0D84 8093CD01          sts _T_dat,R24
 0D88                   .dbline 572
 0D88 06C0              xjmp L224
 0D8A           L223:
 0D8A                   .dbline 574
 0D8A           ;                else
 0D8A           ;                {T_dat=0x00aa; }
 0D8A                   .dbline 574
 0D8A 8AEA              ldi R24,170
 0D8C 90E0              ldi R25,0
 0D8E 9093CE01          sts _T_dat+1,R25
 0D92 8093CD01          sts _T_dat,R24
 0D96                   .dbline 574
 0D96           L224:
 0D96                   .dbline 576
 0D96           ;                
 0D96           ;                Uart0TxData[0]=0xE8;
 0D96 88EE              ldi R24,232
 0D98 80931F00          sts _Uart0TxData,R24
 0D9C                   .dbline 577
 0D9C           ;                Uart0TxData[1]=0x40;
 0D9C 80E4              ldi R24,64
 0D9E 80932000          sts _Uart0TxData+1,R24
 0DA2                   .dbline 578
 0DA2           ;                Uart0TxData[2]=0x88;
 0DA2 88E8              ldi R24,136
 0DA4 80932100          sts _Uart0TxData+2,R24
 0DA8                   .dbline 579
 0DA8           ;                Uart0TxData[3]=3;//流量系数包3
 0DA8 83E0              ldi R24,3
 0DAA 80932200          sts _Uart0TxData+3,R24
 0DAE                   .dbline 580
 0DAE           ;                Uart0TxData[4]=0x21;
 0DAE 81E2              ldi R24,33
 0DB0 80932300          sts _Uart0TxData+4,R24
 0DB4                   .dbline 581
 0DB4           ;                Uart0TxData[5]=0x22;
 0DB4 82E2              ldi R24,34
 0DB6 80932400          sts _Uart0TxData+5,R24
 0DBA                   .dbline 582
 0DBA           ;                Uart0TxData[6]=0x23;
 0DBA 83E2              ldi R24,35
 0DBC 80932500          sts _Uart0TxData+6,R24
 0DC0                   .dbline 583
 0DC0           ;                Uart0TxData[7]=0x24;
 0DC0 84E2              ldi R24,36
 0DC2 80932600          sts _Uart0TxData+7,R24
 0DC6                   .dbline 584
 0DC6           ;                Uart0TxData[8]=0x32;    
 0DC6 82E3              ldi R24,50
 0DC8 80932700          sts _Uart0TxData+8,R24
 0DCC                   .dbline 585
 0DCC           ;                for(k=0;k<64;k++)
 0DCC 2224              clr R2
 0DCE 3324              clr R3
 0DD0 3092AC01          sts _k+1,R3
 0DD4 2092AB01          sts _k,R2
 0DD8 1CC0              xjmp L238
 0DDA           L235:
 0DDA                   .dbline 586
 0DDA           ;                {
 0DDA                   .dbline 587
 0DDA           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 0DDA A090AB01          lds R10,_k
 0DDE B090AC01          lds R11,_k+1
 0DE2 80E0              ldi R24,<_coeffdata
 0DE4 90E0              ldi R25,>_coeffdata
 0DE6 F501              movw R30,R10
 0DE8 E05C              subi R30,192  ; offset = 64
 0DEA FF4F              sbci R31,255
 0DEC E80F              add R30,R24
 0DEE F91F              adc R31,R25
 0DF0 2080              ldd R2,z+0
 0DF2 80E0              ldi R24,<_Uart0TxData
 0DF4 90E0              ldi R25,>_Uart0TxData
 0DF6 F501              movw R30,R10
 0DF8 3996              adiw R30,9
 0DFA E80F              add R30,R24
 0DFC F91F              adc R31,R25
 0DFE 2082              std z+0,R2
 0E00                   .dbline 588
 0E00           ;                }               
 0E00           L236:
 0E00                   .dbline 585
 0E00 8091AB01          lds R24,_k
 0E04 9091AC01          lds R25,_k+1
 0E08 0196              adiw R24,1
 0E0A 9093AC01          sts _k+1,R25
 0E0E 8093AB01          sts _k,R24
 0E12           L238:
 0E12                   .dbline 585
 0E12 8091AB01          lds R24,_k
 0E16 9091AC01          lds R25,_k+1
 0E1A 8034              cpi R24,64
 0E1C E0E0              ldi R30,0
 0E1E 9E07              cpc R25,R30
 0E20 E0F2              brlo L235
 0E22           X77:
 0E22                   .dbline 589
 0E22           ;                SendUart0_2(74,20);//超时160ms
 0E22 24E1              ldi R18,20
 0E24 30E0              ldi R19,0
 0E26 0AE4              ldi R16,74
 0E28 37D9              xcall _SendUart0_2
 0E2A                   .dbline 590
 0E2A           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0E2A 8091E101          lds R24,_Uart0RxCounter
 0E2E 8930              cpi R24,9
 0E30 B1F4              brne L239
 0E32           X78:
 0E32 8091E201          lds R24,_Uart0RxData
 0E36 8535              cpi R24,85
 0E38 91F4              brne L239
 0E3A           X79:
 0E3A 8091E301          lds R24,_Uart0RxData+1
 0E3E 8034              cpi R24,64
 0E40 71F4              brne L239
 0E42           X80:
 0E42 8091E401          lds R24,_Uart0RxData+2
 0E46 8838              cpi R24,136
 0E48 51F4              brne L239
 0E4A           X81:
 0E4A                   .dbline 591
 0E4A           ;                {T_dat&=0x00ff; }
 0E4A                   .dbline 591
 0E4A 8091CD01          lds R24,_T_dat
 0E4E 9091CE01          lds R25,_T_dat+1
 0E52 9070              andi R25,0
 0E54 9093CE01          sts _T_dat+1,R25
 0E58 8093CD01          sts _T_dat,R24
 0E5C                   .dbline 591
 0E5C 09C0              xjmp L240
 0E5E           L239:
 0E5E                   .dbline 593
 0E5E           ;                else
 0E5E           ;                {T_dat|=0x5500; }
 0E5E                   .dbline 593
 0E5E 8091CD01          lds R24,_T_dat
 0E62 9091CE01          lds R25,_T_dat+1
 0E66 9565              ori R25,85
 0E68 9093CE01          sts _T_dat+1,R25
 0E6C 8093CD01          sts _T_dat,R24
 0E70                   .dbline 593
 0E70           L240:
 0E70                   .dbline 595
 0E70           ;                
 0E70           ;                DataFlag=0;
 0E70 2224              clr R2
 0E72 3324              clr R3
 0E74 3092B201          sts _DataFlag+1,R3
 0E78 2092B101          sts _DataFlag,R2
 0E7C                   .dbline 596
 0E7C           ;                coeff_len=0;   
 0E7C 30921D00          sts _coeff_len+1,R3
 0E80 20921C00          sts _coeff_len,R2
 0E84                   .dbline 597
 0E84           ;                T_com=0x0B;
 0E84 8BE0              ldi R24,11
 0E86 8093CA01          sts _T_com,R24
 0E8A                   .dbline 598
 0E8A           ;                SendManchester();              
 0E8A 0E943A1A          xcall _SendManchester
 0E8E                   .dbline 599
 0E8E           ;               }       
 0E8E 0C94AF17          xjmp L172
 0E92           L209:
 0E92                   .dbline 600
 0E92           ;               else if(DataFlag==3)//提取测试数据
 0E92 8091B101          lds R24,_DataFlag
 0E96 9091B201          lds R25,_DataFlag+1
 0E9A 8330              cpi R24,3
 0E9C E0E0              ldi R30,0
 0E9E 9E07              cpc R25,R30
 0EA0 09F0              breq X238
 0EA2 A4C0              xjmp L243
 0EA4           X238:
 0EA4           X82:
 0EA4                   .dbline 601
 0EA4           ;               {
 0EA4                   .dbline 602
 0EA4           ;                DataFlag=0;
 0EA4 2224              clr R2
 0EA6 3324              clr R3
 0EA8 3092B201          sts _DataFlag+1,R3
 0EAC 2092B101          sts _DataFlag,R2
 0EB0                   .dbline 603
 0EB0           ;                coeff_len=0;   
 0EB0 30921D00          sts _coeff_len+1,R3
 0EB4 20921C00          sts _coeff_len,R2
 0EB8                   .dbline 604
 0EB8           ;                T_com=0x09;
 0EB8 89E0              ldi R24,9
 0EBA 8093CA01          sts _T_com,R24
 0EBE                   .dbline 605
 0EBE           ;                TestDataBlockIndex=coeffdata[1];
 0EBE A0906A00          lds R10,_coeffdata+1
 0EC2 BB24              clr R11
 0EC4                   .dbline 606
 0EC4           ;                TestDataBlockIndex<<=8;
 0EC4 BA2C              mov R11,R10
 0EC6 AA24              clr R10
 0EC8                   .dbline 607
 0EC8           ;                TestDataBlockIndex|=coeffdata[0];//首块地址/索引
 0EC8 20906900          lds R2,_coeffdata
 0ECC 3324              clr R3
 0ECE A228              or R10,R2
 0ED0 B328              or R11,R3
 0ED2                   .dbline 608
 0ED2           ;                TestDataBlockCount=coeffdata[3];
 0ED2 C0906C00          lds R12,_coeffdata+3
 0ED6 DD24              clr R13
 0ED8                   .dbline 609
 0ED8           ;                TestDataBlockCount<<=8;
 0ED8 DC2C              mov R13,R12
 0EDA CC24              clr R12
 0EDC                   .dbline 610
 0EDC           ;                TestDataBlockCount|=coeffdata[2];//需提取的总包数，每包64字节，每块4096字节共64包
 0EDC 20906B00          lds R2,_coeffdata+2
 0EE0 3324              clr R3
 0EE2 C228              or R12,R2
 0EE4 D328              or R13,R3
 0EE6                   .dbline 612
 0EE6           ;                
 0EE6           ;                for(k=0;k<TestDataBlockCount;k++)//按用户要求分包进行上传，每包64字节传32帧
 0EE6 2224              clr R2
 0EE8 3092AC01          sts _k+1,R3
 0EEC 2092AB01          sts _k,R2
 0EF0 73C0              xjmp L251
 0EF2           L248:
 0EF2                   .dbline 613
 0EF2           ;                {
 0EF2                   .dbline 614
 0EF2           ;                  Uart0TxData[0]=0xE8;
 0EF2 88EE              ldi R24,232
 0EF4 80931F00          sts _Uart0TxData,R24
 0EF8                   .dbline 615
 0EF8           ;                  Uart0TxData[1]=0x40;
 0EF8 80E4              ldi R24,64
 0EFA 80932000          sts _Uart0TxData+1,R24
 0EFE                   .dbline 616
 0EFE           ;                  Uart0TxData[2]=0x9A;//读测试数据
 0EFE 8AE9              ldi R24,154
 0F00 80932100          sts _Uart0TxData+2,R24
 0F04                   .dbline 617
 0F04           ;                  Uart0TxData[3]=8;
 0F04 88E0              ldi R24,8
 0F06 80932200          sts _Uart0TxData+3,R24
 0F0A                   .dbline 620
 0F0A           ;                  
 0F0A           ;                  //统一块索引
 0F0A           ;                  Uart0TxData[4]=(k);  
 0F0A 2090AB01          lds R2,_k
 0F0E 3090AC01          lds R3,_k+1
 0F12 20922300          sts _Uart0TxData+4,R2
 0F16                   .dbline 621
 0F16           ;                  Uart0TxData[5]=(k>>8);       //包索引        
 0F16 232C              mov R2,R3
 0F18 3324              clr R3
 0F1A 20922400          sts _Uart0TxData+5,R2
 0F1E                   .dbline 622
 0F1E           ;                  Uart0TxData[6]=(TestDataBlockIndex);
 0F1E A0922500          sts _Uart0TxData+6,R10
 0F22                   .dbline 623
 0F22           ;                  Uart0TxData[7]=(TestDataBlockIndex>>8);//首块索引
 0F22 1501              movw R2,R10
 0F24 232C              mov R2,R3
 0F26 3324              clr R3
 0F28 20922600          sts _Uart0TxData+7,R2
 0F2C                   .dbline 633
 0F2C           ;                  
 0F2C           ;                  /*
 0F2C           ;                  // 单独块索引
 0F2C           ;                  Uart0TxData[4]=(k%8);        
 0F2C           ;                  Uart0TxData[5]=0;    //包索引        
 0F2C           ;                  Uart0TxData[6]=(TestDataBlockIndex+k/8);
 0F2C           ;                  Uart0TxData[7]=((TestDataBlockIndex+k/8)>>8);//首块索引
 0F2C           ;                  */
 0F2C           ;                  
 0F2C           ;                  SendUart0_2(9,6);//超时48ms
 0F2C 26E0              ldi R18,6
 0F2E 30E0              ldi R19,0
 0F30 09E0              ldi R16,9
 0F32 B2D8              xcall _SendUart0_2
 0F34                   .dbline 634
 0F34           ;                  for(bf=0;bf<32;bf++)
 0F34 2224              clr R2
 0F36 3324              clr R3
 0F38 30921700          sts _bf+1,R3
 0F3C 20921600          sts _bf,R2
 0F40 39C0              xjmp L262
 0F42           L259:
 0F42                   .dbline 635
 0F42           ;                  {            
 0F42                   .dbline 636
 0F42           ;                       T_dat=Uart0RxData[bf*2+1];//高字节
 0F42 80E0              ldi R24,<_Uart0RxData
 0F44 90E0              ldi R25,>_Uart0RxData
 0F46 E0911600          lds R30,_bf
 0F4A F0911700          lds R31,_bf+1
 0F4E EE0F              lsl R30
 0F50 FF1F              rol R31
 0F52 3196              adiw R30,1
 0F54 E80F              add R30,R24
 0F56 F91F              adc R31,R25
 0F58 2080              ldd R2,z+0
 0F5A 3324              clr R3
 0F5C 3092CE01          sts _T_dat+1,R3
 0F60 2092CD01          sts _T_dat,R2
 0F64                   .dbline 637
 0F64           ;                       T_dat<<=8;
 0F64 322C              mov R3,R2
 0F66 2224              clr R2
 0F68 3092CE01          sts _T_dat+1,R3
 0F6C 2092CD01          sts _T_dat,R2
 0F70                   .dbline 638
 0F70           ;                       T_dat|=Uart0RxData[bf*2+0];//低字节
 0F70 E0911600          lds R30,_bf
 0F74 F0911700          lds R31,_bf+1
 0F78 EE0F              lsl R30
 0F7A FF1F              rol R31
 0F7C E80F              add R30,R24
 0F7E F91F              adc R31,R25
 0F80 2080              ldd R2,z+0
 0F82 3324              clr R3
 0F84 4090CD01          lds R4,_T_dat
 0F88 5090CE01          lds R5,_T_dat+1
 0F8C 4228              or R4,R2
 0F8E 5328              or R5,R3
 0F90 5092CE01          sts _T_dat+1,R5
 0F94 4092CD01          sts _T_dat,R4
 0F98                   .dbline 639
 0F98           ;                       SendManchester();       
 0F98 0E943A1A          xcall _SendManchester
 0F9C                   .dbline 640
 0F9C           ;                       CheckMotor(10);  
 0F9C 0AE0              ldi R16,10
 0F9E 10E0              ldi R17,0
 0FA0 B9DA              xcall _CheckMotor
 0FA2                   .dbline 641
 0FA2           ;                  }            
 0FA2           L260:
 0FA2                   .dbline 634
 0FA2 80911600          lds R24,_bf
 0FA6 90911700          lds R25,_bf+1
 0FAA 0196              adiw R24,1
 0FAC 90931700          sts _bf+1,R25
 0FB0 80931600          sts _bf,R24
 0FB4           L262:
 0FB4                   .dbline 634
 0FB4 80911600          lds R24,_bf
 0FB8 90911700          lds R25,_bf+1
 0FBC 8032              cpi R24,32
 0FBE E0E0              ldi R30,0
 0FC0 9E07              cpc R25,R30
 0FC2 08F4              brsh X239
 0FC4 BECF              xjmp L259
 0FC6           X239:
 0FC6           X83:
 0FC6                   .dbline 642
 0FC6           ;                 }
 0FC6           L249:
 0FC6                   .dbline 612
 0FC6 8091AB01          lds R24,_k
 0FCA 9091AC01          lds R25,_k+1
 0FCE 0196              adiw R24,1
 0FD0 9093AC01          sts _k+1,R25
 0FD4 8093AB01          sts _k,R24
 0FD8           L251:
 0FD8                   .dbline 612
 0FD8 2090AB01          lds R2,_k
 0FDC 3090AC01          lds R3,_k+1
 0FE0 2C14              cp R2,R12
 0FE2 3D04              cpc R3,R13
 0FE4 08F4              brsh X240
 0FE6 85CF              xjmp L248
 0FE8           X240:
 0FE8           X84:
 0FE8                   .dbline 643
 0FE8           ;               } 
 0FE8 0C94AF17          xjmp L172
 0FEC           L243:
 0FEC                   .dbline 644
 0FEC           ;               else if(DataFlag==4)//下发仪器信息
 0FEC 8091B101          lds R24,_DataFlag
 0FF0 9091B201          lds R25,_DataFlag+1
 0FF4 8430              cpi R24,4
 0FF6 E0E0              ldi R30,0
 0FF8 9E07              cpc R25,R30
 0FFA 11F0              breq X241
 0FFC 0C94AF17          xjmp L172
 1000           X241:
 1000           X85:
 1000                   .dbline 645
 1000           ;               {
 1000                   .dbline 646
 1000           ;               T_dat=0x0000;
 1000 2224              clr R2
 1002 3324              clr R3
 1004 3092CE01          sts _T_dat+1,R3
 1008 2092CD01          sts _T_dat,R2
 100C                   .dbline 648
 100C           ;               
 100C           ;                Uart0TxData[0]=0xE8;
 100C 88EE              ldi R24,232
 100E 80931F00          sts _Uart0TxData,R24
 1012                   .dbline 649
 1012           ;                Uart0TxData[1]=0x40;
 1012 80E4              ldi R24,64
 1014 80932000          sts _Uart0TxData+1,R24
 1018                   .dbline 650
 1018           ;                Uart0TxData[2]=0x84;
 1018 84E8              ldi R24,132
 101A 80932100          sts _Uart0TxData+2,R24
 101E                   .dbline 651
 101E           ;                Uart0TxData[3]=0;//包0
 101E 20922200          sts _Uart0TxData+3,R2
 1022                   .dbline 652
 1022           ;                Uart0TxData[4]=0x21;
 1022 81E2              ldi R24,33
 1024 80932300          sts _Uart0TxData+4,R24
 1028                   .dbline 653
 1028           ;                Uart0TxData[5]=0x22;
 1028 82E2              ldi R24,34
 102A 80932400          sts _Uart0TxData+5,R24
 102E                   .dbline 654
 102E           ;                Uart0TxData[6]=0x23;
 102E 83E2              ldi R24,35
 1030 80932500          sts _Uart0TxData+6,R24
 1034                   .dbline 655
 1034           ;                Uart0TxData[7]=0x24;
 1034 84E2              ldi R24,36
 1036 80932600          sts _Uart0TxData+7,R24
 103A                   .dbline 656
 103A           ;                Uart0TxData[8]=0x32;    
 103A 82E3              ldi R24,50
 103C 80932700          sts _Uart0TxData+8,R24
 1040                   .dbline 657
 1040           ;                for(k=0;k<64;k++)
 1040 3092AC01          sts _k+1,R3
 1044 2092AB01          sts _k,R2
 1048 1AC0              xjmp L276
 104A           L273:
 104A                   .dbline 658
 104A           ;                {
 104A                   .dbline 659
 104A           ;                Uart0TxData[9+k]=coeffdata[k];  
 104A A090AB01          lds R10,_k
 104E B090AC01          lds R11,_k+1
 1052 80E0              ldi R24,<_coeffdata
 1054 90E0              ldi R25,>_coeffdata
 1056 F501              movw R30,R10
 1058 E80F              add R30,R24
 105A F91F              adc R31,R25
 105C 2080              ldd R2,z+0
 105E 80E0              ldi R24,<_Uart0TxData
 1060 90E0              ldi R25,>_Uart0TxData
 1062 F501              movw R30,R10
 1064 3996              adiw R30,9
 1066 E80F              add R30,R24
 1068 F91F              adc R31,R25
 106A 2082              std z+0,R2
 106C                   .dbline 660
 106C           ;                }               
 106C           L274:
 106C                   .dbline 657
 106C 8091AB01          lds R24,_k
 1070 9091AC01          lds R25,_k+1
 1074 0196              adiw R24,1
 1076 9093AC01          sts _k+1,R25
 107A 8093AB01          sts _k,R24
 107E           L276:
 107E                   .dbline 657
 107E 8091AB01          lds R24,_k
 1082 9091AC01          lds R25,_k+1
 1086 8034              cpi R24,64
 1088 E0E0              ldi R30,0
 108A 9E07              cpc R25,R30
 108C F0F2              brlo L273
 108E           X86:
 108E                   .dbline 661
 108E           ;                SendUart0_2(74,20);//超时160ms
 108E 24E1              ldi R18,20
 1090 30E0              ldi R19,0
 1092 0AE4              ldi R16,74
 1094 01D8              xcall _SendUart0_2
 1096                   .dbline 662
 1096           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1096 8091E101          lds R24,_Uart0RxCounter
 109A 8930              cpi R24,9
 109C 61F4              brne L283
 109E           X87:
 109E 8091E201          lds R24,_Uart0RxData
 10A2 8535              cpi R24,85
 10A4 41F4              brne L283
 10A6           X88:
 10A6 8091E301          lds R24,_Uart0RxData+1
 10AA 8034              cpi R24,64
 10AC 21F4              brne L283
 10AE           X89:
 10AE 8091E401          lds R24,_Uart0RxData+2
 10B2 8438              cpi R24,132
 10B4 49F0              breq L277
 10B6           X90:
 10B6           L283:
 10B6                   .dbline 663
 10B6           ;                {T_dat|=0x0001; }
 10B6                   .dbline 663
 10B6 8091CD01          lds R24,_T_dat
 10BA 9091CE01          lds R25,_T_dat+1
 10BE 8160              ori R24,1
 10C0 9093CE01          sts _T_dat+1,R25
 10C4 8093CD01          sts _T_dat,R24
 10C8                   .dbline 663
 10C8           L277:
 10C8                   .dbline 665
 10C8           ;                
 10C8           ;                Uart0TxData[0]=0xE8;
 10C8 88EE              ldi R24,232
 10CA 80931F00          sts _Uart0TxData,R24
 10CE                   .dbline 666
 10CE           ;                Uart0TxData[1]=0x40;
 10CE 80E4              ldi R24,64
 10D0 80932000          sts _Uart0TxData+1,R24
 10D4                   .dbline 667
 10D4           ;                Uart0TxData[2]=0x84;
 10D4 84E8              ldi R24,132
 10D6 80932100          sts _Uart0TxData+2,R24
 10DA                   .dbline 668
 10DA           ;                Uart0TxData[3]=1;//包1
 10DA 81E0              ldi R24,1
 10DC 80932200          sts _Uart0TxData+3,R24
 10E0                   .dbline 669
 10E0           ;                Uart0TxData[4]=0x21;
 10E0 81E2              ldi R24,33
 10E2 80932300          sts _Uart0TxData+4,R24
 10E6                   .dbline 670
 10E6           ;                Uart0TxData[5]=0x22;
 10E6 82E2              ldi R24,34
 10E8 80932400          sts _Uart0TxData+5,R24
 10EC                   .dbline 671
 10EC           ;                Uart0TxData[6]=0x23;
 10EC 83E2              ldi R24,35
 10EE 80932500          sts _Uart0TxData+6,R24
 10F2                   .dbline 672
 10F2           ;                Uart0TxData[7]=0x24;
 10F2 84E2              ldi R24,36
 10F4 80932600          sts _Uart0TxData+7,R24
 10F8                   .dbline 673
 10F8           ;                Uart0TxData[8]=0x32;    
 10F8 82E3              ldi R24,50
 10FA 80932700          sts _Uart0TxData+8,R24
 10FE                   .dbline 674
 10FE           ;                for(k=0;k<64;k++)
 10FE 2224              clr R2
 1100 3324              clr R3
 1102 3092AC01          sts _k+1,R3
 1106 2092AB01          sts _k,R2
 110A 1CC0              xjmp L295
 110C           L292:
 110C                   .dbline 675
 110C           ;                {
 110C                   .dbline 676
 110C           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 110C A090AB01          lds R10,_k
 1110 B090AC01          lds R11,_k+1
 1114 80E0              ldi R24,<_coeffdata
 1116 90E0              ldi R25,>_coeffdata
 1118 F501              movw R30,R10
 111A E05C              subi R30,192  ; offset = 64
 111C FF4F              sbci R31,255
 111E E80F              add R30,R24
 1120 F91F              adc R31,R25
 1122 2080              ldd R2,z+0
 1124 80E0              ldi R24,<_Uart0TxData
 1126 90E0              ldi R25,>_Uart0TxData
 1128 F501              movw R30,R10
 112A 3996              adiw R30,9
 112C E80F              add R30,R24
 112E F91F              adc R31,R25
 1130 2082              std z+0,R2
 1132                   .dbline 677
 1132           ;                }               
 1132           L293:
 1132                   .dbline 674
 1132 8091AB01          lds R24,_k
 1136 9091AC01          lds R25,_k+1
 113A 0196              adiw R24,1
 113C 9093AC01          sts _k+1,R25
 1140 8093AB01          sts _k,R24
 1144           L295:
 1144                   .dbline 674
 1144 8091AB01          lds R24,_k
 1148 9091AC01          lds R25,_k+1
 114C 8034              cpi R24,64
 114E E0E0              ldi R30,0
 1150 9E07              cpc R25,R30
 1152 E0F2              brlo L292
 1154           X91:
 1154                   .dbline 678
 1154           ;                SendUart0_2(74,20);//超时160ms
 1154 24E1              ldi R18,20
 1156 30E0              ldi R19,0
 1158 0AE4              ldi R16,74
 115A 0E944C00          xcall _SendUart0_2
 115E                   .dbline 679
 115E           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 115E 8091E101          lds R24,_Uart0RxCounter
 1162 8930              cpi R24,9
 1164 61F4              brne L302
 1166           X92:
 1166 8091E201          lds R24,_Uart0RxData
 116A 8535              cpi R24,85
 116C 41F4              brne L302
 116E           X93:
 116E 8091E301          lds R24,_Uart0RxData+1
 1172 8034              cpi R24,64
 1174 21F4              brne L302
 1176           X94:
 1176 8091E401          lds R24,_Uart0RxData+2
 117A 8438              cpi R24,132
 117C 49F0              breq L296
 117E           X95:
 117E           L302:
 117E                   .dbline 680
 117E           ;          {T_dat|=0x0002; }
 117E                   .dbline 680
 117E 8091CD01          lds R24,_T_dat
 1182 9091CE01          lds R25,_T_dat+1
 1186 8260              ori R24,2
 1188 9093CE01          sts _T_dat+1,R25
 118C 8093CD01          sts _T_dat,R24
 1190                   .dbline 680
 1190           L296:
 1190                   .dbline 682
 1190           ;                
 1190           ;                Uart0TxData[0]=0xE8;
 1190 88EE              ldi R24,232
 1192 80931F00          sts _Uart0TxData,R24
 1196                   .dbline 683
 1196           ;                Uart0TxData[1]=0x40;
 1196 80E4              ldi R24,64
 1198 80932000          sts _Uart0TxData+1,R24
 119C                   .dbline 684
 119C           ;                Uart0TxData[2]=0x84;
 119C 84E8              ldi R24,132
 119E 80932100          sts _Uart0TxData+2,R24
 11A2                   .dbline 685
 11A2           ;                Uart0TxData[3]=2;//包2
 11A2 82E0              ldi R24,2
 11A4 80932200          sts _Uart0TxData+3,R24
 11A8                   .dbline 686
 11A8           ;                Uart0TxData[4]=0x21;
 11A8 81E2              ldi R24,33
 11AA 80932300          sts _Uart0TxData+4,R24
 11AE                   .dbline 687
 11AE           ;                Uart0TxData[5]=0x22;
 11AE 82E2              ldi R24,34
 11B0 80932400          sts _Uart0TxData+5,R24
 11B4                   .dbline 688
 11B4           ;                Uart0TxData[6]=0x23;
 11B4 83E2              ldi R24,35
 11B6 80932500          sts _Uart0TxData+6,R24
 11BA                   .dbline 689
 11BA           ;                Uart0TxData[7]=0x24;
 11BA 84E2              ldi R24,36
 11BC 80932600          sts _Uart0TxData+7,R24
 11C0                   .dbline 690
 11C0           ;                Uart0TxData[8]=0x32;    
 11C0 82E3              ldi R24,50
 11C2 80932700          sts _Uart0TxData+8,R24
 11C6                   .dbline 691
 11C6           ;                for(k=0;k<64;k++)
 11C6 2224              clr R2
 11C8 3324              clr R3
 11CA 3092AC01          sts _k+1,R3
 11CE 2092AB01          sts _k,R2
 11D2 1CC0              xjmp L314
 11D4           L311:
 11D4                   .dbline 692
 11D4           ;                {
 11D4                   .dbline 693
 11D4           ;                Uart0TxData[9+k]=coeffdata[k+128];  
 11D4 A090AB01          lds R10,_k
 11D8 B090AC01          lds R11,_k+1
 11DC 80E0              ldi R24,<_coeffdata
 11DE 90E0              ldi R25,>_coeffdata
 11E0 F501              movw R30,R10
 11E2 E058              subi R30,128  ; offset = 128
 11E4 FF4F              sbci R31,255
 11E6 E80F              add R30,R24
 11E8 F91F              adc R31,R25
 11EA 2080              ldd R2,z+0
 11EC 80E0              ldi R24,<_Uart0TxData
 11EE 90E0              ldi R25,>_Uart0TxData
 11F0 F501              movw R30,R10
 11F2 3996              adiw R30,9
 11F4 E80F              add R30,R24
 11F6 F91F              adc R31,R25
 11F8 2082              std z+0,R2
 11FA                   .dbline 694
 11FA           ;                }               
 11FA           L312:
 11FA                   .dbline 691
 11FA 8091AB01          lds R24,_k
 11FE 9091AC01          lds R25,_k+1
 1202 0196              adiw R24,1
 1204 9093AC01          sts _k+1,R25
 1208 8093AB01          sts _k,R24
 120C           L314:
 120C                   .dbline 691
 120C 8091AB01          lds R24,_k
 1210 9091AC01          lds R25,_k+1
 1214 8034              cpi R24,64
 1216 E0E0              ldi R30,0
 1218 9E07              cpc R25,R30
 121A E0F2              brlo L311
 121C           X96:
 121C                   .dbline 695
 121C           ;                SendUart0_2(74,20);//超时160ms
 121C 24E1              ldi R18,20
 121E 30E0              ldi R19,0
 1220 0AE4              ldi R16,74
 1222 0E944C00          xcall _SendUart0_2
 1226                   .dbline 696
 1226           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1226 8091E101          lds R24,_Uart0RxCounter
 122A 8930              cpi R24,9
 122C 61F4              brne L321
 122E           X97:
 122E 8091E201          lds R24,_Uart0RxData
 1232 8535              cpi R24,85
 1234 41F4              brne L321
 1236           X98:
 1236 8091E301          lds R24,_Uart0RxData+1
 123A 8034              cpi R24,64
 123C 21F4              brne L321
 123E           X99:
 123E 8091E401          lds R24,_Uart0RxData+2
 1242 8438              cpi R24,132
 1244 49F0              breq L315
 1246           X100:
 1246           L321:
 1246                   .dbline 697
 1246           ;          {T_dat|=0x0004; }
 1246                   .dbline 697
 1246 8091CD01          lds R24,_T_dat
 124A 9091CE01          lds R25,_T_dat+1
 124E 8460              ori R24,4
 1250 9093CE01          sts _T_dat+1,R25
 1254 8093CD01          sts _T_dat,R24
 1258                   .dbline 697
 1258           L315:
 1258                   .dbline 699
 1258           ;                
 1258           ;                Uart0TxData[0]=0xE8;
 1258 88EE              ldi R24,232
 125A 80931F00          sts _Uart0TxData,R24
 125E                   .dbline 700
 125E           ;                Uart0TxData[1]=0x40;
 125E 80E4              ldi R24,64
 1260 80932000          sts _Uart0TxData+1,R24
 1264                   .dbline 701
 1264           ;                Uart0TxData[2]=0x84;
 1264 84E8              ldi R24,132
 1266 80932100          sts _Uart0TxData+2,R24
 126A                   .dbline 702
 126A           ;                Uart0TxData[3]=3;//包3
 126A 83E0              ldi R24,3
 126C 80932200          sts _Uart0TxData+3,R24
 1270                   .dbline 703
 1270           ;                Uart0TxData[4]=0x21;
 1270 81E2              ldi R24,33
 1272 80932300          sts _Uart0TxData+4,R24
 1276                   .dbline 704
 1276           ;                Uart0TxData[5]=0x22;
 1276 82E2              ldi R24,34
 1278 80932400          sts _Uart0TxData+5,R24
 127C                   .dbline 705
 127C           ;                Uart0TxData[6]=0x23;
 127C 83E2              ldi R24,35
 127E 80932500          sts _Uart0TxData+6,R24
 1282                   .dbline 706
 1282           ;                Uart0TxData[7]=0x24;
 1282 84E2              ldi R24,36
 1284 80932600          sts _Uart0TxData+7,R24
 1288                   .dbline 707
 1288           ;                Uart0TxData[8]=0x32;    
 1288 82E3              ldi R24,50
 128A 80932700          sts _Uart0TxData+8,R24
 128E                   .dbline 708
 128E           ;                for(k=0;k<64;k++)
 128E 2224              clr R2
 1290 3324              clr R3
 1292 3092AC01          sts _k+1,R3
 1296 2092AB01          sts _k,R2
 129A 1CC0              xjmp L333
 129C           L330:
 129C                   .dbline 709
 129C           ;                {
 129C                   .dbline 710
 129C           ;                Uart0TxData[9+k]=coeffdata[k+192];  
 129C A090AB01          lds R10,_k
 12A0 B090AC01          lds R11,_k+1
 12A4 80E0              ldi R24,<_coeffdata
 12A6 90E0              ldi R25,>_coeffdata
 12A8 F501              movw R30,R10
 12AA E054              subi R30,64  ; offset = 192
 12AC FF4F              sbci R31,255
 12AE E80F              add R30,R24
 12B0 F91F              adc R31,R25
 12B2 2080              ldd R2,z+0
 12B4 80E0              ldi R24,<_Uart0TxData
 12B6 90E0              ldi R25,>_Uart0TxData
 12B8 F501              movw R30,R10
 12BA 3996              adiw R30,9
 12BC E80F              add R30,R24
 12BE F91F              adc R31,R25
 12C0 2082              std z+0,R2
 12C2                   .dbline 711
 12C2           ;                }               
 12C2           L331:
 12C2                   .dbline 708
 12C2 8091AB01          lds R24,_k
 12C6 9091AC01          lds R25,_k+1
 12CA 0196              adiw R24,1
 12CC 9093AC01          sts _k+1,R25
 12D0 8093AB01          sts _k,R24
 12D4           L333:
 12D4                   .dbline 708
 12D4 8091AB01          lds R24,_k
 12D8 9091AC01          lds R25,_k+1
 12DC 8034              cpi R24,64
 12DE E0E0              ldi R30,0
 12E0 9E07              cpc R25,R30
 12E2 E0F2              brlo L330
 12E4           X101:
 12E4                   .dbline 712
 12E4           ;                SendUart0_2(74,20);//超时160ms
 12E4 24E1              ldi R18,20
 12E6 30E0              ldi R19,0
 12E8 0AE4              ldi R16,74
 12EA 0E944C00          xcall _SendUart0_2
 12EE                   .dbline 713
 12EE           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 12EE 8091E101          lds R24,_Uart0RxCounter
 12F2 8930              cpi R24,9
 12F4 61F4              brne L340
 12F6           X102:
 12F6 8091E201          lds R24,_Uart0RxData
 12FA 8535              cpi R24,85
 12FC 41F4              brne L340
 12FE           X103:
 12FE 8091E301          lds R24,_Uart0RxData+1
 1302 8034              cpi R24,64
 1304 21F4              brne L340
 1306           X104:
 1306 8091E401          lds R24,_Uart0RxData+2
 130A 8438              cpi R24,132
 130C 49F0              breq L334
 130E           X105:
 130E           L340:
 130E                   .dbline 714
 130E           ;          {T_dat|=0x0008; }
 130E                   .dbline 714
 130E 8091CD01          lds R24,_T_dat
 1312 9091CE01          lds R25,_T_dat+1
 1316 8860              ori R24,8
 1318 9093CE01          sts _T_dat+1,R25
 131C 8093CD01          sts _T_dat,R24
 1320                   .dbline 714
 1320           L334:
 1320                   .dbline 716
 1320           ;                
 1320           ;                Uart0TxData[0]=0xE8;
 1320 88EE              ldi R24,232
 1322 80931F00          sts _Uart0TxData,R24
 1326                   .dbline 717
 1326           ;                Uart0TxData[1]=0x40;
 1326 80E4              ldi R24,64
 1328 80932000          sts _Uart0TxData+1,R24
 132C                   .dbline 718
 132C           ;                Uart0TxData[2]=0x84;
 132C 84E8              ldi R24,132
 132E 80932100          sts _Uart0TxData+2,R24
 1332                   .dbline 719
 1332           ;                Uart0TxData[3]=4;//包4
 1332 84E0              ldi R24,4
 1334 80932200          sts _Uart0TxData+3,R24
 1338                   .dbline 720
 1338           ;                Uart0TxData[4]=0x21;
 1338 81E2              ldi R24,33
 133A 80932300          sts _Uart0TxData+4,R24
 133E                   .dbline 721
 133E           ;                Uart0TxData[5]=0x22;
 133E 82E2              ldi R24,34
 1340 80932400          sts _Uart0TxData+5,R24
 1344                   .dbline 722
 1344           ;                Uart0TxData[6]=0x23;
 1344 83E2              ldi R24,35
 1346 80932500          sts _Uart0TxData+6,R24
 134A                   .dbline 723
 134A           ;                Uart0TxData[7]=0x24;
 134A 84E2              ldi R24,36
 134C 80932600          sts _Uart0TxData+7,R24
 1350                   .dbline 724
 1350           ;                Uart0TxData[8]=0x32;    
 1350 82E3              ldi R24,50
 1352 80932700          sts _Uart0TxData+8,R24
 1356                   .dbline 725
 1356           ;                for(k=0;k<64;k++)
 1356 2224              clr R2
 1358 3324              clr R3
 135A 3092AC01          sts _k+1,R3
 135E 2092AB01          sts _k,R2
 1362 1CC0              xjmp L352
 1364           L349:
 1364                   .dbline 726
 1364           ;                {
 1364                   .dbline 727
 1364           ;                Uart0TxData[9+k]=coeffdata[k+256];  
 1364 A090AB01          lds R10,_k
 1368 B090AC01          lds R11,_k+1
 136C 80E0              ldi R24,<_coeffdata
 136E 90E0              ldi R25,>_coeffdata
 1370 F501              movw R30,R10
 1372 E050              subi R30,0  ; offset = 256
 1374 FF4F              sbci R31,255
 1376 E80F              add R30,R24
 1378 F91F              adc R31,R25
 137A 2080              ldd R2,z+0
 137C 80E0              ldi R24,<_Uart0TxData
 137E 90E0              ldi R25,>_Uart0TxData
 1380 F501              movw R30,R10
 1382 3996              adiw R30,9
 1384 E80F              add R30,R24
 1386 F91F              adc R31,R25
 1388 2082              std z+0,R2
 138A                   .dbline 728
 138A           ;                }               
 138A           L350:
 138A                   .dbline 725
 138A 8091AB01          lds R24,_k
 138E 9091AC01          lds R25,_k+1
 1392 0196              adiw R24,1
 1394 9093AC01          sts _k+1,R25
 1398 8093AB01          sts _k,R24
 139C           L352:
 139C                   .dbline 725
 139C 8091AB01          lds R24,_k
 13A0 9091AC01          lds R25,_k+1
 13A4 8034              cpi R24,64
 13A6 E0E0              ldi R30,0
 13A8 9E07              cpc R25,R30
 13AA E0F2              brlo L349
 13AC           X106:
 13AC                   .dbline 729
 13AC           ;                SendUart0_2(74,20);//超时160ms
 13AC 24E1              ldi R18,20
 13AE 30E0              ldi R19,0
 13B0 0AE4              ldi R16,74
 13B2 0E944C00          xcall _SendUart0_2
 13B6                   .dbline 730
 13B6           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 13B6 8091E101          lds R24,_Uart0RxCounter
 13BA 8930              cpi R24,9
 13BC 61F4              brne L359
 13BE           X107:
 13BE 8091E201          lds R24,_Uart0RxData
 13C2 8535              cpi R24,85
 13C4 41F4              brne L359
 13C6           X108:
 13C6 8091E301          lds R24,_Uart0RxData+1
 13CA 8034              cpi R24,64
 13CC 21F4              brne L359
 13CE           X109:
 13CE 8091E401          lds R24,_Uart0RxData+2
 13D2 8438              cpi R24,132
 13D4 49F0              breq L353
 13D6           X110:
 13D6           L359:
 13D6                   .dbline 731
 13D6           ;          {T_dat|=0x0010; }
 13D6                   .dbline 731
 13D6 8091CD01          lds R24,_T_dat
 13DA 9091CE01          lds R25,_T_dat+1
 13DE 8061              ori R24,16
 13E0 9093CE01          sts _T_dat+1,R25
 13E4 8093CD01          sts _T_dat,R24
 13E8                   .dbline 731
 13E8           L353:
 13E8                   .dbline 733
 13E8           ;                
 13E8           ;                DataFlag=0;
 13E8 2224              clr R2
 13EA 3324              clr R3
 13EC 3092B201          sts _DataFlag+1,R3
 13F0 2092B101          sts _DataFlag,R2
 13F4                   .dbline 734
 13F4           ;                coeff_len=0;   
 13F4 30921D00          sts _coeff_len+1,R3
 13F8 20921C00          sts _coeff_len,R2
 13FC                   .dbline 735
 13FC           ;                T_com=0x0C;
 13FC 8CE0              ldi R24,12
 13FE 8093CA01          sts _T_com,R24
 1402                   .dbline 736
 1402           ;                SendManchester();              
 1402 0E943A1A          xcall _SendManchester
 1406                   .dbline 737
 1406           ;               }     
 1406                   .dbline 738
 1406           ;         }      
 1406                   .dbline 739
 1406           ;       }
 1406 0C94AF17          xjmp L172
 140A           L171:
 140A                   .dbline 742
 140A           ;        
 140A           ;    else//若不是下发标定系数，则进入以下各个命令的子语句
 140A           ;       { 
 140A                   .dbline 743
 140A           ;       T_com=(R_dat>>4);
 140A 2090CB01          lds R2,_R_dat
 140E 3090CC01          lds R3,_R_dat+1
 1412 3594              asr R3
 1414 2794              ror R2
 1416 3594              asr R3
 1418 2794              ror R2
 141A 3594              asr R3
 141C 2794              ror R2
 141E 3594              asr R3
 1420 2794              ror R2
 1422 2092CA01          sts _T_com,R2
 1426                   .dbline 744
 1426           ;     switch(R_dat&0xf0)
 1426 8091CB01          lds R24,_R_dat
 142A 9091CC01          lds R25,_R_dat+1
 142E 807F              andi R24,240
 1430 9070              andi R25,0
 1432 5C01              movw R10,R24
 1434 8036              cpi R24,96
 1436 E0E0              ldi R30,0
 1438 9E07              cpc R25,R30
 143A 09F4              brne X242
 143C 71C2              xjmp L398
 143E           X242:
 143E           X111:
 143E 80E6              ldi R24,96
 1440 90E0              ldi R25,0
 1442 8A15              cp R24,R10
 1444 9B05              cpc R25,R11
 1446 0CF4              brge X243
 1448 33C0              xjmp L706
 144A           X243:
 144A           X112:
 144A           L705:
 144A C501              movw R24,R10
 144C 8033              cpi R24,48
 144E E0E0              ldi R30,0
 1450 9E07              cpc R25,R30
 1452 09F4              brne X244
 1454 EDC0              xjmp L380
 1456           X244:
 1456           X113:
 1456 80E3              ldi R24,48
 1458 90E0              ldi R25,0
 145A 8A15              cp R24,R10
 145C 9B05              cpc R25,R11
 145E A4F0              brlt L708
 1460           X114:
 1460           L707:
 1460 C501              movw R24,R10
 1462 8031              cpi R24,16
 1464 E0E0              ldi R30,0
 1466 9E07              cpc R25,R30
 1468 09F4              brne X245
 146A 5FC0              xjmp L363
 146C           X245:
 146C           X115:
 146C 8031              cpi R24,16
 146E E0E0              ldi R30,0
 1470 9E07              cpc R25,R30
 1472 14F4              brge X246
 1474 0C94AF17          xjmp L361
 1478           X246:
 1478           X116:
 1478           L709:
 1478 C501              movw R24,R10
 147A 8032              cpi R24,32
 147C E0E0              ldi R30,0
 147E 9E07              cpc R25,R30
 1480 09F4              brne X247
 1482 93C0              xjmp L371
 1484           X247:
 1484           X117:
 1484 0C94AF17          xjmp L361
 1488           L708:
 1488 C501              movw R24,R10
 148A 8034              cpi R24,64
 148C E0E0              ldi R30,0
 148E 9E07              cpc R25,R30
 1490 09F4              brne X248
 1492 02C1              xjmp L381
 1494           X248:
 1494           X118:
 1494 8034              cpi R24,64
 1496 E0E0              ldi R30,0
 1498 9E07              cpc R25,R30
 149A 14F4              brge X249
 149C 0C94AF17          xjmp L361
 14A0           X249:
 14A0           X119:
 14A0           L710:
 14A0 C501              movw R24,R10
 14A2 8035              cpi R24,80
 14A4 E0E0              ldi R30,0
 14A6 9E07              cpc R25,R30
 14A8 09F4              brne X250
 14AA 4DC1              xjmp L388
 14AC           X250:
 14AC           X120:
 14AC 0C94AF17          xjmp L361
 14B0           L706:
 14B0 C501              movw R24,R10
 14B2 8039              cpi R24,144
 14B4 E0E0              ldi R30,0
 14B6 9E07              cpc R25,R30
 14B8 09F4              brne X251
 14BA 86C5              xjmp L477
 14BC           X251:
 14BC           X121:
 14BC 80E9              ldi R24,144
 14BE 90E0              ldi R25,0
 14C0 8A15              cp R24,R10
 14C2 9B05              cpc R25,R11
 14C4 A4F0              brlt L712
 14C6           X122:
 14C6           L711:
 14C6 C501              movw R24,R10
 14C8 8037              cpi R24,112
 14CA E0E0              ldi R30,0
 14CC 9E07              cpc R25,R30
 14CE 09F4              brne X252
 14D0 F8C2              xjmp L418
 14D2           X252:
 14D2           X123:
 14D2 8037              cpi R24,112
 14D4 E0E0              ldi R30,0
 14D6 9E07              cpc R25,R30
 14D8 14F4              brge X253
 14DA 0C94AF17          xjmp L361
 14DE           X253:
 14DE           X124:
 14DE           L713:
 14DE C501              movw R24,R10
 14E0 8038              cpi R24,128
 14E2 E0E0              ldi R30,0
 14E4 9E07              cpc R25,R30
 14E6 09F4              brne X254
 14E8 C1C3              xjmp L438
 14EA           X254:
 14EA           X125:
 14EA 0C94AF17          xjmp L361
 14EE           L712:
 14EE C501              movw R24,R10
 14F0 803B              cpi R24,176
 14F2 E0E0              ldi R30,0
 14F4 9E07              cpc R25,R30
 14F6 11F4              brne X255
 14F8 0C946813          xjmp L594
 14FC           X255:
 14FC           X126:
 14FC 80EB              ldi R24,176
 14FE 90E0              ldi R25,0
 1500 8A15              cp R24,R10
 1502 9B05              cpc R25,R11
 1504 4CF0              brlt L715
 1506           X127:
 1506           L714:
 1506 C501              movw R24,R10
 1508 803A              cpi R24,160
 150A E0E0              ldi R30,0
 150C 9E07              cpc R25,R30
 150E 11F4              brne X256
 1510 0C94A012          xjmp L569
 1514           X256:
 1514           X128:
 1514 0C94AF17          xjmp L361
 1518           L715:
 1518 C501              movw R24,R10
 151A 803C              cpi R24,192
 151C E0E0              ldi R30,0
 151E 9E07              cpc R25,R30
 1520 11F4              brne X257
 1522 0C943014          xjmp L619
 1526           X257:
 1526           X129:
 1526 0C94AF17          xjmp L361
 152A           L363:
 152A                   .dbline 747
 152A           ;      { 
 152A           ;         case 0x10://复位      
 152A           ;               Uart0TxData[0]=0xE8;
 152A 88EE              ldi R24,232
 152C 80931F00          sts _Uart0TxData,R24
 1530                   .dbline 748
 1530           ;               Uart0TxData[1]=0x40;
 1530 80E4              ldi R24,64
 1532 80932000          sts _Uart0TxData+1,R24
 1536                   .dbline 749
 1536           ;               Uart0TxData[2]=0x8D;
 1536 8DE8              ldi R24,141
 1538 80932100          sts _Uart0TxData+2,R24
 153C                   .dbline 750
 153C           ;               Uart0TxData[3]=31;
 153C 8FE1              ldi R24,31
 153E 80932200          sts _Uart0TxData+3,R24
 1542                   .dbline 751
 1542           ;               SendUart0_2(9,5);//流量板握手，超时40ms
 1542 25E0              ldi R18,5
 1544 30E0              ldi R19,0
 1546 09E0              ldi R16,9
 1548 0E944C00          xcall _SendUart0_2
 154C                   .dbline 752
 154C           ;               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 154C 8091E101          lds R24,_Uart0RxCounter
 1550 8930              cpi R24,9
 1552 99F4              brne L367
 1554           X130:
 1554 8091E201          lds R24,_Uart0RxData
 1558 8535              cpi R24,85
 155A 79F4              brne L367
 155C           X131:
 155C 8091E301          lds R24,_Uart0RxData+1
 1560 8034              cpi R24,64
 1562 59F4              brne L367
 1564           X132:
 1564 8091E401          lds R24,_Uart0RxData+2
 1568 8D38              cpi R24,141
 156A 39F4              brne L367
 156C           X133:
 156C                   .dbline 753
 156C           ;                {T_dat=0x00;}
 156C                   .dbline 753
 156C 2224              clr R2
 156E 3324              clr R3
 1570 3092CE01          sts _T_dat+1,R3
 1574 2092CD01          sts _T_dat,R2
 1578                   .dbline 753
 1578 06C0              xjmp L368
 157A           L367:
 157A                   .dbline 755
 157A           ;               else
 157A           ;                {T_dat=0xff;}
 157A                   .dbline 755
 157A 8FEF              ldi R24,255
 157C 90E0              ldi R25,0
 157E 9093CE01          sts _T_dat+1,R25
 1582 8093CD01          sts _T_dat,R24
 1586                   .dbline 755
 1586           L368:
 1586                   .dbline 756
 1586           ;               T_dat<<=8;
 1586 2090CD01          lds R2,_T_dat
 158A 3090CE01          lds R3,_T_dat+1
 158E 322C              mov R3,R2
 1590 2224              clr R2
 1592 3092CE01          sts _T_dat+1,R3
 1596 2092CD01          sts _T_dat,R2
 159A                   .dbline 757
 159A           ;               T_dat|=0x00;
 159A 3092CE01          sts _T_dat+1,R3
 159E 2092CD01          sts _T_dat,R2
 15A2                   .dbline 758
 15A2           ;               SendManchester();       
 15A2 0E943A1A          xcall _SendManchester
 15A6                   .dbline 759
 15A6           ;         break;
 15A6 0C94AF17          xjmp L361
 15AA           L371:
 15AA                   .dbline 762
 15AA           ;         
 15AA           ;         case 0x20://读版本号
 15AA           ;               Uart0TxData[0]=0xE8;
 15AA 88EE              ldi R24,232
 15AC 80931F00          sts _Uart0TxData,R24
 15B0                   .dbline 763
 15B0           ;               Uart0TxData[1]=0x40;
 15B0 80E4              ldi R24,64
 15B2 80932000          sts _Uart0TxData+1,R24
 15B6                   .dbline 764
 15B6           ;               Uart0TxData[2]=0x8D;
 15B6 8DE8              ldi R24,141
 15B8 80932100          sts _Uart0TxData+2,R24
 15BC                   .dbline 765
 15BC           ;               Uart0TxData[3]=31;
 15BC 8FE1              ldi R24,31
 15BE 80932200          sts _Uart0TxData+3,R24
 15C2                   .dbline 766
 15C2           ;               SendUart0_2(9,5);//流量板提取固件版本号 ，超时40ms
 15C2 25E0              ldi R18,5
 15C4 30E0              ldi R19,0
 15C6 09E0              ldi R16,9
 15C8 0E944C00          xcall _SendUart0_2
 15CC                   .dbline 767
 15CC           ;               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 15CC 8091E101          lds R24,_Uart0RxCounter
 15D0 8930              cpi R24,9
 15D2 A1F4              brne L375
 15D4           X134:
 15D4 8091E201          lds R24,_Uart0RxData
 15D8 8535              cpi R24,85
 15DA 81F4              brne L375
 15DC           X135:
 15DC 8091E301          lds R24,_Uart0RxData+1
 15E0 8034              cpi R24,64
 15E2 61F4              brne L375
 15E4           X136:
 15E4 8091E401          lds R24,_Uart0RxData+2
 15E8 8D38              cpi R24,141
 15EA 41F4              brne L375
 15EC           X137:
 15EC                   .dbline 768
 15EC           ;                {T_dat=Uart0RxData[3];}
 15EC                   .dbline 768
 15EC 2090E501          lds R2,_Uart0RxData+3
 15F0 3324              clr R3
 15F2 3092CE01          sts _T_dat+1,R3
 15F6 2092CD01          sts _T_dat,R2
 15FA                   .dbline 768
 15FA 06C0              xjmp L376
 15FC           L375:
 15FC                   .dbline 770
 15FC           ;               else
 15FC           ;                {T_dat=0xff;}    
 15FC                   .dbline 770
 15FC 8FEF              ldi R24,255
 15FE 90E0              ldi R25,0
 1600 9093CE01          sts _T_dat+1,R25
 1604 8093CD01          sts _T_dat,R24
 1608                   .dbline 770
 1608           L376:
 1608                   .dbline 771
 1608           ;               T_dat<<=8;
 1608 2090CD01          lds R2,_T_dat
 160C 3090CE01          lds R3,_T_dat+1
 1610 322C              mov R3,R2
 1612 2224              clr R2
 1614 3092CE01          sts _T_dat+1,R3
 1618 2092CD01          sts _T_dat,R2
 161C                   .dbline 772
 161C           ;               T_dat|=BB;
 161C C101              movw R24,R2
 161E 8263              ori R24,50
 1620 9093CE01          sts _T_dat+1,R25
 1624 8093CD01          sts _T_dat,R24
 1628                   .dbline 773
 1628           ;               SendManchester();       
 1628 0E943A1A          xcall _SendManchester
 162C                   .dbline 774
 162C           ;         break;
 162C 0C94AF17          xjmp L361
 1630           L380:
 1630                   .dbline 777
 1630           ;         
 1630           ;         case 0x30://Cable电压,VIN电压
 1630           ;          CheckMotor(30);   
 1630 0EE1              ldi R16,30
 1632 10E0              ldi R17,0
 1634 0E948A02          xcall _CheckMotor
 1638                   .dbline 778
 1638           ;          T_dat=SampleADC(5); //Cable 
 1638 05E0              ldi R16,5
 163A 0E941D02          xcall _SampleADC
 163E A02E              mov R10,R16
 1640 2A2C              mov R2,R10
 1642 3324              clr R3
 1644 3092CE01          sts _T_dat+1,R3
 1648 2092CD01          sts _T_dat,R2
 164C                   .dbline 779
 164C           ;          CheckMotor(30);
 164C 0EE1              ldi R16,30
 164E 10E0              ldi R17,0
 1650 0E948A02          xcall _CheckMotor
 1654                   .dbline 780
 1654           ;          T_dat<<=8;
 1654 2090CD01          lds R2,_T_dat
 1658 3090CE01          lds R3,_T_dat+1
 165C 322C              mov R3,R2
 165E 2224              clr R2
 1660 3092CE01          sts _T_dat+1,R3
 1664 2092CD01          sts _T_dat,R2
 1668                   .dbline 781
 1668           ;          T_dat|=SampleADC(4); //VIN  
 1668 04E0              ldi R16,4
 166A 0E941D02          xcall _SampleADC
 166E A02E              mov R10,R16
 1670 2A2C              mov R2,R10
 1672 3324              clr R3
 1674 4090CD01          lds R4,_T_dat
 1678 5090CE01          lds R5,_T_dat+1
 167C 4228              or R4,R2
 167E 5328              or R5,R3
 1680 5092CE01          sts _T_dat+1,R5
 1684 4092CD01          sts _T_dat,R4
 1688                   .dbline 782
 1688           ;          CheckMotor(30);
 1688 0EE1              ldi R16,30
 168A 10E0              ldi R17,0
 168C 0E948A02          xcall _CheckMotor
 1690                   .dbline 783
 1690           ;          SendManchester();   
 1690 0E943A1A          xcall _SendManchester
 1694                   .dbline 784
 1694           ;         break;
 1694 0C94AF17          xjmp L361
 1698           L381:
 1698                   .dbline 795
 1698           ;         
 1698           ;         case 0x40: //采集板压力和温度
 1698           ;         /*
 1698           ;               CheckMotor(40); //40ms定时              
 1698           ;               T_dat=1234;//没有流量板时暂用一固定数值表示压力
 1698           ;               SendManchester();
 1698           ;         CheckMotor(40); //40ms定时             
 1698           ;               T_dat=5678;//没有流量板时暂用一固定数值表示温度
 1698           ;               SendManchester();
 1698           ;               */
 1698           ;               Uart0TxData[0]=0xE8;
 1698 88EE              ldi R24,232
 169A 80931F00          sts _Uart0TxData,R24
 169E                   .dbline 796
 169E           ;               Uart0TxData[1]=0x40;
 169E 80E4              ldi R24,64
 16A0 80932000          sts _Uart0TxData+1,R24
 16A4                   .dbline 797
 16A4           ;               Uart0TxData[2]=0x89;
 16A4 89E8              ldi R24,137
 16A6 80932100          sts _Uart0TxData+2,R24
 16AA                   .dbline 798
 16AA           ;               Uart0TxData[3]=9;
 16AA 89E0              ldi R24,9
 16AC 80932200          sts _Uart0TxData+3,R24
 16B0                   .dbline 799
 16B0           ;               SendUart0_2(9,50);//流量板直读检测，超时400ms
 16B0 22E3              ldi R18,50
 16B2 30E0              ldi R19,0
 16B4 09E0              ldi R16,9
 16B6 0E944C00          xcall _SendUart0_2
 16BA                   .dbline 801
 16BA           ;               
 16BA           ;                T_dat=Uart0RxData[1];
 16BA 2090E301          lds R2,_Uart0RxData+1
 16BE 3324              clr R3
 16C0 3092CE01          sts _T_dat+1,R3
 16C4 2092CD01          sts _T_dat,R2
 16C8                   .dbline 802
 16C8           ;                T_dat<<=8;
 16C8 2090CD01          lds R2,_T_dat
 16CC 3090CE01          lds R3,_T_dat+1
 16D0 322C              mov R3,R2
 16D2 2224              clr R2
 16D4 3092CE01          sts _T_dat+1,R3
 16D8 2092CD01          sts _T_dat,R2
 16DC                   .dbline 803
 16DC           ;                T_dat|=Uart0RxData[0];
 16DC 2090E201          lds R2,_Uart0RxData
 16E0 3324              clr R3
 16E2 4090CD01          lds R4,_T_dat
 16E6 5090CE01          lds R5,_T_dat+1
 16EA 4228              or R4,R2
 16EC 5328              or R5,R3
 16EE 5092CE01          sts _T_dat+1,R5
 16F2 4092CD01          sts _T_dat,R4
 16F6                   .dbline 804
 16F6           ;                SendManchester();//压力
 16F6 0E943A1A          xcall _SendManchester
 16FA                   .dbline 806
 16FA           ;                
 16FA           ;                CheckMotor(30);        
 16FA 0EE1              ldi R16,30
 16FC 10E0              ldi R17,0
 16FE 0E948A02          xcall _CheckMotor
 1702                   .dbline 807
 1702           ;                T_dat=Uart0RxData[3];
 1702 2090E501          lds R2,_Uart0RxData+3
 1706 3324              clr R3
 1708 3092CE01          sts _T_dat+1,R3
 170C 2092CD01          sts _T_dat,R2
 1710                   .dbline 808
 1710           ;                T_dat<<=8;
 1710 2090CD01          lds R2,_T_dat
 1714 3090CE01          lds R3,_T_dat+1
 1718 322C              mov R3,R2
 171A 2224              clr R2
 171C 3092CE01          sts _T_dat+1,R3
 1720 2092CD01          sts _T_dat,R2
 1724                   .dbline 809
 1724           ;                T_dat|=Uart0RxData[2];
 1724 2090E401          lds R2,_Uart0RxData+2
 1728 3324              clr R3
 172A 4090CD01          lds R4,_T_dat
 172E 5090CE01          lds R5,_T_dat+1
 1732 4228              or R4,R2
 1734 5328              or R5,R3
 1736 5092CE01          sts _T_dat+1,R5
 173A 4092CD01          sts _T_dat,R4
 173E                   .dbline 810
 173E           ;                SendManchester();//温度
 173E 0E943A1A          xcall _SendManchester
 1742                   .dbline 811
 1742           ;       break;
 1742 0C94AF17          xjmp L361
 1746           L388:
 1746                   .dbline 831
 1746           ;       
 1746           ;       case 0x50://流量采样                                                     
 1746           ;                 /*    
 1746           ;                 CheckMotor(40); //40ms定时            
 1746           ;                 myFIB.f=123.456; 
 1746           ;                 T_dat=myFIB.i[1];
 1746           ;                 SendManchester();
 1746           ;                 CheckMotor(40);
 1746           ;                 T_dat=myFIB.i[0];
 1746           ;                 SendManchester();
 1746           ;                 CheckMotor(40);
 1746           ;                 myFIB.f=789.012; 
 1746           ;                 T_dat=myFIB.i[1];
 1746           ;                 SendManchester();
 1746           ;                 CheckMotor(40);
 1746           ;                 T_dat=myFIB.i[0];
 1746           ;                 SendManchester();
 1746           ;                 CheckMotor(40);
 1746           ;                 */
 1746           ;                 Uart0TxData[0]=0xE8;
 1746 88EE              ldi R24,232
 1748 80931F00          sts _Uart0TxData,R24
 174C                   .dbline 832
 174C           ;               Uart0TxData[1]=0x40;
 174C 80E4              ldi R24,64
 174E 80932000          sts _Uart0TxData+1,R24
 1752                   .dbline 833
 1752           ;               Uart0TxData[2]=0x89;
 1752 89E8              ldi R24,137
 1754 80932100          sts _Uart0TxData+2,R24
 1758                   .dbline 834
 1758           ;               Uart0TxData[3]=9;
 1758 89E0              ldi R24,9
 175A 80932200          sts _Uart0TxData+3,R24
 175E                   .dbline 835
 175E           ;               SendUart0_2(9,50);//流量板直读检测，超时400ms
 175E 22E3              ldi R18,50
 1760 30E0              ldi R19,0
 1762 09E0              ldi R16,9
 1764 0E944C00          xcall _SendUart0_2
 1768                   .dbline 837
 1768           ;               
 1768           ;                 lfib=Uart0RxData[5];
 1768 2090E701          lds R2,_Uart0RxData+5
 176C 3324              clr R3
 176E 4424              clr R4
 1770 5524              clr R5
 1772 30921300          sts _lfib+1,R3
 1776 20921200          sts _lfib,R2
 177A 50921500          sts _lfib+2+1,R5
 177E 40921400          sts _lfib+2,R4
 1782                   .dbline 838
 1782           ;                 lfib<<=8;
 1782 88E0              ldi R24,8
 1784 90E0              ldi R25,0
 1786 20911400          lds R18,_lfib+2
 178A 30911500          lds R19,_lfib+2+1
 178E 00911200          lds R16,_lfib
 1792 10911300          lds R17,_lfib+1
 1796 8A93              st -y,R24
 1798 0E940000          xcall lsl32
 179C 10931300          sts _lfib+1,R17
 17A0 00931200          sts _lfib,R16
 17A4 30931500          sts _lfib+2+1,R19
 17A8 20931400          sts _lfib+2,R18
 17AC                   .dbline 839
 17AC           ;                 lfib|=Uart0RxData[4];
 17AC 2090E601          lds R2,_Uart0RxData+4
 17B0 3324              clr R3
 17B2 4424              clr R4
 17B4 5524              clr R5
 17B6 3801              movw R6,R16
 17B8 4901              movw R8,R18
 17BA 6228              or R6,R2
 17BC 7328              or R7,R3
 17BE 8428              or R8,R4
 17C0 9528              or R9,R5
 17C2 70921300          sts _lfib+1,R7
 17C6 60921200          sts _lfib,R6
 17CA 90921500          sts _lfib+2+1,R9
 17CE 80921400          sts _lfib+2,R8
 17D2                   .dbline 840
 17D2           ;                 lfib&=0x0000ffff;
 17D2 4FEF              ldi R20,255
 17D4 5FEF              ldi R21,255
 17D6 60E0              ldi R22,0
 17D8 70E0              ldi R23,0
 17DA 1301              movw R2,R6
 17DC 2401              movw R4,R8
 17DE 2422              and R2,R20
 17E0 3522              and R3,R21
 17E2 4622              and R4,R22
 17E4 5722              and R5,R23
 17E6 30921300          sts _lfib+1,R3
 17EA 20921200          sts _lfib,R2
 17EE 50921500          sts _lfib+2+1,R5
 17F2 40921400          sts _lfib+2,R4
 17F6                   .dbline 841
 17F6           ;                 myFIB.f=(unsigned long)lfib; 
 17F6 8101              movw R16,R2
 17F8 9201              movw R18,R4
 17FA 0E940000          xcall ulong2fp
 17FE 10933602          sts _myFIB+1,R17
 1802 00933502          sts _myFIB,R16
 1806 30933802          sts _myFIB+2+1,R19
 180A 20933702          sts _myFIB+2,R18
 180E                   .dbline 843
 180E           ;                 
 180E           ;                 T_dat=myFIB.i[1];
 180E 20903702          lds R2,_myFIB+2
 1812 30903802          lds R3,_myFIB+2+1
 1816 3092CE01          sts _T_dat+1,R3
 181A 2092CD01          sts _T_dat,R2
 181E                   .dbline 844
 181E           ;                 SendManchester();//流量-时间
 181E 0E943A1A          xcall _SendManchester
 1822                   .dbline 846
 1822           ;                 
 1822           ;                 CheckMotor(30);       
 1822 0EE1              ldi R16,30
 1824 10E0              ldi R17,0
 1826 0E948A02          xcall _CheckMotor
 182A                   .dbline 847
 182A           ;                 T_dat=myFIB.i[0];
 182A 20903502          lds R2,_myFIB
 182E 30903602          lds R3,_myFIB+1
 1832 3092CE01          sts _T_dat+1,R3
 1836 2092CD01          sts _T_dat,R2
 183A                   .dbline 848
 183A           ;                 SendManchester();//流量-时间
 183A 0E943A1A          xcall _SendManchester
 183E                   .dbline 850
 183E           ;         
 183E           ;                 CheckMotor(30);       
 183E 0EE1              ldi R16,30
 1840 10E0              ldi R17,0
 1842 0E948A02          xcall _CheckMotor
 1846                   .dbline 852
 1846           ;                 
 1846           ;                 lfib=Uart0RxData[7];
 1846 2090E901          lds R2,_Uart0RxData+7
 184A 3324              clr R3
 184C 4424              clr R4
 184E 5524              clr R5
 1850 30921300          sts _lfib+1,R3
 1854 20921200          sts _lfib,R2
 1858 50921500          sts _lfib+2+1,R5
 185C 40921400          sts _lfib+2,R4
 1860                   .dbline 853
 1860           ;                 lfib<<=8;
 1860 88E0              ldi R24,8
 1862 90E0              ldi R25,0
 1864 20911400          lds R18,_lfib+2
 1868 30911500          lds R19,_lfib+2+1
 186C 00911200          lds R16,_lfib
 1870 10911300          lds R17,_lfib+1
 1874 8A93              st -y,R24
 1876 0E940000          xcall lsl32
 187A 10931300          sts _lfib+1,R17
 187E 00931200          sts _lfib,R16
 1882 30931500          sts _lfib+2+1,R19
 1886 20931400          sts _lfib+2,R18
 188A                   .dbline 854
 188A           ;                 lfib|=Uart0RxData[6];
 188A 2090E801          lds R2,_Uart0RxData+6
 188E 3324              clr R3
 1890 4424              clr R4
 1892 5524              clr R5
 1894 3801              movw R6,R16
 1896 4901              movw R8,R18
 1898 6228              or R6,R2
 189A 7328              or R7,R3
 189C 8428              or R8,R4
 189E 9528              or R9,R5
 18A0 70921300          sts _lfib+1,R7
 18A4 60921200          sts _lfib,R6
 18A8 90921500          sts _lfib+2+1,R9
 18AC 80921400          sts _lfib+2,R8
 18B0                   .dbline 855
 18B0           ;                 lfib&=0x0000ffff;
 18B0 4FEF              ldi R20,255
 18B2 5FEF              ldi R21,255
 18B4 60E0              ldi R22,0
 18B6 70E0              ldi R23,0
 18B8 1301              movw R2,R6
 18BA 2401              movw R4,R8
 18BC 2422              and R2,R20
 18BE 3522              and R3,R21
 18C0 4622              and R4,R22
 18C2 5722              and R5,R23
 18C4 30921300          sts _lfib+1,R3
 18C8 20921200          sts _lfib,R2
 18CC 50921500          sts _lfib+2+1,R5
 18D0 40921400          sts _lfib+2,R4
 18D4                   .dbline 856
 18D4           ;                 myFIB.f=(unsigned long)lfib; 
 18D4 8101              movw R16,R2
 18D6 9201              movw R18,R4
 18D8 0E940000          xcall ulong2fp
 18DC 10933602          sts _myFIB+1,R17
 18E0 00933502          sts _myFIB,R16
 18E4 30933802          sts _myFIB+2+1,R19
 18E8 20933702          sts _myFIB+2,R18
 18EC                   .dbline 858
 18EC           ;                 
 18EC           ;                 T_dat=myFIB.i[1];
 18EC 20903702          lds R2,_myFIB+2
 18F0 30903802          lds R3,_myFIB+2+1
 18F4 3092CE01          sts _T_dat+1,R3
 18F8 2092CD01          sts _T_dat,R2
 18FC                   .dbline 859
 18FC           ;                 SendManchester();//流量-相位1
 18FC 0E943A1A          xcall _SendManchester
 1900                   .dbline 862
 1900           ; 
 1900           ; 
 1900           ;                 CheckMotor(30);       
 1900 0EE1              ldi R16,30
 1902 10E0              ldi R17,0
 1904 0E948A02          xcall _CheckMotor
 1908                   .dbline 863
 1908           ;                 T_dat=myFIB.i[0];
 1908 20903502          lds R2,_myFIB
 190C 30903602          lds R3,_myFIB+1
 1910 3092CE01          sts _T_dat+1,R3
 1914 2092CD01          sts _T_dat,R2
 1918                   .dbline 864
 1918           ;                 SendManchester();//流量-相位2
 1918 0E943A1A          xcall _SendManchester
 191C                   .dbline 865
 191C           ;       break;
 191C 0C94AF17          xjmp L361
 1920           L398:
 1920                   .dbline 868
 1920           ;  
 1920           ;   case 0x60://收放电机   
 1920           ;     if( !(((R_dat)==0x61)  || ((R_dat)==0x62) ) )//既不是正转，也不是反转，则立即返回且不响应上位机
 1920 A090CB01          lds R10,_R_dat
 1924 B090CC01          lds R11,_R_dat+1
 1928 C501              movw R24,R10
 192A 8136              cpi R24,97
 192C E0E0              ldi R30,0
 192E 9E07              cpc R25,R30
 1930 31F0              breq L399
 1932           X138:
 1932 8236              cpi R24,98
 1934 E0E0              ldi R30,0
 1936 9E07              cpc R25,R30
 1938 11F0              breq L399
 193A           X139:
 193A                   .dbline 869
 193A           ;        break;
 193A 0C94AF17          xjmp L361
 193E           L399:
 193E                   .dbline 871
 193E           ;       
 193E           ;     if(PWM2_PIN==1)//调节电机正在运行
 193E 80B1              in R24,0x0
 1940 8470              andi R24,4
 1942 8695              lsr R24
 1944 8695              lsr R24
 1946 8130              cpi R24,1
 1948 71F4              brne L401
 194A           X140:
 194A                   .dbline 872
 194A           ;        {
 194A                   .dbline 873
 194A           ;              Motor1Status.s.StartResult=3;//另一电机正在运行
 194A 80913302          lds R24,_Motor1Status
 194E 90913402          lds R25,_Motor1Status+1
 1952 806C              ori R24,192
 1954 90933402          sts _Motor1Status+1,R25
 1958 80933302          sts _Motor1Status,R24
 195C                   .dbline 874
 195C           ;                  CheckMotor(100);//很快响应上位机
 195C 04E6              ldi R16,100
 195E 10E0              ldi R17,0
 1960 0E948A02          xcall _CheckMotor
 1964                   .dbline 875
 1964           ;        }
 1964 A2C0              xjmp L402
 1966           L401:
 1966                   .dbline 876
 1966           ;     else if(PWM1_PIN==1)//收放电机正在运行
 1966 89B3              in R24,0x19
 1968 8270              andi R24,2
 196A 8695              lsr R24
 196C 8130              cpi R24,1
 196E 09F0              breq X258
 1970 50C0              xjmp L403
 1972           X258:
 1972           X141:
 1972                   .dbline 877
 1972           ;        { 
 1972                   .dbline 878
 1972           ;          if( ((DIR1_PIN==0) && (R_dat==0x61)) || ((DIR1_PIN==1) && (R_dat==0x62)) )
 1972 89B3              in R24,0x19
 1974 8470              andi R24,4
 1976 8695              lsr R24
 1978 8695              lsr R24
 197A 41F4              brne L408
 197C           X142:
 197C 8091CB01          lds R24,_R_dat
 1980 9091CC01          lds R25,_R_dat+1
 1984 8136              cpi R24,97
 1986 E0E0              ldi R30,0
 1988 9E07              cpc R25,R30
 198A 71F0              breq L407
 198C           X143:
 198C           L408:
 198C 89B3              in R24,0x19
 198E 8470              andi R24,4
 1990 8695              lsr R24
 1992 8695              lsr R24
 1994 8130              cpi R24,1
 1996 99F4              brne L405
 1998           X144:
 1998 8091CB01          lds R24,_R_dat
 199C 9091CC01          lds R25,_R_dat+1
 19A0 8236              cpi R24,98
 19A2 E0E0              ldi R30,0
 19A4 9E07              cpc R25,R30
 19A6 59F4              brne L405
 19A8           X145:
 19A8           L407:
 19A8                   .dbline 879
 19A8           ;           { 
 19A8                   .dbline 880
 19A8           ;                  Motor1Status.s.StartResult=1;//本电机正在同向运行
 19A8 80913302          lds R24,_Motor1Status
 19AC 90913402          lds R25,_Motor1Status+1
 19B0 8F73              andi R24,63
 19B2 8064              ori R24,64
 19B4 90933402          sts _Motor1Status+1,R25
 19B8 80933302          sts _Motor1Status,R24
 19BC                   .dbline 881
 19BC           ;               }
 19BC 25C0              xjmp L406
 19BE           L405:
 19BE                   .dbline 882
 19BE           ;               else if( ((DIR1_PIN==0) && (R_dat==0x62)) || ((DIR1_PIN==1) && (R_dat==0x61)) ) 
 19BE 89B3              in R24,0x19
 19C0 8470              andi R24,4
 19C2 8695              lsr R24
 19C4 8695              lsr R24
 19C6 41F4              brne L412
 19C8           X146:
 19C8 8091CB01          lds R24,_R_dat
 19CC 9091CC01          lds R25,_R_dat+1
 19D0 8236              cpi R24,98
 19D2 E0E0              ldi R30,0
 19D4 9E07              cpc R25,R30
 19D6 71F0              breq L411
 19D8           X147:
 19D8           L412:
 19D8 89B3              in R24,0x19
 19DA 8470              andi R24,4
 19DC 8695              lsr R24
 19DE 8695              lsr R24
 19E0 8130              cpi R24,1
 19E2 91F4              brne L409
 19E4           X148:
 19E4 8091CB01          lds R24,_R_dat
 19E8 9091CC01          lds R25,_R_dat+1
 19EC 8136              cpi R24,97
 19EE E0E0              ldi R30,0
 19F0 9E07              cpc R25,R30
 19F2 51F4              brne L409
 19F4           X149:
 19F4           L411:
 19F4                   .dbline 883
 19F4           ;               {
 19F4                   .dbline 884
 19F4           ;                   Motor1Status.s.StartResult=2;//本电机正在反向运行
 19F4 80913302          lds R24,_Motor1Status
 19F8 90913402          lds R25,_Motor1Status+1
 19FC 8F73              andi R24,63
 19FE 8068              ori R24,128
 1A00 90933402          sts _Motor1Status+1,R25
 1A04 80933302          sts _Motor1Status,R24
 1A08                   .dbline 885
 1A08           ;               }
 1A08           L409:
 1A08           L406:
 1A08                   .dbline 886
 1A08           ;               CheckMotor(100); //很快响应上位机
 1A08 04E6              ldi R16,100
 1A0A 10E0              ldi R17,0
 1A0C 0E948A02          xcall _CheckMotor
 1A10                   .dbline 887
 1A10           ;        }
 1A10 4CC0              xjmp L404
 1A12           L403:
 1A12                   .dbline 889
 1A12           ;       else //二个电机都是停止状态，按命令要求启动电机，约1.5秒后反馈上位机
 1A12           ;        {  
 1A12                   .dbline 891
 1A12           ;           //全部电机状态置初值，上一次停止原因全部清除
 1A12           ;               Motor1Status.s.BrokenStop=0;
 1A12 80913302          lds R24,_Motor1Status
 1A16 90913402          lds R25,_Motor1Status+1
 1A1A 8B7F              andi R24,251
 1A1C 90933402          sts _Motor1Status+1,R25
 1A20 80933302          sts _Motor1Status,R24
 1A24                   .dbline 892
 1A24           ;           Motor1Status.s.CommandStop=0;
 1A24 877F              andi R24,247
 1A26 90933402          sts _Motor1Status+1,R25
 1A2A 80933302          sts _Motor1Status,R24
 1A2E                   .dbline 893
 1A2E           ;           Motor1Status.s.OverCurrent=0;
 1A2E 8F7E              andi R24,239
 1A30 90933402          sts _Motor1Status+1,R25
 1A34 80933302          sts _Motor1Status,R24
 1A38                   .dbline 894
 1A38           ;           Motor1Status.s.UnderVoltage=0;
 1A38 8F7D              andi R24,223
 1A3A 90933402          sts _Motor1Status+1,R25
 1A3E 80933302          sts _Motor1Status,R24
 1A42                   .dbline 895
 1A42           ;               Motor1Status.s.StartResult=0;//正常启动
 1A42 8F73              andi R24,63
 1A44 90933402          sts _Motor1Status+1,R25
 1A48 80933302          sts _Motor1Status,R24
 1A4C                   .dbline 897
 1A4C           ;               
 1A4C           ;               VM_H//开电机电源
 1A4C                   .dbline 897
 1A4C BF9A              sbi 0x17,7
 1A4E                   .dbline 897
 1A4E C79A              sbi 0x18,7
 1A50                   .dbline 897
 1A50                   .dbline 899
 1A50           ;               
 1A50           ;               CheckMotor(500);//开电机电源后需等待半秒让大功率二极管电压稳定
 1A50 04EF              ldi R16,500
 1A52 11E0              ldi R17,1
 1A54 0E948A02          xcall _CheckMotor
 1A58                   .dbline 901
 1A58           ;                
 1A58           ;           if((R_dat)==0x61)//张开命令
 1A58 8091CB01          lds R24,_R_dat
 1A5C 9091CC01          lds R25,_R_dat+1
 1A60 8136              cpi R24,97
 1A62 E0E0              ldi R30,0
 1A64 9E07              cpc R25,R30
 1A66 19F4              brne L413
 1A68           X150:
 1A68                   .dbline 902
 1A68           ;                 { 
 1A68                   .dbline 903
 1A68           ;                  DIR1_H       //张开
 1A68                   .dbline 903
 1A68 D29A              sbi 0x1a,2
 1A6A                   .dbline 903
 1A6A DA9A              sbi 0x1b,2
 1A6C                   .dbline 903
 1A6C                   .dbline 904
 1A6C           ;                 }
 1A6C 04C0              xjmp L414
 1A6E           L413:
 1A6E                   .dbline 906
 1A6E           ;               else          //收拢命令
 1A6E           ;                { 
 1A6E                   .dbline 907
 1A6E           ;                  DIR1_L      //收拢
 1A6E                   .dbline 907
 1A6E D29A              sbi 0x1a,2
 1A70                   .dbline 907
 1A70 8BB3              in R24,0x1b
 1A72 8B7F              andi R24,251
 1A74 8BBB              out 0x1b,R24
 1A76                   .dbline 907
 1A76                   .dbline 908
 1A76           ;                }
 1A76           L414:
 1A76                   .dbline 914
 1A76           ;                       
 1A76           ;               //CompCounter=0; //电流监测计数器清0
 1A76           ;               //EIFR|=0x01;//清INT0中断标志
 1A76           ;               //EIMSK&=0xfe;//关INT0中断，电机启动前期不用监测过流情况
 1A76           ;               
 1A76           ;               TCCR1B = 0x00; //stop
 1A76 2224              clr R2
 1A78 2EBC              out 0x2e,R2
 1A7A                   .dbline 915
 1A7A           ;       TCNT1 = 61629;   //定时500ms
 1A7A 8DEB              ldi R24,61629
 1A7C 90EF              ldi R25,240
 1A7E 9DBD              out 0x2d,R25
 1A80 8CBD              out 0x2c,R24
 1A82                   .dbline 916
 1A82           ;               TIFR|=0x04; //清定时器1中断标志
 1A82 86B7              in R24,0x36
 1A84 8460              ori R24,4
 1A86 86BF              out 0x36,R24
 1A88                   .dbline 917
 1A88           ;               TCCR1B = 0x05; //1024分频
 1A88 85E0              ldi R24,5
 1A8A 8EBD              out 0x2e,R24
 1A8C                   .dbline 918
 1A8C           ;               TIFR|=0x04; //清定时器1中断标志
 1A8C 86B7              in R24,0x36
 1A8E 8460              ori R24,4
 1A90 86BF              out 0x36,R24
 1A92                   .dbline 920
 1A92           ;               
 1A92           ;               Pwm_startup(1);//PWM启动，耗时约200ms,电机启动前期不进行电流检查，但有欠压监测          
 1A92 01E0              ldi R16,1
 1A94 0E94F200          xcall _Pwm_startup
 1A98           L415:
 1A98                   .dbline 922
 1A98           ;                         
 1A98           ;               while((TIFR&0x04)==0x00); //等待定时到，期间可能有欠压中断发生
 1A98           L416:
 1A98                   .dbline 922
 1A98 26B6              in R2,0x36
 1A9A 22FE              sbrs R2,2
 1A9C FDCF              rjmp L415
 1A9E           X151:
 1A9E                   .dbline 923
 1A9E           ;               TCCR1B = 0x00; //stop
 1A9E 2224              clr R2
 1AA0 2EBC              out 0x2e,R2
 1AA2                   .dbline 928
 1AA2           ;               
 1AA2           ;               //EIFR|=0x01;//清INT0中断标志
 1AA2           ;               //EIMSK|=0x01;//开INT0中断，电机启动500ms后即开始监测过流情况
 1AA2           ; 
 1AA2           ;               CheckMotor(500);//延时保证总线电压稳定          
 1AA2 04EF              ldi R16,500
 1AA4 11E0              ldi R17,1
 1AA6 0E948A02          xcall _CheckMotor
 1AAA                   .dbline 929
 1AAA           ;      }
 1AAA           L404:
 1AAA           L402:
 1AAA                   .dbline 930
 1AAA           ;         T_dat=Motor1Status.i;
 1AAA 20903302          lds R2,_Motor1Status
 1AAE 30903402          lds R3,_Motor1Status+1
 1AB2 3092CE01          sts _T_dat+1,R3
 1AB6 2092CD01          sts _T_dat,R2
 1ABA                   .dbline 931
 1ABA           ;         SendManchester();      
 1ABA 0E943A1A          xcall _SendManchester
 1ABE                   .dbline 932
 1ABE           ;       break;
 1ABE 0C94AF17          xjmp L361
 1AC2           L418:
 1AC2                   .dbline 935
 1AC2           ;       
 1AC2           ;       case 0x70://调节电机   
 1AC2           ;     if( !(((R_dat)==0x71)  || ((R_dat)==0x72) ) )//既不是调大，也不是调小，则立即返回且不响应上位机
 1AC2 A090CB01          lds R10,_R_dat
 1AC6 B090CC01          lds R11,_R_dat+1
 1ACA C501              movw R24,R10
 1ACC 8137              cpi R24,113
 1ACE E0E0              ldi R30,0
 1AD0 9E07              cpc R25,R30
 1AD2 31F0              breq L419
 1AD4           X152:
 1AD4 8237              cpi R24,114
 1AD6 E0E0              ldi R30,0
 1AD8 9E07              cpc R25,R30
 1ADA 11F0              breq L419
 1ADC           X153:
 1ADC                   .dbline 936
 1ADC           ;        break;
 1ADC 0C94AF17          xjmp L361
 1AE0           L419:
 1AE0                   .dbline 938
 1AE0           ; 
 1AE0           ;     if(PWM1_PIN==1)//收放电机正在运行
 1AE0 89B3              in R24,0x19
 1AE2 8270              andi R24,2
 1AE4 8695              lsr R24
 1AE6 8130              cpi R24,1
 1AE8 71F4              brne L421
 1AEA           X154:
 1AEA                   .dbline 939
 1AEA           ;        {
 1AEA                   .dbline 940
 1AEA           ;             Motor2Status.s.StartResult=3;//另一电机正在运行
 1AEA 80913102          lds R24,_Motor2Status
 1AEE 90913202          lds R25,_Motor2Status+1
 1AF2 806C              ori R24,192
 1AF4 90933202          sts _Motor2Status+1,R25
 1AF8 80933102          sts _Motor2Status,R24
 1AFC                   .dbline 941
 1AFC           ;                 CheckMotor(100);//很快响应上位机
 1AFC 04E6              ldi R16,100
 1AFE 10E0              ldi R17,0
 1B00 0E948A02          xcall _CheckMotor
 1B04                   .dbline 942
 1B04           ;        }
 1B04 A7C0              xjmp L422
 1B06           L421:
 1B06                   .dbline 943
 1B06           ;     else if(PWM2_PIN==1)//调节电机正在运行
 1B06 80B1              in R24,0x0
 1B08 8470              andi R24,4
 1B0A 8695              lsr R24
 1B0C 8695              lsr R24
 1B0E 8130              cpi R24,1
 1B10 09F0              breq X259
 1B12 46C0              xjmp L423
 1B14           X259:
 1B14           X155:
 1B14                   .dbline 944
 1B14           ;        { 
 1B14                   .dbline 945
 1B14           ;          if( ((DIR2_PIN==0) && (R_dat==0x71)) || ((DIR2_PIN==1) && (R_dat==0x72)) )
 1B14 0099              sbic 0x0,0
 1B16 08C0              rjmp L428
 1B18           X156:
 1B18 8091CB01          lds R24,_R_dat
 1B1C 9091CC01          lds R25,_R_dat+1
 1B20 8137              cpi R24,113
 1B22 E0E0              ldi R30,0
 1B24 9E07              cpc R25,R30
 1B26 61F0              breq L427
 1B28           X157:
 1B28           L428:
 1B28 80B1              in R24,0x0
 1B2A 8170              andi R24,1
 1B2C 8130              cpi R24,1
 1B2E 99F4              brne L425
 1B30           X158:
 1B30 8091CB01          lds R24,_R_dat
 1B34 9091CC01          lds R25,_R_dat+1
 1B38 8237              cpi R24,114
 1B3A E0E0              ldi R30,0
 1B3C 9E07              cpc R25,R30
 1B3E 59F4              brne L425
 1B40           X159:
 1B40           L427:
 1B40                   .dbline 946
 1B40           ;           { 
 1B40                   .dbline 947
 1B40           ;                  Motor2Status.s.StartResult=1;//本电机正在同向运行
 1B40 80913102          lds R24,_Motor2Status
 1B44 90913202          lds R25,_Motor2Status+1
 1B48 8F73              andi R24,63
 1B4A 8064              ori R24,64
 1B4C 90933202          sts _Motor2Status+1,R25
 1B50 80933102          sts _Motor2Status,R24
 1B54                   .dbline 948
 1B54           ;               }
 1B54 20C0              xjmp L426
 1B56           L425:
 1B56                   .dbline 949
 1B56           ;               else if( ((DIR2_PIN==0) && (R_dat==0x72)) || ((DIR2_PIN==1) && (R_dat==0x71)) ) 
 1B56 0099              sbic 0x0,0
 1B58 08C0              rjmp L432
 1B5A           X160:
 1B5A 8091CB01          lds R24,_R_dat
 1B5E 9091CC01          lds R25,_R_dat+1
 1B62 8237              cpi R24,114
 1B64 E0E0              ldi R30,0
 1B66 9E07              cpc R25,R30
 1B68 61F0              breq L431
 1B6A           X161:
 1B6A           L432:
 1B6A 80B1              in R24,0x0
 1B6C 8170              andi R24,1
 1B6E 8130              cpi R24,1
 1B70 91F4              brne L429
 1B72           X162:
 1B72 8091CB01          lds R24,_R_dat
 1B76 9091CC01          lds R25,_R_dat+1
 1B7A 8137              cpi R24,113
 1B7C E0E0              ldi R30,0
 1B7E 9E07              cpc R25,R30
 1B80 51F4              brne L429
 1B82           X163:
 1B82           L431:
 1B82                   .dbline 950
 1B82           ;               {
 1B82                   .dbline 951
 1B82           ;                  Motor2Status.s.StartResult=2;//本电机正在反向运行
 1B82 80913102          lds R24,_Motor2Status
 1B86 90913202          lds R25,_Motor2Status+1
 1B8A 8F73              andi R24,63
 1B8C 8068              ori R24,128
 1B8E 90933202          sts _Motor2Status+1,R25
 1B92 80933102          sts _Motor2Status,R24
 1B96                   .dbline 952
 1B96           ;               }        
 1B96           L429:
 1B96           L426:
 1B96                   .dbline 953
 1B96           ;               CheckMotor(100); //很快响应上位机
 1B96 04E6              ldi R16,100
 1B98 10E0              ldi R17,0
 1B9A 0E948A02          xcall _CheckMotor
 1B9E                   .dbline 954
 1B9E           ;        }
 1B9E 5AC0              xjmp L424
 1BA0           L423:
 1BA0                   .dbline 956
 1BA0           ;       else //二个电机都是停止状态，按命令要求启动电机，约1.5秒后反馈上位机
 1BA0           ;        {  
 1BA0                   .dbline 958
 1BA0           ;           //全部电机状态置初值，上一次停止原因全部清除
 1BA0           ;               Motor2Status.s.BrokenStop=0;
 1BA0 80913102          lds R24,_Motor2Status
 1BA4 90913202          lds R25,_Motor2Status+1
 1BA8 8B7F              andi R24,251
 1BAA 90933202          sts _Motor2Status+1,R25
 1BAE 80933102          sts _Motor2Status,R24
 1BB2                   .dbline 959
 1BB2           ;           Motor2Status.s.CommandStop=0;
 1BB2 877F              andi R24,247
 1BB4 90933202          sts _Motor2Status+1,R25
 1BB8 80933102          sts _Motor2Status,R24
 1BBC                   .dbline 960
 1BBC           ;           Motor2Status.s.OverCurrent=0;
 1BBC 8F7E              andi R24,239
 1BBE 90933202          sts _Motor2Status+1,R25
 1BC2 80933102          sts _Motor2Status,R24
 1BC6                   .dbline 961
 1BC6           ;           Motor2Status.s.UnderVoltage=0;
 1BC6 8F7D              andi R24,223
 1BC8 90933202          sts _Motor2Status+1,R25
 1BCC 80933102          sts _Motor2Status,R24
 1BD0                   .dbline 962
 1BD0           ;               Motor2Status.s.StartResult=0;//正常启动
 1BD0 8F73              andi R24,63
 1BD2 90933202          sts _Motor2Status+1,R25
 1BD6 80933102          sts _Motor2Status,R24
 1BDA                   .dbline 964
 1BDA           ;               
 1BDA           ;               VM_H//开电机电源
 1BDA                   .dbline 964
 1BDA BF9A              sbi 0x17,7
 1BDC                   .dbline 964
 1BDC C79A              sbi 0x18,7
 1BDE                   .dbline 964
 1BDE                   .dbline 965
 1BDE           ;               CheckMotor(500);//开电机电源后需等待半秒让大功率二极管电压稳定
 1BDE 04EF              ldi R16,500
 1BE0 11E0              ldi R17,1
 1BE2 0E948A02          xcall _CheckMotor
 1BE6                   .dbline 967
 1BE6           ;               
 1BE6           ;           if((R_dat)==0x71)//张开命令
 1BE6 8091CB01          lds R24,_R_dat
 1BEA 9091CC01          lds R25,_R_dat+1
 1BEE 8137              cpi R24,113
 1BF0 E0E0              ldi R30,0
 1BF2 9E07              cpc R25,R30
 1BF4 59F4              brne L433
 1BF6           X164:
 1BF6                   .dbline 968
 1BF6           ;                 { 
 1BF6                   .dbline 969
 1BF6           ;                  DIR2_H       //张开
 1BF6                   .dbline 969
 1BF6 80916100          lds R24,97
 1BFA 8160              ori R24,1
 1BFC 80936100          sts 97,R24
 1C00                   .dbline 969
 1C00 80916200          lds R24,98
 1C04 8160              ori R24,1
 1C06 80936200          sts 98,R24
 1C0A                   .dbline 969
 1C0A                   .dbline 970
 1C0A           ;                 }
 1C0A 0AC0              xjmp L434
 1C0C           L433:
 1C0C                   .dbline 972
 1C0C           ;               else          //收拢命令
 1C0C           ;                { 
 1C0C                   .dbline 973
 1C0C           ;                  DIR2_L      //收拢
 1C0C                   .dbline 973
 1C0C 80916100          lds R24,97
 1C10 8160              ori R24,1
 1C12 80936100          sts 97,R24
 1C16                   .dbline 973
 1C16 80916200          lds R24,98
 1C1A 8E7F              andi R24,254
 1C1C 80936200          sts 98,R24
 1C20                   .dbline 973
 1C20                   .dbline 974
 1C20           ;                }
 1C20           L434:
 1C20                   .dbline 980
 1C20           ;                       
 1C20           ;               //CompCounter=0; //电流监测计数器清0
 1C20           ;               //EIFR|=0x01;//清INT0中断标志
 1C20           ;               //EIMSK&=0xfe;//关INT0中断，电机启动前期不用监测过流情况
 1C20           ;               
 1C20           ;               TCCR1B = 0x00; //stop
 1C20 2224              clr R2
 1C22 2EBC              out 0x2e,R2
 1C24                   .dbline 981
 1C24           ;       TCNT1 = 61629;   //定时500ms
 1C24 8DEB              ldi R24,61629
 1C26 90EF              ldi R25,240
 1C28 9DBD              out 0x2d,R25
 1C2A 8CBD              out 0x2c,R24
 1C2C                   .dbline 982
 1C2C           ;               TIFR|=0x04; //清定时器1中断标志
 1C2C 86B7              in R24,0x36
 1C2E 8460              ori R24,4
 1C30 86BF              out 0x36,R24
 1C32                   .dbline 983
 1C32           ;               TCCR1B = 0x05; //1024分频
 1C32 85E0              ldi R24,5
 1C34 8EBD              out 0x2e,R24
 1C36                   .dbline 984
 1C36           ;               TIFR|=0x04; //清定时器1中断标志
 1C36 86B7              in R24,0x36
 1C38 8460              ori R24,4
 1C3A 86BF              out 0x36,R24
 1C3C                   .dbline 986
 1C3C           ; 
 1C3C           ;               Pwm_startup(2);//PWM启动，耗时约200ms,电机启动前期不进行电流检查，但有欠压监测                                  
 1C3C 02E0              ldi R16,2
 1C3E 0E94F200          xcall _Pwm_startup
 1C42           L435:
 1C42                   .dbline 988
 1C42           ;                         
 1C42           ;               while((TIFR&0x04)==0x00); //等待定时到，期间可能有欠压中断发生
 1C42           L436:
 1C42                   .dbline 988
 1C42 26B6              in R2,0x36
 1C44 22FE              sbrs R2,2
 1C46 FDCF              rjmp L435
 1C48           X165:
 1C48                   .dbline 989
 1C48           ;               TCCR1B = 0x00; //stop
 1C48 2224              clr R2
 1C4A 2EBC              out 0x2e,R2
 1C4C                   .dbline 994
 1C4C           ;               
 1C4C           ;               //EIFR|=0x01;//清INT0中断标志
 1C4C           ;               //EIMSK|=0x01;//开INT0中断，电机启动500ms后即开始监测过流情况
 1C4C           ;                                       
 1C4C           ;               CheckMotor(500);//延时保证总线电压稳定                   
 1C4C 04EF              ldi R16,500
 1C4E 11E0              ldi R17,1
 1C50 0E948A02          xcall _CheckMotor
 1C54                   .dbline 995
 1C54           ;      }
 1C54           L424:
 1C54           L422:
 1C54                   .dbline 996
 1C54           ;         T_dat=Motor2Status.i;
 1C54 20903102          lds R2,_Motor2Status
 1C58 30903202          lds R3,_Motor2Status+1
 1C5C 3092CE01          sts _T_dat+1,R3
 1C60 2092CD01          sts _T_dat,R2
 1C64                   .dbline 997
 1C64           ;         SendManchester();              
 1C64 0E943A1A          xcall _SendManchester
 1C68                   .dbline 998
 1C68           ;       break;
 1C68 0C94AF17          xjmp L361
 1C6C           L438:
 1C6C                   .dbline 1001
 1C6C           ;  
 1C6C           ;     case 0x80://电机相关命令
 1C6C           ;          if(R_dat==0x80)//只开电机电源，不开电机
 1C6C 8091CB01          lds R24,_R_dat
 1C70 9091CC01          lds R25,_R_dat+1
 1C74 8038              cpi R24,128
 1C76 E0E0              ldi R30,0
 1C78 9E07              cpc R25,R30
 1C7A A1F4              brne L439
 1C7C           X166:
 1C7C                   .dbline 1002
 1C7C           ;               {                 
 1C7C                   .dbline 1003
 1C7C           ;             CheckMotor(30);//延迟10ms  
 1C7C 0EE1              ldi R16,30
 1C7E 10E0              ldi R17,0
 1C80 0E948A02          xcall _CheckMotor
 1C84                   .dbline 1004
 1C84           ;                 VM_H//开电机电源
 1C84                   .dbline 1004
 1C84 BF9A              sbi 0x17,7
 1C86                   .dbline 1004
 1C86 C79A              sbi 0x18,7
 1C88                   .dbline 1004
 1C88                   .dbline 1005
 1C88           ;                 CheckMotor(30);//延迟10ms  
 1C88 0EE1              ldi R16,30
 1C8A 10E0              ldi R17,0
 1C8C 0E948A02          xcall _CheckMotor
 1C90                   .dbline 1006
 1C90           ;                 T_dat=0x0000;   
 1C90 2224              clr R2
 1C92 3324              clr R3
 1C94 3092CE01          sts _T_dat+1,R3
 1C98 2092CD01          sts _T_dat,R2
 1C9C                   .dbline 1007
 1C9C           ;             SendManchester();
 1C9C 0E943A1A          xcall _SendManchester
 1CA0                   .dbline 1008
 1CA0           ;               }         
 1CA0 0C94AF17          xjmp L361
 1CA4           L439:
 1CA4                   .dbline 1009
 1CA4           ;               else if(R_dat==0x81)//获取电机状态      
 1CA4 8091CB01          lds R24,_R_dat
 1CA8 9091CC01          lds R25,_R_dat+1
 1CAC 8138              cpi R24,129
 1CAE E0E0              ldi R30,0
 1CB0 9E07              cpc R25,R30
 1CB2 F1F4              brne L441
 1CB4           X167:
 1CB4                   .dbline 1010
 1CB4           ;               { 
 1CB4                   .dbline 1012
 1CB4           ;          //先处理收放电机
 1CB4           ;             CheckMotor(30);//延迟10ms  
 1CB4 0EE1              ldi R16,30
 1CB6 10E0              ldi R17,0
 1CB8 0E948A02          xcall _CheckMotor
 1CBC                   .dbline 1013
 1CBC           ;                 T_dat=Motor1Status.i;    
 1CBC 20903302          lds R2,_Motor1Status
 1CC0 30903402          lds R3,_Motor1Status+1
 1CC4 3092CE01          sts _T_dat+1,R3
 1CC8 2092CD01          sts _T_dat,R2
 1CCC                   .dbline 1014
 1CCC           ;             SendManchester();
 1CCC 0E943A1A          xcall _SendManchester
 1CD0                   .dbline 1017
 1CD0           ;                 
 1CD0           ;                 //再处理调节电机 
 1CD0           ;             CheckMotor(30);//延迟10ms  
 1CD0 0EE1              ldi R16,30
 1CD2 10E0              ldi R17,0
 1CD4 0E948A02          xcall _CheckMotor
 1CD8                   .dbline 1018
 1CD8           ;                 T_dat=Motor2Status.i;     
 1CD8 20903102          lds R2,_Motor2Status
 1CDC 30903202          lds R3,_Motor2Status+1
 1CE0 3092CE01          sts _T_dat+1,R3
 1CE4 2092CD01          sts _T_dat,R2
 1CE8                   .dbline 1019
 1CE8           ;             SendManchester();
 1CE8 0E943A1A          xcall _SendManchester
 1CEC                   .dbline 1020
 1CEC           ;               }         
 1CEC 0C94AF17          xjmp L361
 1CF0           L441:
 1CF0                   .dbline 1021
 1CF0           ;        else if(R_dat==0x82)//电机停止，同时停止二个电机
 1CF0 8091CB01          lds R24,_R_dat
 1CF4 9091CC01          lds R25,_R_dat+1
 1CF8 8238              cpi R24,130
 1CFA E0E0              ldi R30,0
 1CFC 9E07              cpc R25,R30
 1CFE 09F0              breq X260
 1D00 47C0              xjmp L443
 1D02           X260:
 1D02           X168:
 1D02                   .dbline 1022
 1D02           ;               {        
 1D02                   .dbline 1023
 1D02           ;                  if(PWM1_PIN==1)//收放电机正在运行
 1D02 89B3              in R24,0x19
 1D04 8270              andi R24,2
 1D06 8695              lsr R24
 1D08 8130              cpi R24,1
 1D0A 49F4              brne L445
 1D0C           X169:
 1D0C                   .dbline 1024
 1D0C           ;                  {
 1D0C                   .dbline 1025
 1D0C           ;                  Motor1Status.s.CommandStop=1;
 1D0C 80913302          lds R24,_Motor1Status
 1D10 90913402          lds R25,_Motor1Status+1
 1D14 8860              ori R24,8
 1D16 90933402          sts _Motor1Status+1,R25
 1D1A 80933302          sts _Motor1Status,R24
 1D1E                   .dbline 1026
 1D1E           ;                  }
 1D1E           L445:
 1D1E                   .dbline 1027
 1D1E           ;                  if(PWM2_PIN==1)//调节电机正在运行
 1D1E 80B1              in R24,0x0
 1D20 8470              andi R24,4
 1D22 8695              lsr R24
 1D24 8695              lsr R24
 1D26 8130              cpi R24,1
 1D28 49F4              brne L447
 1D2A           X170:
 1D2A                   .dbline 1028
 1D2A           ;                  { 
 1D2A                   .dbline 1029
 1D2A           ;                  Motor2Status.s.CommandStop=1;
 1D2A 80913102          lds R24,_Motor2Status
 1D2E 90913202          lds R25,_Motor2Status+1
 1D32 8860              ori R24,8
 1D34 90933202          sts _Motor2Status+1,R25
 1D38 80933102          sts _Motor2Status,R24
 1D3C                   .dbline 1030
 1D3C           ;                  }
 1D3C           L447:
 1D3C                   .dbline 1031
 1D3C           ;                  MOTORSTOP  //关电机
 1D3C                   .dbline 1031
 1D3C 8AB3              in R24,0x1a
 1D3E 8760              ori R24,7
 1D40 8ABB              out 0x1a,R24
 1D42                   .dbline 1031
 1D42 8BB3              in R24,0x1b
 1D44 8D7F              andi R24,253
 1D46 8BBB              out 0x1b,R24
 1D48                   .dbline 1031
 1D48 8BB3              in R24,0x1b
 1D4A 887F              andi R24,248
 1D4C 8BBB              out 0x1b,R24
 1D4E                   .dbline 1031
 1D4E 80916100          lds R24,97
 1D52 8760              ori R24,7
 1D54 80936100          sts 97,R24
 1D58                   .dbline 1031
 1D58 80916200          lds R24,98
 1D5C 8B7F              andi R24,251
 1D5E 80936200          sts 98,R24
 1D62                   .dbline 1031
 1D62 80916200          lds R24,98
 1D66 887F              andi R24,248
 1D68 80936200          sts 98,R24
 1D6C                   .dbline 1031
 1D6C BF9A              sbi 0x17,7
 1D6E                   .dbline 1031
 1D6E 88B3              in R24,0x18
 1D70 8F77              andi R24,127
 1D72 88BB              out 0x18,R24
 1D74                   .dbline 1031
 1D74                   .dbline 1032
 1D74           ;                  CheckMotor(200);
 1D74 08EC              ldi R16,200
 1D76 10E0              ldi R17,0
 1D78 0E948A02          xcall _CheckMotor
 1D7C                   .dbline 1033
 1D7C           ;                  T_dat=0x0000;        
 1D7C 2224              clr R2
 1D7E 3324              clr R3
 1D80 3092CE01          sts _T_dat+1,R3
 1D84 2092CD01          sts _T_dat,R2
 1D88                   .dbline 1034
 1D88           ;                  SendManchester();     
 1D88 0E943A1A          xcall _SendManchester
 1D8C                   .dbline 1035
 1D8C           ;               }
 1D8C 0C94AF17          xjmp L361
 1D90           L443:
 1D90                   .dbline 1036
 1D90           ;               else if(R_dat==0x83)//读取电机堵转电流阈值
 1D90 8091CB01          lds R24,_R_dat
 1D94 9091CC01          lds R25,_R_dat+1
 1D98 8338              cpi R24,131
 1D9A E0E0              ldi R30,0
 1D9C 9E07              cpc R25,R30
 1D9E A1F5              brne L449
 1DA0           X171:
 1DA0                   .dbline 1037
 1DA0           ;           {
 1DA0                   .dbline 1038
 1DA0           ;                 Motor1Thr=EEPROM_read(0);//收放电机
 1DA0 0027              clr R16
 1DA2 1127              clr R17
 1DA4 0E94451E          xcall _EEPROM_read
 1DA8 A02E              mov R10,R16
 1DAA A0923002          sts _Motor1Thr,R10
 1DAE                   .dbline 1039
 1DAE           ;                 Motor2Thr=EEPROM_read(1);//调节电机
 1DAE 01E0              ldi R16,1
 1DB0 10E0              ldi R17,0
 1DB2 0E94451E          xcall _EEPROM_read
 1DB6 A02E              mov R10,R16
 1DB8 A0922F02          sts _Motor2Thr,R10
 1DBC                   .dbline 1040
 1DBC           ;                 CheckMotor(30);//延迟30ms     
 1DBC 0EE1              ldi R16,30
 1DBE 10E0              ldi R17,0
 1DC0 0E948A02          xcall _CheckMotor
 1DC4                   .dbline 1041
 1DC4           ;                 T_dat=Motor2Thr;       
 1DC4 20902F02          lds R2,_Motor2Thr
 1DC8 3324              clr R3
 1DCA 3092CE01          sts _T_dat+1,R3
 1DCE 2092CD01          sts _T_dat,R2
 1DD2                   .dbline 1042
 1DD2           ;                 T_dat<<=8;
 1DD2 2090CD01          lds R2,_T_dat
 1DD6 3090CE01          lds R3,_T_dat+1
 1DDA 322C              mov R3,R2
 1DDC 2224              clr R2
 1DDE 3092CE01          sts _T_dat+1,R3
 1DE2 2092CD01          sts _T_dat,R2
 1DE6                   .dbline 1043
 1DE6           ;                 T_dat|=Motor1Thr; 
 1DE6 20903002          lds R2,_Motor1Thr
 1DEA 3324              clr R3
 1DEC 4090CD01          lds R4,_T_dat
 1DF0 5090CE01          lds R5,_T_dat+1
 1DF4 4228              or R4,R2
 1DF6 5328              or R5,R3
 1DF8 5092CE01          sts _T_dat+1,R5
 1DFC 4092CD01          sts _T_dat,R4
 1E00                   .dbline 1044
 1E00           ;             SendManchester();
 1E00 0E943A1A          xcall _SendManchester
 1E04                   .dbline 1045
 1E04           ;           }   
 1E04 0C94AF17          xjmp L361
 1E08           L449:
 1E08                   .dbline 1046
 1E08           ;               else if(R_dat>0x83)//还剩12档，用于设置电机堵转电流, 收放电机和调节电机各6档，每档差值30mA,7.721/10mA
 1E08 83E8              ldi R24,131
 1E0A 90E0              ldi R25,0
 1E0C 2090CB01          lds R2,_R_dat
 1E10 3090CC01          lds R3,_R_dat+1
 1E14 8215              cp R24,R2
 1E16 9305              cpc R25,R3
 1E18 14F0              brlt X261
 1E1A 0C94AF17          xjmp L361
 1E1E           X261:
 1E1E           X172:
 1E1E                   .dbline 1047
 1E1E           ;               {
 1E1E                   .dbline 1048
 1E1E           ;                 if(R_dat==0x84)
 1E1E C101              movw R24,R2
 1E20 8438              cpi R24,132
 1E22 E0E0              ldi R30,0
 1E24 9E07              cpc R25,R30
 1E26 49F4              brne L453
 1E28           X173:
 1E28                   .dbline 1049
 1E28           ;                 {
 1E28                   .dbline 1050
 1E28           ;                   Motor1Thr=77;//100mA
 1E28 8DE4              ldi R24,77
 1E2A 80933002          sts _Motor1Thr,R24
 1E2E                   .dbline 1051
 1E2E           ;                       EEPROM_write(0,Motor1Thr);
 1E2E 282F              mov R18,R24
 1E30 0027              clr R16
 1E32 1127              clr R17
 1E34 0E943D1E          xcall _EEPROM_write
 1E38                   .dbline 1052
 1E38           ;                 }
 1E38 BAC0              xjmp L454
 1E3A           L453:
 1E3A                   .dbline 1053
 1E3A           ;                 else if(R_dat==0x85)
 1E3A 8091CB01          lds R24,_R_dat
 1E3E 9091CC01          lds R25,_R_dat+1
 1E42 8538              cpi R24,133
 1E44 E0E0              ldi R30,0
 1E46 9E07              cpc R25,R30
 1E48 49F4              brne L455
 1E4A           X174:
 1E4A                   .dbline 1054
 1E4A           ;                 {
 1E4A                   .dbline 1055
 1E4A           ;                   Motor1Thr=93;//120mA
 1E4A 8DE5              ldi R24,93
 1E4C 80933002          sts _Motor1Thr,R24
 1E50                   .dbline 1056
 1E50           ;                       EEPROM_write(0,Motor1Thr);
 1E50 282F              mov R18,R24
 1E52 0027              clr R16
 1E54 1127              clr R17
 1E56 0E943D1E          xcall _EEPROM_write
 1E5A                   .dbline 1057
 1E5A           ;                 }
 1E5A A9C0              xjmp L456
 1E5C           L455:
 1E5C                   .dbline 1058
 1E5C           ;                 else if(R_dat==0x86)
 1E5C 8091CB01          lds R24,_R_dat
 1E60 9091CC01          lds R25,_R_dat+1
 1E64 8638              cpi R24,134
 1E66 E0E0              ldi R30,0
 1E68 9E07              cpc R25,R30
 1E6A 49F4              brne L457
 1E6C           X175:
 1E6C                   .dbline 1059
 1E6C           ;                 {
 1E6C                   .dbline 1060
 1E6C           ;                   Motor1Thr=108;//140mA
 1E6C 8CE6              ldi R24,108
 1E6E 80933002          sts _Motor1Thr,R24
 1E72                   .dbline 1061
 1E72           ;                       EEPROM_write(0,Motor1Thr);
 1E72 282F              mov R18,R24
 1E74 0027              clr R16
 1E76 1127              clr R17
 1E78 0E943D1E          xcall _EEPROM_write
 1E7C                   .dbline 1062
 1E7C           ;                 }
 1E7C 98C0              xjmp L458
 1E7E           L457:
 1E7E                   .dbline 1063
 1E7E           ;                 else if(R_dat==0x87)
 1E7E 8091CB01          lds R24,_R_dat
 1E82 9091CC01          lds R25,_R_dat+1
 1E86 8738              cpi R24,135
 1E88 E0E0              ldi R30,0
 1E8A 9E07              cpc R25,R30
 1E8C 49F4              brne L459
 1E8E           X176:
 1E8E                   .dbline 1064
 1E8E           ;                 {
 1E8E                   .dbline 1065
 1E8E           ;                   Motor1Thr=123;//160mA
 1E8E 8BE7              ldi R24,123
 1E90 80933002          sts _Motor1Thr,R24
 1E94                   .dbline 1066
 1E94           ;                       EEPROM_write(0,Motor1Thr);
 1E94 282F              mov R18,R24
 1E96 0027              clr R16
 1E98 1127              clr R17
 1E9A 0E943D1E          xcall _EEPROM_write
 1E9E                   .dbline 1067
 1E9E           ;                 }
 1E9E 87C0              xjmp L460
 1EA0           L459:
 1EA0                   .dbline 1068
 1EA0           ;                 else if(R_dat==0x88)
 1EA0 8091CB01          lds R24,_R_dat
 1EA4 9091CC01          lds R25,_R_dat+1
 1EA8 8838              cpi R24,136
 1EAA E0E0              ldi R30,0
 1EAC 9E07              cpc R25,R30
 1EAE 49F4              brne L461
 1EB0           X177:
 1EB0                   .dbline 1069
 1EB0           ;                 {
 1EB0                   .dbline 1070
 1EB0           ;                   Motor1Thr=139;//180mA
 1EB0 8BE8              ldi R24,139
 1EB2 80933002          sts _Motor1Thr,R24
 1EB6                   .dbline 1071
 1EB6           ;                       EEPROM_write(0,Motor1Thr);
 1EB6 282F              mov R18,R24
 1EB8 0027              clr R16
 1EBA 1127              clr R17
 1EBC 0E943D1E          xcall _EEPROM_write
 1EC0                   .dbline 1072
 1EC0           ;                 }
 1EC0 76C0              xjmp L462
 1EC2           L461:
 1EC2                   .dbline 1073
 1EC2           ;                 else if(R_dat==0x89)
 1EC2 8091CB01          lds R24,_R_dat
 1EC6 9091CC01          lds R25,_R_dat+1
 1ECA 8938              cpi R24,137
 1ECC E0E0              ldi R30,0
 1ECE 9E07              cpc R25,R30
 1ED0 49F4              brne L463
 1ED2           X178:
 1ED2                   .dbline 1074
 1ED2           ;                 {
 1ED2                   .dbline 1075
 1ED2           ;                   Motor1Thr=154;//200mA
 1ED2 8AE9              ldi R24,154
 1ED4 80933002          sts _Motor1Thr,R24
 1ED8                   .dbline 1076
 1ED8           ;                       EEPROM_write(0,Motor1Thr);
 1ED8 282F              mov R18,R24
 1EDA 0027              clr R16
 1EDC 1127              clr R17
 1EDE 0E943D1E          xcall _EEPROM_write
 1EE2                   .dbline 1077
 1EE2           ;                 }
 1EE2 65C0              xjmp L464
 1EE4           L463:
 1EE4                   .dbline 1078
 1EE4           ;                 else if(R_dat==0x8a)
 1EE4 8091CB01          lds R24,_R_dat
 1EE8 9091CC01          lds R25,_R_dat+1
 1EEC 8A38              cpi R24,138
 1EEE E0E0              ldi R30,0
 1EF0 9E07              cpc R25,R30
 1EF2 49F4              brne L465
 1EF4           X179:
 1EF4                   .dbline 1079
 1EF4           ;                 {
 1EF4                   .dbline 1080
 1EF4           ;                   Motor2Thr=77;//100mA
 1EF4 8DE4              ldi R24,77
 1EF6 80932F02          sts _Motor2Thr,R24
 1EFA                   .dbline 1081
 1EFA           ;                       EEPROM_write(1,Motor2Thr);
 1EFA 282F              mov R18,R24
 1EFC 01E0              ldi R16,1
 1EFE 10E0              ldi R17,0
 1F00 0E943D1E          xcall _EEPROM_write
 1F04                   .dbline 1082
 1F04           ;                 }
 1F04 54C0              xjmp L466
 1F06           L465:
 1F06                   .dbline 1083
 1F06           ;                 else if(R_dat==0x8b)
 1F06 8091CB01          lds R24,_R_dat
 1F0A 9091CC01          lds R25,_R_dat+1
 1F0E 8B38              cpi R24,139
 1F10 E0E0              ldi R30,0
 1F12 9E07              cpc R25,R30
 1F14 49F4              brne L467
 1F16           X180:
 1F16                   .dbline 1084
 1F16           ;                 {
 1F16                   .dbline 1085
 1F16           ;                   Motor2Thr=93;//120mA
 1F16 8DE5              ldi R24,93
 1F18 80932F02          sts _Motor2Thr,R24
 1F1C                   .dbline 1086
 1F1C           ;                       EEPROM_write(1,Motor2Thr);
 1F1C 282F              mov R18,R24
 1F1E 01E0              ldi R16,1
 1F20 10E0              ldi R17,0
 1F22 0E943D1E          xcall _EEPROM_write
 1F26                   .dbline 1087
 1F26           ;                 }
 1F26 43C0              xjmp L468
 1F28           L467:
 1F28                   .dbline 1088
 1F28           ;                 else if(R_dat==0x8c)
 1F28 8091CB01          lds R24,_R_dat
 1F2C 9091CC01          lds R25,_R_dat+1
 1F30 8C38              cpi R24,140
 1F32 E0E0              ldi R30,0
 1F34 9E07              cpc R25,R30
 1F36 49F4              brne L469
 1F38           X181:
 1F38                   .dbline 1089
 1F38           ;                 {
 1F38                   .dbline 1090
 1F38           ;                   Motor2Thr=108;//140mA
 1F38 8CE6              ldi R24,108
 1F3A 80932F02          sts _Motor2Thr,R24
 1F3E                   .dbline 1091
 1F3E           ;                       EEPROM_write(1,Motor2Thr);
 1F3E 282F              mov R18,R24
 1F40 01E0              ldi R16,1
 1F42 10E0              ldi R17,0
 1F44 0E943D1E          xcall _EEPROM_write
 1F48                   .dbline 1092
 1F48           ;                 }
 1F48 32C0              xjmp L470
 1F4A           L469:
 1F4A                   .dbline 1093
 1F4A           ;                 else if(R_dat==0x8d)
 1F4A 8091CB01          lds R24,_R_dat
 1F4E 9091CC01          lds R25,_R_dat+1
 1F52 8D38              cpi R24,141
 1F54 E0E0              ldi R30,0
 1F56 9E07              cpc R25,R30
 1F58 49F4              brne L471
 1F5A           X182:
 1F5A                   .dbline 1094
 1F5A           ;                 {
 1F5A                   .dbline 1095
 1F5A           ;                   Motor2Thr=123;//160mA
 1F5A 8BE7              ldi R24,123
 1F5C 80932F02          sts _Motor2Thr,R24
 1F60                   .dbline 1096
 1F60           ;                       EEPROM_write(1,Motor2Thr);
 1F60 282F              mov R18,R24
 1F62 01E0              ldi R16,1
 1F64 10E0              ldi R17,0
 1F66 0E943D1E          xcall _EEPROM_write
 1F6A                   .dbline 1097
 1F6A           ;                 }
 1F6A 21C0              xjmp L472
 1F6C           L471:
 1F6C                   .dbline 1098
 1F6C           ;                 else if(R_dat==0x8e)
 1F6C 8091CB01          lds R24,_R_dat
 1F70 9091CC01          lds R25,_R_dat+1
 1F74 8E38              cpi R24,142
 1F76 E0E0              ldi R30,0
 1F78 9E07              cpc R25,R30
 1F7A 49F4              brne L473
 1F7C           X183:
 1F7C                   .dbline 1099
 1F7C           ;                 {
 1F7C                   .dbline 1100
 1F7C           ;                   Motor2Thr=139;//180mA
 1F7C 8BE8              ldi R24,139
 1F7E 80932F02          sts _Motor2Thr,R24
 1F82                   .dbline 1101
 1F82           ;                       EEPROM_write(1,Motor2Thr);
 1F82 282F              mov R18,R24
 1F84 01E0              ldi R16,1
 1F86 10E0              ldi R17,0
 1F88 0E943D1E          xcall _EEPROM_write
 1F8C                   .dbline 1102
 1F8C           ;                 }
 1F8C 10C0              xjmp L474
 1F8E           L473:
 1F8E                   .dbline 1103
 1F8E           ;                 else if(R_dat==0x8f)
 1F8E 8091CB01          lds R24,_R_dat
 1F92 9091CC01          lds R25,_R_dat+1
 1F96 8F38              cpi R24,143
 1F98 E0E0              ldi R30,0
 1F9A 9E07              cpc R25,R30
 1F9C 41F4              brne L475
 1F9E           X184:
 1F9E                   .dbline 1104
 1F9E           ;                 {
 1F9E                   .dbline 1105
 1F9E           ;                   Motor2Thr=154;//200mA
 1F9E 8AE9              ldi R24,154
 1FA0 80932F02          sts _Motor2Thr,R24
 1FA4                   .dbline 1106
 1FA4           ;                       EEPROM_write(1,Motor2Thr);
 1FA4 282F              mov R18,R24
 1FA6 01E0              ldi R16,1
 1FA8 10E0              ldi R17,0
 1FAA 0E943D1E          xcall _EEPROM_write
 1FAE                   .dbline 1107
 1FAE           ;                 }       
 1FAE           L475:
 1FAE           L474:
 1FAE           L472:
 1FAE           L470:
 1FAE           L468:
 1FAE           L466:
 1FAE           L464:
 1FAE           L462:
 1FAE           L460:
 1FAE           L458:
 1FAE           L456:
 1FAE           L454:
 1FAE                   .dbline 1108
 1FAE           ;                 CheckMotor(30);//延迟30ms     
 1FAE 0EE1              ldi R16,30
 1FB0 10E0              ldi R17,0
 1FB2 0E948A02          xcall _CheckMotor
 1FB6                   .dbline 1109
 1FB6           ;                 T_dat=0;          
 1FB6 2224              clr R2
 1FB8 3324              clr R3
 1FBA 3092CE01          sts _T_dat+1,R3
 1FBE 2092CD01          sts _T_dat,R2
 1FC2                   .dbline 1110
 1FC2           ;             SendManchester(); 
 1FC2 0E943A1A          xcall _SendManchester
 1FC6                   .dbline 1111
 1FC6           ;               }         
 1FC6                   .dbline 1112
 1FC6           ;       break;
 1FC6 CBC7              xjmp L361
 1FC8           L477:
 1FC8                   .dbline 1117
 1FC8           ;  
 1FC8           ;       
 1FC8           ;        
 1FC8           ;       case 0x90: //标定数据
 1FC8           ;         if(R_dat==0x90)//提取测试信息
 1FC8 8091CB01          lds R24,_R_dat
 1FCC 9091CC01          lds R25,_R_dat+1
 1FD0 8039              cpi R24,144
 1FD2 E0E0              ldi R30,0
 1FD4 9E07              cpc R25,R30
 1FD6 09F0              breq X262
 1FD8 15C1              xjmp L478
 1FDA           X262:
 1FDA           X185:
 1FDA                   .dbline 1118
 1FDA           ;         {
 1FDA                   .dbline 1119
 1FDA           ;            Uart0TxData[0]=0xE8;
 1FDA 88EE              ldi R24,232
 1FDC 80931F00          sts _Uart0TxData,R24
 1FE0                   .dbline 1120
 1FE0           ;                Uart0TxData[1]=0x40;
 1FE0 80E4              ldi R24,64
 1FE2 80932000          sts _Uart0TxData+1,R24
 1FE6                   .dbline 1121
 1FE6           ;                Uart0TxData[2]=0xc8;
 1FE6 88EC              ldi R24,200
 1FE8 80932100          sts _Uart0TxData+2,R24
 1FEC                   .dbline 1122
 1FEC           ;                Uart0TxData[3]=0;//测试信息包0
 1FEC 2224              clr R2
 1FEE 20922200          sts _Uart0TxData+3,R2
 1FF2                   .dbline 1123
 1FF2           ;                SendUart0_2(9,4);// 超时32ms    
 1FF2 24E0              ldi R18,4
 1FF4 30E0              ldi R19,0
 1FF6 09E0              ldi R16,9
 1FF8 0E944C00          xcall _SendUart0_2
 1FFC                   .dbline 1124
 1FFC           ;                for(i=0;i<32;i++)
 1FFC AA24              clr R10
 1FFE 2FC0              xjmp L486
 2000           L483:
 2000                   .dbline 1125
 2000           ;                {
 2000                   .dbline 1126
 2000           ;                CheckMotor(20);
 2000 04E1              ldi R16,20
 2002 10E0              ldi R17,0
 2004 0E948A02          xcall _CheckMotor
 2008                   .dbline 1127
 2008           ;                T_dat=Uart0RxData[i*2+1];//高字节
 2008 80E0              ldi R24,<_Uart0RxData+1
 200A 90E0              ldi R25,>_Uart0RxData+1
 200C EA2D              mov R30,R10
 200E FF27              clr R31
 2010 EE0F              lsl R30
 2012 FF1F              rol R31
 2014 E80F              add R30,R24
 2016 F91F              adc R31,R25
 2018 2080              ldd R2,z+0
 201A 3324              clr R3
 201C 3092CE01          sts _T_dat+1,R3
 2020 2092CD01          sts _T_dat,R2
 2024                   .dbline 1128
 2024           ;                T_dat<<=8;
 2024 322C              mov R3,R2
 2026 2224              clr R2
 2028 3092CE01          sts _T_dat+1,R3
 202C 2092CD01          sts _T_dat,R2
 2030                   .dbline 1129
 2030           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 2030 80E0              ldi R24,<_Uart0RxData
 2032 90E0              ldi R25,>_Uart0RxData
 2034 EA2D              mov R30,R10
 2036 FF27              clr R31
 2038 EE0F              lsl R30
 203A FF1F              rol R31
 203C E80F              add R30,R24
 203E F91F              adc R31,R25
 2040 2080              ldd R2,z+0
 2042 3324              clr R3
 2044 4090CD01          lds R4,_T_dat
 2048 5090CE01          lds R5,_T_dat+1
 204C 4228              or R4,R2
 204E 5328              or R5,R3
 2050 5092CE01          sts _T_dat+1,R5
 2054 4092CD01          sts _T_dat,R4
 2058                   .dbline 1130
 2058           ;                SendManchester();               
 2058 0E943A1A          xcall _SendManchester
 205C                   .dbline 1131
 205C           ;                }              
 205C           L484:
 205C                   .dbline 1124
 205C A394              inc R10
 205E           L486:
 205E                   .dbline 1124
 205E 8A2D              mov R24,R10
 2060 8032              cpi R24,32
 2062 70F2              brlo L483
 2064           X186:
 2064                   .dbline 1133
 2064           ; 
 2064           ;                Uart0TxData[0]=0xE8;
 2064 88EE              ldi R24,232
 2066 80931F00          sts _Uart0TxData,R24
 206A                   .dbline 1134
 206A           ;                Uart0TxData[1]=0x40;
 206A 80E4              ldi R24,64
 206C 80932000          sts _Uart0TxData+1,R24
 2070                   .dbline 1135
 2070           ;                Uart0TxData[2]=0xc8;
 2070 88EC              ldi R24,200
 2072 80932100          sts _Uart0TxData+2,R24
 2076                   .dbline 1136
 2076           ;                Uart0TxData[3]=1;//测试信息包1
 2076 81E0              ldi R24,1
 2078 80932200          sts _Uart0TxData+3,R24
 207C                   .dbline 1137
 207C           ;                SendUart0_2(9,4);// 超时32ms    
 207C 24E0              ldi R18,4
 207E 30E0              ldi R19,0
 2080 09E0              ldi R16,9
 2082 0E944C00          xcall _SendUart0_2
 2086                   .dbline 1138
 2086           ;                for(i=0;i<32;i++)
 2086 AA24              clr R10
 2088 2FC0              xjmp L494
 208A           L491:
 208A                   .dbline 1139
 208A           ;                {
 208A                   .dbline 1140
 208A           ;                T_dat=Uart0RxData[i*2+1];//高字节
 208A 80E0              ldi R24,<_Uart0RxData+1
 208C 90E0              ldi R25,>_Uart0RxData+1
 208E EA2D              mov R30,R10
 2090 FF27              clr R31
 2092 EE0F              lsl R30
 2094 FF1F              rol R31
 2096 E80F              add R30,R24
 2098 F91F              adc R31,R25
 209A 2080              ldd R2,z+0
 209C 3324              clr R3
 209E 3092CE01          sts _T_dat+1,R3
 20A2 2092CD01          sts _T_dat,R2
 20A6                   .dbline 1141
 20A6           ;                T_dat<<=8;
 20A6 322C              mov R3,R2
 20A8 2224              clr R2
 20AA 3092CE01          sts _T_dat+1,R3
 20AE 2092CD01          sts _T_dat,R2
 20B2                   .dbline 1142
 20B2           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 20B2 80E0              ldi R24,<_Uart0RxData
 20B4 90E0              ldi R25,>_Uart0RxData
 20B6 EA2D              mov R30,R10
 20B8 FF27              clr R31
 20BA EE0F              lsl R30
 20BC FF1F              rol R31
 20BE E80F              add R30,R24
 20C0 F91F              adc R31,R25
 20C2 2080              ldd R2,z+0
 20C4 3324              clr R3
 20C6 4090CD01          lds R4,_T_dat
 20CA 5090CE01          lds R5,_T_dat+1
 20CE 4228              or R4,R2
 20D0 5328              or R5,R3
 20D2 5092CE01          sts _T_dat+1,R5
 20D6 4092CD01          sts _T_dat,R4
 20DA                   .dbline 1143
 20DA           ;                SendManchester();
 20DA 0E943A1A          xcall _SendManchester
 20DE                   .dbline 1144
 20DE           ;                CheckMotor(20);
 20DE 04E1              ldi R16,20
 20E0 10E0              ldi R17,0
 20E2 0E948A02          xcall _CheckMotor
 20E6                   .dbline 1145
 20E6           ;                }      
 20E6           L492:
 20E6                   .dbline 1138
 20E6 A394              inc R10
 20E8           L494:
 20E8                   .dbline 1138
 20E8 8A2D              mov R24,R10
 20EA 8032              cpi R24,32
 20EC 70F2              brlo L491
 20EE           X187:
 20EE                   .dbline 1147
 20EE           ;                
 20EE           ;                Uart0TxData[0]=0xE8;
 20EE 88EE              ldi R24,232
 20F0 80931F00          sts _Uart0TxData,R24
 20F4                   .dbline 1148
 20F4           ;                Uart0TxData[1]=0x40;
 20F4 80E4              ldi R24,64
 20F6 80932000          sts _Uart0TxData+1,R24
 20FA                   .dbline 1149
 20FA           ;                Uart0TxData[2]=0xc8;
 20FA 88EC              ldi R24,200
 20FC 80932100          sts _Uart0TxData+2,R24
 2100                   .dbline 1150
 2100           ;                Uart0TxData[3]=2;//测试信息包2
 2100 82E0              ldi R24,2
 2102 80932200          sts _Uart0TxData+3,R24
 2106                   .dbline 1151
 2106           ;                SendUart0_2(9,4);// 超时32ms    
 2106 24E0              ldi R18,4
 2108 30E0              ldi R19,0
 210A 09E0              ldi R16,9
 210C 0E944C00          xcall _SendUart0_2
 2110                   .dbline 1152
 2110           ;                for(i=0;i<32;i++)
 2110 AA24              clr R10
 2112 2FC0              xjmp L502
 2114           L499:
 2114                   .dbline 1153
 2114           ;                {
 2114                   .dbline 1154
 2114           ;                T_dat=Uart0RxData[i*2+1];//高字节
 2114 80E0              ldi R24,<_Uart0RxData+1
 2116 90E0              ldi R25,>_Uart0RxData+1
 2118 EA2D              mov R30,R10
 211A FF27              clr R31
 211C EE0F              lsl R30
 211E FF1F              rol R31
 2120 E80F              add R30,R24
 2122 F91F              adc R31,R25
 2124 2080              ldd R2,z+0
 2126 3324              clr R3
 2128 3092CE01          sts _T_dat+1,R3
 212C 2092CD01          sts _T_dat,R2
 2130                   .dbline 1155
 2130           ;                T_dat<<=8;
 2130 322C              mov R3,R2
 2132 2224              clr R2
 2134 3092CE01          sts _T_dat+1,R3
 2138 2092CD01          sts _T_dat,R2
 213C                   .dbline 1156
 213C           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 213C 80E0              ldi R24,<_Uart0RxData
 213E 90E0              ldi R25,>_Uart0RxData
 2140 EA2D              mov R30,R10
 2142 FF27              clr R31
 2144 EE0F              lsl R30
 2146 FF1F              rol R31
 2148 E80F              add R30,R24
 214A F91F              adc R31,R25
 214C 2080              ldd R2,z+0
 214E 3324              clr R3
 2150 4090CD01          lds R4,_T_dat
 2154 5090CE01          lds R5,_T_dat+1
 2158 4228              or R4,R2
 215A 5328              or R5,R3
 215C 5092CE01          sts _T_dat+1,R5
 2160 4092CD01          sts _T_dat,R4
 2164                   .dbline 1157
 2164           ;                SendManchester();
 2164 0E943A1A          xcall _SendManchester
 2168                   .dbline 1158
 2168           ;                CheckMotor(20);
 2168 04E1              ldi R16,20
 216A 10E0              ldi R17,0
 216C 0E948A02          xcall _CheckMotor
 2170                   .dbline 1159
 2170           ;                }              
 2170           L500:
 2170                   .dbline 1152
 2170 A394              inc R10
 2172           L502:
 2172                   .dbline 1152
 2172 8A2D              mov R24,R10
 2174 8032              cpi R24,32
 2176 70F2              brlo L499
 2178           X188:
 2178                   .dbline 1161
 2178           ;                
 2178           ;                Uart0TxData[0]=0xE8;
 2178 88EE              ldi R24,232
 217A 80931F00          sts _Uart0TxData,R24
 217E                   .dbline 1162
 217E           ;                Uart0TxData[1]=0x40;
 217E 80E4              ldi R24,64
 2180 80932000          sts _Uart0TxData+1,R24
 2184                   .dbline 1163
 2184           ;                Uart0TxData[2]=0xc8;
 2184 88EC              ldi R24,200
 2186 80932100          sts _Uart0TxData+2,R24
 218A                   .dbline 1164
 218A           ;                Uart0TxData[3]=3;//测试信息包3
 218A 83E0              ldi R24,3
 218C 80932200          sts _Uart0TxData+3,R24
 2190                   .dbline 1165
 2190           ;                SendUart0_2(9,4);// 超时32ms    
 2190 24E0              ldi R18,4
 2192 30E0              ldi R19,0
 2194 09E0              ldi R16,9
 2196 0E944C00          xcall _SendUart0_2
 219A                   .dbline 1166
 219A           ;                for(i=0;i<32;i++)
 219A AA24              clr R10
 219C 2FC0              xjmp L510
 219E           L507:
 219E                   .dbline 1167
 219E           ;                {
 219E                   .dbline 1168
 219E           ;                T_dat=Uart0RxData[i*2+1];//高字节
 219E 80E0              ldi R24,<_Uart0RxData+1
 21A0 90E0              ldi R25,>_Uart0RxData+1
 21A2 EA2D              mov R30,R10
 21A4 FF27              clr R31
 21A6 EE0F              lsl R30
 21A8 FF1F              rol R31
 21AA E80F              add R30,R24
 21AC F91F              adc R31,R25
 21AE 2080              ldd R2,z+0
 21B0 3324              clr R3
 21B2 3092CE01          sts _T_dat+1,R3
 21B6 2092CD01          sts _T_dat,R2
 21BA                   .dbline 1169
 21BA           ;                T_dat<<=8;
 21BA 322C              mov R3,R2
 21BC 2224              clr R2
 21BE 3092CE01          sts _T_dat+1,R3
 21C2 2092CD01          sts _T_dat,R2
 21C6                   .dbline 1170
 21C6           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 21C6 80E0              ldi R24,<_Uart0RxData
 21C8 90E0              ldi R25,>_Uart0RxData
 21CA EA2D              mov R30,R10
 21CC FF27              clr R31
 21CE EE0F              lsl R30
 21D0 FF1F              rol R31
 21D2 E80F              add R30,R24
 21D4 F91F              adc R31,R25
 21D6 2080              ldd R2,z+0
 21D8 3324              clr R3
 21DA 4090CD01          lds R4,_T_dat
 21DE 5090CE01          lds R5,_T_dat+1
 21E2 4228              or R4,R2
 21E4 5328              or R5,R3
 21E6 5092CE01          sts _T_dat+1,R5
 21EA 4092CD01          sts _T_dat,R4
 21EE                   .dbline 1171
 21EE           ;                SendManchester();
 21EE 0E943A1A          xcall _SendManchester
 21F2                   .dbline 1172
 21F2           ;                CheckMotor(20);
 21F2 04E1              ldi R16,20
 21F4 10E0              ldi R17,0
 21F6 0E948A02          xcall _CheckMotor
 21FA                   .dbline 1173
 21FA           ;                }                      
 21FA           L508:
 21FA                   .dbline 1166
 21FA A394              inc R10
 21FC           L510:
 21FC                   .dbline 1166
 21FC 8A2D              mov R24,R10
 21FE 8032              cpi R24,32
 2200 70F2              brlo L507
 2202           X189:
 2202                   .dbline 1174
 2202           ;         }
 2202 ADC6              xjmp L361
 2204           L478:
 2204                   .dbline 1175
 2204           ;         else if(R_dat==0x91)//上传压力标定数据,20ms/帧        
 2204 8091CB01          lds R24,_R_dat
 2208 9091CC01          lds R25,_R_dat+1
 220C 8139              cpi R24,145
 220E E0E0              ldi R30,0
 2210 9E07              cpc R25,R30
 2212 21F5              brne L512
 2214           X190:
 2214                   .dbline 1176
 2214           ;         {
 2214                   .dbline 1178
 2214           ;          //先获取总标定点数    
 2214           ;            DataFlag=3;
 2214 83E0              ldi R24,3
 2216 90E0              ldi R25,0
 2218 9093B201          sts _DataFlag+1,R25
 221C 8093B101          sts _DataFlag,R24
 2220                   .dbline 1179
 2220           ;                coeff_len=4;//上位机还需传4字节，分别为首块地址和包数
 2220 84E0              ldi R24,4
 2222 90931D00          sts _coeff_len+1,R25
 2226 80931C00          sts _coeff_len,R24
 222A                   .dbline 1180
 222A           ;            coeff_count=0;
 222A 2224              clr R2
 222C 3324              clr R3
 222E 30921B00          sts _coeff_count+1,R3
 2232 20921A00          sts _coeff_count,R2
 2236                   .dbline 1181
 2236           ;                TimeOutFlag=0;
 2236 2092C901          sts _TimeOutFlag,R2
 223A                   .dbline 1182
 223A           ;                Timer0Counter=200;//1.6s定时
 223A 88EC              ldi R24,200
 223C 90932D02          sts _Timer0Counter+1,R25
 2240 80932C02          sts _Timer0Counter,R24
 2244                   .dbline 1183
 2244           ;            TCNT0=0x06; //8ms
 2244 86E0              ldi R24,6
 2246 82BF              out 0x32,R24
 2248                   .dbline 1184
 2248           ;            TCCR0|=0x06;//256分频
 2248 83B7              in R24,0x33
 224A 8660              ori R24,6
 224C 83BF              out 0x33,R24
 224E                   .dbline 1185
 224E           ;            TIFR|=0x01; //清定时器0中断标志
 224E 86B7              in R24,0x36
 2250 8160              ori R24,1
 2252 86BF              out 0x36,R24
 2254                   .dbline 1186
 2254           ;          TIMSK|=0x01;//使能定时器0中断                
 2254 87B7              in R24,0x37
 2256 8160              ori R24,1
 2258 87BF              out 0x37,R24
 225A                   .dbline 1187
 225A           ;               }
 225A 81C6              xjmp L361
 225C           L512:
 225C                   .dbline 1188
 225C           ;         else if(R_dat==0x92)//清空标定数据,整机格式化  
 225C 8091CB01          lds R24,_R_dat
 2260 9091CC01          lds R25,_R_dat+1
 2264 8239              cpi R24,146
 2266 E0E0              ldi R30,0
 2268 9E07              cpc R25,R30
 226A E9F5              brne L514
 226C           X191:
 226C                   .dbline 1189
 226C           ;          {    
 226C                   .dbline 1190
 226C           ;            Uart0TxData[0]=0xE8;
 226C 88EE              ldi R24,232
 226E 80931F00          sts _Uart0TxData,R24
 2272                   .dbline 1191
 2272           ;                Uart0TxData[1]=0x40;
 2272 80E4              ldi R24,64
 2274 80932000          sts _Uart0TxData+1,R24
 2278                   .dbline 1192
 2278           ;                Uart0TxData[2]=0x8c;
 2278 8CE8              ldi R24,140
 227A 80932100          sts _Uart0TxData+2,R24
 227E                   .dbline 1193
 227E           ;                Uart0TxData[3]=8;
 227E 88E0              ldi R24,8
 2280 80932200          sts _Uart0TxData+3,R24
 2284                   .dbline 1194
 2284           ;                Uart0TxData[4]=0;
 2284 2224              clr R2
 2286 20922300          sts _Uart0TxData+4,R2
 228A                   .dbline 1195
 228A           ;                Uart0TxData[5]=0;
 228A 20922400          sts _Uart0TxData+5,R2
 228E                   .dbline 1196
 228E           ;                Uart0TxData[6]=0xff;
 228E 8FEF              ldi R24,255
 2290 80932500          sts _Uart0TxData+6,R24
 2294                   .dbline 1197
 2294           ;                Uart0TxData[7]=0xff;
 2294 80932600          sts _Uart0TxData+7,R24
 2298                   .dbline 1198
 2298           ;                SendUart0_3(9,5000,9);// 最大超时40秒
 2298 89E0              ldi R24,9
 229A 8883              std y+0,R24
 229C 28E8              ldi R18,5000
 229E 33E1              ldi R19,19
 22A0 09E0              ldi R16,9
 22A2 0E949C00          xcall _SendUart0_3
 22A6                   .dbline 1199
 22A6           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8c))
 22A6 8091E101          lds R24,_Uart0RxCounter
 22AA 8930              cpi R24,9
 22AC 99F4              brne L523
 22AE           X192:
 22AE 8091E201          lds R24,_Uart0RxData
 22B2 8535              cpi R24,85
 22B4 79F4              brne L523
 22B6           X193:
 22B6 8091E301          lds R24,_Uart0RxData+1
 22BA 8034              cpi R24,64
 22BC 59F4              brne L523
 22BE           X194:
 22BE 8091E401          lds R24,_Uart0RxData+2
 22C2 8C38              cpi R24,140
 22C4 39F4              brne L523
 22C6           X195:
 22C6                   .dbline 1200
 22C6           ;                {T_dat=0x0000;}
 22C6                   .dbline 1200
 22C6 2224              clr R2
 22C8 3324              clr R3
 22CA 3092CE01          sts _T_dat+1,R3
 22CE 2092CD01          sts _T_dat,R2
 22D2                   .dbline 1200
 22D2 06C0              xjmp L524
 22D4           L523:
 22D4                   .dbline 1202
 22D4           ;                else
 22D4           ;                {T_dat=0xffff;}
 22D4                   .dbline 1202
 22D4 8FEF              ldi R24,65535
 22D6 9FEF              ldi R25,255
 22D8 9093CE01          sts _T_dat+1,R25
 22DC 8093CD01          sts _T_dat,R24
 22E0                   .dbline 1202
 22E0           L524:
 22E0                   .dbline 1203
 22E0           ;                SendManchester();       
 22E0 0E943A1A          xcall _SendManchester
 22E4                   .dbline 1204
 22E4           ;         }
 22E4 3CC6              xjmp L361
 22E6           L514:
 22E6                   .dbline 1205
 22E6           ;          else if(R_dat==0x93)//上传全部系数，共256字节分128帧上传
 22E6 8091CB01          lds R24,_R_dat
 22EA 9091CC01          lds R25,_R_dat+1
 22EE 8339              cpi R24,147
 22F0 E0E0              ldi R30,0
 22F2 9E07              cpc R25,R30
 22F4 09F0              breq X263
 22F6 33C6              xjmp L361
 22F8           X263:
 22F8           X196:
 22F8                   .dbline 1206
 22F8           ;          {
 22F8                   .dbline 1207
 22F8           ;            Uart0TxData[0]=0xE8;
 22F8 88EE              ldi R24,232
 22FA 80931F00          sts _Uart0TxData,R24
 22FE                   .dbline 1208
 22FE           ;                Uart0TxData[1]=0x40;
 22FE 80E4              ldi R24,64
 2300 80932000          sts _Uart0TxData+1,R24
 2304                   .dbline 1209
 2304           ;                Uart0TxData[2]=0x87;
 2304 87E8              ldi R24,135
 2306 80932100          sts _Uart0TxData+2,R24
 230A                   .dbline 1210
 230A           ;                Uart0TxData[3]=0;//系数包0
 230A 2224              clr R2
 230C 20922200          sts _Uart0TxData+3,R2
 2310                   .dbline 1211
 2310           ;                SendUart0_2(9,4);// 超时32ms   
 2310 24E0              ldi R18,4
 2312 30E0              ldi R19,0
 2314 09E0              ldi R16,9
 2316 0E944C00          xcall _SendUart0_2
 231A                   .dbline 1212
 231A           ;                if(Uart0RxCounter==64) 
 231A 8091E101          lds R24,_Uart0RxCounter
 231E 8034              cpi R24,64
 2320 A1F5              brne L532
 2322           X197:
 2322                   .dbline 1213
 2322           ;                 {
 2322                   .dbline 1214
 2322           ;                  for(i=0;i<32;i++)
 2322 AA24              clr R10
 2324 2FC0              xjmp L537
 2326           L534:
 2326                   .dbline 1215
 2326           ;                  {
 2326                   .dbline 1216
 2326           ;                  CheckMotor(20);
 2326 04E1              ldi R16,20
 2328 10E0              ldi R17,0
 232A 0E948A02          xcall _CheckMotor
 232E                   .dbline 1217
 232E           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 232E 80E0              ldi R24,<_Uart0RxData+1
 2330 90E0              ldi R25,>_Uart0RxData+1
 2332 EA2D              mov R30,R10
 2334 FF27              clr R31
 2336 EE0F              lsl R30
 2338 FF1F              rol R31
 233A E80F              add R30,R24
 233C F91F              adc R31,R25
 233E 2080              ldd R2,z+0
 2340 3324              clr R3
 2342 3092CE01          sts _T_dat+1,R3
 2346 2092CD01          sts _T_dat,R2
 234A                   .dbline 1218
 234A           ;                  T_dat<<=8;
 234A 322C              mov R3,R2
 234C 2224              clr R2
 234E 3092CE01          sts _T_dat+1,R3
 2352 2092CD01          sts _T_dat,R2
 2356                   .dbline 1219
 2356           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2356 80E0              ldi R24,<_Uart0RxData
 2358 90E0              ldi R25,>_Uart0RxData
 235A EA2D              mov R30,R10
 235C FF27              clr R31
 235E EE0F              lsl R30
 2360 FF1F              rol R31
 2362 E80F              add R30,R24
 2364 F91F              adc R31,R25
 2366 2080              ldd R2,z+0
 2368 3324              clr R3
 236A 4090CD01          lds R4,_T_dat
 236E 5090CE01          lds R5,_T_dat+1
 2372 4228              or R4,R2
 2374 5328              or R5,R3
 2376 5092CE01          sts _T_dat+1,R5
 237A 4092CD01          sts _T_dat,R4
 237E                   .dbline 1220
 237E           ;                  SendManchester();             
 237E 0E943A1A          xcall _SendManchester
 2382                   .dbline 1221
 2382           ;                  }    
 2382           L535:
 2382                   .dbline 1214
 2382 A394              inc R10
 2384           L537:
 2384                   .dbline 1214
 2384 8A2D              mov R24,R10
 2386 8032              cpi R24,32
 2388 70F2              brlo L534
 238A           X198:
 238A                   .dbline 1222
 238A           ;                }      
 238A           L532:
 238A                   .dbline 1224
 238A           ;                
 238A           ;                Uart0TxData[0]=0xE8;
 238A 88EE              ldi R24,232
 238C 80931F00          sts _Uart0TxData,R24
 2390                   .dbline 1225
 2390           ;                Uart0TxData[1]=0x40;
 2390 80E4              ldi R24,64
 2392 80932000          sts _Uart0TxData+1,R24
 2396                   .dbline 1226
 2396           ;                Uart0TxData[2]=0x87;
 2396 87E8              ldi R24,135
 2398 80932100          sts _Uart0TxData+2,R24
 239C                   .dbline 1227
 239C           ;                Uart0TxData[3]=1;//系数包1
 239C 81E0              ldi R24,1
 239E 80932200          sts _Uart0TxData+3,R24
 23A2                   .dbline 1228
 23A2           ;                SendUart0_2(9,4);// 超时32ms    
 23A2 24E0              ldi R18,4
 23A4 30E0              ldi R19,0
 23A6 09E0              ldi R16,9
 23A8 0E944C00          xcall _SendUart0_2
 23AC                   .dbline 1229
 23AC           ;                if(Uart0RxCounter==64) 
 23AC 8091E101          lds R24,_Uart0RxCounter
 23B0 8034              cpi R24,64
 23B2 A1F5              brne L542
 23B4           X199:
 23B4                   .dbline 1230
 23B4           ;                 {
 23B4                   .dbline 1231
 23B4           ;                  for(i=0;i<32;i++)
 23B4 AA24              clr R10
 23B6 2FC0              xjmp L547
 23B8           L544:
 23B8                   .dbline 1232
 23B8           ;                  {
 23B8                   .dbline 1233
 23B8           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 23B8 80E0              ldi R24,<_Uart0RxData+1
 23BA 90E0              ldi R25,>_Uart0RxData+1
 23BC EA2D              mov R30,R10
 23BE FF27              clr R31
 23C0 EE0F              lsl R30
 23C2 FF1F              rol R31
 23C4 E80F              add R30,R24
 23C6 F91F              adc R31,R25
 23C8 2080              ldd R2,z+0
 23CA 3324              clr R3
 23CC 3092CE01          sts _T_dat+1,R3
 23D0 2092CD01          sts _T_dat,R2
 23D4                   .dbline 1234
 23D4           ;                  T_dat<<=8;
 23D4 322C              mov R3,R2
 23D6 2224              clr R2
 23D8 3092CE01          sts _T_dat+1,R3
 23DC 2092CD01          sts _T_dat,R2
 23E0                   .dbline 1235
 23E0           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 23E0 80E0              ldi R24,<_Uart0RxData
 23E2 90E0              ldi R25,>_Uart0RxData
 23E4 EA2D              mov R30,R10
 23E6 FF27              clr R31
 23E8 EE0F              lsl R30
 23EA FF1F              rol R31
 23EC E80F              add R30,R24
 23EE F91F              adc R31,R25
 23F0 2080              ldd R2,z+0
 23F2 3324              clr R3
 23F4 4090CD01          lds R4,_T_dat
 23F8 5090CE01          lds R5,_T_dat+1
 23FC 4228              or R4,R2
 23FE 5328              or R5,R3
 2400 5092CE01          sts _T_dat+1,R5
 2404 4092CD01          sts _T_dat,R4
 2408                   .dbline 1236
 2408           ;                  SendManchester();
 2408 0E943A1A          xcall _SendManchester
 240C                   .dbline 1237
 240C           ;                  CheckMotor(20);
 240C 04E1              ldi R16,20
 240E 10E0              ldi R17,0
 2410 0E948A02          xcall _CheckMotor
 2414                   .dbline 1238
 2414           ;                 }
 2414           L545:
 2414                   .dbline 1231
 2414 A394              inc R10
 2416           L547:
 2416                   .dbline 1231
 2416 8A2D              mov R24,R10
 2418 8032              cpi R24,32
 241A 70F2              brlo L544
 241C           X200:
 241C                   .dbline 1239
 241C           ;                }              
 241C           L542:
 241C                   .dbline 1241
 241C           ;                
 241C           ;                 Uart0TxData[0]=0xE8;
 241C 88EE              ldi R24,232
 241E 80931F00          sts _Uart0TxData,R24
 2422                   .dbline 1242
 2422           ;                Uart0TxData[1]=0x40;
 2422 80E4              ldi R24,64
 2424 80932000          sts _Uart0TxData+1,R24
 2428                   .dbline 1243
 2428           ;                Uart0TxData[2]=0x87;
 2428 87E8              ldi R24,135
 242A 80932100          sts _Uart0TxData+2,R24
 242E                   .dbline 1244
 242E           ;                Uart0TxData[3]=2;//系数包2
 242E 82E0              ldi R24,2
 2430 80932200          sts _Uart0TxData+3,R24
 2434                   .dbline 1245
 2434           ;                SendUart0_2(9,4);// 超时32ms   
 2434 24E0              ldi R18,4
 2436 30E0              ldi R19,0
 2438 09E0              ldi R16,9
 243A 0E944C00          xcall _SendUart0_2
 243E                   .dbline 1246
 243E           ;                if(Uart0RxCounter==64) 
 243E 8091E101          lds R24,_Uart0RxCounter
 2442 8034              cpi R24,64
 2444 99F5              brne L552
 2446           X201:
 2446                   .dbline 1247
 2446           ;                 {
 2446                   .dbline 1248
 2446           ;                  for(i=0;i<32;i++)
 2446 AA24              clr R10
 2448 2EC0              xjmp L557
 244A           L554:
 244A                   .dbline 1249
 244A           ;                  {
 244A                   .dbline 1250
 244A           ;                  CheckMotor(20);
 244A 04E1              ldi R16,20
 244C 10E0              ldi R17,0
 244E 0E948A02          xcall _CheckMotor
 2452                   .dbline 1251
 2452           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2452 80E0              ldi R24,<_Uart0RxData+1
 2454 90E0              ldi R25,>_Uart0RxData+1
 2456 EA2D              mov R30,R10
 2458 FF27              clr R31
 245A EE0F              lsl R30
 245C FF1F              rol R31
 245E E80F              add R30,R24
 2460 F91F              adc R31,R25
 2462 2080              ldd R2,z+0
 2464 3324              clr R3
 2466 3092CE01          sts _T_dat+1,R3
 246A 2092CD01          sts _T_dat,R2
 246E                   .dbline 1252
 246E           ;                  T_dat<<=8;
 246E 322C              mov R3,R2
 2470 2224              clr R2
 2472 3092CE01          sts _T_dat+1,R3
 2476 2092CD01          sts _T_dat,R2
 247A                   .dbline 1253
 247A           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 247A 80E0              ldi R24,<_Uart0RxData
 247C 90E0              ldi R25,>_Uart0RxData
 247E EA2D              mov R30,R10
 2480 FF27              clr R31
 2482 EE0F              lsl R30
 2484 FF1F              rol R31
 2486 E80F              add R30,R24
 2488 F91F              adc R31,R25
 248A 2080              ldd R2,z+0
 248C 3324              clr R3
 248E 4090CD01          lds R4,_T_dat
 2492 5090CE01          lds R5,_T_dat+1
 2496 4228              or R4,R2
 2498 5328              or R5,R3
 249A 5092CE01          sts _T_dat+1,R5
 249E 4092CD01          sts _T_dat,R4
 24A2                   .dbline 1254
 24A2           ;                  SendManchester();             
 24A2 E8D7              xcall _SendManchester
 24A4                   .dbline 1255
 24A4           ;                  }    
 24A4           L555:
 24A4                   .dbline 1248
 24A4 A394              inc R10
 24A6           L557:
 24A6                   .dbline 1248
 24A6 8A2D              mov R24,R10
 24A8 8032              cpi R24,32
 24AA 78F2              brlo L554
 24AC           X202:
 24AC                   .dbline 1256
 24AC           ;                }      
 24AC           L552:
 24AC                   .dbline 1258
 24AC           ; 
 24AC           ;                Uart0TxData[0]=0xE8;
 24AC 88EE              ldi R24,232
 24AE 80931F00          sts _Uart0TxData,R24
 24B2                   .dbline 1259
 24B2           ;                Uart0TxData[1]=0x40;
 24B2 80E4              ldi R24,64
 24B4 80932000          sts _Uart0TxData+1,R24
 24B8                   .dbline 1260
 24B8           ;                Uart0TxData[2]=0x87;
 24B8 87E8              ldi R24,135
 24BA 80932100          sts _Uart0TxData+2,R24
 24BE                   .dbline 1261
 24BE           ;                Uart0TxData[3]=3;//系数包3
 24BE 83E0              ldi R24,3
 24C0 80932200          sts _Uart0TxData+3,R24
 24C4                   .dbline 1262
 24C4           ;                SendUart0_2(9,4);// 超时32ms    
 24C4 24E0              ldi R18,4
 24C6 30E0              ldi R19,0
 24C8 09E0              ldi R16,9
 24CA 0E944C00          xcall _SendUart0_2
 24CE                   .dbline 1263
 24CE           ;                if(Uart0RxCounter==64) 
 24CE 8091E101          lds R24,_Uart0RxCounter
 24D2 8034              cpi R24,64
 24D4 09F0              breq X264
 24D6 43C5              xjmp L361
 24D8           X264:
 24D8           X203:
 24D8                   .dbline 1264
 24D8           ;                 {
 24D8                   .dbline 1265
 24D8           ;                  for(i=0;i<32;i++)
 24D8 AA24              clr R10
 24DA 2EC0              xjmp L567
 24DC           L564:
 24DC                   .dbline 1266
 24DC           ;                  {
 24DC                   .dbline 1267
 24DC           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 24DC 80E0              ldi R24,<_Uart0RxData+1
 24DE 90E0              ldi R25,>_Uart0RxData+1
 24E0 EA2D              mov R30,R10
 24E2 FF27              clr R31
 24E4 EE0F              lsl R30
 24E6 FF1F              rol R31
 24E8 E80F              add R30,R24
 24EA F91F              adc R31,R25
 24EC 2080              ldd R2,z+0
 24EE 3324              clr R3
 24F0 3092CE01          sts _T_dat+1,R3
 24F4 2092CD01          sts _T_dat,R2
 24F8                   .dbline 1268
 24F8           ;                  T_dat<<=8;
 24F8 322C              mov R3,R2
 24FA 2224              clr R2
 24FC 3092CE01          sts _T_dat+1,R3
 2500 2092CD01          sts _T_dat,R2
 2504                   .dbline 1269
 2504           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2504 80E0              ldi R24,<_Uart0RxData
 2506 90E0              ldi R25,>_Uart0RxData
 2508 EA2D              mov R30,R10
 250A FF27              clr R31
 250C EE0F              lsl R30
 250E FF1F              rol R31
 2510 E80F              add R30,R24
 2512 F91F              adc R31,R25
 2514 2080              ldd R2,z+0
 2516 3324              clr R3
 2518 4090CD01          lds R4,_T_dat
 251C 5090CE01          lds R5,_T_dat+1
 2520 4228              or R4,R2
 2522 5328              or R5,R3
 2524 5092CE01          sts _T_dat+1,R5
 2528 4092CD01          sts _T_dat,R4
 252C                   .dbline 1270
 252C           ;                  SendManchester();
 252C A3D7              xcall _SendManchester
 252E                   .dbline 1271
 252E           ;                  CheckMotor(20);
 252E 04E1              ldi R16,20
 2530 10E0              ldi R17,0
 2532 0E948A02          xcall _CheckMotor
 2536                   .dbline 1272
 2536           ;                 }
 2536           L565:
 2536                   .dbline 1265
 2536 A394              inc R10
 2538           L567:
 2538                   .dbline 1265
 2538 8A2D              mov R24,R10
 253A 8032              cpi R24,32
 253C 78F2              brlo L564
 253E           X204:
 253E                   .dbline 1273
 253E           ;                }              
 253E                   .dbline 1274
 253E           ;          }
 253E                   .dbline 1276
 253E           ;         
 253E           ;   break;
 253E 0FC5              xjmp L361
 2540           L569:
 2540                   .dbline 1279
 2540           ;   
 2540           ;       case 0xa0://压力标定系数
 2540           ;          if(R_dat==0xa0)//下发全部标定系数，共128字节,20ms/帧，共2560ms   
 2540 8091CB01          lds R24,_R_dat
 2544 9091CC01          lds R25,_R_dat+1
 2548 803A              cpi R24,160
 254A E0E0              ldi R30,0
 254C 9E07              cpc R25,R30
 254E 29F5              brne L570
 2550           X205:
 2550                   .dbline 1280
 2550           ;          { 
 2550                   .dbline 1281
 2550           ;                DataFlag=1;
 2550 81E0              ldi R24,1
 2552 90E0              ldi R25,0
 2554 9093B201          sts _DataFlag+1,R25
 2558 8093B101          sts _DataFlag,R24
 255C                   .dbline 1282
 255C           ;                coeff_len=128;
 255C 80E8              ldi R24,128
 255E 90931D00          sts _coeff_len+1,R25
 2562 80931C00          sts _coeff_len,R24
 2566                   .dbline 1283
 2566           ;                coeff_count=0;
 2566 2224              clr R2
 2568 3324              clr R3
 256A 30921B00          sts _coeff_count+1,R3
 256E 20921A00          sts _coeff_count,R2
 2572                   .dbline 1284
 2572           ;                TimeOutFlag=0;
 2572 2092C901          sts _TimeOutFlag,R2
 2576                   .dbline 1285
 2576           ;                Timer0Counter=1000;//8s定时
 2576 88EE              ldi R24,1000
 2578 93E0              ldi R25,3
 257A 90932D02          sts _Timer0Counter+1,R25
 257E 80932C02          sts _Timer0Counter,R24
 2582                   .dbline 1286
 2582           ;            TCNT0=0x06; //8ms
 2582 86E0              ldi R24,6
 2584 82BF              out 0x32,R24
 2586                   .dbline 1287
 2586           ;            TCCR0|=0x06;//256分频
 2586 83B7              in R24,0x33
 2588 8660              ori R24,6
 258A 83BF              out 0x33,R24
 258C                   .dbline 1288
 258C           ;            TIFR|=0x01; //清定时器0中断标志
 258C 86B7              in R24,0x36
 258E 8160              ori R24,1
 2590 86BF              out 0x36,R24
 2592                   .dbline 1289
 2592           ;          TIMSK|=0x01;//使能定时器0中断                                    
 2592 87B7              in R24,0x37
 2594 8160              ori R24,1
 2596 87BF              out 0x37,R24
 2598                   .dbline 1290
 2598           ;          }
 2598 E2C4              xjmp L361
 259A           L570:
 259A                   .dbline 1291
 259A           ;         else if(R_dat==0xa1)//上传标定系数,28ms/帧 ，共64帧128字节
 259A 8091CB01          lds R24,_R_dat
 259E 9091CC01          lds R25,_R_dat+1
 25A2 813A              cpi R24,161
 25A4 E0E0              ldi R30,0
 25A6 9E07              cpc R25,R30
 25A8 09F0              breq X265
 25AA D9C4              xjmp L361
 25AC           X265:
 25AC           X206:
 25AC                   .dbline 1292
 25AC           ;         {    
 25AC                   .dbline 1293
 25AC           ;                Uart0TxData[0]=0xE8;
 25AC 88EE              ldi R24,232
 25AE 80931F00          sts _Uart0TxData,R24
 25B2                   .dbline 1294
 25B2           ;                Uart0TxData[1]=0x40;
 25B2 80E4              ldi R24,64
 25B4 80932000          sts _Uart0TxData+1,R24
 25B8                   .dbline 1295
 25B8           ;                Uart0TxData[2]=0x87;
 25B8 87E8              ldi R24,135
 25BA 80932100          sts _Uart0TxData+2,R24
 25BE                   .dbline 1296
 25BE           ;                Uart0TxData[3]=0;//系数包0
 25BE 2224              clr R2
 25C0 20922200          sts _Uart0TxData+3,R2
 25C4                   .dbline 1297
 25C4           ;                SendUart0_2(9,5);// 超时40ms   
 25C4 25E0              ldi R18,5
 25C6 30E0              ldi R19,0
 25C8 09E0              ldi R16,9
 25CA 0E944C00          xcall _SendUart0_2
 25CE                   .dbline 1298
 25CE           ;                if(Uart0RxCounter==64) 
 25CE 8091E101          lds R24,_Uart0RxCounter
 25D2 8034              cpi R24,64
 25D4 99F5              brne L577
 25D6           X207:
 25D6                   .dbline 1299
 25D6           ;                 {
 25D6                   .dbline 1300
 25D6           ;                  for(i=0;i<32;i++)
 25D6 AA24              clr R10
 25D8 2EC0              xjmp L582
 25DA           L579:
 25DA                   .dbline 1301
 25DA           ;                  {
 25DA                   .dbline 1302
 25DA           ;                  CheckMotor(20);
 25DA 04E1              ldi R16,20
 25DC 10E0              ldi R17,0
 25DE 0E948A02          xcall _CheckMotor
 25E2                   .dbline 1303
 25E2           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 25E2 80E0              ldi R24,<_Uart0RxData+1
 25E4 90E0              ldi R25,>_Uart0RxData+1
 25E6 EA2D              mov R30,R10
 25E8 FF27              clr R31
 25EA EE0F              lsl R30
 25EC FF1F              rol R31
 25EE E80F              add R30,R24
 25F0 F91F              adc R31,R25
 25F2 2080              ldd R2,z+0
 25F4 3324              clr R3
 25F6 3092CE01          sts _T_dat+1,R3
 25FA 2092CD01          sts _T_dat,R2
 25FE                   .dbline 1304
 25FE           ;                  T_dat<<=8;
 25FE 322C              mov R3,R2
 2600 2224              clr R2
 2602 3092CE01          sts _T_dat+1,R3
 2606 2092CD01          sts _T_dat,R2
 260A                   .dbline 1305
 260A           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 260A 80E0              ldi R24,<_Uart0RxData
 260C 90E0              ldi R25,>_Uart0RxData
 260E EA2D              mov R30,R10
 2610 FF27              clr R31
 2612 EE0F              lsl R30
 2614 FF1F              rol R31
 2616 E80F              add R30,R24
 2618 F91F              adc R31,R25
 261A 2080              ldd R2,z+0
 261C 3324              clr R3
 261E 4090CD01          lds R4,_T_dat
 2622 5090CE01          lds R5,_T_dat+1
 2626 4228              or R4,R2
 2628 5328              or R5,R3
 262A 5092CE01          sts _T_dat+1,R5
 262E 4092CD01          sts _T_dat,R4
 2632                   .dbline 1306
 2632           ;                  SendManchester();             
 2632 20D7              xcall _SendManchester
 2634                   .dbline 1307
 2634           ;                  }    
 2634           L580:
 2634                   .dbline 1300
 2634 A394              inc R10
 2636           L582:
 2636                   .dbline 1300
 2636 8A2D              mov R24,R10
 2638 8032              cpi R24,32
 263A 78F2              brlo L579
 263C           X208:
 263C                   .dbline 1308
 263C           ;                }      
 263C           L577:
 263C                   .dbline 1310
 263C           ; 
 263C           ;                Uart0TxData[0]=0xE8;
 263C 88EE              ldi R24,232
 263E 80931F00          sts _Uart0TxData,R24
 2642                   .dbline 1311
 2642           ;                Uart0TxData[1]=0x40;
 2642 80E4              ldi R24,64
 2644 80932000          sts _Uart0TxData+1,R24
 2648                   .dbline 1312
 2648           ;                Uart0TxData[2]=0x87;
 2648 87E8              ldi R24,135
 264A 80932100          sts _Uart0TxData+2,R24
 264E                   .dbline 1313
 264E           ;                Uart0TxData[3]=1;//系数包1
 264E 81E0              ldi R24,1
 2650 80932200          sts _Uart0TxData+3,R24
 2654                   .dbline 1314
 2654           ;                SendUart0_2(9,5);// 超时40ms            
 2654 25E0              ldi R18,5
 2656 30E0              ldi R19,0
 2658 09E0              ldi R16,9
 265A 0E944C00          xcall _SendUart0_2
 265E                   .dbline 1315
 265E           ;                if(Uart0RxCounter==64) 
 265E 8091E101          lds R24,_Uart0RxCounter
 2662 8034              cpi R24,64
 2664 09F0              breq X266
 2666 7BC4              xjmp L361
 2668           X266:
 2668           X209:
 2668                   .dbline 1316
 2668           ;                 {
 2668                   .dbline 1317
 2668           ;                  for(i=0;i<32;i++)
 2668 AA24              clr R10
 266A 2EC0              xjmp L592
 266C           L589:
 266C                   .dbline 1318
 266C           ;                  {
 266C                   .dbline 1319
 266C           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 266C 80E0              ldi R24,<_Uart0RxData+1
 266E 90E0              ldi R25,>_Uart0RxData+1
 2670 EA2D              mov R30,R10
 2672 FF27              clr R31
 2674 EE0F              lsl R30
 2676 FF1F              rol R31
 2678 E80F              add R30,R24
 267A F91F              adc R31,R25
 267C 2080              ldd R2,z+0
 267E 3324              clr R3
 2680 3092CE01          sts _T_dat+1,R3
 2684 2092CD01          sts _T_dat,R2
 2688                   .dbline 1320
 2688           ;                  T_dat<<=8;
 2688 322C              mov R3,R2
 268A 2224              clr R2
 268C 3092CE01          sts _T_dat+1,R3
 2690 2092CD01          sts _T_dat,R2
 2694                   .dbline 1321
 2694           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2694 80E0              ldi R24,<_Uart0RxData
 2696 90E0              ldi R25,>_Uart0RxData
 2698 EA2D              mov R30,R10
 269A FF27              clr R31
 269C EE0F              lsl R30
 269E FF1F              rol R31
 26A0 E80F              add R30,R24
 26A2 F91F              adc R31,R25
 26A4 2080              ldd R2,z+0
 26A6 3324              clr R3
 26A8 4090CD01          lds R4,_T_dat
 26AC 5090CE01          lds R5,_T_dat+1
 26B0 4228              or R4,R2
 26B2 5328              or R5,R3
 26B4 5092CE01          sts _T_dat+1,R5
 26B8 4092CD01          sts _T_dat,R4
 26BC                   .dbline 1322
 26BC           ;                  SendManchester();
 26BC DBD6              xcall _SendManchester
 26BE                   .dbline 1323
 26BE           ;                  CheckMotor(20);
 26BE 04E1              ldi R16,20
 26C0 10E0              ldi R17,0
 26C2 0E948A02          xcall _CheckMotor
 26C6                   .dbline 1324
 26C6           ;                 }
 26C6           L590:
 26C6                   .dbline 1317
 26C6 A394              inc R10
 26C8           L592:
 26C8                   .dbline 1317
 26C8 8A2D              mov R24,R10
 26CA 8032              cpi R24,32
 26CC 78F2              brlo L589
 26CE           X210:
 26CE                   .dbline 1325
 26CE           ;                }              
 26CE                   .dbline 1326
 26CE           ;         }
 26CE                   .dbline 1327
 26CE           ;       break;
 26CE 47C4              xjmp L361
 26D0           L594:
 26D0                   .dbline 1331
 26D0           ;       
 26D0           ;       
 26D0           ;       case 0xB0://流量相关
 26D0           ;         if(R_dat==0xb0) //下发流量系数
 26D0 8091CB01          lds R24,_R_dat
 26D4 9091CC01          lds R25,_R_dat+1
 26D8 803B              cpi R24,176
 26DA E0E0              ldi R30,0
 26DC 9E07              cpc R25,R30
 26DE 29F5              brne L595
 26E0           X211:
 26E0                   .dbline 1332
 26E0           ;         {
 26E0                   .dbline 1333
 26E0           ;            DataFlag=2;
 26E0 82E0              ldi R24,2
 26E2 90E0              ldi R25,0
 26E4 9093B201          sts _DataFlag+1,R25
 26E8 8093B101          sts _DataFlag,R24
 26EC                   .dbline 1334
 26EC           ;                coeff_len=128;
 26EC 80E8              ldi R24,128
 26EE 90931D00          sts _coeff_len+1,R25
 26F2 80931C00          sts _coeff_len,R24
 26F6                   .dbline 1335
 26F6           ;                coeff_count=0;
 26F6 2224              clr R2
 26F8 3324              clr R3
 26FA 30921B00          sts _coeff_count+1,R3
 26FE 20921A00          sts _coeff_count,R2
 2702                   .dbline 1336
 2702           ;                TimeOutFlag=0;
 2702 2092C901          sts _TimeOutFlag,R2
 2706                   .dbline 1337
 2706           ;                Timer0Counter=1000;//8s定时
 2706 88EE              ldi R24,1000
 2708 93E0              ldi R25,3
 270A 90932D02          sts _Timer0Counter+1,R25
 270E 80932C02          sts _Timer0Counter,R24
 2712                   .dbline 1338
 2712           ;            TCNT0=0x06; //8ms
 2712 86E0              ldi R24,6
 2714 82BF              out 0x32,R24
 2716                   .dbline 1339
 2716           ;            TCCR0|=0x06;//256分频
 2716 83B7              in R24,0x33
 2718 8660              ori R24,6
 271A 83BF              out 0x33,R24
 271C                   .dbline 1340
 271C           ;            TIFR|=0x01; //清定时器0中断标志
 271C 86B7              in R24,0x36
 271E 8160              ori R24,1
 2720 86BF              out 0x36,R24
 2722                   .dbline 1341
 2722           ;          TIMSK|=0x01;//使能定时器0中断                
 2722 87B7              in R24,0x37
 2724 8160              ori R24,1
 2726 87BF              out 0x37,R24
 2728                   .dbline 1342
 2728           ;         }
 2728 1AC4              xjmp L361
 272A           L595:
 272A                   .dbline 1343
 272A           ;         else  if(R_dat==0xb1)//上提流量系数
 272A 8091CB01          lds R24,_R_dat
 272E 9091CC01          lds R25,_R_dat+1
 2732 813B              cpi R24,177
 2734 E0E0              ldi R30,0
 2736 9E07              cpc R25,R30
 2738 09F0              breq X267
 273A 11C4              xjmp L361
 273C           X267:
 273C           X212:
 273C                   .dbline 1344
 273C           ;         {
 273C                   .dbline 1345
 273C           ;            Uart0TxData[0]=0xE8;
 273C 88EE              ldi R24,232
 273E 80931F00          sts _Uart0TxData,R24
 2742                   .dbline 1346
 2742           ;                Uart0TxData[1]=0x40;
 2742 80E4              ldi R24,64
 2744 80932000          sts _Uart0TxData+1,R24
 2748                   .dbline 1347
 2748           ;                Uart0TxData[2]=0x87;
 2748 87E8              ldi R24,135
 274A 80932100          sts _Uart0TxData+2,R24
 274E                   .dbline 1348
 274E           ;                Uart0TxData[3]=2;//系数包2
 274E 82E0              ldi R24,2
 2750 80932200          sts _Uart0TxData+3,R24
 2754                   .dbline 1349
 2754           ;                SendUart0_2(9,5);// 超时40ms   
 2754 25E0              ldi R18,5
 2756 30E0              ldi R19,0
 2758 09E0              ldi R16,9
 275A 0E944C00          xcall _SendUart0_2
 275E                   .dbline 1350
 275E           ;                if(Uart0RxCounter==64) 
 275E 8091E101          lds R24,_Uart0RxCounter
 2762 8034              cpi R24,64
 2764 99F5              brne L602
 2766           X213:
 2766                   .dbline 1351
 2766           ;                 {
 2766                   .dbline 1352
 2766           ;                  for(i=0;i<32;i++)
 2766 AA24              clr R10
 2768 2EC0              xjmp L607
 276A           L604:
 276A                   .dbline 1353
 276A           ;                  {
 276A                   .dbline 1354
 276A           ;                  CheckMotor(20);
 276A 04E1              ldi R16,20
 276C 10E0              ldi R17,0
 276E 0E948A02          xcall _CheckMotor
 2772                   .dbline 1355
 2772           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2772 80E0              ldi R24,<_Uart0RxData+1
 2774 90E0              ldi R25,>_Uart0RxData+1
 2776 EA2D              mov R30,R10
 2778 FF27              clr R31
 277A EE0F              lsl R30
 277C FF1F              rol R31
 277E E80F              add R30,R24
 2780 F91F              adc R31,R25
 2782 2080              ldd R2,z+0
 2784 3324              clr R3
 2786 3092CE01          sts _T_dat+1,R3
 278A 2092CD01          sts _T_dat,R2
 278E                   .dbline 1356
 278E           ;                  T_dat<<=8;
 278E 322C              mov R3,R2
 2790 2224              clr R2
 2792 3092CE01          sts _T_dat+1,R3
 2796 2092CD01          sts _T_dat,R2
 279A                   .dbline 1357
 279A           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 279A 80E0              ldi R24,<_Uart0RxData
 279C 90E0              ldi R25,>_Uart0RxData
 279E EA2D              mov R30,R10
 27A0 FF27              clr R31
 27A2 EE0F              lsl R30
 27A4 FF1F              rol R31
 27A6 E80F              add R30,R24
 27A8 F91F              adc R31,R25
 27AA 2080              ldd R2,z+0
 27AC 3324              clr R3
 27AE 4090CD01          lds R4,_T_dat
 27B2 5090CE01          lds R5,_T_dat+1
 27B6 4228              or R4,R2
 27B8 5328              or R5,R3
 27BA 5092CE01          sts _T_dat+1,R5
 27BE 4092CD01          sts _T_dat,R4
 27C2                   .dbline 1358
 27C2           ;                  SendManchester();             
 27C2 58D6              xcall _SendManchester
 27C4                   .dbline 1359
 27C4           ;                  }    
 27C4           L605:
 27C4                   .dbline 1352
 27C4 A394              inc R10
 27C6           L607:
 27C6                   .dbline 1352
 27C6 8A2D              mov R24,R10
 27C8 8032              cpi R24,32
 27CA 78F2              brlo L604
 27CC           X214:
 27CC                   .dbline 1360
 27CC           ;                }      
 27CC           L602:
 27CC                   .dbline 1362
 27CC           ; 
 27CC           ;                Uart0TxData[0]=0xE8;
 27CC 88EE              ldi R24,232
 27CE 80931F00          sts _Uart0TxData,R24
 27D2                   .dbline 1363
 27D2           ;                Uart0TxData[1]=0x40;
 27D2 80E4              ldi R24,64
 27D4 80932000          sts _Uart0TxData+1,R24
 27D8                   .dbline 1364
 27D8           ;                Uart0TxData[2]=0x87;
 27D8 87E8              ldi R24,135
 27DA 80932100          sts _Uart0TxData+2,R24
 27DE                   .dbline 1365
 27DE           ;                Uart0TxData[3]=3;//系数包3
 27DE 83E0              ldi R24,3
 27E0 80932200          sts _Uart0TxData+3,R24
 27E4                   .dbline 1366
 27E4           ;                SendUart0_2(9,5);// 超时40ms    
 27E4 25E0              ldi R18,5
 27E6 30E0              ldi R19,0
 27E8 09E0              ldi R16,9
 27EA 0E944C00          xcall _SendUart0_2
 27EE                   .dbline 1367
 27EE           ;                if(Uart0RxCounter==64) 
 27EE 8091E101          lds R24,_Uart0RxCounter
 27F2 8034              cpi R24,64
 27F4 09F0              breq X268
 27F6 B3C3              xjmp L361
 27F8           X268:
 27F8           X215:
 27F8                   .dbline 1368
 27F8           ;                 {
 27F8                   .dbline 1369
 27F8           ;                  for(i=0;i<32;i++)
 27F8 AA24              clr R10
 27FA 2EC0              xjmp L617
 27FC           L614:
 27FC                   .dbline 1370
 27FC           ;                  {
 27FC                   .dbline 1371
 27FC           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 27FC 80E0              ldi R24,<_Uart0RxData+1
 27FE 90E0              ldi R25,>_Uart0RxData+1
 2800 EA2D              mov R30,R10
 2802 FF27              clr R31
 2804 EE0F              lsl R30
 2806 FF1F              rol R31
 2808 E80F              add R30,R24
 280A F91F              adc R31,R25
 280C 2080              ldd R2,z+0
 280E 3324              clr R3
 2810 3092CE01          sts _T_dat+1,R3
 2814 2092CD01          sts _T_dat,R2
 2818                   .dbline 1372
 2818           ;                  T_dat<<=8;
 2818 322C              mov R3,R2
 281A 2224              clr R2
 281C 3092CE01          sts _T_dat+1,R3
 2820 2092CD01          sts _T_dat,R2
 2824                   .dbline 1373
 2824           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2824 80E0              ldi R24,<_Uart0RxData
 2826 90E0              ldi R25,>_Uart0RxData
 2828 EA2D              mov R30,R10
 282A FF27              clr R31
 282C EE0F              lsl R30
 282E FF1F              rol R31
 2830 E80F              add R30,R24
 2832 F91F              adc R31,R25
 2834 2080              ldd R2,z+0
 2836 3324              clr R3
 2838 4090CD01          lds R4,_T_dat
 283C 5090CE01          lds R5,_T_dat+1
 2840 4228              or R4,R2
 2842 5328              or R5,R3
 2844 5092CE01          sts _T_dat+1,R5
 2848 4092CD01          sts _T_dat,R4
 284C                   .dbline 1374
 284C           ;                  SendManchester();
 284C 13D6              xcall _SendManchester
 284E                   .dbline 1375
 284E           ;                  CheckMotor(20);
 284E 04E1              ldi R16,20
 2850 10E0              ldi R17,0
 2852 0E948A02          xcall _CheckMotor
 2856                   .dbline 1376
 2856           ;                 }
 2856           L615:
 2856                   .dbline 1369
 2856 A394              inc R10
 2858           L617:
 2858                   .dbline 1369
 2858 8A2D              mov R24,R10
 285A 8032              cpi R24,32
 285C 78F2              brlo L614
 285E           X216:
 285E                   .dbline 1377
 285E           ;                }              
 285E                   .dbline 1378
 285E           ;         }
 285E                   .dbline 1404
 285E           ;       /*   if(R_dat==0xb1)//读幅值
 285E           ;          {
 285E           ;                SendUart0(0xb0,5);//40ms定时
 285E           ;                for(k=0;k<8;k+=2)
 285E           ;                 {
 285E           ;                 T_dat=Uart0RxData[k];
 285E           ;                 T_dat<<=8;
 285E           ;                 T_dat|=Uart0RxData[k+1];
 285E           ;                 SendManchester();
 285E           ;                 CheckMotor(40);
 285E           ;                 }
 285E           ;               }
 285E           ;               else  if((R_dat>0xb0) && (R_dat<0xb5) )//1800点提取,连续提取流量测试数据，4个通道分别提取，命令为0xB1-0xB4
 285E           ;         {   
 285E           ;                 SendUart0(R_dat,125);//1s定时  
 285E           ;                 for(k=0;k<1800;k++)//共1800帧数据，全部提取
 285E           ;                 {
 285E           ;                 SendUart0(0xFF,1);//8ms定时      
 285E           ;                 T_dat=Uart0RxData[0];
 285E           ;                 T_dat<<=8;
 285E           ;                 T_dat|=Uart0RxData[1];
 285E           ;                 SendManchester();
 285E           ;                 CheckMotor(42);
 285E           ;                 }
 285E           ;               } */  
 285E           ;       break;
 285E 7FC3              xjmp L361
 2860           L619:
 2860                   .dbline 1407
 2860           ; 
 2860           ;     case 0xc0://所有参数全采，上传16字节共8帧
 2860           ;                if(R_dat==0xc0)
 2860 8091CB01          lds R24,_R_dat
 2864 9091CC01          lds R25,_R_dat+1
 2868 803C              cpi R24,192
 286A E0E0              ldi R30,0
 286C 9E07              cpc R25,R30
 286E 09F0              breq X269
 2870 D6C1              xjmp L620
 2872           X269:
 2872           X217:
 2872                   .dbline 1408
 2872           ;        {
 2872                   .dbline 1409
 2872           ;               Uart0TxData[0]=0xE8;
 2872 88EE              ldi R24,232
 2874 80931F00          sts _Uart0TxData,R24
 2878                   .dbline 1410
 2878           ;               Uart0TxData[1]=0x40;
 2878 80E4              ldi R24,64
 287A 80932000          sts _Uart0TxData+1,R24
 287E                   .dbline 1411
 287E           ;               Uart0TxData[2]=0x89;
 287E 89E8              ldi R24,137
 2880 80932100          sts _Uart0TxData+2,R24
 2884                   .dbline 1412
 2884           ;               Uart0TxData[3]=9;
 2884 89E0              ldi R24,9
 2886 80932200          sts _Uart0TxData+3,R24
 288A                   .dbline 1413
 288A           ;               SendUart0_2(9,50);//流量板直读检测，超时400ms
 288A 22E3              ldi R18,50
 288C 30E0              ldi R19,0
 288E 09E0              ldi R16,9
 2890 0E944C00          xcall _SendUart0_2
 2894                   .dbline 1414
 2894           ;               if(Uart0RxCounter==64)//成功接收到压力、温度、流量数据，先低字节后高字节
 2894 8091E101          lds R24,_Uart0RxCounter
 2898 8034              cpi R24,64
 289A 09F0              breq X270
 289C 60C3              xjmp L361
 289E           X270:
 289E           X218:
 289E                   .dbline 1415
 289E           ;               {
 289E                   .dbline 1416
 289E           ;                T_dat=Uart0RxData[1];
 289E 2090E301          lds R2,_Uart0RxData+1
 28A2 3324              clr R3
 28A4 3092CE01          sts _T_dat+1,R3
 28A8 2092CD01          sts _T_dat,R2
 28AC                   .dbline 1417
 28AC           ;                T_dat<<=8;
 28AC 2090CD01          lds R2,_T_dat
 28B0 3090CE01          lds R3,_T_dat+1
 28B4 322C              mov R3,R2
 28B6 2224              clr R2
 28B8 3092CE01          sts _T_dat+1,R3
 28BC 2092CD01          sts _T_dat,R2
 28C0                   .dbline 1418
 28C0           ;                T_dat|=Uart0RxData[0];
 28C0 2090E201          lds R2,_Uart0RxData
 28C4 3324              clr R3
 28C6 4090CD01          lds R4,_T_dat
 28CA 5090CE01          lds R5,_T_dat+1
 28CE 4228              or R4,R2
 28D0 5328              or R5,R3
 28D2 5092CE01          sts _T_dat+1,R5
 28D6 4092CD01          sts _T_dat,R4
 28DA                   .dbline 1419
 28DA           ;                SendManchester();//压力
 28DA CCD5              xcall _SendManchester
 28DC                   .dbline 1420
 28DC           ;                crc16array[0]=(unsigned char)(T_dat);
 28DC 2090CD01          lds R2,_T_dat
 28E0 3090CE01          lds R3,_T_dat+1
 28E4 20920000          sts _crc16array,R2
 28E8                   .dbline 1421
 28E8           ;                crc16array[1]=(unsigned char)(T_dat>>8);
 28E8 232C              mov R2,R3
 28EA 3324              clr R3
 28EC 27FC              sbrc R2,7
 28EE 3094              com R3
 28F0 20920100          sts _crc16array+1,R2
 28F4                   .dbline 1424
 28F4           ;                
 28F4           ;                
 28F4           ;                CheckMotor(30);        
 28F4 0EE1              ldi R16,30
 28F6 10E0              ldi R17,0
 28F8 0E948A02          xcall _CheckMotor
 28FC                   .dbline 1425
 28FC           ;                T_dat=Uart0RxData[3];
 28FC 2090E501          lds R2,_Uart0RxData+3
 2900 3324              clr R3
 2902 3092CE01          sts _T_dat+1,R3
 2906 2092CD01          sts _T_dat,R2
 290A                   .dbline 1426
 290A           ;                T_dat<<=8;
 290A 2090CD01          lds R2,_T_dat
 290E 3090CE01          lds R3,_T_dat+1
 2912 322C              mov R3,R2
 2914 2224              clr R2
 2916 3092CE01          sts _T_dat+1,R3
 291A 2092CD01          sts _T_dat,R2
 291E                   .dbline 1427
 291E           ;                T_dat|=Uart0RxData[2];
 291E 2090E401          lds R2,_Uart0RxData+2
 2922 3324              clr R3
 2924 4090CD01          lds R4,_T_dat
 2928 5090CE01          lds R5,_T_dat+1
 292C 4228              or R4,R2
 292E 5328              or R5,R3
 2930 5092CE01          sts _T_dat+1,R5
 2934 4092CD01          sts _T_dat,R4
 2938                   .dbline 1428
 2938           ;                SendManchester();//温度
 2938 9DD5              xcall _SendManchester
 293A                   .dbline 1429
 293A           ;                crc16array[2]=(unsigned char)(T_dat);
 293A 2090CD01          lds R2,_T_dat
 293E 3090CE01          lds R3,_T_dat+1
 2942 20920200          sts _crc16array+2,R2
 2946                   .dbline 1430
 2946           ;                crc16array[3]=(unsigned char)(T_dat>>8);
 2946 232C              mov R2,R3
 2948 3324              clr R3
 294A 27FC              sbrc R2,7
 294C 3094              com R3
 294E 20920300          sts _crc16array+3,R2
 2952                   .dbline 1432
 2952           ;                
 2952           ;                 CheckMotor(30);       
 2952 0EE1              ldi R16,30
 2954 10E0              ldi R17,0
 2956 0E948A02          xcall _CheckMotor
 295A                   .dbline 1434
 295A           ;                 
 295A           ;                 lfib=Uart0RxData[5];
 295A 2090E701          lds R2,_Uart0RxData+5
 295E 3324              clr R3
 2960 4424              clr R4
 2962 5524              clr R5
 2964 30921300          sts _lfib+1,R3
 2968 20921200          sts _lfib,R2
 296C 50921500          sts _lfib+2+1,R5
 2970 40921400          sts _lfib+2,R4
 2974                   .dbline 1435
 2974           ;                 lfib<<=8;
 2974 88E0              ldi R24,8
 2976 90E0              ldi R25,0
 2978 20911400          lds R18,_lfib+2
 297C 30911500          lds R19,_lfib+2+1
 2980 00911200          lds R16,_lfib
 2984 10911300          lds R17,_lfib+1
 2988 8A93              st -y,R24
 298A 0E940000          xcall lsl32
 298E 10931300          sts _lfib+1,R17
 2992 00931200          sts _lfib,R16
 2996 30931500          sts _lfib+2+1,R19
 299A 20931400          sts _lfib+2,R18
 299E                   .dbline 1436
 299E           ;                 lfib|=Uart0RxData[4];
 299E 2090E601          lds R2,_Uart0RxData+4
 29A2 3324              clr R3
 29A4 4424              clr R4
 29A6 5524              clr R5
 29A8 3801              movw R6,R16
 29AA 4901              movw R8,R18
 29AC 6228              or R6,R2
 29AE 7328              or R7,R3
 29B0 8428              or R8,R4
 29B2 9528              or R9,R5
 29B4 70921300          sts _lfib+1,R7
 29B8 60921200          sts _lfib,R6
 29BC 90921500          sts _lfib+2+1,R9
 29C0 80921400          sts _lfib+2,R8
 29C4                   .dbline 1437
 29C4           ;                 lfib&=0x0000ffff;
 29C4 4FEF              ldi R20,255
 29C6 5FEF              ldi R21,255
 29C8 60E0              ldi R22,0
 29CA 70E0              ldi R23,0
 29CC 1301              movw R2,R6
 29CE 2401              movw R4,R8
 29D0 2422              and R2,R20
 29D2 3522              and R3,R21
 29D4 4622              and R4,R22
 29D6 5722              and R5,R23
 29D8 30921300          sts _lfib+1,R3
 29DC 20921200          sts _lfib,R2
 29E0 50921500          sts _lfib+2+1,R5
 29E4 40921400          sts _lfib+2,R4
 29E8                   .dbline 1438
 29E8           ;                 myFIB.f=(unsigned long)lfib; 
 29E8 8101              movw R16,R2
 29EA 9201              movw R18,R4
 29EC 0E940000          xcall ulong2fp
 29F0 10933602          sts _myFIB+1,R17
 29F4 00933502          sts _myFIB,R16
 29F8 30933802          sts _myFIB+2+1,R19
 29FC 20933702          sts _myFIB+2,R18
 2A00                   .dbline 1440
 2A00           ;                 
 2A00           ;                 T_dat=myFIB.i[1];
 2A00 20903702          lds R2,_myFIB+2
 2A04 30903802          lds R3,_myFIB+2+1
 2A08 3092CE01          sts _T_dat+1,R3
 2A0C 2092CD01          sts _T_dat,R2
 2A10                   .dbline 1441
 2A10           ;                 SendManchester();//流量-时间1
 2A10 31D5              xcall _SendManchester
 2A12                   .dbline 1442
 2A12           ;                 crc16array[4]=(unsigned char)(T_dat);
 2A12 2090CD01          lds R2,_T_dat
 2A16 3090CE01          lds R3,_T_dat+1
 2A1A 20920400          sts _crc16array+4,R2
 2A1E                   .dbline 1443
 2A1E           ;                 crc16array[5]=(unsigned char)(T_dat>>8);
 2A1E 232C              mov R2,R3
 2A20 3324              clr R3
 2A22 27FC              sbrc R2,7
 2A24 3094              com R3
 2A26 20920500          sts _crc16array+5,R2
 2A2A                   .dbline 1445
 2A2A           ;                 
 2A2A           ;                 CheckMotor(30);       
 2A2A 0EE1              ldi R16,30
 2A2C 10E0              ldi R17,0
 2A2E 0E948A02          xcall _CheckMotor
 2A32                   .dbline 1446
 2A32           ;                 T_dat=myFIB.i[0];
 2A32 20903502          lds R2,_myFIB
 2A36 30903602          lds R3,_myFIB+1
 2A3A 3092CE01          sts _T_dat+1,R3
 2A3E 2092CD01          sts _T_dat,R2
 2A42                   .dbline 1447
 2A42           ;                 SendManchester();//流量-时间2
 2A42 18D5              xcall _SendManchester
 2A44                   .dbline 1448
 2A44           ;                 crc16array[6]=(unsigned char)(T_dat);
 2A44 2090CD01          lds R2,_T_dat
 2A48 3090CE01          lds R3,_T_dat+1
 2A4C 20920600          sts _crc16array+6,R2
 2A50                   .dbline 1449
 2A50           ;                 crc16array[7]=(unsigned char)(T_dat>>8);
 2A50 232C              mov R2,R3
 2A52 3324              clr R3
 2A54 27FC              sbrc R2,7
 2A56 3094              com R3
 2A58 20920700          sts _crc16array+7,R2
 2A5C                   .dbline 1451
 2A5C           ;                 
 2A5C           ;                 CheckMotor(30);       
 2A5C 0EE1              ldi R16,30
 2A5E 10E0              ldi R17,0
 2A60 0E948A02          xcall _CheckMotor
 2A64                   .dbline 1453
 2A64           ;                 
 2A64           ;                 lfib=Uart0RxData[7];
 2A64 2090E901          lds R2,_Uart0RxData+7
 2A68 3324              clr R3
 2A6A 4424              clr R4
 2A6C 5524              clr R5
 2A6E 30921300          sts _lfib+1,R3
 2A72 20921200          sts _lfib,R2
 2A76 50921500          sts _lfib+2+1,R5
 2A7A 40921400          sts _lfib+2,R4
 2A7E                   .dbline 1454
 2A7E           ;                 lfib<<=8;
 2A7E 88E0              ldi R24,8
 2A80 90E0              ldi R25,0
 2A82 20911400          lds R18,_lfib+2
 2A86 30911500          lds R19,_lfib+2+1
 2A8A 00911200          lds R16,_lfib
 2A8E 10911300          lds R17,_lfib+1
 2A92 8A93              st -y,R24
 2A94 0E940000          xcall lsl32
 2A98 10931300          sts _lfib+1,R17
 2A9C 00931200          sts _lfib,R16
 2AA0 30931500          sts _lfib+2+1,R19
 2AA4 20931400          sts _lfib+2,R18
 2AA8                   .dbline 1455
 2AA8           ;                 lfib|=Uart0RxData[6];
 2AA8 2090E801          lds R2,_Uart0RxData+6
 2AAC 3324              clr R3
 2AAE 4424              clr R4
 2AB0 5524              clr R5
 2AB2 3801              movw R6,R16
 2AB4 4901              movw R8,R18
 2AB6 6228              or R6,R2
 2AB8 7328              or R7,R3
 2ABA 8428              or R8,R4
 2ABC 9528              or R9,R5
 2ABE 70921300          sts _lfib+1,R7
 2AC2 60921200          sts _lfib,R6
 2AC6 90921500          sts _lfib+2+1,R9
 2ACA 80921400          sts _lfib+2,R8
 2ACE                   .dbline 1456
 2ACE           ;                 lfib&=0x0000ffff;
 2ACE 4FEF              ldi R20,255
 2AD0 5FEF              ldi R21,255
 2AD2 60E0              ldi R22,0
 2AD4 70E0              ldi R23,0
 2AD6 1301              movw R2,R6
 2AD8 2401              movw R4,R8
 2ADA 2422              and R2,R20
 2ADC 3522              and R3,R21
 2ADE 4622              and R4,R22
 2AE0 5722              and R5,R23
 2AE2 30921300          sts _lfib+1,R3
 2AE6 20921200          sts _lfib,R2
 2AEA 50921500          sts _lfib+2+1,R5
 2AEE 40921400          sts _lfib+2,R4
 2AF2                   .dbline 1457
 2AF2           ;                 myFIB.f=(unsigned long)lfib; 
 2AF2 8101              movw R16,R2
 2AF4 9201              movw R18,R4
 2AF6 0E940000          xcall ulong2fp
 2AFA 10933602          sts _myFIB+1,R17
 2AFE 00933502          sts _myFIB,R16
 2B02 30933802          sts _myFIB+2+1,R19
 2B06 20933702          sts _myFIB+2,R18
 2B0A                   .dbline 1459
 2B0A           ;                 
 2B0A           ;                 T_dat=myFIB.i[1];
 2B0A 20903702          lds R2,_myFIB+2
 2B0E 30903802          lds R3,_myFIB+2+1
 2B12 3092CE01          sts _T_dat+1,R3
 2B16 2092CD01          sts _T_dat,R2
 2B1A                   .dbline 1460
 2B1A           ;                 SendManchester();//流量-相位1
 2B1A ACD4              xcall _SendManchester
 2B1C                   .dbline 1461
 2B1C           ;                 crc16array[8]=(unsigned char)(T_dat);
 2B1C 2090CD01          lds R2,_T_dat
 2B20 3090CE01          lds R3,_T_dat+1
 2B24 20920800          sts _crc16array+8,R2
 2B28                   .dbline 1462
 2B28           ;                 crc16array[9]=(unsigned char)(T_dat>>8);
 2B28 232C              mov R2,R3
 2B2A 3324              clr R3
 2B2C 27FC              sbrc R2,7
 2B2E 3094              com R3
 2B30 20920900          sts _crc16array+9,R2
 2B34                   .dbline 1464
 2B34           ;                 
 2B34           ;                 CheckMotor(30);       
 2B34 0EE1              ldi R16,30
 2B36 10E0              ldi R17,0
 2B38 0E948A02          xcall _CheckMotor
 2B3C                   .dbline 1465
 2B3C           ;                 T_dat=myFIB.i[0];
 2B3C 20903502          lds R2,_myFIB
 2B40 30903602          lds R3,_myFIB+1
 2B44 3092CE01          sts _T_dat+1,R3
 2B48 2092CD01          sts _T_dat,R2
 2B4C                   .dbline 1466
 2B4C           ;                 SendManchester();//流量-相位2
 2B4C 93D4              xcall _SendManchester
 2B4E                   .dbline 1467
 2B4E           ;                 crc16array[10]=(unsigned char)(T_dat);
 2B4E 2090CD01          lds R2,_T_dat
 2B52 3090CE01          lds R3,_T_dat+1
 2B56 20920A00          sts _crc16array+10,R2
 2B5A                   .dbline 1468
 2B5A           ;                 crc16array[11]=(unsigned char)(T_dat>>8);
 2B5A 232C              mov R2,R3
 2B5C 3324              clr R3
 2B5E 27FC              sbrc R2,7
 2B60 3094              com R3
 2B62 20920B00          sts _crc16array+11,R2
 2B66                   .dbline 1470
 2B66           ;                 
 2B66           ;                 CheckMotor(30);        
 2B66 0EE1              ldi R16,30
 2B68 10E0              ldi R17,0
 2B6A 0E948A02          xcall _CheckMotor
 2B6E                   .dbline 1471
 2B6E           ;                 T_dat=Motor1Status.i;
 2B6E 20903302          lds R2,_Motor1Status
 2B72 30903402          lds R3,_Motor1Status+1
 2B76 3092CE01          sts _T_dat+1,R3
 2B7A 2092CD01          sts _T_dat,R2
 2B7E                   .dbline 1472
 2B7E           ;                 SendManchester();//收放电机状态
 2B7E 7AD4              xcall _SendManchester
 2B80                   .dbline 1473
 2B80           ;                 crc16array[12]=(unsigned char)(T_dat);
 2B80 2090CD01          lds R2,_T_dat
 2B84 3090CE01          lds R3,_T_dat+1
 2B88 20920C00          sts _crc16array+12,R2
 2B8C                   .dbline 1474
 2B8C           ;                 crc16array[13]=(unsigned char)(T_dat>>8);
 2B8C 232C              mov R2,R3
 2B8E 3324              clr R3
 2B90 27FC              sbrc R2,7
 2B92 3094              com R3
 2B94 20920D00          sts _crc16array+13,R2
 2B98                   .dbline 1476
 2B98           ;                 
 2B98           ;                 CheckMotor(30);        
 2B98 0EE1              ldi R16,30
 2B9A 10E0              ldi R17,0
 2B9C 0E948A02          xcall _CheckMotor
 2BA0                   .dbline 1477
 2BA0           ;                 T_dat=Motor2Status.i;
 2BA0 20903102          lds R2,_Motor2Status
 2BA4 30903202          lds R3,_Motor2Status+1
 2BA8 3092CE01          sts _T_dat+1,R3
 2BAC 2092CD01          sts _T_dat,R2
 2BB0                   .dbline 1478
 2BB0           ;                 SendManchester();//调节电机状态
 2BB0 61D4              xcall _SendManchester
 2BB2                   .dbline 1479
 2BB2           ;                 crc16array[14]=(unsigned char)(T_dat);
 2BB2 2090CD01          lds R2,_T_dat
 2BB6 3090CE01          lds R3,_T_dat+1
 2BBA 20920E00          sts _crc16array+14,R2
 2BBE                   .dbline 1480
 2BBE           ;                 crc16array[15]=(unsigned char)(T_dat>>8);
 2BBE 232C              mov R2,R3
 2BC0 3324              clr R3
 2BC2 27FC              sbrc R2,7
 2BC4 3094              com R3
 2BC6 20920F00          sts _crc16array+15,R2
 2BCA                   .dbline 1482
 2BCA           ;                 
 2BCA           ;                 CheckMotor(30);       
 2BCA 0EE1              ldi R16,30
 2BCC 10E0              ldi R17,0
 2BCE 0E948A02          xcall _CheckMotor
 2BD2                   .dbline 1483
 2BD2           ;                 crc16(crc16array,16);//0.75ms
 2BD2 20E1              ldi R18,16
 2BD4 30E0              ldi R19,0
 2BD6 00E0              ldi R16,<_crc16array
 2BD8 10E0              ldi R17,>_crc16array
 2BDA 0E944C1E          xcall _crc16
 2BDE                   .dbline 1484
 2BDE           ;                 T_dat=crc16hi;
 2BDE 20901100          lds R2,_crc16hi
 2BE2 3324              clr R3
 2BE4 3092CE01          sts _T_dat+1,R3
 2BE8 2092CD01          sts _T_dat,R2
 2BEC                   .dbline 1485
 2BEC           ;                 T_dat<<=8;
 2BEC 2090CD01          lds R2,_T_dat
 2BF0 3090CE01          lds R3,_T_dat+1
 2BF4 322C              mov R3,R2
 2BF6 2224              clr R2
 2BF8 3092CE01          sts _T_dat+1,R3
 2BFC 2092CD01          sts _T_dat,R2
 2C00                   .dbline 1486
 2C00           ;                 T_dat|=crc16lo;         
 2C00 20901000          lds R2,_crc16lo
 2C04 3324              clr R3
 2C06 4090CD01          lds R4,_T_dat
 2C0A 5090CE01          lds R5,_T_dat+1
 2C0E 4228              or R4,R2
 2C10 5328              or R5,R3
 2C12 5092CE01          sts _T_dat+1,R5
 2C16 4092CD01          sts _T_dat,R4
 2C1A                   .dbline 1487
 2C1A           ;           SendManchester();//上传CRC校验共2字节
 2C1A 2CD4              xcall _SendManchester
 2C1C                   .dbline 1488
 2C1C           ;                }      
 2C1C                   .dbline 1489
 2C1C           ;               }
 2C1C A0C1              xjmp L361
 2C1E           L620:
 2C1E                   .dbline 1490
 2C1E           ;               else  if(R_dat==0xc5) //读仪器信息,共320字节，分5次从流量板中提取，每包64字节
 2C1E 8091CB01          lds R24,_R_dat
 2C22 9091CC01          lds R25,_R_dat+1
 2C26 853C              cpi R24,197
 2C28 E0E0              ldi R30,0
 2C2A 9E07              cpc R25,R30
 2C2C 09F0              breq X271
 2C2E 6AC1              xjmp L651
 2C30           X271:
 2C30           X219:
 2C30                   .dbline 1491
 2C30           ;               {
 2C30                   .dbline 1492
 2C30           ;                Uart0TxData[0]=0xE8;
 2C30 88EE              ldi R24,232
 2C32 80931F00          sts _Uart0TxData,R24
 2C36                   .dbline 1493
 2C36           ;                Uart0TxData[1]=0x40;
 2C36 80E4              ldi R24,64
 2C38 80932000          sts _Uart0TxData+1,R24
 2C3C                   .dbline 1494
 2C3C           ;                Uart0TxData[2]=0x83;
 2C3C 83E8              ldi R24,131
 2C3E 80932100          sts _Uart0TxData+2,R24
 2C42                   .dbline 1495
 2C42           ;                Uart0TxData[3]=0;//包0
 2C42 2224              clr R2
 2C44 20922200          sts _Uart0TxData+3,R2
 2C48                   .dbline 1496
 2C48           ;                SendUart0_2(9,5);// 超时40ms   
 2C48 25E0              ldi R18,5
 2C4A 30E0              ldi R19,0
 2C4C 09E0              ldi R16,9
 2C4E 0E944C00          xcall _SendUart0_2
 2C52                   .dbline 1497
 2C52           ;                if(Uart0RxCounter==64) 
 2C52 8091E101          lds R24,_Uart0RxCounter
 2C56 8034              cpi R24,64
 2C58 99F5              brne L656
 2C5A           X220:
 2C5A                   .dbline 1498
 2C5A           ;                 {
 2C5A                   .dbline 1499
 2C5A           ;                  for(i=0;i<32;i++)
 2C5A AA24              clr R10
 2C5C 2EC0              xjmp L661
 2C5E           L658:
 2C5E                   .dbline 1500
 2C5E           ;                  {
 2C5E                   .dbline 1501
 2C5E           ;                  CheckMotor(20);
 2C5E 04E1              ldi R16,20
 2C60 10E0              ldi R17,0
 2C62 0E948A02          xcall _CheckMotor
 2C66                   .dbline 1502
 2C66           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2C66 80E0              ldi R24,<_Uart0RxData+1
 2C68 90E0              ldi R25,>_Uart0RxData+1
 2C6A EA2D              mov R30,R10
 2C6C FF27              clr R31
 2C6E EE0F              lsl R30
 2C70 FF1F              rol R31
 2C72 E80F              add R30,R24
 2C74 F91F              adc R31,R25
 2C76 2080              ldd R2,z+0
 2C78 3324              clr R3
 2C7A 3092CE01          sts _T_dat+1,R3
 2C7E 2092CD01          sts _T_dat,R2
 2C82                   .dbline 1503
 2C82           ;                  T_dat<<=8;
 2C82 322C              mov R3,R2
 2C84 2224              clr R2
 2C86 3092CE01          sts _T_dat+1,R3
 2C8A 2092CD01          sts _T_dat,R2
 2C8E                   .dbline 1504
 2C8E           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2C8E 80E0              ldi R24,<_Uart0RxData
 2C90 90E0              ldi R25,>_Uart0RxData
 2C92 EA2D              mov R30,R10
 2C94 FF27              clr R31
 2C96 EE0F              lsl R30
 2C98 FF1F              rol R31
 2C9A E80F              add R30,R24
 2C9C F91F              adc R31,R25
 2C9E 2080              ldd R2,z+0
 2CA0 3324              clr R3
 2CA2 4090CD01          lds R4,_T_dat
 2CA6 5090CE01          lds R5,_T_dat+1
 2CAA 4228              or R4,R2
 2CAC 5328              or R5,R3
 2CAE 5092CE01          sts _T_dat+1,R5
 2CB2 4092CD01          sts _T_dat,R4
 2CB6                   .dbline 1505
 2CB6           ;                  SendManchester();             
 2CB6 DED3              xcall _SendManchester
 2CB8                   .dbline 1506
 2CB8           ;                  }    
 2CB8           L659:
 2CB8                   .dbline 1499
 2CB8 A394              inc R10
 2CBA           L661:
 2CBA                   .dbline 1499
 2CBA 8A2D              mov R24,R10
 2CBC 8032              cpi R24,32
 2CBE 78F2              brlo L658
 2CC0           X221:
 2CC0                   .dbline 1507
 2CC0           ;                }      
 2CC0           L656:
 2CC0                   .dbline 1509
 2CC0           ; 
 2CC0           ;                Uart0TxData[0]=0xE8;
 2CC0 88EE              ldi R24,232
 2CC2 80931F00          sts _Uart0TxData,R24
 2CC6                   .dbline 1510
 2CC6           ;                Uart0TxData[1]=0x40;
 2CC6 80E4              ldi R24,64
 2CC8 80932000          sts _Uart0TxData+1,R24
 2CCC                   .dbline 1511
 2CCC           ;                Uart0TxData[2]=0x83;
 2CCC 83E8              ldi R24,131
 2CCE 80932100          sts _Uart0TxData+2,R24
 2CD2                   .dbline 1512
 2CD2           ;                Uart0TxData[3]=1;//包1
 2CD2 81E0              ldi R24,1
 2CD4 80932200          sts _Uart0TxData+3,R24
 2CD8                   .dbline 1513
 2CD8           ;                SendUart0_2(9,5);// 超时40ms    
 2CD8 25E0              ldi R18,5
 2CDA 30E0              ldi R19,0
 2CDC 09E0              ldi R16,9
 2CDE 0E944C00          xcall _SendUart0_2
 2CE2                   .dbline 1514
 2CE2           ;                if(Uart0RxCounter==64) 
 2CE2 8091E101          lds R24,_Uart0RxCounter
 2CE6 8034              cpi R24,64
 2CE8 99F5              brne L666
 2CEA           X222:
 2CEA                   .dbline 1515
 2CEA           ;                 {
 2CEA                   .dbline 1516
 2CEA           ;                  for(i=0;i<32;i++)
 2CEA AA24              clr R10
 2CEC 2EC0              xjmp L671
 2CEE           L668:
 2CEE                   .dbline 1517
 2CEE           ;                  {
 2CEE                   .dbline 1518
 2CEE           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2CEE 80E0              ldi R24,<_Uart0RxData+1
 2CF0 90E0              ldi R25,>_Uart0RxData+1
 2CF2 EA2D              mov R30,R10
 2CF4 FF27              clr R31
 2CF6 EE0F              lsl R30
 2CF8 FF1F              rol R31
 2CFA E80F              add R30,R24
 2CFC F91F              adc R31,R25
 2CFE 2080              ldd R2,z+0
 2D00 3324              clr R3
 2D02 3092CE01          sts _T_dat+1,R3
 2D06 2092CD01          sts _T_dat,R2
 2D0A                   .dbline 1519
 2D0A           ;                  T_dat<<=8;
 2D0A 322C              mov R3,R2
 2D0C 2224              clr R2
 2D0E 3092CE01          sts _T_dat+1,R3
 2D12 2092CD01          sts _T_dat,R2
 2D16                   .dbline 1520
 2D16           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2D16 80E0              ldi R24,<_Uart0RxData
 2D18 90E0              ldi R25,>_Uart0RxData
 2D1A EA2D              mov R30,R10
 2D1C FF27              clr R31
 2D1E EE0F              lsl R30
 2D20 FF1F              rol R31
 2D22 E80F              add R30,R24
 2D24 F91F              adc R31,R25
 2D26 2080              ldd R2,z+0
 2D28 3324              clr R3
 2D2A 4090CD01          lds R4,_T_dat
 2D2E 5090CE01          lds R5,_T_dat+1
 2D32 4228              or R4,R2
 2D34 5328              or R5,R3
 2D36 5092CE01          sts _T_dat+1,R5
 2D3A 4092CD01          sts _T_dat,R4
 2D3E                   .dbline 1521
 2D3E           ;                  SendManchester();
 2D3E 9AD3              xcall _SendManchester
 2D40                   .dbline 1522
 2D40           ;                  CheckMotor(20);
 2D40 04E1              ldi R16,20
 2D42 10E0              ldi R17,0
 2D44 0E948A02          xcall _CheckMotor
 2D48                   .dbline 1523
 2D48           ;                 }
 2D48           L669:
 2D48                   .dbline 1516
 2D48 A394              inc R10
 2D4A           L671:
 2D4A                   .dbline 1516
 2D4A 8A2D              mov R24,R10
 2D4C 8032              cpi R24,32
 2D4E 78F2              brlo L668
 2D50           X223:
 2D50                   .dbline 1524
 2D50           ;                }      
 2D50           L666:
 2D50                   .dbline 1526
 2D50           ;                       
 2D50           ;                Uart0TxData[0]=0xE8;
 2D50 88EE              ldi R24,232
 2D52 80931F00          sts _Uart0TxData,R24
 2D56                   .dbline 1527
 2D56           ;                Uart0TxData[1]=0x40;
 2D56 80E4              ldi R24,64
 2D58 80932000          sts _Uart0TxData+1,R24
 2D5C                   .dbline 1528
 2D5C           ;                Uart0TxData[2]=0x83;
 2D5C 83E8              ldi R24,131
 2D5E 80932100          sts _Uart0TxData+2,R24
 2D62                   .dbline 1529
 2D62           ;                Uart0TxData[3]=2;//包2
 2D62 82E0              ldi R24,2
 2D64 80932200          sts _Uart0TxData+3,R24
 2D68                   .dbline 1530
 2D68           ;                SendUart0_2(9,5);// 超时40ms    
 2D68 25E0              ldi R18,5
 2D6A 30E0              ldi R19,0
 2D6C 09E0              ldi R16,9
 2D6E 0E944C00          xcall _SendUart0_2
 2D72                   .dbline 1531
 2D72           ;                if(Uart0RxCounter==64) 
 2D72 8091E101          lds R24,_Uart0RxCounter
 2D76 8034              cpi R24,64
 2D78 99F5              brne L676
 2D7A           X224:
 2D7A                   .dbline 1532
 2D7A           ;                 {
 2D7A                   .dbline 1533
 2D7A           ;                  for(i=0;i<32;i++)
 2D7A AA24              clr R10
 2D7C 2EC0              xjmp L681
 2D7E           L678:
 2D7E                   .dbline 1534
 2D7E           ;                  {
 2D7E                   .dbline 1535
 2D7E           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2D7E 80E0              ldi R24,<_Uart0RxData+1
 2D80 90E0              ldi R25,>_Uart0RxData+1
 2D82 EA2D              mov R30,R10
 2D84 FF27              clr R31
 2D86 EE0F              lsl R30
 2D88 FF1F              rol R31
 2D8A E80F              add R30,R24
 2D8C F91F              adc R31,R25
 2D8E 2080              ldd R2,z+0
 2D90 3324              clr R3
 2D92 3092CE01          sts _T_dat+1,R3
 2D96 2092CD01          sts _T_dat,R2
 2D9A                   .dbline 1536
 2D9A           ;                  T_dat<<=8;
 2D9A 322C              mov R3,R2
 2D9C 2224              clr R2
 2D9E 3092CE01          sts _T_dat+1,R3
 2DA2 2092CD01          sts _T_dat,R2
 2DA6                   .dbline 1537
 2DA6           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2DA6 80E0              ldi R24,<_Uart0RxData
 2DA8 90E0              ldi R25,>_Uart0RxData
 2DAA EA2D              mov R30,R10
 2DAC FF27              clr R31
 2DAE EE0F              lsl R30
 2DB0 FF1F              rol R31
 2DB2 E80F              add R30,R24
 2DB4 F91F              adc R31,R25
 2DB6 2080              ldd R2,z+0
 2DB8 3324              clr R3
 2DBA 4090CD01          lds R4,_T_dat
 2DBE 5090CE01          lds R5,_T_dat+1
 2DC2 4228              or R4,R2
 2DC4 5328              or R5,R3
 2DC6 5092CE01          sts _T_dat+1,R5
 2DCA 4092CD01          sts _T_dat,R4
 2DCE                   .dbline 1538
 2DCE           ;                  SendManchester();
 2DCE 52D3              xcall _SendManchester
 2DD0                   .dbline 1539
 2DD0           ;                  CheckMotor(20);
 2DD0 04E1              ldi R16,20
 2DD2 10E0              ldi R17,0
 2DD4 0E948A02          xcall _CheckMotor
 2DD8                   .dbline 1540
 2DD8           ;                 }
 2DD8           L679:
 2DD8                   .dbline 1533
 2DD8 A394              inc R10
 2DDA           L681:
 2DDA                   .dbline 1533
 2DDA 8A2D              mov R24,R10
 2DDC 8032              cpi R24,32
 2DDE 78F2              brlo L678
 2DE0           X225:
 2DE0                   .dbline 1541
 2DE0           ;                }      
 2DE0           L676:
 2DE0                   .dbline 1543
 2DE0           ;                
 2DE0           ;                Uart0TxData[0]=0xE8;
 2DE0 88EE              ldi R24,232
 2DE2 80931F00          sts _Uart0TxData,R24
 2DE6                   .dbline 1544
 2DE6           ;                Uart0TxData[1]=0x40;
 2DE6 80E4              ldi R24,64
 2DE8 80932000          sts _Uart0TxData+1,R24
 2DEC                   .dbline 1545
 2DEC           ;                Uart0TxData[2]=0x83;
 2DEC 83E8              ldi R24,131
 2DEE 80932100          sts _Uart0TxData+2,R24
 2DF2                   .dbline 1546
 2DF2           ;                Uart0TxData[3]=3;//包3
 2DF2 83E0              ldi R24,3
 2DF4 80932200          sts _Uart0TxData+3,R24
 2DF8                   .dbline 1547
 2DF8           ;                SendUart0_2(9,5);// 超时40ms    
 2DF8 25E0              ldi R18,5
 2DFA 30E0              ldi R19,0
 2DFC 09E0              ldi R16,9
 2DFE 0E944C00          xcall _SendUart0_2
 2E02                   .dbline 1548
 2E02           ;                if(Uart0RxCounter==64) 
 2E02 8091E101          lds R24,_Uart0RxCounter
 2E06 8034              cpi R24,64
 2E08 99F5              brne L686
 2E0A           X226:
 2E0A                   .dbline 1549
 2E0A           ;                 {
 2E0A                   .dbline 1550
 2E0A           ;                  for(i=0;i<32;i++)
 2E0A AA24              clr R10
 2E0C 2EC0              xjmp L691
 2E0E           L688:
 2E0E                   .dbline 1551
 2E0E           ;                  {
 2E0E                   .dbline 1552
 2E0E           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2E0E 80E0              ldi R24,<_Uart0RxData+1
 2E10 90E0              ldi R25,>_Uart0RxData+1
 2E12 EA2D              mov R30,R10
 2E14 FF27              clr R31
 2E16 EE0F              lsl R30
 2E18 FF1F              rol R31
 2E1A E80F              add R30,R24
 2E1C F91F              adc R31,R25
 2E1E 2080              ldd R2,z+0
 2E20 3324              clr R3
 2E22 3092CE01          sts _T_dat+1,R3
 2E26 2092CD01          sts _T_dat,R2
 2E2A                   .dbline 1553
 2E2A           ;                  T_dat<<=8;
 2E2A 322C              mov R3,R2
 2E2C 2224              clr R2
 2E2E 3092CE01          sts _T_dat+1,R3
 2E32 2092CD01          sts _T_dat,R2
 2E36                   .dbline 1554
 2E36           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2E36 80E0              ldi R24,<_Uart0RxData
 2E38 90E0              ldi R25,>_Uart0RxData
 2E3A EA2D              mov R30,R10
 2E3C FF27              clr R31
 2E3E EE0F              lsl R30
 2E40 FF1F              rol R31
 2E42 E80F              add R30,R24
 2E44 F91F              adc R31,R25
 2E46 2080              ldd R2,z+0
 2E48 3324              clr R3
 2E4A 4090CD01          lds R4,_T_dat
 2E4E 5090CE01          lds R5,_T_dat+1
 2E52 4228              or R4,R2
 2E54 5328              or R5,R3
 2E56 5092CE01          sts _T_dat+1,R5
 2E5A 4092CD01          sts _T_dat,R4
 2E5E                   .dbline 1555
 2E5E           ;                  SendManchester();
 2E5E 0AD3              xcall _SendManchester
 2E60                   .dbline 1556
 2E60           ;                  CheckMotor(20);
 2E60 04E1              ldi R16,20
 2E62 10E0              ldi R17,0
 2E64 0E948A02          xcall _CheckMotor
 2E68                   .dbline 1557
 2E68           ;                 }
 2E68           L689:
 2E68                   .dbline 1550
 2E68 A394              inc R10
 2E6A           L691:
 2E6A                   .dbline 1550
 2E6A 8A2D              mov R24,R10
 2E6C 8032              cpi R24,32
 2E6E 78F2              brlo L688
 2E70           X227:
 2E70                   .dbline 1558
 2E70           ;                }      
 2E70           L686:
 2E70                   .dbline 1560
 2E70           ;                
 2E70           ;                Uart0TxData[0]=0xE8;
 2E70 88EE              ldi R24,232
 2E72 80931F00          sts _Uart0TxData,R24
 2E76                   .dbline 1561
 2E76           ;                Uart0TxData[1]=0x40;
 2E76 80E4              ldi R24,64
 2E78 80932000          sts _Uart0TxData+1,R24
 2E7C                   .dbline 1562
 2E7C           ;                Uart0TxData[2]=0x83;
 2E7C 83E8              ldi R24,131
 2E7E 80932100          sts _Uart0TxData+2,R24
 2E82                   .dbline 1563
 2E82           ;                Uart0TxData[3]=4;//包4
 2E82 84E0              ldi R24,4
 2E84 80932200          sts _Uart0TxData+3,R24
 2E88                   .dbline 1564
 2E88           ;                SendUart0_2(9,5);// 超时40ms    
 2E88 25E0              ldi R18,5
 2E8A 30E0              ldi R19,0
 2E8C 09E0              ldi R16,9
 2E8E 0E944C00          xcall _SendUart0_2
 2E92                   .dbline 1565
 2E92           ;                if(Uart0RxCounter==64) 
 2E92 8091E101          lds R24,_Uart0RxCounter
 2E96 8034              cpi R24,64
 2E98 09F0              breq X272
 2E9A 61C0              xjmp L361
 2E9C           X272:
 2E9C           X228:
 2E9C                   .dbline 1566
 2E9C           ;                 {
 2E9C                   .dbline 1567
 2E9C           ;                  for(i=0;i<32;i++)
 2E9C AA24              clr R10
 2E9E 2EC0              xjmp L701
 2EA0           L698:
 2EA0                   .dbline 1568
 2EA0           ;                  {
 2EA0                   .dbline 1569
 2EA0           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2EA0 80E0              ldi R24,<_Uart0RxData+1
 2EA2 90E0              ldi R25,>_Uart0RxData+1
 2EA4 EA2D              mov R30,R10
 2EA6 FF27              clr R31
 2EA8 EE0F              lsl R30
 2EAA FF1F              rol R31
 2EAC E80F              add R30,R24
 2EAE F91F              adc R31,R25
 2EB0 2080              ldd R2,z+0
 2EB2 3324              clr R3
 2EB4 3092CE01          sts _T_dat+1,R3
 2EB8 2092CD01          sts _T_dat,R2
 2EBC                   .dbline 1570
 2EBC           ;                  T_dat<<=8;
 2EBC 322C              mov R3,R2
 2EBE 2224              clr R2
 2EC0 3092CE01          sts _T_dat+1,R3
 2EC4 2092CD01          sts _T_dat,R2
 2EC8                   .dbline 1571
 2EC8           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2EC8 80E0              ldi R24,<_Uart0RxData
 2ECA 90E0              ldi R25,>_Uart0RxData
 2ECC EA2D              mov R30,R10
 2ECE FF27              clr R31
 2ED0 EE0F              lsl R30
 2ED2 FF1F              rol R31
 2ED4 E80F              add R30,R24
 2ED6 F91F              adc R31,R25
 2ED8 2080              ldd R2,z+0
 2EDA 3324              clr R3
 2EDC 4090CD01          lds R4,_T_dat
 2EE0 5090CE01          lds R5,_T_dat+1
 2EE4 4228              or R4,R2
 2EE6 5328              or R5,R3
 2EE8 5092CE01          sts _T_dat+1,R5
 2EEC 4092CD01          sts _T_dat,R4
 2EF0                   .dbline 1572
 2EF0           ;                  SendManchester();
 2EF0 C1D2              xcall _SendManchester
 2EF2                   .dbline 1573
 2EF2           ;                  CheckMotor(20);
 2EF2 04E1              ldi R16,20
 2EF4 10E0              ldi R17,0
 2EF6 0E948A02          xcall _CheckMotor
 2EFA                   .dbline 1574
 2EFA           ;                 }
 2EFA           L699:
 2EFA                   .dbline 1567
 2EFA A394              inc R10
 2EFC           L701:
 2EFC                   .dbline 1567
 2EFC 8A2D              mov R24,R10
 2EFE 8032              cpi R24,32
 2F00 78F2              brlo L698
 2F02           X229:
 2F02                   .dbline 1575
 2F02           ;                }      
 2F02                   .dbline 1577
 2F02           ;                
 2F02           ;               }
 2F02 2DC0              xjmp L361
 2F04           L651:
 2F04                   .dbline 1578
 2F04           ;               else  if(R_dat==0xca) //写仪器信息
 2F04 8091CB01          lds R24,_R_dat
 2F08 9091CC01          lds R25,_R_dat+1
 2F0C 8A3C              cpi R24,202
 2F0E E0E0              ldi R30,0
 2F10 9E07              cpc R25,R30
 2F12 29F5              brne L361
 2F14           X230:
 2F14                   .dbline 1579
 2F14           ;               {
 2F14                   .dbline 1580
 2F14           ;                DataFlag=4;
 2F14 84E0              ldi R24,4
 2F16 90E0              ldi R25,0
 2F18 9093B201          sts _DataFlag+1,R25
 2F1C 8093B101          sts _DataFlag,R24
 2F20                   .dbline 1581
 2F20           ;                coeff_len=320;
 2F20 80E4              ldi R24,320
 2F22 91E0              ldi R25,1
 2F24 90931D00          sts _coeff_len+1,R25
 2F28 80931C00          sts _coeff_len,R24
 2F2C                   .dbline 1582
 2F2C           ;                coeff_count=0;
 2F2C 2224              clr R2
 2F2E 3324              clr R3
 2F30 30921B00          sts _coeff_count+1,R3
 2F34 20921A00          sts _coeff_count,R2
 2F38                   .dbline 1583
 2F38           ;                TimeOutFlag=0;
 2F38 2092C901          sts _TimeOutFlag,R2
 2F3C                   .dbline 1584
 2F3C           ;                Timer0Counter=2000;//16s定时
 2F3C 80ED              ldi R24,2000
 2F3E 97E0              ldi R25,7
 2F40 90932D02          sts _Timer0Counter+1,R25
 2F44 80932C02          sts _Timer0Counter,R24
 2F48                   .dbline 1585
 2F48           ;            TCNT0=0x06; //8ms
 2F48 86E0              ldi R24,6
 2F4A 82BF              out 0x32,R24
 2F4C                   .dbline 1586
 2F4C           ;            TCCR0|=0x06;//256分频
 2F4C 83B7              in R24,0x33
 2F4E 8660              ori R24,6
 2F50 83BF              out 0x33,R24
 2F52                   .dbline 1587
 2F52           ;            TIFR|=0x01; //清定时器0中断标志
 2F52 86B7              in R24,0x36
 2F54 8160              ori R24,1
 2F56 86BF              out 0x36,R24
 2F58                   .dbline 1588
 2F58           ;          TIMSK|=0x01;//使能定时器0中断                
 2F58 87B7              in R24,0x37
 2F5A 8160              ori R24,1
 2F5C 87BF              out 0x37,R24
 2F5E                   .dbline 1589
 2F5E           ;               }
 2F5E                   .dbline 1590
 2F5E           ;       break;
 2F5E                   .dbline 1592
 2F5E           ;     default: 
 2F5E           ;       break;  
 2F5E           L361:
 2F5E                   .dbline 1594
 2F5E           ;    }
 2F5E           ;   }
 2F5E           L172:
 2F5E           L716:
 2F5E                   .dbline 1596
 2F5E           ; RDataEnd:
 2F5E           ;       IntFlag=0;
 2F5E 2224              clr R2
 2F60 2092AF01          sts _IntFlag,R2
 2F64                   .dbline 1597
 2F64           ;     EIFR|=0x08;//清INT3中断标志
 2F64 88B7              in R24,0x38
 2F66 8860              ori R24,8
 2F68 88BF              out 0x38,R24
 2F6A                   .dbline 1598
 2F6A           ;     EIMSK|=0x08;//使能INT3中断 
 2F6A 89B7              in R24,0x39
 2F6C 8860              ori R24,8
 2F6E 89BF              out 0x39,R24
 2F70                   .dbline 1599
 2F70           ;   }  
 2F70           L169:
 2F70           L168:
 2F70                   .dbline 1600
 2F70           ;   }
 2F70           L165:
 2F70                   .dbline 491
 2F70 0C942C05          xjmp L164
 2F74           X231:
 2F74                   .dbline -2
 2F74           L150:
 2F74                   .dbline 0 ; func end
 2F74 2596              adiw R28,5
 2F76 0895              ret
 2F78                   .dbsym l l 1 l
 2F78                   .dbsym l pt 2 i
 2F78                   .dbsym l mk 2 i
 2F78                   .dbsym l at 2 i
 2F78                   .dbsym l add 2 i
 2F78                   .dbsym r TestDataBlockCount 12 i
 2F78                   .dbsym r TestDataBlockIndex 10 i
 2F78                   .dbsym r i 10 c
 2F78                   .dbend
                        .area vector(rom, abs)
                        .org 92
 005C 0C94BC17          jmp _E_comp
                        .area text(rom, con, rel)
 2F78                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 2F78                   .dbfunc e E_comp _E_comp fV
                        .even
 2F78           _E_comp::
 2F78 1A92              st -y,R1
 2F7A 2A92              st -y,R2
 2F7C 8A93              st -y,R24
 2F7E 9A93              st -y,R25
 2F80 1FB6              IN R1,63
 2F82 1A92              st -y,R1
 2F84                   .dbline -1
 2F84                   .dbline 1605
 2F84           ; }
 2F84           ; 
 2F84           ; #pragma interrupt_handler E_comp:24
 2F84           ; void E_comp(void)  //模拟比较器中断,总线电压被拉低到28.5V后，立即停电机
 2F84           ; {   
 2F84                   .dbline 1606
 2F84           ;   if(PWM1_PIN==1)//收放电机欠压堵转
 2F84 89B3              in R24,0x19
 2F86 8270              andi R24,2
 2F88 8695              lsr R24
 2F8A 8130              cpi R24,1
 2F8C 49F4              brne L718
 2F8E           X273:
 2F8E                   .dbline 1607
 2F8E           ;    {
 2F8E                   .dbline 1608
 2F8E           ;        Motor1Status.s.UnderVoltage=1;
 2F8E 80913302          lds R24,_Motor1Status
 2F92 90913402          lds R25,_Motor1Status+1
 2F96 8062              ori R24,32
 2F98 90933402          sts _Motor1Status+1,R25
 2F9C 80933302          sts _Motor1Status,R24
 2FA0                   .dbline 1609
 2FA0           ;    }
 2FA0           L718:
 2FA0                   .dbline 1610
 2FA0           ;   if(PWM2_PIN==1)//调节电机欠压堵转
 2FA0 80B1              in R24,0x0
 2FA2 8470              andi R24,4
 2FA4 8695              lsr R24
 2FA6 8695              lsr R24
 2FA8 8130              cpi R24,1
 2FAA 49F4              brne L720
 2FAC           X274:
 2FAC                   .dbline 1611
 2FAC           ;    { 
 2FAC                   .dbline 1612
 2FAC           ;       Motor2Status.s.UnderVoltage=1;
 2FAC 80913102          lds R24,_Motor2Status
 2FB0 90913202          lds R25,_Motor2Status+1
 2FB4 8062              ori R24,32
 2FB6 90933202          sts _Motor2Status+1,R25
 2FBA 80933102          sts _Motor2Status,R24
 2FBE                   .dbline 1613
 2FBE           ;    } 
 2FBE           L720:
 2FBE                   .dbline 1614
 2FBE           ;    MOTORSTOP  //关电机 
 2FBE                   .dbline 1614
 2FBE 8AB3              in R24,0x1a
 2FC0 8760              ori R24,7
 2FC2 8ABB              out 0x1a,R24
 2FC4                   .dbline 1614
 2FC4 8BB3              in R24,0x1b
 2FC6 8D7F              andi R24,253
 2FC8 8BBB              out 0x1b,R24
 2FCA                   .dbline 1614
 2FCA 8BB3              in R24,0x1b
 2FCC 887F              andi R24,248
 2FCE 8BBB              out 0x1b,R24
 2FD0                   .dbline 1614
 2FD0 80916100          lds R24,97
 2FD4 8760              ori R24,7
 2FD6 80936100          sts 97,R24
 2FDA                   .dbline 1614
 2FDA 80916200          lds R24,98
 2FDE 8B7F              andi R24,251
 2FE0 80936200          sts 98,R24
 2FE4                   .dbline 1614
 2FE4 80916200          lds R24,98
 2FE8 887F              andi R24,248
 2FEA 80936200          sts 98,R24
 2FEE                   .dbline 1614
 2FEE BF9A              sbi 0x17,7
 2FF0                   .dbline 1614
 2FF0 88B3              in R24,0x18
 2FF2 8F77              andi R24,127
 2FF4 88BB              out 0x18,R24
 2FF6                   .dbline 1614
 2FF6                   .dbline -2
 2FF6           L717:
 2FF6                   .dbline 0 ; func end
 2FF6 1990              ld R1,y+
 2FF8 1FBE              OUT 63,R1
 2FFA 9991              ld R25,y+
 2FFC 8991              ld R24,y+
 2FFE 2990              ld R2,y+
 3000 1990              ld R1,y+
 3002 1895              reti
 3004                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C940218          jmp _usart0_isr
                        .area text(rom, con, rel)
 3004                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 3004                   .dbfunc e usart0_isr _usart0_isr fV
                        .even
 3004           _usart0_isr::
 3004 2A92              st -y,R2
 3006 8A93              st -y,R24
 3008 9A93              st -y,R25
 300A EA93              st -y,R30
 300C FA93              st -y,R31
 300E 2FB6              IN R2,63
 3010 2A92              st -y,R2
 3012                   .dbline -1
 3012                   .dbline 1645
 3012           ; }
 3012           ; 
 3012           ; /*
 3012           ; #pragma interrupt_handler int0_isr:2
 3012           ; void int0_isr(void)//外部中断0，过流堵转
 3012           ; {
 3012           ;   CompCounter++; 
 3012           ;   if(CompCounter>1000)
 3012           ;   {
 3012           ;    MOTORSTOP  //关电机
 3012           ;   
 3012           ;    if(Motor1Status.s.ThisRun>0)//收放电机过流堵转
 3012           ;     {
 3012           ;        Motor1Status.s.ThisRun=0;
 3012           ;        Motor1Status.s.CommandStop=0;
 3012           ;        Motor1Status.s.OverCurrent=1;
 3012           ;        Motor1Status.s.UnderVoltage=0;
 3012           ;       }
 3012           ;    if(Motor2Status.s.ThisRun>0)//调节电机过流堵转
 3012           ;     {
 3012           ;         Motor2Status.s.ThisRun=0;
 3012           ;         Motor2Status.s.CommandStop=0;
 3012           ;         Motor2Status.s.OverCurrent=1;
 3012           ;         Motor2Status.s.UnderVoltage=0;
 3012           ;       }
 3012           ;   }
 3012           ; }
 3012           ; */
 3012           ; #pragma interrupt_handler usart0_isr:19
 3012           ; void usart0_isr(void) //串口接收中断
 3012           ; {
 3012                   .dbline 1646
 3012           ;     if(Uart0RxCounter<74)
 3012 8091E101          lds R24,_Uart0RxCounter
 3016 8A34              cpi R24,74
 3018 70F4              brsh L723
 301A           X275:
 301A                   .dbline 1647
 301A           ;       {
 301A                   .dbline 1648
 301A           ;     Uart0RxData[Uart0RxCounter]=UDR0;//接收串口数据,同时清空串口接收中断标志
 301A 80E0              ldi R24,<_Uart0RxData
 301C 90E0              ldi R25,>_Uart0RxData
 301E E091E101          lds R30,_Uart0RxCounter
 3022 FF27              clr R31
 3024 E80F              add R30,R24
 3026 F91F              adc R31,R25
 3028 2CB0              in R2,0xc
 302A 2082              std z+0,R2
 302C                   .dbline 1649
 302C           ;       Uart0RxCounter++;
 302C 8091E101          lds R24,_Uart0RxCounter
 3030 8F5F              subi R24,255    ; addi 1
 3032 8093E101          sts _Uart0RxCounter,R24
 3036                   .dbline 1650
 3036           ;       }
 3036           L723:
 3036                   .dbline -2
 3036           L722:
 3036                   .dbline 0 ; func end
 3036 2990              ld R2,y+
 3038 2FBE              OUT 63,R2
 303A F991              ld R31,y+
 303C E991              ld R30,y+
 303E 9991              ld R25,y+
 3040 8991              ld R24,y+
 3042 2990              ld R2,y+
 3044 1895              reti
 3046                   .dbend
                        .area vector(rom, abs)
                        .org 16
 0010 0C942318          jmp _int3_isr
                        .area text(rom, con, rel)
 3046                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 3046                   .dbfunc e int3_isr _int3_isr fV
                        .even
 3046           _int3_isr::
 3046 2A92              st -y,R2
 3048 3A92              st -y,R3
 304A 0A93              st -y,R16
 304C 1A93              st -y,R17
 304E 8A93              st -y,R24
 3050 9A93              st -y,R25
 3052 AA93              st -y,R26
 3054 EA93              st -y,R30
 3056 FA93              st -y,R31
 3058 2FB6              IN R2,63
 305A 2A92              st -y,R2
 305C                   .dbline -1
 305C                   .dbline 1673
 305C           ; }
 305C           ; 
 305C           ; /*
 305C           ; #pragma interrupt_handler ad_isr:22
 305C           ; void ad_isr(void)  //ad转换中断
 305C           ; {
 305C           ;   ADCData[ADCCn]=ADCH;
 305C           ;   ADCData[ADCCn]<<=8;
 305C           ;   ADCData[ADCCn]|=ADCL;//读AD转换结果
 305C           ;   ADCCn++;
 305C           ;   ADCData[ADCCn]&=0x03ff;//10位有效转换结果
 305C           ;   if(ADCCn==129)
 305C           ;    { 
 305C           ;    ADCSRA&=0xF7;//关AD中断
 305C           ;    ADCSRA|=0x10;//清AD中断标志
 305C           ;    ADCSRA=0;//关ADC
 305C           ;    }
 305C           ; }
 305C           ; */
 305C           ; 
 305C           ; #pragma interrupt_handler int3_isr:iv_INT3
 305C           ; void int3_isr(void)//外部中断3
 305C           ; { 
 305C                   .dbline 1674
 305C           ;    SREG&=0x7f;//关总中断
 305C 8FB7              in R24,0x3f
 305E 8F77              andi R24,127
 3060 8FBF              out 0x3f,R24
 3062                   .dbline 1675
 3062           ;    EIMSK&=0xF7;//关INT3  
 3062 89B7              in R24,0x39
 3064 877F              andi R24,247
 3066 89BF              out 0x39,R24
 3068                   .dbline 1676
 3068           ;    TCCR2 = 0x00; //stop
 3068 2224              clr R2
 306A 25BC              out 0x25,R2
 306C                   .dbline 1678
 306C           ;   
 306C           ;   DELAY10
 306C 3324              clr R3
 306E 3092AE01          sts _Tt+1,R3
 3072 2092AD01          sts _Tt,R2
 3076 09C0              xjmp L729
 3078           L726:
 3078                   .dbline 1678
 3078           L727:
 3078                   .dbline 1678
 3078 8091AD01          lds R24,_Tt
 307C 9091AE01          lds R25,_Tt+1
 3080 0196              adiw R24,1
 3082 9093AE01          sts _Tt+1,R25
 3086 8093AD01          sts _Tt,R24
 308A           L729:
 308A                   .dbline 1678
 308A 8091AD01          lds R24,_Tt
 308E 9091AE01          lds R25,_Tt+1
 3092 8430              cpi R24,4
 3094 E0E0              ldi R30,0
 3096 9E07              cpc R25,R30
 3098 78F3              brlo L726
 309A           X276:
 309A                   .dbline 1679
 309A           ;   EIFR|=0x08;//清INT3中断标志 
 309A 88B7              in R24,0x38
 309C 8860              ori R24,8
 309E 88BF              out 0x38,R24
 30A0                   .dbline 1680
 30A0           ;   if((PIND&0x08)==0x00)//高脉冲不足10us则直接跳出
 30A0 8399              sbic 0x10,3
 30A2 01C0              rjmp L730
 30A4           X277:
 30A4                   .dbline 1681
 30A4           ;   {
 30A4                   .dbline 1682
 30A4           ;    goto End;
 30A4 CDC1              xjmp L732
 30A6           L730:
 30A6                   .dbline 1685
 30A6           ;   }
 30A6           ;    
 30A6           ;    TCNT2 = 0x00;  
 30A6 2224              clr R2
 30A8 24BC              out 0x24,R2
 30AA                   .dbline 1686
 30AA           ;    TCCR2 = 0x03; //64分频,8M时钟，每个CLOCK耗时8us，最大定时2048us，每周期10个计数
 30AA 83E0              ldi R24,3
 30AC 85BD              out 0x25,R24
 30AE 29C0              xjmp L734
 30B0           L733:
 30B0                   .dbline 1689
 30B0           ;    
 30B0           ;    while(1)
 30B0           ;    {
 30B0                   .dbline 1690
 30B0           ;      T2cn=TCNT2;
 30B0 24B4              in R2,0x24
 30B2 3324              clr R3
 30B4 3092AA01          sts _T2cn+1,R3
 30B8 2092A901          sts _T2cn,R2
 30BC                   .dbline 1691
 30BC           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 30BC 80E5              ldi R24,80
 30BE 90E0              ldi R25,0
 30C0 8215              cp R24,R2
 30C2 9305              cpc R25,R3
 30C4 08F4              brsh L736
 30C6           X278:
 30C6                   .dbline 1692
 30C6           ;         {
 30C6                   .dbline 1693
 30C6           ;           goto End;
 30C6 BCC1              xjmp L732
 30C8           L736:
 30C8                   .dbline 1695
 30C8           ;         }
 30C8           ;      if((PIND&0x08)==0x00)
 30C8 8399              sbic 0x10,3
 30CA 1BC0              rjmp L738
 30CC           X279:
 30CC                   .dbline 1696
 30CC           ;        {
 30CC                   .dbline 1697
 30CC           ;          DELAY20
 30CC 2224              clr R2
 30CE 3324              clr R3
 30D0 3092AE01          sts _Tt+1,R3
 30D4 2092AD01          sts _Tt,R2
 30D8 09C0              xjmp L743
 30DA           L740:
 30DA                   .dbline 1697
 30DA           L741:
 30DA                   .dbline 1697
 30DA 8091AD01          lds R24,_Tt
 30DE 9091AE01          lds R25,_Tt+1
 30E2 0196              adiw R24,1
 30E4 9093AE01          sts _Tt+1,R25
 30E8 8093AD01          sts _Tt,R24
 30EC           L743:
 30EC                   .dbline 1697
 30EC 8091AD01          lds R24,_Tt
 30F0 9091AE01          lds R25,_Tt+1
 30F4 8430              cpi R24,4
 30F6 E0E0              ldi R30,0
 30F8 9E07              cpc R25,R30
 30FA 78F3              brlo L740
 30FC           X280:
 30FC                   .dbline 1698
 30FC           ;          if((PIND&0x08)==0x00)
 30FC 8399              sbic 0x10,3
 30FE 01C0              rjmp L744
 3100           X281:
 3100                   .dbline 1699
 3100           ;           {
 3100                   .dbline 1700
 3100           ;             break;
 3100 31C0              xjmp L747
 3102           L744:
 3102                   .dbline 1702
 3102           ;           }
 3102           ;        }
 3102           L738:
 3102                   .dbline 1703
 3102           ;    }
 3102           L734:
 3102                   .dbline 1688
 3102 D6CF              xjmp L733
 3104           L746:
 3104                   .dbline 1707
 3104           ;                  
 3104           ;     //开始判断同步头  
 3104           ;       while(1)//还没有上升沿到来,死等
 3104           ;       {
 3104                   .dbline 1708
 3104           ;         T2cn=TCNT2;
 3104 24B4              in R2,0x24
 3106 3324              clr R3
 3108 3092AA01          sts _T2cn+1,R3
 310C 2092A901          sts _T2cn,R2
 3110                   .dbline 1709
 3110           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 3110 80E5              ldi R24,80
 3112 90E0              ldi R25,0
 3114 8215              cp R24,R2
 3116 9305              cpc R25,R3
 3118 08F4              brsh L749
 311A           X282:
 311A                   .dbline 1710
 311A           ;         {
 311A                   .dbline 1711
 311A           ;           goto End;
 311A 92C1              xjmp L732
 311C           L749:
 311C                   .dbline 1713
 311C           ;         }
 311C           ;         if((EIFR&0x08)==0x08)
 311C 88B7              in R24,0x38
 311E 8870              andi R24,8
 3120 8830              cpi R24,8
 3122 01F5              brne L751
 3124           X283:
 3124                   .dbline 1714
 3124           ;         {
 3124                   .dbline 1715
 3124           ;          DELAY10
 3124 2224              clr R2
 3126 3324              clr R3
 3128 3092AE01          sts _Tt+1,R3
 312C 2092AD01          sts _Tt,R2
 3130 09C0              xjmp L756
 3132           L753:
 3132                   .dbline 1715
 3132           L754:
 3132                   .dbline 1715
 3132 8091AD01          lds R24,_Tt
 3136 9091AE01          lds R25,_Tt+1
 313A 0196              adiw R24,1
 313C 9093AE01          sts _Tt+1,R25
 3140 8093AD01          sts _Tt,R24
 3144           L756:
 3144                   .dbline 1715
 3144 8091AD01          lds R24,_Tt
 3148 9091AE01          lds R25,_Tt+1
 314C 8430              cpi R24,4
 314E E0E0              ldi R30,0
 3150 9E07              cpc R25,R30
 3152 78F3              brlo L753
 3154           X284:
 3154                   .dbline 1716
 3154           ;          EIFR|=0x08;//清INT3中断标志 
 3154 88B7              in R24,0x38
 3156 8860              ori R24,8
 3158 88BF              out 0x38,R24
 315A                   .dbline 1717
 315A           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 315A 80B3              in R24,0x10
 315C 8870              andi R24,8
 315E 8830              cpi R24,8
 3160 09F4              brne L757
 3162           X285:
 3162                   .dbline 1718
 3162           ;            {
 3162                   .dbline 1719
 3162           ;            break;
 3162 01C0              xjmp L748
 3164           L757:
 3164                   .dbline 1721
 3164           ;                }
 3164           ;         }  
 3164           L751:
 3164                   .dbline 1722
 3164           ;       }
 3164           L747:
 3164                   .dbline 1706
 3164 CFCF              xjmp L746
 3166           L748:
 3166                   .dbline 1723
 3166           ;       T2cn=TCNT2;
 3166 24B4              in R2,0x24
 3168 3324              clr R3
 316A 3092AA01          sts _T2cn+1,R3
 316E 2092A901          sts _T2cn,R2
 3172                   .dbline 1724
 3172           ;       TCNT2=0;
 3172 2224              clr R2
 3174 24BC              out 0x24,R2
 3176                   .dbline 1725
 3176           ;       if((T2cn<60)||(T2cn>80))//同步头本应是7个周期，但收到的结果为6~8个周期内都认可
 3176 2090A901          lds R2,_T2cn
 317A 3090AA01          lds R3,_T2cn+1
 317E C101              movw R24,R2
 3180 8C33              cpi R24,60
 3182 E0E0              ldi R30,0
 3184 9E07              cpc R25,R30
 3186 28F0              brlo L761
 3188           X286:
 3188 80E5              ldi R24,80
 318A 90E0              ldi R25,0
 318C 8215              cp R24,R2
 318E 9305              cpc R25,R3
 3190 08F4              brsh L759
 3192           X287:
 3192           L761:
 3192                   .dbline 1726
 3192           ;       {
 3192                   .dbline 1727
 3192           ;        goto End;//没有收到正确的同步头，直接跳出
 3192 56C1              xjmp L732
 3194           L759:
 3194           L762:
 3194                   .dbline 1731
 3194           ;       }
 3194           ;       
 3194           ; Start:        //同步头解码正确，下面开始接收9位数据位 //按位从高到低接收数据位，8位数据加1位校验共9位                         
 3194           ;   for(Int_count=9;Int_count>0;Int_count--)
 3194 89E0              ldi R24,9
 3196 8093B001          sts _Int_count,R24
 319A B3C0              xjmp L766
 319C           L767:
 319C                   .dbline 1734
 319C           ;   {   
 319C           ;    while(1)
 319C           ;    {
 319C                   .dbline 1735
 319C           ;      T2cn=TCNT2;
 319C 24B4              in R2,0x24
 319E 3324              clr R3
 31A0 3092AA01          sts _T2cn+1,R3
 31A4 2092A901          sts _T2cn,R2
 31A8                   .dbline 1736
 31A8           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 31A8 80E5              ldi R24,80
 31AA 90E0              ldi R25,0
 31AC 8215              cp R24,R2
 31AE 9305              cpc R25,R3
 31B0 08F4              brsh L770
 31B2           X288:
 31B2                   .dbline 1737
 31B2           ;         {
 31B2                   .dbline 1738
 31B2           ;           goto End;
 31B2 46C1              xjmp L732
 31B4           L770:
 31B4                   .dbline 1740
 31B4           ;         }
 31B4           ;      if((PIND&0x08)==0x00)
 31B4 8399              sbic 0x10,3
 31B6 1BC0              rjmp L772
 31B8           X289:
 31B8                   .dbline 1741
 31B8           ;        {
 31B8                   .dbline 1742
 31B8           ;          DELAY20
 31B8 2224              clr R2
 31BA 3324              clr R3
 31BC 3092AE01          sts _Tt+1,R3
 31C0 2092AD01          sts _Tt,R2
 31C4 09C0              xjmp L777
 31C6           L774:
 31C6                   .dbline 1742
 31C6           L775:
 31C6                   .dbline 1742
 31C6 8091AD01          lds R24,_Tt
 31CA 9091AE01          lds R25,_Tt+1
 31CE 0196              adiw R24,1
 31D0 9093AE01          sts _Tt+1,R25
 31D4 8093AD01          sts _Tt,R24
 31D8           L777:
 31D8                   .dbline 1742
 31D8 8091AD01          lds R24,_Tt
 31DC 9091AE01          lds R25,_Tt+1
 31E0 8430              cpi R24,4
 31E2 E0E0              ldi R30,0
 31E4 9E07              cpc R25,R30
 31E6 78F3              brlo L774
 31E8           X290:
 31E8                   .dbline 1743
 31E8           ;          if((PIND&0x08)==0x00)
 31E8 8399              sbic 0x10,3
 31EA 01C0              rjmp L778
 31EC           X291:
 31EC                   .dbline 1744
 31EC           ;           {
 31EC                   .dbline 1745
 31EC           ;             break;
 31EC 31C0              xjmp L781
 31EE           L778:
 31EE                   .dbline 1747
 31EE           ;           }
 31EE           ;        }
 31EE           L772:
 31EE                   .dbline 1748
 31EE           ;    } 
 31EE           L768:
 31EE                   .dbline 1733
 31EE D6CF              xjmp L767
 31F0           L780:
 31F0                   .dbline 1750
 31F0           ;    while(1)//还没有上升沿到来,死等
 31F0           ;       {
 31F0                   .dbline 1751
 31F0           ;         T2cn=TCNT2;
 31F0 24B4              in R2,0x24
 31F2 3324              clr R3
 31F4 3092AA01          sts _T2cn+1,R3
 31F8 2092A901          sts _T2cn,R2
 31FC                   .dbline 1752
 31FC           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 31FC 80E5              ldi R24,80
 31FE 90E0              ldi R25,0
 3200 8215              cp R24,R2
 3202 9305              cpc R25,R3
 3204 08F4              brsh L783
 3206           X292:
 3206                   .dbline 1753
 3206           ;         {
 3206                   .dbline 1754
 3206           ;           goto End;
 3206 1CC1              xjmp L732
 3208           L783:
 3208                   .dbline 1756
 3208           ;         }
 3208           ;         if((EIFR&0x08)==0x08)
 3208 88B7              in R24,0x38
 320A 8870              andi R24,8
 320C 8830              cpi R24,8
 320E 01F5              brne L785
 3210           X293:
 3210                   .dbline 1757
 3210           ;         {
 3210                   .dbline 1758
 3210           ;          DELAY10
 3210 2224              clr R2
 3212 3324              clr R3
 3214 3092AE01          sts _Tt+1,R3
 3218 2092AD01          sts _Tt,R2
 321C 09C0              xjmp L790
 321E           L787:
 321E                   .dbline 1758
 321E           L788:
 321E                   .dbline 1758
 321E 8091AD01          lds R24,_Tt
 3222 9091AE01          lds R25,_Tt+1
 3226 0196              adiw R24,1
 3228 9093AE01          sts _Tt+1,R25
 322C 8093AD01          sts _Tt,R24
 3230           L790:
 3230                   .dbline 1758
 3230 8091AD01          lds R24,_Tt
 3234 9091AE01          lds R25,_Tt+1
 3238 8430              cpi R24,4
 323A E0E0              ldi R30,0
 323C 9E07              cpc R25,R30
 323E 78F3              brlo L787
 3240           X294:
 3240                   .dbline 1759
 3240           ;          EIFR|=0x08;//清INT3中断标志 
 3240 88B7              in R24,0x38
 3242 8860              ori R24,8
 3244 88BF              out 0x38,R24
 3246                   .dbline 1760
 3246           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 3246 80B3              in R24,0x10
 3248 8870              andi R24,8
 324A 8830              cpi R24,8
 324C 09F4              brne L791
 324E           X295:
 324E                   .dbline 1761
 324E           ;            {
 324E                   .dbline 1762
 324E           ;            break;
 324E 01C0              xjmp L782
 3250           L791:
 3250                   .dbline 1764
 3250           ;                }
 3250           ;         }  
 3250           L785:
 3250                   .dbline 1765
 3250           ;       }
 3250           L781:
 3250                   .dbline 1749
 3250 CFCF              xjmp L780
 3252           L782:
 3252                   .dbline 1766
 3252           ;       T2cn=TCNT2;
 3252 24B4              in R2,0x24
 3254 3324              clr R3
 3256 3092AA01          sts _T2cn+1,R3
 325A 2092A901          sts _T2cn,R2
 325E                   .dbline 1767
 325E           ;       TCNT2=0;
 325E 2224              clr R2
 3260 24BC              out 0x24,R2
 3262                   .dbline 1768
 3262           ;       if(T2cn<20)//数据位最小是3位，可放宽到2位
 3262 8091A901          lds R24,_T2cn
 3266 9091AA01          lds R25,_T2cn+1
 326A 8431              cpi R24,20
 326C E0E0              ldi R30,0
 326E 9E07              cpc R25,R30
 3270 20F4              brsh L793
 3272           X296:
 3272                   .dbline 1769
 3272           ;       {
 3272                   .dbline 1770
 3272           ;        IntFlag=3;//接收数据位不完整
 3272 83E0              ldi R24,3
 3274 8093AF01          sts _IntFlag,R24
 3278                   .dbline 1771
 3278           ;        goto End;//数据位来得太早，退出
 3278 E3C0              xjmp L732
 327A           L793:
 327A                   .dbline 1773
 327A           ;       }
 327A           ;       else if((T2cn>=20)&&(T2cn<40))//数据位1本应是3个周期，在此我们认为2~4个周期都是可以的
 327A 2090A901          lds R2,_T2cn
 327E 3090AA01          lds R3,_T2cn+1
 3282 C101              movw R24,R2
 3284 8431              cpi R24,20
 3286 E0E0              ldi R30,0
 3288 9E07              cpc R25,R30
 328A 70F0              brlo L795
 328C           X297:
 328C 8832              cpi R24,40
 328E E0E0              ldi R30,0
 3290 9E07              cpc R25,R30
 3292 50F4              brsh L795
 3294           X298:
 3294                   .dbline 1774
 3294           ;       {
 3294                   .dbline 1775
 3294           ;        Rx[Int_count]=1;
 3294 80E0              ldi R24,<_Rx
 3296 90E0              ldi R25,>_Rx
 3298 E091B001          lds R30,_Int_count
 329C FF27              clr R31
 329E E80F              add R30,R24
 32A0 F91F              adc R31,R25
 32A2 81E0              ldi R24,1
 32A4 8083              std z+0,R24
 32A6                   .dbline 1776
 32A6           ;       }
 32A6 28C0              xjmp L796
 32A8           L795:
 32A8                   .dbline 1777
 32A8           ;       else if((T2cn>=40)&&(T2cn<60))//数据位0本应是5个周期，在此我们认为4~6个周期都是可以的
 32A8 0091A901          lds R16,_T2cn
 32AC 1091AA01          lds R17,_T2cn+1
 32B0 0832              cpi R16,40
 32B2 E0E0              ldi R30,0
 32B4 1E07              cpc R17,R30
 32B6 70F0              brlo L797
 32B8           X299:
 32B8 0C33              cpi R16,60
 32BA E0E0              ldi R30,0
 32BC 1E07              cpc R17,R30
 32BE 50F4              brsh L797
 32C0           X300:
 32C0                   .dbline 1778
 32C0           ;       {
 32C0                   .dbline 1779
 32C0           ;        Rx[Int_count]=0;
 32C0 80E0              ldi R24,<_Rx
 32C2 90E0              ldi R25,>_Rx
 32C4 E091B001          lds R30,_Int_count
 32C8 FF27              clr R31
 32CA E80F              add R30,R24
 32CC F91F              adc R31,R25
 32CE 2224              clr R2
 32D0 2082              std z+0,R2
 32D2                   .dbline 1780
 32D2           ;       }
 32D2 12C0              xjmp L798
 32D4           L797:
 32D4                   .dbline 1781
 32D4           ;       else if((T2cn>=60)&&(T2cn<=80))//同步位本应是7周期，在此我们认为6~8周期都是可以的
 32D4 0091A901          lds R16,_T2cn
 32D8 1091AA01          lds R17,_T2cn+1
 32DC 0C33              cpi R16,60
 32DE E0E0              ldi R30,0
 32E0 1E07              cpc R17,R30
 32E2 30F0              brlo L799
 32E4           X301:
 32E4 80E5              ldi R24,80
 32E6 90E0              ldi R25,0
 32E8 8017              cp R24,R16
 32EA 9107              cpc R25,R17
 32EC 08F0              brlo L799
 32EE           X302:
 32EE                   .dbline 1782
 32EE           ;       {
 32EE                   .dbline 1783
 32EE           ;        goto Start;//在接收数据位时收到了同步位，跳到数据位解码起始位处
 32EE 52CF              xjmp L762
 32F0           L799:
 32F0                   .dbline 1786
 32F0           ;       }
 32F0           ;       else 
 32F0           ;       {
 32F0                   .dbline 1787
 32F0           ;        IntFlag=3;//接收数据位不完整
 32F0 83E0              ldi R24,3
 32F2 8093AF01          sts _IntFlag,R24
 32F6                   .dbline 1788
 32F6           ;        goto End;//数据位来得太迟，退出
 32F6 A4C0              xjmp L732
 32F8           L798:
 32F8           L796:
 32F8                   .dbline 1790
 32F8           ;       }
 32F8           ;   }   
 32F8           L764:
 32F8                   .dbline 1731
 32F8 8091B001          lds R24,_Int_count
 32FC 8150              subi R24,1
 32FE 8093B001          sts _Int_count,R24
 3302           L766:
 3302                   .dbline 1731
 3302 80E0              ldi R24,0
 3304 2090B001          lds R2,_Int_count
 3308 8215              cp R24,R2
 330A 08F4              brsh X314
 330C 70CF              xjmp L768
 330E           X314:
 330E           X303:
 330E                   .dbline 1792
 330E           ;       
 330E           ;     R_dat=0;
 330E 2224              clr R2
 3310 3324              clr R3
 3312 3092CC01          sts _R_dat+1,R3
 3316 2092CB01          sts _R_dat,R2
 331A                   .dbline 1793
 331A           ;     if(Rx[2])
 331A 2090D101          lds R2,_Rx+2
 331E 2220              tst R2
 3320 49F0              breq L801
 3322           X304:
 3322                   .dbline 1794
 3322           ;           R_dat|=0x01;
 3322 8091CB01          lds R24,_R_dat
 3326 9091CC01          lds R25,_R_dat+1
 332A 8160              ori R24,1
 332C 9093CC01          sts _R_dat+1,R25
 3330 8093CB01          sts _R_dat,R24
 3334           L801:
 3334                   .dbline 1795
 3334           ;     if(Rx[3])
 3334 2090D201          lds R2,_Rx+3
 3338 2220              tst R2
 333A 49F0              breq L804
 333C           X305:
 333C                   .dbline 1796
 333C           ;           R_dat|=0x02;
 333C 8091CB01          lds R24,_R_dat
 3340 9091CC01          lds R25,_R_dat+1
 3344 8260              ori R24,2
 3346 9093CC01          sts _R_dat+1,R25
 334A 8093CB01          sts _R_dat,R24
 334E           L804:
 334E                   .dbline 1797
 334E           ;     if(Rx[4])
 334E 2090D301          lds R2,_Rx+4
 3352 2220              tst R2
 3354 49F0              breq L807
 3356           X306:
 3356                   .dbline 1798
 3356           ;           R_dat|=0x04;
 3356 8091CB01          lds R24,_R_dat
 335A 9091CC01          lds R25,_R_dat+1
 335E 8460              ori R24,4
 3360 9093CC01          sts _R_dat+1,R25
 3364 8093CB01          sts _R_dat,R24
 3368           L807:
 3368                   .dbline 1799
 3368           ;     if(Rx[5])
 3368 2090D401          lds R2,_Rx+5
 336C 2220              tst R2
 336E 49F0              breq L810
 3370           X307:
 3370                   .dbline 1800
 3370           ;           R_dat|=0x08;
 3370 8091CB01          lds R24,_R_dat
 3374 9091CC01          lds R25,_R_dat+1
 3378 8860              ori R24,8
 337A 9093CC01          sts _R_dat+1,R25
 337E 8093CB01          sts _R_dat,R24
 3382           L810:
 3382                   .dbline 1801
 3382           ;     if(Rx[6])
 3382 2090D501          lds R2,_Rx+6
 3386 2220              tst R2
 3388 49F0              breq L813
 338A           X308:
 338A                   .dbline 1802
 338A           ;           R_dat|=0x10;
 338A 8091CB01          lds R24,_R_dat
 338E 9091CC01          lds R25,_R_dat+1
 3392 8061              ori R24,16
 3394 9093CC01          sts _R_dat+1,R25
 3398 8093CB01          sts _R_dat,R24
 339C           L813:
 339C                   .dbline 1803
 339C           ;     if(Rx[7])
 339C 2090D601          lds R2,_Rx+7
 33A0 2220              tst R2
 33A2 49F0              breq L816
 33A4           X309:
 33A4                   .dbline 1804
 33A4           ;           R_dat|=0x20;
 33A4 8091CB01          lds R24,_R_dat
 33A8 9091CC01          lds R25,_R_dat+1
 33AC 8062              ori R24,32
 33AE 9093CC01          sts _R_dat+1,R25
 33B2 8093CB01          sts _R_dat,R24
 33B6           L816:
 33B6                   .dbline 1805
 33B6           ;     if(Rx[8])
 33B6 2090D701          lds R2,_Rx+8
 33BA 2220              tst R2
 33BC 49F0              breq L819
 33BE           X310:
 33BE                   .dbline 1806
 33BE           ;           R_dat|=0x40;
 33BE 8091CB01          lds R24,_R_dat
 33C2 9091CC01          lds R25,_R_dat+1
 33C6 8064              ori R24,64
 33C8 9093CC01          sts _R_dat+1,R25
 33CC 8093CB01          sts _R_dat,R24
 33D0           L819:
 33D0                   .dbline 1807
 33D0           ;     if(Rx[9])
 33D0 2090D801          lds R2,_Rx+9
 33D4 2220              tst R2
 33D6 49F0              breq L822
 33D8           X311:
 33D8                   .dbline 1808
 33D8           ;           R_dat|=0x80;
 33D8 8091CB01          lds R24,_R_dat
 33DC 9091CC01          lds R25,_R_dat+1
 33E0 8068              ori R24,128
 33E2 9093CC01          sts _R_dat+1,R25
 33E6 8093CB01          sts _R_dat,R24
 33EA           L822:
 33EA                   .dbline 1810
 33EA           ;       
 33EA           ;       Rx[0]=1;  
 33EA 81E0              ldi R24,1
 33EC 8093CF01          sts _Rx,R24
 33F0                   .dbline 1811
 33F0           ;       for(Int_count=2;Int_count<10;Int_count++)  
 33F0 82E0              ldi R24,2
 33F2 8093B001          sts _Int_count,R24
 33F6 12C0              xjmp L828
 33F8           L825:
 33F8                   .dbline 1812
 33F8           ;        Rx[0]^=Rx[Int_count];  
 33F8 80E0              ldi R24,<_Rx
 33FA 90E0              ldi R25,>_Rx
 33FC E091B001          lds R30,_Int_count
 3400 FF27              clr R31
 3402 E80F              add R30,R24
 3404 F91F              adc R31,R25
 3406 2080              ldd R2,z+0
 3408 3090CF01          lds R3,_Rx
 340C 3224              eor R3,R2
 340E 3092CF01          sts _Rx,R3
 3412           L826:
 3412                   .dbline 1811
 3412 8091B001          lds R24,_Int_count
 3416 8F5F              subi R24,255    ; addi 1
 3418 8093B001          sts _Int_count,R24
 341C           L828:
 341C                   .dbline 1811
 341C 8091B001          lds R24,_Int_count
 3420 8A30              cpi R24,10
 3422 50F3              brlo L825
 3424           X312:
 3424                   .dbline 1814
 3424           ;          
 3424           ;       if(Rx[0]==Rx[1])
 3424 2090D001          lds R2,_Rx+1
 3428 3090CF01          lds R3,_Rx
 342C 3214              cp R3,R2
 342E 21F4              brne L829
 3430           X313:
 3430                   .dbline 1815
 3430           ;        {
 3430                   .dbline 1816
 3430           ;                IntFlag=1;//接收帧正常 
 3430 81E0              ldi R24,1
 3432 8093AF01          sts _IntFlag,R24
 3436                   .dbline 1817
 3436           ;        }
 3436 0FC0              xjmp L832
 3438           L829:
 3438                   .dbline 1819
 3438           ;       else           
 3438           ;        {
 3438                   .dbline 1820
 3438           ;                IntFlag=2;//接收帧校验错
 3438 82E0              ldi R24,2
 343A 8093AF01          sts _IntFlag,R24
 343E                   .dbline 1821
 343E           ;        }
 343E                   .dbline 1823
 343E           ;          
 343E           ;    goto End1;//只要接收到正常的同步头，不管校验位是对是错，都暂时不开放INT0中断
 343E 0BC0              xjmp L832
 3440           L732:
 3440                   .dbline 1826
 3440           ;      
 3440           ; End:
 3440           ;  EIFR|=0x08;//清INT3中断标志 
 3440 88B7              in R24,0x38
 3442 8860              ori R24,8
 3444 88BF              out 0x38,R24
 3446                   .dbline 1827
 3446           ;  EICRA|=0xc0; //INT3上升沿触发 
 3446 80916A00          lds R24,106
 344A 806C              ori R24,192
 344C 80936A00          sts 106,R24
 3450                   .dbline 1828
 3450           ;  EIMSK|=0x08;//使能INT3中断 
 3450 89B7              in R24,0x39
 3452 8860              ori R24,8
 3454 89BF              out 0x39,R24
 3456           L832:
 3456                   .dbline 1830
 3456           ; End1:
 3456           ;    TCCR2 = 0x00; //stop
 3456 2224              clr R2
 3458 25BC              out 0x25,R2
 345A                   .dbline 1831
 345A           ;    SREG|=0x80;//总中断使能;  
 345A 7894              bset 7
 345C                   .dbline -2
 345C           L725:
 345C                   .dbline 0 ; func end
 345C 2990              ld R2,y+
 345E 2FBE              OUT 63,R2
 3460 F991              ld R31,y+
 3462 E991              ld R30,y+
 3464 A991              ld R26,y+
 3466 9991              ld R25,y+
 3468 8991              ld R24,y+
 346A 1991              ld R17,y+
 346C 0991              ld R16,y+
 346E 3990              ld R3,y+
 3470 2990              ld R2,y+
 3472 1895              reti
 3474                   .dbend
 3474                   .dbfunc e SendManchester _SendManchester fV
 3474           ;              L -> R20
                        .even
 3474           _SendManchester::
 3474 4A93              st -y,R20
 3476                   .dbline -1
 3476                   .dbline 1835
 3476           ; }
 3476           ; 
 3476           ; void SendManchester(void) //曼码发送程序,总耗时最大约120+560+8400+720=9800us，最小约120+560+5040+720=6440us
 3476           ; { //每位80us
 3476                   .dbline 1840
 3476           ;  //同步：1高6低
 3476           ;  //1:    1高2低
 3476           ;  //0：   1高4低  
 3476           ;   unsigned char L;
 3476           ;   SREG&=0x7f;//关总中断 
 3476 8FB7              in R24,0x3f
 3478 8F77              andi R24,127
 347A 8FBF              out 0x3f,R24
 347C                   .dbline 1842
 347C           ;   
 347C           ;     M1_H //先给总线放电，耗时约120us
 347C 929A              sbi 0x12,2
 347E                   .dbline 1846
 347E           ;       
 347E           ;   //模拟同步头数据
 347E           ;       //4位命令
 347E           ;       T_dat_buf[21]=(T_com&0x08)>>3;
 347E 8091CA01          lds R24,_T_com
 3482 8870              andi R24,8
 3484 8695              lsr R24
 3486 8695              lsr R24
 3488 8695              lsr R24
 348A 8093C801          sts _T_dat_buf+21,R24
 348E                   .dbline 1847
 348E           ;       T_dat_buf[20]=(T_com&0x04)>>2;
 348E 8091CA01          lds R24,_T_com
 3492 8470              andi R24,4
 3494 8695              lsr R24
 3496 8695              lsr R24
 3498 8093C701          sts _T_dat_buf+20,R24
 349C                   .dbline 1848
 349C           ;       T_dat_buf[19]=(T_com&0x02)>>1;
 349C 8091CA01          lds R24,_T_com
 34A0 8270              andi R24,2
 34A2 8695              lsr R24
 34A4 8093C601          sts _T_dat_buf+19,R24
 34A8                   .dbline 1849
 34A8           ;       T_dat_buf[18]=T_com&0x01;
 34A8 8091CA01          lds R24,_T_com
 34AC 8170              andi R24,1
 34AE 8093C501          sts _T_dat_buf+18,R24
 34B2                   .dbline 1851
 34B2           ;       //16位数据
 34B2           ;       T_dat_buf[17]=(T_dat&0x8000)>>15;
 34B2 2FE0              ldi R18,15
 34B4 30E0              ldi R19,0
 34B6 0091CD01          lds R16,_T_dat
 34BA 1091CE01          lds R17,_T_dat+1
 34BE 0070              andi R16,0
 34C0 1078              andi R17,128
 34C2 0E940000          xcall lsr16
 34C6 0093C401          sts _T_dat_buf+17,R16
 34CA                   .dbline 1852
 34CA           ;       T_dat_buf[16]=(T_dat&0x4000)>>14;
 34CA 2EE0              ldi R18,14
 34CC 30E0              ldi R19,0
 34CE 0091CD01          lds R16,_T_dat
 34D2 1091CE01          lds R17,_T_dat+1
 34D6 0070              andi R16,0
 34D8 1074              andi R17,64
 34DA 0E940000          xcall asr16
 34DE 0093C301          sts _T_dat_buf+16,R16
 34E2                   .dbline 1853
 34E2           ;       T_dat_buf[15]=(T_dat&0x2000)>>13;
 34E2 2DE0              ldi R18,13
 34E4 30E0              ldi R19,0
 34E6 0091CD01          lds R16,_T_dat
 34EA 1091CE01          lds R17,_T_dat+1
 34EE 0070              andi R16,0
 34F0 1072              andi R17,32
 34F2 0E940000          xcall asr16
 34F6 0093C201          sts _T_dat_buf+15,R16
 34FA                   .dbline 1854
 34FA           ;       T_dat_buf[14]=(T_dat&0x1000)>>12;
 34FA 2CE0              ldi R18,12
 34FC 30E0              ldi R19,0
 34FE 0091CD01          lds R16,_T_dat
 3502 1091CE01          lds R17,_T_dat+1
 3506 0070              andi R16,0
 3508 1071              andi R17,16
 350A 0E940000          xcall asr16
 350E 0093C101          sts _T_dat_buf+14,R16
 3512                   .dbline 1855
 3512           ;       T_dat_buf[13]=(T_dat&0x0800)>>11;
 3512 2BE0              ldi R18,11
 3514 30E0              ldi R19,0
 3516 0091CD01          lds R16,_T_dat
 351A 1091CE01          lds R17,_T_dat+1
 351E 0070              andi R16,0
 3520 1870              andi R17,8
 3522 0E940000          xcall asr16
 3526 0093C001          sts _T_dat_buf+13,R16
 352A                   .dbline 1856
 352A           ;     T_dat_buf[12]=(T_dat&0x0400)>>10;
 352A 2AE0              ldi R18,10
 352C 30E0              ldi R19,0
 352E 0091CD01          lds R16,_T_dat
 3532 1091CE01          lds R17,_T_dat+1
 3536 0070              andi R16,0
 3538 1470              andi R17,4
 353A 0E940000          xcall asr16
 353E 0093BF01          sts _T_dat_buf+12,R16
 3542                   .dbline 1857
 3542           ;     T_dat_buf[11]=(T_dat&0x0200)>>9;
 3542 29E0              ldi R18,9
 3544 30E0              ldi R19,0
 3546 0091CD01          lds R16,_T_dat
 354A 1091CE01          lds R17,_T_dat+1
 354E 0070              andi R16,0
 3550 1270              andi R17,2
 3552 0E940000          xcall asr16
 3556 0093BE01          sts _T_dat_buf+11,R16
 355A                   .dbline 1858
 355A           ;       T_dat_buf[10]=(T_dat&0x0100)>>8;
 355A 8091CD01          lds R24,_T_dat
 355E 9091CE01          lds R25,_T_dat+1
 3562 8070              andi R24,0
 3564 9170              andi R25,1
 3566 1C01              movw R2,R24
 3568 232C              mov R2,R3
 356A 3324              clr R3
 356C 27FC              sbrc R2,7
 356E 3094              com R3
 3570 2092BD01          sts _T_dat_buf+10,R2
 3574                   .dbline 1859
 3574           ;       T_dat_buf[9]=(T_dat&0x0080)>>7;
 3574 27E0              ldi R18,7
 3576 30E0              ldi R19,0
 3578 0091CD01          lds R16,_T_dat
 357C 1091CE01          lds R17,_T_dat+1
 3580 0078              andi R16,128
 3582 1070              andi R17,0
 3584 0E940000          xcall asr16
 3588 0093BC01          sts _T_dat_buf+9,R16
 358C                   .dbline 1860
 358C           ;       T_dat_buf[8]=(T_dat&0x0040)>>6;
 358C 26E0              ldi R18,6
 358E 30E0              ldi R19,0
 3590 0091CD01          lds R16,_T_dat
 3594 1091CE01          lds R17,_T_dat+1
 3598 0074              andi R16,64
 359A 1070              andi R17,0
 359C 0E940000          xcall asr16
 35A0 0093BB01          sts _T_dat_buf+8,R16
 35A4                   .dbline 1861
 35A4           ;       T_dat_buf[7]=(T_dat&0x0020)>>5;
 35A4 25E0              ldi R18,5
 35A6 30E0              ldi R19,0
 35A8 0091CD01          lds R16,_T_dat
 35AC 1091CE01          lds R17,_T_dat+1
 35B0 0072              andi R16,32
 35B2 1070              andi R17,0
 35B4 0E940000          xcall asr16
 35B8 0093BA01          sts _T_dat_buf+7,R16
 35BC                   .dbline 1862
 35BC           ;       T_dat_buf[6]=(T_dat&0x0010)>>4;
 35BC 8091CD01          lds R24,_T_dat
 35C0 9091CE01          lds R25,_T_dat+1
 35C4 8071              andi R24,16
 35C6 9070              andi R25,0
 35C8 1C01              movw R2,R24
 35CA 3594              asr R3
 35CC 2794              ror R2
 35CE 3594              asr R3
 35D0 2794              ror R2
 35D2 3594              asr R3
 35D4 2794              ror R2
 35D6 3594              asr R3
 35D8 2794              ror R2
 35DA 2092B901          sts _T_dat_buf+6,R2
 35DE                   .dbline 1863
 35DE           ;       T_dat_buf[5]=(T_dat&0x0008)>>3;
 35DE 8091CD01          lds R24,_T_dat
 35E2 9091CE01          lds R25,_T_dat+1
 35E6 8870              andi R24,8
 35E8 9070              andi R25,0
 35EA 1C01              movw R2,R24
 35EC 3594              asr R3
 35EE 2794              ror R2
 35F0 3594              asr R3
 35F2 2794              ror R2
 35F4 3594              asr R3
 35F6 2794              ror R2
 35F8 2092B801          sts _T_dat_buf+5,R2
 35FC                   .dbline 1864
 35FC           ;       T_dat_buf[4]=(T_dat&0x0004)>>2;
 35FC 8091CD01          lds R24,_T_dat
 3600 9091CE01          lds R25,_T_dat+1
 3604 8470              andi R24,4
 3606 9070              andi R25,0
 3608 1C01              movw R2,R24
 360A 3594              asr R3
 360C 2794              ror R2
 360E 3594              asr R3
 3610 2794              ror R2
 3612 2092B701          sts _T_dat_buf+4,R2
 3616                   .dbline 1865
 3616           ;       T_dat_buf[3]=(T_dat&0x0002)>>1;
 3616 8091CD01          lds R24,_T_dat
 361A 9091CE01          lds R25,_T_dat+1
 361E 8270              andi R24,2
 3620 9070              andi R25,0
 3622 1C01              movw R2,R24
 3624 3594              asr R3
 3626 2794              ror R2
 3628 2092B601          sts _T_dat_buf+3,R2
 362C                   .dbline 1866
 362C           ;       T_dat_buf[2]=T_dat&0x0001;
 362C 8091CD01          lds R24,_T_dat
 3630 9091CE01          lds R25,_T_dat+1
 3634 8170              andi R24,1
 3636 9070              andi R25,0
 3638 8093B501          sts _T_dat_buf+2,R24
 363C                   .dbline 1868
 363C           ;       //计算校验位，奇校验
 363C           ;       T_dat_buf[1]=1;
 363C 81E0              ldi R24,1
 363E 8093B401          sts _T_dat_buf+1,R24
 3642                   .dbline 1869
 3642           ;       for(L=2;L<22;L++)
 3642 42E0              ldi R20,2
 3644 0DC0              xjmp L858
 3646           L855:
 3646                   .dbline 1870
 3646           ;               {T_dat_buf[1]^=T_dat_buf[L];}
 3646                   .dbline 1870
 3646 80E0              ldi R24,<_T_dat_buf
 3648 90E0              ldi R25,>_T_dat_buf
 364A E42F              mov R30,R20
 364C FF27              clr R31
 364E E80F              add R30,R24
 3650 F91F              adc R31,R25
 3652 2080              ldd R2,z+0
 3654 3090B401          lds R3,_T_dat_buf+1
 3658 3224              eor R3,R2
 365A 3092B401          sts _T_dat_buf+1,R3
 365E                   .dbline 1870
 365E           L856:
 365E                   .dbline 1869
 365E 4395              inc R20
 3660           L858:
 3660                   .dbline 1869
 3660 4631              cpi R20,22
 3662 88F3              brlo L855
 3664           X315:
 3664                   .dbline 1871
 3664           ;     DELAY80
 3664 2224              clr R2
 3666 3324              clr R3
 3668 3092AE01          sts _Tt+1,R3
 366C 2092AD01          sts _Tt,R2
 3670 09C0              xjmp L863
 3672           L860:
 3672                   .dbline 1871
 3672           L861:
 3672                   .dbline 1871
 3672 8091AD01          lds R24,_Tt
 3676 9091AE01          lds R25,_Tt+1
 367A 0196              adiw R24,1
 367C 9093AE01          sts _Tt+1,R25
 3680 8093AD01          sts _Tt,R24
 3684           L863:
 3684                   .dbline 1871
 3684 8091AD01          lds R24,_Tt
 3688 9091AE01          lds R25,_Tt+1
 368C 8032              cpi R24,32
 368E E0E0              ldi R30,0
 3690 9E07              cpc R25,R30
 3692 78F3              brlo L860
 3694           X316:
 3694                   .dbline 1872
 3694           ;     M1_L
 3694 82B3              in R24,0x12
 3696 8B7F              andi R24,251
 3698 82BB              out 0x12,R24
 369A                   .dbline 1873
 369A           ;       DELAY40
 369A 2224              clr R2
 369C 3324              clr R3
 369E 3092AE01          sts _Tt+1,R3
 36A2 2092AD01          sts _Tt,R2
 36A6 09C0              xjmp L867
 36A8           L864:
 36A8                   .dbline 1873
 36A8           L865:
 36A8                   .dbline 1873
 36A8 8091AD01          lds R24,_Tt
 36AC 9091AE01          lds R25,_Tt+1
 36B0 0196              adiw R24,1
 36B2 9093AE01          sts _Tt+1,R25
 36B6 8093AD01          sts _Tt,R24
 36BA           L867:
 36BA                   .dbline 1873
 36BA 8091AD01          lds R24,_Tt
 36BE 9091AE01          lds R25,_Tt+1
 36C2 8031              cpi R24,16
 36C4 E0E0              ldi R30,0
 36C6 9E07              cpc R25,R30
 36C8 78F3              brlo L864
 36CA           X317:
 36CA                   .dbline 1878
 36CA           ;    
 36CA           ;    
 36CA           ;       //同步头,560us
 36CA           ;       //充电开始，高80us       
 36CA           ;       M2_H    
 36CA 919A              sbi 0x12,1
 36CC                   .dbline 1879
 36CC           ;       DELAY80
 36CC 2224              clr R2
 36CE 3324              clr R3
 36D0 3092AE01          sts _Tt+1,R3
 36D4 2092AD01          sts _Tt,R2
 36D8 09C0              xjmp L871
 36DA           L868:
 36DA                   .dbline 1879
 36DA           L869:
 36DA                   .dbline 1879
 36DA 8091AD01          lds R24,_Tt
 36DE 9091AE01          lds R25,_Tt+1
 36E2 0196              adiw R24,1
 36E4 9093AE01          sts _Tt+1,R25
 36E8 8093AD01          sts _Tt,R24
 36EC           L871:
 36EC                   .dbline 1879
 36EC 8091AD01          lds R24,_Tt
 36F0 9091AE01          lds R25,_Tt+1
 36F4 8032              cpi R24,32
 36F6 E0E0              ldi R30,0
 36F8 9E07              cpc R25,R30
 36FA 78F3              brlo L868
 36FC           X318:
 36FC                   .dbline 1880
 36FC           ;       M2_L   //充电结束       
 36FC 82B3              in R24,0x12
 36FE 8D7F              andi R24,253
 3700 82BB              out 0x12,R24
 3702                   .dbline 1882
 3702           ;       //放电开始，低80*6=480us
 3702           ;       DELAY40
 3702 2224              clr R2
 3704 3324              clr R3
 3706 3092AE01          sts _Tt+1,R3
 370A 2092AD01          sts _Tt,R2
 370E 09C0              xjmp L875
 3710           L872:
 3710                   .dbline 1882
 3710           L873:
 3710                   .dbline 1882
 3710 8091AD01          lds R24,_Tt
 3714 9091AE01          lds R25,_Tt+1
 3718 0196              adiw R24,1
 371A 9093AE01          sts _Tt+1,R25
 371E 8093AD01          sts _Tt,R24
 3722           L875:
 3722                   .dbline 1882
 3722 8091AD01          lds R24,_Tt
 3726 9091AE01          lds R25,_Tt+1
 372A 8031              cpi R24,16
 372C E0E0              ldi R30,0
 372E 9E07              cpc R25,R30
 3730 78F3              brlo L872
 3732           X319:
 3732                   .dbline 1883
 3732           ;       M1_H    
 3732 929A              sbi 0x12,2
 3734                   .dbline 1884
 3734           ;     DELAY80
 3734 2224              clr R2
 3736 3324              clr R3
 3738 3092AE01          sts _Tt+1,R3
 373C 2092AD01          sts _Tt,R2
 3740 09C0              xjmp L879
 3742           L876:
 3742                   .dbline 1884
 3742           L877:
 3742                   .dbline 1884
 3742 8091AD01          lds R24,_Tt
 3746 9091AE01          lds R25,_Tt+1
 374A 0196              adiw R24,1
 374C 9093AE01          sts _Tt+1,R25
 3750 8093AD01          sts _Tt,R24
 3754           L879:
 3754                   .dbline 1884
 3754 8091AD01          lds R24,_Tt
 3758 9091AE01          lds R25,_Tt+1
 375C 8032              cpi R24,32
 375E E0E0              ldi R30,0
 3760 9E07              cpc R25,R30
 3762 78F3              brlo L876
 3764           X320:
 3764                   .dbline 1885
 3764           ;       DELAY80
 3764 2224              clr R2
 3766 3324              clr R3
 3768 3092AE01          sts _Tt+1,R3
 376C 2092AD01          sts _Tt,R2
 3770 09C0              xjmp L883
 3772           L880:
 3772                   .dbline 1885
 3772           L881:
 3772                   .dbline 1885
 3772 8091AD01          lds R24,_Tt
 3776 9091AE01          lds R25,_Tt+1
 377A 0196              adiw R24,1
 377C 9093AE01          sts _Tt+1,R25
 3780 8093AD01          sts _Tt,R24
 3784           L883:
 3784                   .dbline 1885
 3784 8091AD01          lds R24,_Tt
 3788 9091AE01          lds R25,_Tt+1
 378C 8032              cpi R24,32
 378E E0E0              ldi R30,0
 3790 9E07              cpc R25,R30
 3792 78F3              brlo L880
 3794           X321:
 3794                   .dbline 1886
 3794           ;       DELAY80
 3794 2224              clr R2
 3796 3324              clr R3
 3798 3092AE01          sts _Tt+1,R3
 379C 2092AD01          sts _Tt,R2
 37A0 09C0              xjmp L887
 37A2           L884:
 37A2                   .dbline 1886
 37A2           L885:
 37A2                   .dbline 1886
 37A2 8091AD01          lds R24,_Tt
 37A6 9091AE01          lds R25,_Tt+1
 37AA 0196              adiw R24,1
 37AC 9093AE01          sts _Tt+1,R25
 37B0 8093AD01          sts _Tt,R24
 37B4           L887:
 37B4                   .dbline 1886
 37B4 8091AD01          lds R24,_Tt
 37B8 9091AE01          lds R25,_Tt+1
 37BC 8032              cpi R24,32
 37BE E0E0              ldi R30,0
 37C0 9E07              cpc R25,R30
 37C2 78F3              brlo L884
 37C4           X322:
 37C4                   .dbline 1887
 37C4           ;       DELAY80
 37C4 2224              clr R2
 37C6 3324              clr R3
 37C8 3092AE01          sts _Tt+1,R3
 37CC 2092AD01          sts _Tt,R2
 37D0 09C0              xjmp L891
 37D2           L888:
 37D2                   .dbline 1887
 37D2           L889:
 37D2                   .dbline 1887
 37D2 8091AD01          lds R24,_Tt
 37D6 9091AE01          lds R25,_Tt+1
 37DA 0196              adiw R24,1
 37DC 9093AE01          sts _Tt+1,R25
 37E0 8093AD01          sts _Tt,R24
 37E4           L891:
 37E4                   .dbline 1887
 37E4 8091AD01          lds R24,_Tt
 37E8 9091AE01          lds R25,_Tt+1
 37EC 8032              cpi R24,32
 37EE E0E0              ldi R30,0
 37F0 9E07              cpc R25,R30
 37F2 78F3              brlo L888
 37F4           X323:
 37F4                   .dbline 1888
 37F4           ;       DELAY80
 37F4 2224              clr R2
 37F6 3324              clr R3
 37F8 3092AE01          sts _Tt+1,R3
 37FC 2092AD01          sts _Tt,R2
 3800 09C0              xjmp L895
 3802           L892:
 3802                   .dbline 1888
 3802           L893:
 3802                   .dbline 1888
 3802 8091AD01          lds R24,_Tt
 3806 9091AE01          lds R25,_Tt+1
 380A 0196              adiw R24,1
 380C 9093AE01          sts _Tt+1,R25
 3810 8093AD01          sts _Tt,R24
 3814           L895:
 3814                   .dbline 1888
 3814 8091AD01          lds R24,_Tt
 3818 9091AE01          lds R25,_Tt+1
 381C 8032              cpi R24,32
 381E E0E0              ldi R30,0
 3820 9E07              cpc R25,R30
 3822 78F3              brlo L892
 3824           X324:
 3824                   .dbline 1889
 3824           ;       M1_L    
 3824 82B3              in R24,0x12
 3826 8B7F              andi R24,251
 3828 82BB              out 0x12,R24
 382A                   .dbline 1890
 382A           ;       DELAY40  //放电结束
 382A 2224              clr R2
 382C 3324              clr R3
 382E 3092AE01          sts _Tt+1,R3
 3832 2092AD01          sts _Tt,R2
 3836 09C0              xjmp L899
 3838           L896:
 3838                   .dbline 1890
 3838           L897:
 3838                   .dbline 1890
 3838 8091AD01          lds R24,_Tt
 383C 9091AE01          lds R25,_Tt+1
 3840 0196              adiw R24,1
 3842 9093AE01          sts _Tt+1,R25
 3846 8093AD01          sts _Tt,R24
 384A           L899:
 384A                   .dbline 1890
 384A 8091AD01          lds R24,_Tt
 384E 9091AE01          lds R25,_Tt+1
 3852 8031              cpi R24,16
 3854 E0E0              ldi R30,0
 3856 9E07              cpc R25,R30
 3858 78F3              brlo L896
 385A           X325:
 385A                   .dbline 1893
 385A           ;       
 385A           ;      //连续发送 ,全0时每位400us，共8400us，全1时每位240us，共5040us
 385A           ;       for(L=21;L>0;L--)
 385A 45E1              ldi R20,21
 385C 0CC1              xjmp L903
 385E           L900:
 385E                   .dbline 1894
 385E           ;       {   
 385E                   .dbline 1895
 385E           ;         if(T_dat_buf[L])//1，一高二低
 385E 80E0              ldi R24,<_T_dat_buf
 3860 90E0              ldi R25,>_T_dat_buf
 3862 E42F              mov R30,R20
 3864 FF27              clr R31
 3866 E80F              add R30,R24
 3868 F91F              adc R31,R25
 386A 2080              ldd R2,z+0
 386C 2220              tst R2
 386E 09F4              brne X348
 3870 69C0              xjmp L904
 3872           X348:
 3872           X326:
 3872                   .dbline 1896
 3872           ;         {                             
 3872                   .dbline 1897
 3872           ;               M2_H 
 3872 919A              sbi 0x12,1
 3874                   .dbline 1898
 3874           ;               DELAY80
 3874 2224              clr R2
 3876 3324              clr R3
 3878 3092AE01          sts _Tt+1,R3
 387C 2092AD01          sts _Tt,R2
 3880 09C0              xjmp L909
 3882           L906:
 3882                   .dbline 1898
 3882           L907:
 3882                   .dbline 1898
 3882 8091AD01          lds R24,_Tt
 3886 9091AE01          lds R25,_Tt+1
 388A 0196              adiw R24,1
 388C 9093AE01          sts _Tt+1,R25
 3890 8093AD01          sts _Tt,R24
 3894           L909:
 3894                   .dbline 1898
 3894 8091AD01          lds R24,_Tt
 3898 9091AE01          lds R25,_Tt+1
 389C 8032              cpi R24,32
 389E E0E0              ldi R30,0
 38A0 9E07              cpc R25,R30
 38A2 78F3              brlo L906
 38A4           X327:
 38A4                   .dbline 1899
 38A4           ;               M2_L
 38A4 82B3              in R24,0x12
 38A6 8D7F              andi R24,253
 38A8 82BB              out 0x12,R24
 38AA                   .dbline 1900
 38AA           ;                       DELAY40
 38AA 2224              clr R2
 38AC 3324              clr R3
 38AE 3092AE01          sts _Tt+1,R3
 38B2 2092AD01          sts _Tt,R2
 38B6 09C0              xjmp L913
 38B8           L910:
 38B8                   .dbline 1900
 38B8           L911:
 38B8                   .dbline 1900
 38B8 8091AD01          lds R24,_Tt
 38BC 9091AE01          lds R25,_Tt+1
 38C0 0196              adiw R24,1
 38C2 9093AE01          sts _Tt+1,R25
 38C6 8093AD01          sts _Tt,R24
 38CA           L913:
 38CA                   .dbline 1900
 38CA 8091AD01          lds R24,_Tt
 38CE 9091AE01          lds R25,_Tt+1
 38D2 8031              cpi R24,16
 38D4 E0E0              ldi R30,0
 38D6 9E07              cpc R25,R30
 38D8 78F3              brlo L910
 38DA           X328:
 38DA                   .dbline 1901
 38DA           ;               M1_H       
 38DA 929A              sbi 0x12,2
 38DC                   .dbline 1902
 38DC           ;               DELAY80
 38DC 2224              clr R2
 38DE 3324              clr R3
 38E0 3092AE01          sts _Tt+1,R3
 38E4 2092AD01          sts _Tt,R2
 38E8 09C0              xjmp L917
 38EA           L914:
 38EA                   .dbline 1902
 38EA           L915:
 38EA                   .dbline 1902
 38EA 8091AD01          lds R24,_Tt
 38EE 9091AE01          lds R25,_Tt+1
 38F2 0196              adiw R24,1
 38F4 9093AE01          sts _Tt+1,R25
 38F8 8093AD01          sts _Tt,R24
 38FC           L917:
 38FC                   .dbline 1902
 38FC 8091AD01          lds R24,_Tt
 3900 9091AE01          lds R25,_Tt+1
 3904 8032              cpi R24,32
 3906 E0E0              ldi R30,0
 3908 9E07              cpc R25,R30
 390A 78F3              brlo L914
 390C           X329:
 390C                   .dbline 1903
 390C           ;                       M1_L
 390C 82B3              in R24,0x12
 390E 8B7F              andi R24,251
 3910 82BB              out 0x12,R24
 3912                   .dbline 1904
 3912           ;                       DELAY40
 3912 2224              clr R2
 3914 3324              clr R3
 3916 3092AE01          sts _Tt+1,R3
 391A 2092AD01          sts _Tt,R2
 391E 09C0              xjmp L921
 3920           L918:
 3920                   .dbline 1904
 3920           L919:
 3920                   .dbline 1904
 3920 8091AD01          lds R24,_Tt
 3924 9091AE01          lds R25,_Tt+1
 3928 0196              adiw R24,1
 392A 9093AE01          sts _Tt+1,R25
 392E 8093AD01          sts _Tt,R24
 3932           L921:
 3932                   .dbline 1904
 3932 8091AD01          lds R24,_Tt
 3936 9091AE01          lds R25,_Tt+1
 393A 8031              cpi R24,16
 393C E0E0              ldi R30,0
 393E 9E07              cpc R25,R30
 3940 78F3              brlo L918
 3942           X330:
 3942                   .dbline 1905
 3942           ;               } 
 3942 98C0              xjmp L905
 3944           L904:
 3944                   .dbline 1907
 3944           ;        else           //0，一高四低                                           
 3944           ;         {
 3944                   .dbline 1908
 3944           ;                       M2_H 
 3944 919A              sbi 0x12,1
 3946                   .dbline 1909
 3946           ;               DELAY80
 3946 2224              clr R2
 3948 3324              clr R3
 394A 3092AE01          sts _Tt+1,R3
 394E 2092AD01          sts _Tt,R2
 3952 09C0              xjmp L925
 3954           L922:
 3954                   .dbline 1909
 3954           L923:
 3954                   .dbline 1909
 3954 8091AD01          lds R24,_Tt
 3958 9091AE01          lds R25,_Tt+1
 395C 0196              adiw R24,1
 395E 9093AE01          sts _Tt+1,R25
 3962 8093AD01          sts _Tt,R24
 3966           L925:
 3966                   .dbline 1909
 3966 8091AD01          lds R24,_Tt
 396A 9091AE01          lds R25,_Tt+1
 396E 8032              cpi R24,32
 3970 E0E0              ldi R30,0
 3972 9E07              cpc R25,R30
 3974 78F3              brlo L922
 3976           X331:
 3976                   .dbline 1910
 3976           ;               M2_L
 3976 82B3              in R24,0x12
 3978 8D7F              andi R24,253
 397A 82BB              out 0x12,R24
 397C                   .dbline 1911
 397C           ;                       DELAY40
 397C 2224              clr R2
 397E 3324              clr R3
 3980 3092AE01          sts _Tt+1,R3
 3984 2092AD01          sts _Tt,R2
 3988 09C0              xjmp L929
 398A           L926:
 398A                   .dbline 1911
 398A           L927:
 398A                   .dbline 1911
 398A 8091AD01          lds R24,_Tt
 398E 9091AE01          lds R25,_Tt+1
 3992 0196              adiw R24,1
 3994 9093AE01          sts _Tt+1,R25
 3998 8093AD01          sts _Tt,R24
 399C           L929:
 399C                   .dbline 1911
 399C 8091AD01          lds R24,_Tt
 39A0 9091AE01          lds R25,_Tt+1
 39A4 8031              cpi R24,16
 39A6 E0E0              ldi R30,0
 39A8 9E07              cpc R25,R30
 39AA 78F3              brlo L926
 39AC           X332:
 39AC                   .dbline 1912
 39AC           ;               M1_H       
 39AC 929A              sbi 0x12,2
 39AE                   .dbline 1913
 39AE           ;               DELAY80
 39AE 2224              clr R2
 39B0 3324              clr R3
 39B2 3092AE01          sts _Tt+1,R3
 39B6 2092AD01          sts _Tt,R2
 39BA 09C0              xjmp L933
 39BC           L930:
 39BC                   .dbline 1913
 39BC           L931:
 39BC                   .dbline 1913
 39BC 8091AD01          lds R24,_Tt
 39C0 9091AE01          lds R25,_Tt+1
 39C4 0196              adiw R24,1
 39C6 9093AE01          sts _Tt+1,R25
 39CA 8093AD01          sts _Tt,R24
 39CE           L933:
 39CE                   .dbline 1913
 39CE 8091AD01          lds R24,_Tt
 39D2 9091AE01          lds R25,_Tt+1
 39D6 8032              cpi R24,32
 39D8 E0E0              ldi R30,0
 39DA 9E07              cpc R25,R30
 39DC 78F3              brlo L930
 39DE           X333:
 39DE                   .dbline 1914
 39DE           ;                       DELAY80
 39DE 2224              clr R2
 39E0 3324              clr R3
 39E2 3092AE01          sts _Tt+1,R3
 39E6 2092AD01          sts _Tt,R2
 39EA 09C0              xjmp L937
 39EC           L934:
 39EC                   .dbline 1914
 39EC           L935:
 39EC                   .dbline 1914
 39EC 8091AD01          lds R24,_Tt
 39F0 9091AE01          lds R25,_Tt+1
 39F4 0196              adiw R24,1
 39F6 9093AE01          sts _Tt+1,R25
 39FA 8093AD01          sts _Tt,R24
 39FE           L937:
 39FE                   .dbline 1914
 39FE 8091AD01          lds R24,_Tt
 3A02 9091AE01          lds R25,_Tt+1
 3A06 8032              cpi R24,32
 3A08 E0E0              ldi R30,0
 3A0A 9E07              cpc R25,R30
 3A0C 78F3              brlo L934
 3A0E           X334:
 3A0E                   .dbline 1915
 3A0E           ;                       DELAY80
 3A0E 2224              clr R2
 3A10 3324              clr R3
 3A12 3092AE01          sts _Tt+1,R3
 3A16 2092AD01          sts _Tt,R2
 3A1A 09C0              xjmp L941
 3A1C           L938:
 3A1C                   .dbline 1915
 3A1C           L939:
 3A1C                   .dbline 1915
 3A1C 8091AD01          lds R24,_Tt
 3A20 9091AE01          lds R25,_Tt+1
 3A24 0196              adiw R24,1
 3A26 9093AE01          sts _Tt+1,R25
 3A2A 8093AD01          sts _Tt,R24
 3A2E           L941:
 3A2E                   .dbline 1915
 3A2E 8091AD01          lds R24,_Tt
 3A32 9091AE01          lds R25,_Tt+1
 3A36 8032              cpi R24,32
 3A38 E0E0              ldi R30,0
 3A3A 9E07              cpc R25,R30
 3A3C 78F3              brlo L938
 3A3E           X335:
 3A3E                   .dbline 1916
 3A3E           ;                       M1_L
 3A3E 82B3              in R24,0x12
 3A40 8B7F              andi R24,251
 3A42 82BB              out 0x12,R24
 3A44                   .dbline 1917
 3A44           ;                       DELAY40
 3A44 2224              clr R2
 3A46 3324              clr R3
 3A48 3092AE01          sts _Tt+1,R3
 3A4C 2092AD01          sts _Tt,R2
 3A50 09C0              xjmp L945
 3A52           L942:
 3A52                   .dbline 1917
 3A52           L943:
 3A52                   .dbline 1917
 3A52 8091AD01          lds R24,_Tt
 3A56 9091AE01          lds R25,_Tt+1
 3A5A 0196              adiw R24,1
 3A5C 9093AE01          sts _Tt+1,R25
 3A60 8093AD01          sts _Tt,R24
 3A64           L945:
 3A64                   .dbline 1917
 3A64 8091AD01          lds R24,_Tt
 3A68 9091AE01          lds R25,_Tt+1
 3A6C 8031              cpi R24,16
 3A6E E0E0              ldi R30,0
 3A70 9E07              cpc R25,R30
 3A72 78F3              brlo L942
 3A74           X336:
 3A74                   .dbline 1918
 3A74           ;               }
 3A74           L905:
 3A74                   .dbline 1919
 3A74           ;     }            
 3A74           L901:
 3A74                   .dbline 1893
 3A74 4A95              dec R20
 3A76           L903:
 3A76                   .dbline 1893
 3A76 80E0              ldi R24,0
 3A78 8417              cp R24,R20
 3A7A 08F4              brsh X349
 3A7C F0CE              xjmp L900
 3A7E           X349:
 3A7E           X337:
 3A7E                   .dbline 1921
 3A7E           ;                  //结束位，一高八低，720us
 3A7E           ;                   M2_H 
 3A7E 919A              sbi 0x12,1
 3A80                   .dbline 1922
 3A80           ;                   DELAY80
 3A80 2224              clr R2
 3A82 3324              clr R3
 3A84 3092AE01          sts _Tt+1,R3
 3A88 2092AD01          sts _Tt,R2
 3A8C 09C0              xjmp L949
 3A8E           L946:
 3A8E                   .dbline 1922
 3A8E           L947:
 3A8E                   .dbline 1922
 3A8E 8091AD01          lds R24,_Tt
 3A92 9091AE01          lds R25,_Tt+1
 3A96 0196              adiw R24,1
 3A98 9093AE01          sts _Tt+1,R25
 3A9C 8093AD01          sts _Tt,R24
 3AA0           L949:
 3AA0                   .dbline 1922
 3AA0 8091AD01          lds R24,_Tt
 3AA4 9091AE01          lds R25,_Tt+1
 3AA8 8032              cpi R24,32
 3AAA E0E0              ldi R30,0
 3AAC 9E07              cpc R25,R30
 3AAE 78F3              brlo L946
 3AB0           X338:
 3AB0                   .dbline 1923
 3AB0           ;               M2_L
 3AB0 82B3              in R24,0x12
 3AB2 8D7F              andi R24,253
 3AB4 82BB              out 0x12,R24
 3AB6                   .dbline 1924
 3AB6           ;                       DELAY40
 3AB6 2224              clr R2
 3AB8 3324              clr R3
 3ABA 3092AE01          sts _Tt+1,R3
 3ABE 2092AD01          sts _Tt,R2
 3AC2 09C0              xjmp L953
 3AC4           L950:
 3AC4                   .dbline 1924
 3AC4           L951:
 3AC4                   .dbline 1924
 3AC4 8091AD01          lds R24,_Tt
 3AC8 9091AE01          lds R25,_Tt+1
 3ACC 0196              adiw R24,1
 3ACE 9093AE01          sts _Tt+1,R25
 3AD2 8093AD01          sts _Tt,R24
 3AD6           L953:
 3AD6                   .dbline 1924
 3AD6 8091AD01          lds R24,_Tt
 3ADA 9091AE01          lds R25,_Tt+1
 3ADE 8031              cpi R24,16
 3AE0 E0E0              ldi R30,0
 3AE2 9E07              cpc R25,R30
 3AE4 78F3              brlo L950
 3AE6           X339:
 3AE6                   .dbline 1925
 3AE6           ;               M1_H       
 3AE6 929A              sbi 0x12,2
 3AE8                   .dbline 1926
 3AE8           ;               DELAY80
 3AE8 2224              clr R2
 3AEA 3324              clr R3
 3AEC 3092AE01          sts _Tt+1,R3
 3AF0 2092AD01          sts _Tt,R2
 3AF4 09C0              xjmp L957
 3AF6           L954:
 3AF6                   .dbline 1926
 3AF6           L955:
 3AF6                   .dbline 1926
 3AF6 8091AD01          lds R24,_Tt
 3AFA 9091AE01          lds R25,_Tt+1
 3AFE 0196              adiw R24,1
 3B00 9093AE01          sts _Tt+1,R25
 3B04 8093AD01          sts _Tt,R24
 3B08           L957:
 3B08                   .dbline 1926
 3B08 8091AD01          lds R24,_Tt
 3B0C 9091AE01          lds R25,_Tt+1
 3B10 8032              cpi R24,32
 3B12 E0E0              ldi R30,0
 3B14 9E07              cpc R25,R30
 3B16 78F3              brlo L954
 3B18           X340:
 3B18                   .dbline 1927
 3B18           ;                       DELAY80
 3B18 2224              clr R2
 3B1A 3324              clr R3
 3B1C 3092AE01          sts _Tt+1,R3
 3B20 2092AD01          sts _Tt,R2
 3B24 09C0              xjmp L961
 3B26           L958:
 3B26                   .dbline 1927
 3B26           L959:
 3B26                   .dbline 1927
 3B26 8091AD01          lds R24,_Tt
 3B2A 9091AE01          lds R25,_Tt+1
 3B2E 0196              adiw R24,1
 3B30 9093AE01          sts _Tt+1,R25
 3B34 8093AD01          sts _Tt,R24
 3B38           L961:
 3B38                   .dbline 1927
 3B38 8091AD01          lds R24,_Tt
 3B3C 9091AE01          lds R25,_Tt+1
 3B40 8032              cpi R24,32
 3B42 E0E0              ldi R30,0
 3B44 9E07              cpc R25,R30
 3B46 78F3              brlo L958
 3B48           X341:
 3B48                   .dbline 1928
 3B48           ;                       DELAY80
 3B48 2224              clr R2
 3B4A 3324              clr R3
 3B4C 3092AE01          sts _Tt+1,R3
 3B50 2092AD01          sts _Tt,R2
 3B54 09C0              xjmp L965
 3B56           L962:
 3B56                   .dbline 1928
 3B56           L963:
 3B56                   .dbline 1928
 3B56 8091AD01          lds R24,_Tt
 3B5A 9091AE01          lds R25,_Tt+1
 3B5E 0196              adiw R24,1
 3B60 9093AE01          sts _Tt+1,R25
 3B64 8093AD01          sts _Tt,R24
 3B68           L965:
 3B68                   .dbline 1928
 3B68 8091AD01          lds R24,_Tt
 3B6C 9091AE01          lds R25,_Tt+1
 3B70 8032              cpi R24,32
 3B72 E0E0              ldi R30,0
 3B74 9E07              cpc R25,R30
 3B76 78F3              brlo L962
 3B78           X342:
 3B78                   .dbline 1929
 3B78           ;                       DELAY80
 3B78 2224              clr R2
 3B7A 3324              clr R3
 3B7C 3092AE01          sts _Tt+1,R3
 3B80 2092AD01          sts _Tt,R2
 3B84 09C0              xjmp L969
 3B86           L966:
 3B86                   .dbline 1929
 3B86           L967:
 3B86                   .dbline 1929
 3B86 8091AD01          lds R24,_Tt
 3B8A 9091AE01          lds R25,_Tt+1
 3B8E 0196              adiw R24,1
 3B90 9093AE01          sts _Tt+1,R25
 3B94 8093AD01          sts _Tt,R24
 3B98           L969:
 3B98                   .dbline 1929
 3B98 8091AD01          lds R24,_Tt
 3B9C 9091AE01          lds R25,_Tt+1
 3BA0 8032              cpi R24,32
 3BA2 E0E0              ldi R30,0
 3BA4 9E07              cpc R25,R30
 3BA6 78F3              brlo L966
 3BA8           X343:
 3BA8                   .dbline 1930
 3BA8           ;                       DELAY80
 3BA8 2224              clr R2
 3BAA 3324              clr R3
 3BAC 3092AE01          sts _Tt+1,R3
 3BB0 2092AD01          sts _Tt,R2
 3BB4 09C0              xjmp L973
 3BB6           L970:
 3BB6                   .dbline 1930
 3BB6           L971:
 3BB6                   .dbline 1930
 3BB6 8091AD01          lds R24,_Tt
 3BBA 9091AE01          lds R25,_Tt+1
 3BBE 0196              adiw R24,1
 3BC0 9093AE01          sts _Tt+1,R25
 3BC4 8093AD01          sts _Tt,R24
 3BC8           L973:
 3BC8                   .dbline 1930
 3BC8 8091AD01          lds R24,_Tt
 3BCC 9091AE01          lds R25,_Tt+1
 3BD0 8032              cpi R24,32
 3BD2 E0E0              ldi R30,0
 3BD4 9E07              cpc R25,R30
 3BD6 78F3              brlo L970
 3BD8           X344:
 3BD8                   .dbline 1931
 3BD8           ;                       DELAY80
 3BD8 2224              clr R2
 3BDA 3324              clr R3
 3BDC 3092AE01          sts _Tt+1,R3
 3BE0 2092AD01          sts _Tt,R2
 3BE4 09C0              xjmp L977
 3BE6           L974:
 3BE6                   .dbline 1931
 3BE6           L975:
 3BE6                   .dbline 1931
 3BE6 8091AD01          lds R24,_Tt
 3BEA 9091AE01          lds R25,_Tt+1
 3BEE 0196              adiw R24,1
 3BF0 9093AE01          sts _Tt+1,R25
 3BF4 8093AD01          sts _Tt,R24
 3BF8           L977:
 3BF8                   .dbline 1931
 3BF8 8091AD01          lds R24,_Tt
 3BFC 9091AE01          lds R25,_Tt+1
 3C00 8032              cpi R24,32
 3C02 E0E0              ldi R30,0
 3C04 9E07              cpc R25,R30
 3C06 78F3              brlo L974
 3C08           X345:
 3C08                   .dbline 1932
 3C08           ;                       DELAY80
 3C08 2224              clr R2
 3C0A 3324              clr R3
 3C0C 3092AE01          sts _Tt+1,R3
 3C10 2092AD01          sts _Tt,R2
 3C14 09C0              xjmp L981
 3C16           L978:
 3C16                   .dbline 1932
 3C16           L979:
 3C16                   .dbline 1932
 3C16 8091AD01          lds R24,_Tt
 3C1A 9091AE01          lds R25,_Tt+1
 3C1E 0196              adiw R24,1
 3C20 9093AE01          sts _Tt+1,R25
 3C24 8093AD01          sts _Tt,R24
 3C28           L981:
 3C28                   .dbline 1932
 3C28 8091AD01          lds R24,_Tt
 3C2C 9091AE01          lds R25,_Tt+1
 3C30 8032              cpi R24,32
 3C32 E0E0              ldi R30,0
 3C34 9E07              cpc R25,R30
 3C36 78F3              brlo L978
 3C38           X346:
 3C38                   .dbline 1933
 3C38           ;                       M1_L
 3C38 82B3              in R24,0x12
 3C3A 8B7F              andi R24,251
 3C3C 82BB              out 0x12,R24
 3C3E                   .dbline 1934
 3C3E           ;                       DELAY40
 3C3E 2224              clr R2
 3C40 3324              clr R3
 3C42 3092AE01          sts _Tt+1,R3
 3C46 2092AD01          sts _Tt,R2
 3C4A 09C0              xjmp L985
 3C4C           L982:
 3C4C                   .dbline 1934
 3C4C           L983:
 3C4C                   .dbline 1934
 3C4C 8091AD01          lds R24,_Tt
 3C50 9091AE01          lds R25,_Tt+1
 3C54 0196              adiw R24,1
 3C56 9093AE01          sts _Tt+1,R25
 3C5A 8093AD01          sts _Tt,R24
 3C5E           L985:
 3C5E                   .dbline 1934
 3C5E 8091AD01          lds R24,_Tt
 3C62 9091AE01          lds R25,_Tt+1
 3C66 8031              cpi R24,16
 3C68 E0E0              ldi R30,0
 3C6A 9E07              cpc R25,R30
 3C6C 78F3              brlo L982
 3C6E           X347:
 3C6E                   .dbline 1936
 3C6E           ;       
 3C6E           ;       EIFR|=0x08;//清INT3中断标志 
 3C6E 88B7              in R24,0x38
 3C70 8860              ori R24,8
 3C72 88BF              out 0x38,R24
 3C74                   .dbline 1937
 3C74           ;       SREG|=0x80; //开总中断
 3C74 7894              bset 7
 3C76                   .dbline -2
 3C76           L833:
 3C76                   .dbline 0 ; func end
 3C76 4991              ld R20,y+
 3C78 0895              ret
 3C7A                   .dbsym r L 20 c
 3C7A                   .dbend
 3C7A                   .dbfunc e EEPROM_write _EEPROM_write fV
 3C7A           ;           Data -> R18
 3C7A           ;        Address -> R16,R17
                        .even
 3C7A           _EEPROM_write::
 3C7A                   .dbline -1
 3C7A                   .dbline 1943
 3C7A           ; }
 3C7A           ; 
 3C7A           ; 
 3C7A           ; 
 3C7A           ; void EEPROM_write(unsigned int Address,unsigned char Data)    //内部EEPROM写
 3C7A           ; {//时钟频率为1MHz，典型的EEPROM字节写耗时约8.5ms
 3C7A           L987:
 3C7A                   .dbline 1944
 3C7A           ;     while(EECR&0x02);                   // 等待上一次写操作结束
 3C7A           L988:
 3C7A                   .dbline 1944
 3C7A E199              sbic 0x1c,1
 3C7C FECF              rjmp L987
 3C7E           X350:
 3C7E                   .dbline 1945
 3C7E           ;     EEAR=Address;
 3C7E 1FBB              out 0x1f,R17
 3C80 0EBB              out 0x1e,R16
 3C82                   .dbline 1946
 3C82           ;     EEDR=Data;                                // 设置地址和数据寄存器
 3C82 2DBB              out 0x1d,R18
 3C84                   .dbline 1947
 3C84           ;     EECR|=0x04;                         //置位EEMWE
 3C84 E29A              sbi 0x1c,2
 3C86                   .dbline 1948
 3C86           ;     EECR|=0x02;                         //置位EEWE 以启动写操作
 3C86 E19A              sbi 0x1c,1
 3C88                   .dbline -2
 3C88           L986:
 3C88                   .dbline 0 ; func end
 3C88 0895              ret
 3C8A                   .dbsym r Data 18 c
 3C8A                   .dbsym r Address 16 i
 3C8A                   .dbend
 3C8A                   .dbfunc e EEPROM_read _EEPROM_read fc
 3C8A           ;        Address -> R16,R17
                        .even
 3C8A           _EEPROM_read::
 3C8A                   .dbline -1
 3C8A                   .dbline 1952
 3C8A           ; }
 3C8A           ; 
 3C8A           ; unsigned char EEPROM_read(unsigned int Address)                               //内部EEPROM读
 3C8A           ; {
 3C8A           L991:
 3C8A                   .dbline 1953
 3C8A           ;     while(EECR&0x02);                                 //等待上一次操作结束
 3C8A           L992:
 3C8A                   .dbline 1953
 3C8A E199              sbic 0x1c,1
 3C8C FECF              rjmp L991
 3C8E           X351:
 3C8E                   .dbline 1954
 3C8E           ;     EEAR = Address;                     //设置地址寄存器                                              
 3C8E 1FBB              out 0x1f,R17
 3C90 0EBB              out 0x1e,R16
 3C92                   .dbline 1955
 3C92           ;       EECR|=0x01;                                     //设置EERE 以启动读操作
 3C92 E09A              sbi 0x1c,0
 3C94                   .dbline 1956
 3C94           ;     return EEDR;                              //自数据寄存器返回数据
 3C94 0DB3              in R16,0x1d
 3C96                   .dbline -2
 3C96           L990:
 3C96                   .dbline 0 ; func end
 3C96 0895              ret
 3C98                   .dbsym r Address 16 i
 3C98                   .dbend
 3C98                   .dbfunc e crc16 _crc16 fV
 3C98           ;             ii -> R20,R21
 3C98           ;             ch -> R10
 3C98           ;             cl -> R22
 3C98           ;         savelo -> R14
 3C98           ;         savehi -> y+0
 3C98           ;           flag -> R12,R13
 3C98           ;         length -> R18,R19
 3C98           ;         r_data -> y+11
                        .even
 3C98           _crc16::
 3C98 0E940000          xcall push_arg4
 3C9C 0E940000          xcall push_xgsetF0FC
 3CA0 2197              sbiw R28,1
 3CA2                   .dbline -1
 3CA2                   .dbline 1960
 3CA2           ; }    
 3CA2           ; 
 3CA2           ; void crc16(unsigned char r_data[],unsigned int length)
 3CA2           ; {
 3CA2                   .dbline 1964
 3CA2           ;         unsigned char cl,ch;
 3CA2           ;         unsigned char savehi,savelo;
 3CA2           ;         int ii,flag;
 3CA2           ;         crc16hi=0xFF;
 3CA2 8FEF              ldi R24,255
 3CA4 80931100          sts _crc16hi,R24
 3CA8                   .dbline 1965
 3CA8           ;         crc16lo=0xFF;
 3CA8 80931000          sts _crc16lo,R24
 3CAC                   .dbline 1966
 3CAC           ;         cl=0x1;
 3CAC 61E0              ldi R22,1
 3CAE                   .dbline 1967
 3CAE           ;         ch=0xA0;
 3CAE 80EA              ldi R24,160
 3CB0 A82E              mov R10,R24
 3CB2                   .dbline 1968
 3CB2           ;         for (ii=0;ii<length-2;ii++)
 3CB2 4427              clr R20
 3CB4 5527              clr R21
 3CB6 38C0              xjmp L998
 3CB8           L995:
 3CB8                   .dbline 1969
 3CB8           ;         {
 3CB8                   .dbline 1970
 3CB8           ;             crc16lo=(crc16lo ^ r_data[ii]);
 3CB8 FA01              movw R30,R20
 3CBA 0B84              ldd R0,y+11
 3CBC 1C84              ldd R1,y+12
 3CBE E00D              add R30,R0
 3CC0 F11D              adc R31,R1
 3CC2 2080              ldd R2,z+0
 3CC4 30901000          lds R3,_crc16lo
 3CC8 3224              eor R3,R2
 3CCA 30921000          sts _crc16lo,R3
 3CCE                   .dbline 1971
 3CCE           ;                 for (flag=0;flag<8;flag++)
 3CCE CC24              clr R12
 3CD0 DD24              clr R13
 3CD2           L999:
 3CD2                   .dbline 1972
 3CD2           ;                 {
 3CD2                   .dbline 1973
 3CD2           ;                        savehi=crc16hi;
 3CD2 20901100          lds R2,_crc16hi
 3CD6 2882              std y+0,R2
 3CD8                   .dbline 1974
 3CD8           ;                         savelo=crc16lo;
 3CD8 E0901000          lds R14,_crc16lo
 3CDC                   .dbline 1975
 3CDC           ;                        crc16hi=(crc16hi>>1);
 3CDC 2694              lsr R2
 3CDE 20921100          sts _crc16hi,R2
 3CE2                   .dbline 1976
 3CE2           ;                        crc16lo=(crc16lo>>1);
 3CE2 2E2C              mov R2,R14
 3CE4 2694              lsr R2
 3CE6 20921000          sts _crc16lo,R2
 3CEA                   .dbline 1977
 3CEA           ;                         if ((savehi & 0x01)==0x01)
 3CEA 8881              ldd R24,y+0
 3CEC 8170              andi R24,1
 3CEE 8130              cpi R24,1
 3CF0 21F4              brne L1003
 3CF2           X352:
 3CF2                   .dbline 1978
 3CF2           ;                                 crc16lo=(crc16lo | 0x80);
 3CF2 822D              mov R24,R2
 3CF4 8068              ori R24,128
 3CF6 80931000          sts _crc16lo,R24
 3CFA           L1003:
 3CFA                   .dbline 1979
 3CFA           ;                         if        ((savelo & 0x01)==0x01)
 3CFA 8E2D              mov R24,R14
 3CFC 8170              andi R24,1
 3CFE 8130              cpi R24,1
 3D00 51F4              brne L1005
 3D02           X353:
 3D02                   .dbline 1980
 3D02           ;                         {
 3D02                   .dbline 1981
 3D02           ;                                 crc16hi = (crc16hi ^ ch);
 3D02 20901100          lds R2,_crc16hi
 3D06 2A24              eor R2,R10
 3D08 20921100          sts _crc16hi,R2
 3D0C                   .dbline 1982
 3D0C           ;                                                               crc16lo = (crc16lo ^ cl);
 3D0C 20901000          lds R2,_crc16lo
 3D10 2626              eor R2,R22
 3D12 20921000          sts _crc16lo,R2
 3D16                   .dbline 1983
 3D16           ;                         }        
 3D16           L1005:
 3D16                   .dbline 1984
 3D16           ;                 }
 3D16           L1000:
 3D16                   .dbline 1971
 3D16 C601              movw R24,R12
 3D18 0196              adiw R24,1
 3D1A 6C01              movw R12,R24
 3D1C                   .dbline 1971
 3D1C 8830              cpi R24,8
 3D1E E0E0              ldi R30,0
 3D20 9E07              cpc R25,R30
 3D22 BCF2              brlt L999
 3D24           X354:
 3D24                   .dbline 1985
 3D24           ;         }
 3D24           L996:
 3D24                   .dbline 1968
 3D24 4F5F              subi R20,255  ; offset = 1
 3D26 5F4F              sbci R21,255
 3D28           L998:
 3D28                   .dbline 1968
 3D28 C901              movw R24,R18
 3D2A 0297              sbiw R24,2
 3D2C 4817              cp R20,R24
 3D2E 5907              cpc R21,R25
 3D30 08F4              brsh X356
 3D32 C2CF              xjmp L995
 3D34           X356:
 3D34           X355:
 3D34                   .dbline -2
 3D34           L994:
 3D34                   .dbline 0 ; func end
 3D34 2196              adiw R28,1
 3D36 0E940000          xcall pop_xgsetF0FC
 3D3A 2496              adiw R28,4
 3D3C 0895              ret
 3D3E                   .dbsym r ii 20 I
 3D3E                   .dbsym r ch 10 c
 3D3E                   .dbsym r cl 22 c
 3D3E                   .dbsym r savelo 14 c
 3D3E                   .dbsym l savehi 0 c
 3D3E                   .dbsym r flag 12 I
 3D3E                   .dbsym r length 18 i
 3D3E                   .dbsym l r_data 11 pc
 3D3E                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CTZK\main.c
 0000           _crc16array::
 0000                   .blkb 16
 0010                   .dbsym e crc16array _crc16array A[16:16]c
 0010           _crc16lo::
 0010                   .blkb 1
 0011                   .dbsym e crc16lo _crc16lo c
 0011           _crc16hi::
 0011                   .blkb 1
 0012                   .dbsym e crc16hi _crc16hi c
 0012           _lfib::
 0012                   .blkb 4
 0016                   .dbsym e lfib _lfib l
 0016           _bf::
 0016                   .blkb 2
 0018                   .dbsym e bf _bf i
 0018           _CompCounter::
 0018                   .blkb 2
 001A                   .dbsym e CompCounter _CompCounter i
 001A           _coeff_count::
 001A                   .blkb 2
 001C                   .dbsym e coeff_count _coeff_count i
 001C           _coeff_len::
 001C                   .blkb 2
 001E                   .dbsym e coeff_len _coeff_len i
 001E           _EEPAdd::
 001E                   .blkb 1
 001F                   .dbsym e EEPAdd _EEPAdd c
 001F           _Uart0TxData::
 001F                   .blkb 74
 0069                   .dbsym e Uart0TxData _Uart0TxData A[74:74]c
 0069           _coeffdata::
 0069                   .blkb 320
 01A9                   .dbsym e coeffdata _coeffdata A[320:320]c
 01A9           _T2cn::
 01A9                   .blkb 2
 01AB                   .dbsym e T2cn _T2cn i
 01AB           _k::
 01AB                   .blkb 2
 01AD                   .dbsym e k _k i
 01AD           _Tt::
 01AD                   .blkb 2
 01AF                   .dbsym e Tt _Tt i
 01AF           _IntFlag::
 01AF                   .blkb 1
 01B0                   .dbsym e IntFlag _IntFlag c
 01B0           _Int_count::
 01B0                   .blkb 1
 01B1                   .dbsym e Int_count _Int_count c
 01B1           _DataFlag::
 01B1                   .blkb 2
 01B3                   .dbsym e DataFlag _DataFlag i
 01B3           _T_dat_buf::
 01B3                   .blkb 22
 01C9                   .dbsym e T_dat_buf _T_dat_buf A[22:22]c
 01C9           _TimeOutFlag::
 01C9                   .blkb 1
 01CA                   .dbsym e TimeOutFlag _TimeOutFlag c
 01CA           _T_com::
 01CA                   .blkb 1
 01CB                   .dbsym e T_com _T_com c
 01CB           _R_dat::
 01CB                   .blkb 2
 01CD                   .dbsym e R_dat _R_dat I
 01CD           _T_dat::
 01CD                   .blkb 2
 01CF                   .dbsym e T_dat _T_dat I
 01CF           _Rx::
 01CF                   .blkb 18
 01E1                   .dbsym e Rx _Rx A[18:18]c
 01E1           _Uart0RxCounter::
 01E1                   .blkb 1
 01E2                   .dbsym e Uart0RxCounter _Uart0RxCounter c
 01E2           _Uart0RxData::
 01E2                   .blkb 74
 022C                   .dbsym e Uart0RxData _Uart0RxData A[74:74]c
 022C           _Timer0Counter::
 022C                   .blkb 2
 022E                   .dbsym e Timer0Counter _Timer0Counter i
 022E           _T_Flag::
 022E                   .blkb 1
 022F                   .dbsym e T_Flag _T_Flag c
 022F           _Motor2Thr::
 022F                   .blkb 1
 0230                   .dbsym e Motor2Thr _Motor2Thr c
 0230           _Motor1Thr::
 0230                   .blkb 1
 0231                   .dbsym e Motor1Thr _Motor1Thr c
 0231           _Motor2Status::
 0231                   .blkb 2
 0233                   .dbstruct 0 2 .1
 0233                   .dbfield 0 PWM F[0:1]
 0233                   .dbfield 0 DIR F[1:1]
 0233                   .dbfield 0 BrokenStop F[2:1]
 0233                   .dbfield 0 CommandStop F[3:1]
 0233                   .dbfield 0 OverCurrent F[4:1]
 0233                   .dbfield 0 UnderVoltage F[5:1]
 0233                   .dbfield 0 StartResult F[6:2]
 0233                   .dbfield 0 ThisCurrent F[8:8]
 0233                   .dbend
 0233                   .dbunion 0 2 MotorStatus
 0233                   .dbfield 0 i i
 0233                   .dbfield 0 s S[.1]
 0233                   .dbend
 0233                   .dbsym e Motor2Status _Motor2Status S[MotorStatus]
 0233           _Motor1Status::
 0233                   .blkb 2
 0235                   .dbsym e Motor1Status _Motor1Status S[MotorStatus]
 0235           _myFIB::
 0235                   .blkb 4
 0239                   .dbunion 0 4 FIB
 0239                   .dbfield 0 f D
 0239                   .dbfield 0 i A[4:2]i
 0239                   .dbfield 0 b A[4:4]c
 0239                   .dbend
 0239                   .dbsym e myFIB _myFIB S[FIB]
                        .area lit(rom, con, rel)
 0000           L131:
 0000 0000FA40          .word 0x0,0x40fa
 0004           ; }
