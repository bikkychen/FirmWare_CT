                        .module SBL.c
                        .area text(rom, con, rel)
 0000                   .dbfile SBL.c
                        .area data(ram, con, rel)
 0000                   .dbfile SBL.c
 0000           _address::
 0000                   .blkb 4
                        .area idata
 0000 00000000          .word 0,0
                        .area data(ram, con, rel)
 0004                   .dbfile SBL.c
 0004                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0004                   .dbsym e address _address L
                        .area text(rom, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0000                   .dbfunc e boot_page_ew _boot_page_ew fV
 0000           ;           code -> R16
 0000           ;      p_address -> y+0
                        .even
 0000           _boot_page_ew::
 0000 0E940000          xcall push_arg4
 0004 0C81              ldd R16,y+4
 0006                   .dbline -1
 0006                   .dbline 111
 0006           ; #include <iom128v.h>                                                                  
 0006           ; #include <macros.h>
 0006           ; #include <stdio.h>
 0006           ; 
 0006           ; //最后修订:20160812
 0006           ; 
 0006           ; #define  BB     0x00        //固件版本号
 0006           ; 
 0006           ; #define M1_L    PORTD&=0xfb;
 0006           ; #define M1_H    PORTD|=0x04;
 0006           ; #define M2_L    PORTD&=0xfd;
 0006           ; #define M2_H    PORTD|=0x02;
 0006           ;  
 0006           ;  //收放电机管脚定义和控制项
 0006           ; #define DIR1_PIN    ((PINA&0x04)>>2)
 0006           ; #define PWM1_PIN    ((PINA&0x02)>>1)
 0006           ; #define BREAKE1_PIN (PINA&0x01)
 0006           ; 
 0006           ; #define DIR1_H      {DDRA|=0x04;PORTA|=0x04;}
 0006           ; #define PWM1_H      {DDRA|=0x02;PORTA|=0x02;}
 0006           ; #define BREAKE1_H   {DDRA|=0x01;PORTA|=0x01;}
 0006           ; 
 0006           ; #define DIR1_L      {DDRA|=0x04;PORTA&=0xfb;}
 0006           ; #define PWM1_L      {DDRA|=0x02;PORTA&=0xFD;}
 0006           ; #define BREAKE1_L   {DDRA|=0x01;PORTA&=0xFE;}
 0006           ; 
 0006           ; //调节电机管脚定义和控制项
 0006           ; #define PWM2_PIN    ((PINF&0x04)>>2)
 0006           ; #define BREAKE2_PIN ((PINF&0x02)>>1)
 0006           ; #define DIR2_PIN    (PINF&0x01)
 0006           ; 
 0006           ; #define PWM2_H      {DDRF|=0x04;PORTF|=0x04;}
 0006           ; #define BREAKE2_H   {DDRF|=0x02;PORTF|=0x02;}
 0006           ; #define DIR2_H      {DDRF|=0x01;PORTF|=0x01;}
 0006           ; 
 0006           ; #define PWM2_L      {DDRF|=0x04;PORTF&=0xfb;}
 0006           ; #define BREAKE2_L   {DDRF|=0x02;PORTF&=0xFD;}
 0006           ; #define DIR2_L      {DDRF|=0x01;PORTF&=0xFE;}
 0006           ; 
 0006           ; //同时关二个电机，先把PWM置低，后把DIR和BREAK置低，最后关电机电源
 0006           ; #define MOTORSTOP   {DDRA|=0x07;PORTA&=0xFD;PORTA&=0xF8;   DDRF|=0x07;PORTF&=0xFB;PORTF&=0xF8;     DDRB|=0x80;PORTB&=0x7f;}
 0006           ; 
 0006           ; #define DELAY10 for(Tt=0;Tt<4;Tt++); 
 0006           ; #define DELAY20 for(Tt=0;Tt<8;Tt++); 
 0006           ; #define DELAY40 for(Tt=0;Tt<16;Tt++); 
 0006           ; #define DELAY50 for(Tt=0;Tt<21;Tt++); 
 0006           ; #define DELAY80 for(Tt=0;Tt<32;Tt++); 
 0006           ; #define DELAY89 for(Tt=0;Tt<36;Tt++); 
 0006           ; #define DELAY100 for(Tt=0;Tt<42;Tt++); 
 0006           ; #define DELAY200 for(Tt=0;Tt<84;Tt++); 
 0006           ; #define DELAY170 for(Tt=0;Tt<72;Tt++);
 0006           ; #define DELAY268 for(Tt=0;Tt<113;Tt++);
 0006           ; #define DELAY397 for(Tt=0;Tt<165;Tt++);
 0006           ; #define DELAY400 for(Tt=0;Tt<168;Tt++);
 0006           ;  
 0006           ; union MotorStatus
 0006           ; {
 0006           ;  unsigned int i;
 0006           ;  struct 
 0006           ;  { 
 0006           ;    unsigned int PWM:1;//bit0,电机运行状态，0：停止，1：运行
 0006           ;    unsigned int DIR:1;//bit1,电机运行方向，0：正向，1：反向
 0006           ;    unsigned int BrokenStop:1;//bit2, 断路停
 0006           ;    unsigned int CommandStop:1;//bit3,手动停
 0006           ;    unsigned int OverCurrent:1;//bit4,过流停
 0006           ;    unsigned int UnderVoltage:1;//bit5,欠压停
 0006           ;    unsigned int StartResult:2;//bit6-bit7,电机最近一次启动结果(0：正常上电启动，1：本电机同向运行，2：本电机反向运行，3：另一个电机正在运行)
 0006           ;    
 0006           ;    unsigned int ThisCurrent:8;//bit8-bit15 ,  电机当前或停止前最近一次电流
 0006           ;  }s;
 0006           ; }Motor1Status,Motor2Status;//电机状态
 0006           ; 
 0006           ; unsigned char Rx[18];//解码接收9位共18个半位
 0006           ; unsigned int  T_dat,R_dat;//曼码发送数据
 0006           ; unsigned char T_com;//曼码发送命令
 0006           ; unsigned char T_dat_buf[22];//曼码发送缓冲 
 0006           ; unsigned char Int_count;
 0006           ; unsigned char IntFlag;//接收帧状态
 0006           ;  
 0006           ; unsigned int Tt;
 0006           ; 
 0006           ; unsigned char UpdateBegin;//接收主程序数据开始标志
 0006           ; unsigned int DataReCn;
 0006           ; unsigned char crc16hi,crc16lo,DownloadSpeed;
 0006           ; unsigned int Timer3Cn;
 0006           ; unsigned char DSP_PageCn;//DSP程序页计数
 0006           ; 
 0006           ; unsigned char Uart0RxCounter;
 0006           ; unsigned char Uart0RxData[2];
 0006           ; unsigned int Timer0Counter;
 0006           ; unsigned char TimeOutFlag;
 0006           ; 
 0006           ; char flash_buf[258]; //FALSH页缓冲区,M128的一个Flash页为256字节(128字) //暂只支持64K地址编程
 0006           ; long address = 0; 
 0006           ; unsigned int T2cn;
 0006           ; 
 0006           ; void Start(void);
 0006           ; 
 0006           ; void SendManchester(void); 
 0006           ;  
 0006           ; void Delay30Ms();
 0006           ; 
 0006           ; //void EEPROM_write(unsigned int Address,unsigned char Data);
 0006           ; //unsigned char EEPROM_read(unsigned int Address) ;
 0006           ; 
 0006           ; 
 0006           ; 
 0006           ; 
 0006           ; //擦除(code=0x03)和写入(code=0x05)一个Flash页 
 0006           ; void boot_page_ew(long p_address,char code) 
 0006           ; { 
 0006                   .dbline 112
 0006           ;     asm("mov r30,r16\n" 
 0006 E02F              mov r30,r16
 0008 F12F              mov r31,r17
 000A 2BBF              out 0x3b,r18
 000C                   
 000C                   .dbline 115
 000C           ;         "mov r31,r17\n" 
 000C           ;         "out 0x3b,r18\n");            //将页地址放入Z寄存器和RAMPZ的Bit0中 
 000C           ;     SPMCSR = code;                //寄存器SPMCSR中为操作码 
 000C 00936800          sts 104,R16
 0010                   .dbline 116
 0010           ;     asm("spm\n");                    //对指定Flash页进行操作 
 0010 E895              spm
 0012                   
 0012                   .dbline -2
 0012           L2:
 0012                   .dbline 0 ; func end
 0012 2496              adiw R28,4
 0014 0895              ret
 0016                   .dbsym r code 16 c
 0016                   .dbsym l p_address 0 L
 0016                   .dbend
 0016                   .dbfunc e boot_page_fill _boot_page_fill fV
 0016           ;           data -> <dead>
 0016           ;        address -> <dead>
                        .even
 0016           _boot_page_fill::
 0016 0E940000          xcall push_arg4
 001A                   .dbline -1
 001A                   .dbline 120
 001A           ; }         
 001A           ; //填充Flash缓冲页中的一个字 
 001A           ; void boot_page_fill(unsigned int address,int data) 
 001A           ; { 
 001A                   .dbline 121
 001A           ;     asm("mov r30,r16\n" 
 001A E02F              mov r30,r16
 001C F12F              mov r31,r17
 001E 022E              mov r0,r18
 0020 132E              mov r1,r19
 0022                   
 0022                   .dbline 125
 0022           ;         "mov r31,r17\n"             //Z寄存器中为填冲页内地址 
 0022           ;         "mov r0,r18\n" 
 0022           ;         "mov r1,r19\n");            //R0R1中为一个指令字 
 0022           ;     SPMCSR = 0x01; 
 0022 81E0              ldi R24,1
 0024 80936800          sts 104,R24
 0028                   .dbline 126
 0028           ;     asm("spm\n"); 
 0028 E895              spm
 002A                   
 002A                   .dbline -2
 002A           L3:
 002A                   .dbline 0 ; func end
 002A 2496              adiw R28,4
 002C 0895              ret
 002E                   .dbsym l data 2 I
 002E                   .dbsym l address 0 i
 002E                   .dbend
 002E                   .dbfunc e wait_page_rw_ok _wait_page_rw_ok fV
                        .even
 002E           _wait_page_rw_ok::
 002E                   .dbline -1
 002E                   .dbline 130
 002E           ; } 
 002E           ; //等待一个Flash页的写完成 
 002E           ; void wait_page_rw_ok(void) 
 002E           ; { 
 002E 08C0              xjmp L6
 0030           L8:
 0030                   .dbline 133
 0030           ;       while(SPMCSR & 0x40) 
 0030           ;      { 
 0030           ;          while(SPMCSR & 0x01); 
 0030           L9:
 0030                   .dbline 133
 0030 20906800          lds R2,104
 0034 20FC              sbrc R2,0
 0036 FCCF              rjmp L8
 0038           X0:
 0038                   .dbline 134
 0038           ;          SPMCSR = 0x11; 
 0038 81E1              ldi R24,17
 003A 80936800          sts 104,R24
 003E                   .dbline 135
 003E           ;          asm("spm\n"); 
 003E E895              spm
 0040                   
 0040                   .dbline 136
 0040           ;      } 
 0040           L6:
 0040                   .dbline 131
 0040 20906800          lds R2,104
 0044 26FC              sbrc R2,6
 0046 F4CF              rjmp L9
 0048           X1:
 0048                   .dbline -2
 0048           L4:
 0048                   .dbline 0 ; func end
 0048 0895              ret
 004A                   .dbend
 004A                   .dbfunc e write_one_page _write_one_page fV
 004A           ;              i -> R20,R21
                        .even
 004A           _write_one_page::
 004A 0E940000          xcall push_xgset300C
 004E 2197              sbiw R28,1
 0050                   .dbline -1
 0050                   .dbline 140
 0050           ; } 
 0050           ; //更新一个Flash页的完整处理 
 0050           ; void write_one_page(void) 
 0050           ; { 
 0050                   .dbline 142
 0050           ;     int i; 
 0050           ;     boot_page_ew(address,0x03);                    //擦除一个Flash页 
 0050 83E0              ldi R24,3
 0052 8883              std y+0,R24
 0054 20910200          lds R18,_address+2
 0058 30910300          lds R19,_address+2+1
 005C 00910000          lds R16,_address
 0060 10910100          lds R17,_address+1
 0064 CDDF              xcall _boot_page_ew
 0066                   .dbline 144
 0066           ;     
 0066           ;     wait_page_rw_ok();                            //等待擦除完成 
 0066 E3DF              xcall _wait_page_rw_ok
 0068                   .dbline 145
 0068           ;     for(i=0;i<256;i+=2)                //将数据填入Flash缓冲页中 
 0068 4427              clr R20
 006A 5527              clr R21
 006C           L12:
 006C                   .dbline 146
 006C           ;     { 
 006C                   .dbline 147
 006C           ;         boot_page_fill(i, flash_buf[i+2]+(flash_buf[i+3]<<8)); 
 006C 80E0              ldi R24,<_flash_buf+3
 006E 90E0              ldi R25,>_flash_buf+3
 0070 FA01              movw R30,R20
 0072 E80F              add R30,R24
 0074 F91F              adc R31,R25
 0076 2080              ldd R2,z+0
 0078 3324              clr R3
 007A 322C              mov R3,R2
 007C 2224              clr R2
 007E 80E0              ldi R24,<_flash_buf+2
 0080 90E0              ldi R25,>_flash_buf+2
 0082 FA01              movw R30,R20
 0084 E80F              add R30,R24
 0086 F91F              adc R31,R25
 0088 2081              ldd R18,z+0
 008A 3327              clr R19
 008C 220D              add R18,R2
 008E 331D              adc R19,R3
 0090 8A01              movw R16,R20
 0092 C1DF              xcall _boot_page_fill
 0094                   .dbline 148
 0094           ;     } 
 0094           L13:
 0094                   .dbline 145
 0094 4E5F              subi R20,254  ; offset = 2
 0096 5F4F              sbci R21,255
 0098                   .dbline 145
 0098 4030              cpi R20,0
 009A E1E0              ldi R30,1
 009C 5E07              cpc R21,R30
 009E 34F3              brlt L12
 00A0           X2:
 00A0                   .dbline 149
 00A0           ;     boot_page_ew(address,0x05);                    //将缓冲页数据写入一个Flash页 
 00A0 85E0              ldi R24,5
 00A2 8883              std y+0,R24
 00A4 20910200          lds R18,_address+2
 00A8 30910300          lds R19,_address+2+1
 00AC 00910000          lds R16,_address
 00B0 10910100          lds R17,_address+1
 00B4 A5DF              xcall _boot_page_ew
 00B6                   .dbline 152
 00B6           ;    
 00B6           ;    
 00B6           ;     wait_page_rw_ok();                            //等待写入完成 
 00B6 BBDF              xcall _wait_page_rw_ok
 00B8                   .dbline -2
 00B8           L11:
 00B8                   .dbline 0 ; func end
 00B8 2196              adiw R28,1
 00BA 0C940000          xjmp pop_xgset300C
 00BE                   .dbsym r i 20 I
 00BE                   .dbend
 00BE                   .dbfunc e InitialIO _InitialIO fV
                        .even
 00BE           _InitialIO::
 00BE                   .dbline -1
 00BE                   .dbline 157
 00BE           ; }        
 00BE           ; 
 00BE           ; 
 00BE           ; void InitialIO(void)
 00BE           ; {//1输出，0输入
 00BE                   .dbline 158
 00BE           ;  PORTA=0x00;
 00BE 2224              clr R2
 00C0 2BBA              out 0x1b,R2
 00C2                   .dbline 159
 00C2           ;  DDRA=0x07; //PA0=BREAKE1 PA1=PWM1 PA2=DIR1
 00C2 87E0              ldi R24,7
 00C4 8ABB              out 0x1a,R24
 00C6                   .dbline 161
 00C6           ; 
 00C6           ;  PORTB=0x00; 
 00C6 28BA              out 0x18,R2
 00C8                   .dbline 162
 00C8           ;  DDRB=0x80; //PB7=VM_CTRL
 00C8 80E8              ldi R24,128
 00CA 87BB              out 0x17,R24
 00CC                   .dbline 164
 00CC           ;  
 00CC           ;  PORTC=0x00;
 00CC 25BA              out 0x15,R2
 00CE                   .dbline 165
 00CE           ;  DDRC=0x00; 
 00CE 24BA              out 0x14,R2
 00D0                   .dbline 167
 00D0           ;  
 00D0           ;  PORTD=0x00; 
 00D0 22BA              out 0x12,R2
 00D2                   .dbline 168
 00D2           ;  DDRD=0x06;//PD1=M2 PD2=M1
 00D2 86E0              ldi R24,6
 00D4 81BB              out 0x11,R24
 00D6                   .dbline 170
 00D6           ;  
 00D6           ;  PORTE=0x00; 
 00D6 23B8              out 0x3,R2
 00D8                   .dbline 171
 00D8           ;  DDRE=0x00;
 00D8 22B8              out 0x2,R2
 00DA                   .dbline 173
 00DA           ;  
 00DA           ;  PORTF=0x00; 
 00DA 20926200          sts 98,R2
 00DE                   .dbline 174
 00DE           ;  DDRF=0x07;//PF0=DIR2 PF1=BREAKE2 PF2=PWM2
 00DE 87E0              ldi R24,7
 00E0 80936100          sts 97,R24
 00E4                   .dbline 176
 00E4           ;  
 00E4           ;  PORTG=0x00; 
 00E4 20926500          sts 101,R2
 00E8                   .dbline 177
 00E8           ;  DDRG=0x00; 
 00E8 20926400          sts 100,R2
 00EC                   .dbline -2
 00EC           L18:
 00EC                   .dbline 0 ; func end
 00EC 0895              ret
 00EE                   .dbend
 00EE                   .dbfunc e init_USART0 _init_USART0 fV
                        .even
 00EE           _init_USART0::
 00EE                   .dbline -1
 00EE                   .dbline 202
 00EE           ; }
 00EE           ; 
 00EE           ; 
 00EE           ; //UART0 initialize
 00EE           ; // desired baud rate: 76800
 00EE           ; // actual: baud rate:76923 (0.2%)
 00EE           ; // char size: 8 bit
 00EE           ; // parity: Disabled
 00EE           ; /*
 00EE           ; void uart0_init(void)
 00EE           ; {
 00EE           ;  UCSR0B = 0x00; //disable while setting baud rate
 00EE           ;  UCSR0A = 0x02;
 00EE           ;  UCSR0C = 0x06;
 00EE           ;  UBRR0L = 0x0C; //set baud rate lo
 00EE           ;  UBRR0H = 0x00; //set baud rate hi
 00EE           ;  UCSR0B = 0x98;
 00EE           ; }*/
 00EE           ; //UART0 initialize
 00EE           ; // desired baud rate: 57600
 00EE           ; // actual: baud rate:58824 (2.1%)
 00EE           ; // char size: 8 bit
 00EE           ; // parity: Disabled
 00EE           ; void init_USART0(void)  //USART0 初始化
 00EE           ; {
 00EE                   .dbline 203
 00EE           ;  UCSR0B = 0x00; //disable while setting baud rate
 00EE 2224              clr R2
 00F0 2AB8              out 0xa,R2
 00F2                   .dbline 204
 00F2           ;  UCSR0A = 0x02;
 00F2 82E0              ldi R24,2
 00F4 8BB9              out 0xb,R24
 00F6                   .dbline 205
 00F6           ;  UCSR0C = 0x06;
 00F6 86E0              ldi R24,6
 00F8 80939500          sts 149,R24
 00FC                   .dbline 206
 00FC           ;  UBRR0L = 0x10; //set baud rate lo
 00FC 80E1              ldi R24,16
 00FE 89B9              out 0x9,R24
 0100                   .dbline 207
 0100           ;  UBRR0H = 0x00; //set baud rate hi
 0100 20929000          sts 144,R2
 0104                   .dbline 208
 0104           ;  UCSR0B = 0x98;
 0104 88E9              ldi R24,152
 0106 8AB9              out 0xa,R24
 0108                   .dbline -2
 0108           L19:
 0108                   .dbline 0 ; func end
 0108 0895              ret
 010A                   .dbend
 010A                   .dbfunc e quit _quit fV
                        .even
 010A           _quit::
 010A                   .dbline -1
 010A                   .dbline 212
 010A           ; }
 010A           ; 
 010A           ; void quit(void) 
 010A           ; {
 010A                   .dbline 213
 010A           ;     MCUCR = 0x01; 
 010A 81E0              ldi R24,1
 010C 85BF              out 0x35,R24
 010E                   .dbline 214
 010E           ;     MCUCR = 0x00;       //将中断向量表迁移到应用程序区头部 
 010E 2224              clr R2
 0110 25BE              out 0x35,R2
 0112                   .dbline 215
 0112           ;     RAMPZ = 0x00;       //RAMPZ清零初始化 
 0112 2BBE              out 0x3b,R2
 0114                   .dbline 216
 0114           ;     asm("jmp 0x0000\n");//跳转到Flash的0x0000处，执行用户的应用程序 
 0114 0C940000          jmp 0x0000
 0118                   
 0118                   .dbline -2
 0118           L20:
 0118                   .dbline 0 ; func end
 0118 0895              ret
 011A                   .dbend
 011A                   .dbfunc e Start _Start fV
                        .even
 011A           _Start::
 011A                   .dbline -1
 011A                   .dbline 220
 011A           ; } 
 011A           ; 
 011A           ; void Start(void)
 011A           ; {
 011A                   .dbline 221
 011A           ;  InitialIO(); 
 011A D1DF              xcall _InitialIO
 011C                   .dbline 223
 011C           ;  
 011C           ;  init_USART0();
 011C E8DF              xcall _init_USART0
 011E                   .dbline 225
 011E           ;  
 011E           ;  MOTORSTOP//关电机
 011E                   .dbline 225
 011E 8AB3              in R24,0x1a
 0120 8760              ori R24,7
 0122 8ABB              out 0x1a,R24
 0124                   .dbline 225
 0124 8BB3              in R24,0x1b
 0126 8D7F              andi R24,253
 0128 8BBB              out 0x1b,R24
 012A                   .dbline 225
 012A 8BB3              in R24,0x1b
 012C 887F              andi R24,248
 012E 8BBB              out 0x1b,R24
 0130                   .dbline 225
 0130 80916100          lds R24,97
 0134 8760              ori R24,7
 0136 80936100          sts 97,R24
 013A                   .dbline 225
 013A 80916200          lds R24,98
 013E 8B7F              andi R24,251
 0140 80936200          sts 98,R24
 0144                   .dbline 225
 0144 80916200          lds R24,98
 0148 887F              andi R24,248
 014A 80936200          sts 98,R24
 014E                   .dbline 225
 014E BF9A              sbi 0x17,7
 0150                   .dbline 225
 0150 88B3              in R24,0x18
 0152 8F77              andi R24,127
 0154 88BB              out 0x18,R24
 0156                   .dbline 225
 0156                   .dbline 226
 0156           ;  BREAKE1_L//放开刹车
 0156                   .dbline 226
 0156 D09A              sbi 0x1a,0
 0158                   .dbline 226
 0158 8BB3              in R24,0x1b
 015A 8E7F              andi R24,254
 015C 8BBB              out 0x1b,R24
 015E                   .dbline 226
 015E                   .dbline 227
 015E           ;  BREAKE2_L//放开刹车
 015E                   .dbline 227
 015E 80916100          lds R24,97
 0162 8260              ori R24,2
 0164 80936100          sts 97,R24
 0168                   .dbline 227
 0168 80916200          lds R24,98
 016C 8D7F              andi R24,253
 016E 80936200          sts 98,R24
 0172                   .dbline 227
 0172                   .dbline 229
 0172           ;  
 0172           ;  Motor1Status.s.PWM=PWM1_PIN; 
 0172 89B3              in R24,0x19
 0174 9927              clr R25
 0176 8270              andi R24,2
 0178 9070              andi R25,0
 017A 9595              asr R25
 017C 8795              ror R24
 017E 8170              andi R24,1
 0180 9070              andi R25,0
 0182 E0914601          lds R30,_Motor1Status
 0186 F0914701          lds R31,_Motor1Status+1
 018A EE7F              andi R30,254
 018C E82B              or R30,R24
 018E F92B              or R31,R25
 0190 F0934701          sts _Motor1Status+1,R31
 0194 E0934601          sts _Motor1Status,R30
 0198                   .dbline 230
 0198           ;  Motor1Status.s.DIR=DIR1_PIN;
 0198 89B3              in R24,0x19
 019A 9927              clr R25
 019C 8470              andi R24,4
 019E 9070              andi R25,0
 01A0 9595              asr R25
 01A2 8795              ror R24
 01A4 9595              asr R25
 01A6 8795              ror R24
 01A8 8170              andi R24,1
 01AA 9070              andi R25,0
 01AC 880F              lsl R24
 01AE 991F              rol R25
 01B0 8270              andi R24,2
 01B2 9070              andi R25,0
 01B4 ED7F              andi R30,253
 01B6 E82B              or R30,R24
 01B8 F92B              or R31,R25
 01BA F0934701          sts _Motor1Status+1,R31
 01BE E0934601          sts _Motor1Status,R30
 01C2                   .dbline 231
 01C2           ;  Motor1Status.s.BrokenStop=0;
 01C2 CF01              movw R24,R30
 01C4 8B7F              andi R24,251
 01C6 90934701          sts _Motor1Status+1,R25
 01CA 80934601          sts _Motor1Status,R24
 01CE                   .dbline 232
 01CE           ;  Motor1Status.s.CommandStop=0;
 01CE 877F              andi R24,247
 01D0 90934701          sts _Motor1Status+1,R25
 01D4 80934601          sts _Motor1Status,R24
 01D8                   .dbline 233
 01D8           ;  Motor1Status.s.OverCurrent=0;
 01D8 8F7E              andi R24,239
 01DA 90934701          sts _Motor1Status+1,R25
 01DE 80934601          sts _Motor1Status,R24
 01E2                   .dbline 234
 01E2           ;  Motor1Status.s.UnderVoltage=0;
 01E2 8F7D              andi R24,223
 01E4 90934701          sts _Motor1Status+1,R25
 01E8 80934601          sts _Motor1Status,R24
 01EC                   .dbline 235
 01EC           ;  Motor1Status.s.StartResult=0;
 01EC 8F73              andi R24,63
 01EE 90934701          sts _Motor1Status+1,R25
 01F2 80934601          sts _Motor1Status,R24
 01F6                   .dbline 236
 01F6           ;  Motor1Status.s.ThisCurrent=0;
 01F6 9070              andi R25,0
 01F8 90934701          sts _Motor1Status+1,R25
 01FC 80934601          sts _Motor1Status,R24
 0200                   .dbline 238
 0200           ;  
 0200           ;  Motor2Status.s.PWM=PWM2_PIN; 
 0200 80B1              in R24,0x0
 0202 9927              clr R25
 0204 8470              andi R24,4
 0206 9070              andi R25,0
 0208 9595              asr R25
 020A 8795              ror R24
 020C 9595              asr R25
 020E 8795              ror R24
 0210 8170              andi R24,1
 0212 9070              andi R25,0
 0214 E0914401          lds R30,_Motor2Status
 0218 F0914501          lds R31,_Motor2Status+1
 021C EE7F              andi R30,254
 021E E82B              or R30,R24
 0220 F92B              or R31,R25
 0222 F0934501          sts _Motor2Status+1,R31
 0226 E0934401          sts _Motor2Status,R30
 022A                   .dbline 239
 022A           ;  Motor2Status.s.DIR=DIR2_PIN;
 022A 80B1              in R24,0x0
 022C 9927              clr R25
 022E 8170              andi R24,1
 0230 9070              andi R25,0
 0232 8170              andi R24,1
 0234 9070              andi R25,0
 0236 880F              lsl R24
 0238 991F              rol R25
 023A 8270              andi R24,2
 023C 9070              andi R25,0
 023E ED7F              andi R30,253
 0240 E82B              or R30,R24
 0242 F92B              or R31,R25
 0244 F0934501          sts _Motor2Status+1,R31
 0248 E0934401          sts _Motor2Status,R30
 024C                   .dbline 240
 024C           ;  Motor2Status.s.BrokenStop=0;
 024C CF01              movw R24,R30
 024E 8B7F              andi R24,251
 0250 90934501          sts _Motor2Status+1,R25
 0254 80934401          sts _Motor2Status,R24
 0258                   .dbline 241
 0258           ;  Motor2Status.s.CommandStop=0;
 0258 877F              andi R24,247
 025A 90934501          sts _Motor2Status+1,R25
 025E 80934401          sts _Motor2Status,R24
 0262                   .dbline 242
 0262           ;  Motor2Status.s.OverCurrent=0;
 0262 8F7E              andi R24,239
 0264 90934501          sts _Motor2Status+1,R25
 0268 80934401          sts _Motor2Status,R24
 026C                   .dbline 243
 026C           ;  Motor2Status.s.UnderVoltage=0;
 026C 8F7D              andi R24,223
 026E 90934501          sts _Motor2Status+1,R25
 0272 80934401          sts _Motor2Status,R24
 0276                   .dbline 244
 0276           ;  Motor2Status.s.StartResult=0;
 0276 8F73              andi R24,63
 0278 90934501          sts _Motor2Status+1,R25
 027C 80934401          sts _Motor2Status,R24
 0280                   .dbline 245
 0280           ;  Motor2Status.s.ThisCurrent=0;
 0280 9070              andi R25,0
 0282 90934501          sts _Motor2Status+1,R25
 0286 80934401          sts _Motor2Status,R24
 028A                   .dbline 247
 028A           ;   
 028A           ;  ACSR|=0x10;//清模拟比较器中断标志
 028A 449A              sbi 0x8,4
 028C                   .dbline 248
 028C           ;  ACSR=0x03;//开模拟比较器    
 028C 83E0              ldi R24,3
 028E 88B9              out 0x8,R24
 0290                   .dbline 249
 0290           ;  ACSR|=0x08;//开模拟比较器中断，任何时候都要进行欠压监测      
 0290 439A              sbi 0x8,3
 0292                   .dbline 250
 0292           ;  ACSR|=0x10;//清模拟比较器中断标志    
 0292 449A              sbi 0x8,4
 0294                   .dbline 253
 0294           ;       
 0294           ; 
 0294           ;  EIFR|=0x08;//清INT3中断标志,每位控制一个中断，可控制8个中断
 0294 88B7              in R24,0x38
 0296 8860              ori R24,8
 0298 88BF              out 0x38,R24
 029A                   .dbline 254
 029A           ;  EICRA|=0xc0; //INT3上升沿触发 ，每2位控制一个中断，共4个中断，0-低电平触发，1-保留，2-下降沿触发，3-上升沿触发
 029A 80916A00          lds R24,106
 029E 806C              ori R24,192
 02A0 80936A00          sts 106,R24
 02A4                   .dbline 255
 02A4           ;  EIMSK|=0x08;//使能INT3中断 ,每位控制一个中断，可控制8个中断
 02A4 89B7              in R24,0x39
 02A6 8860              ori R24,8
 02A8 89BF              out 0x39,R24
 02AA                   .dbline 257
 02AA           ;  
 02AA           ;  SREG=0x80;//总中断使能
 02AA 80E8              ldi R24,128
 02AC 8FBF              out 0x3f,R24
 02AE                   .dbline 259
 02AE           ;  
 02AE           ;  M1_H
 02AE 929A              sbi 0x12,2
 02B0                   .dbline 260
 02B0           ;  Delay30Ms();
 02B0 0E94C90A          xcall _Delay30Ms
 02B4                   .dbline 261
 02B4           ;  Delay30Ms();
 02B4 0E94C90A          xcall _Delay30Ms
 02B8                   .dbline 262
 02B8           ;  Delay30Ms();
 02B8 0E94C90A          xcall _Delay30Ms
 02BC                   .dbline 263
 02BC           ;  Delay30Ms();
 02BC 0E94C90A          xcall _Delay30Ms
 02C0                   .dbline 264
 02C0           ;  Delay30Ms();
 02C0 0E94C90A          xcall _Delay30Ms
 02C4                   .dbline 265
 02C4           ;  M1_L
 02C4 82B3              in R24,0x12
 02C6 8B7F              andi R24,251
 02C8 82BB              out 0x12,R24
 02CA                   .dbline -2
 02CA           L21:
 02CA                   .dbline 0 ; func end
 02CA 0895              ret
 02CC                   .dbend
 02CC                   .dbfunc e crc16 _crc16 fV
 02CC           ;             ii -> R20,R21
 02CC           ;             ch -> R10
 02CC           ;             cl -> R22
 02CC           ;         savelo -> R14
 02CC           ;         savehi -> y+0
 02CC           ;           flag -> R12,R13
 02CC           ;         length -> R18,R19
 02CC           ;         r_data -> y+11
                        .even
 02CC           _crc16::
 02CC 0E940000          xcall push_arg4
 02D0 0E940000          xcall push_xgsetF0FC
 02D4 2197              sbiw R28,1
 02D6                   .dbline -1
 02D6                   .dbline 271
 02D6           ;  
 02D6           ;  
 02D6           ; }
 02D6           ; 
 02D6           ; void crc16(unsigned char r_data[],unsigned int length)
 02D6           ; {
 02D6                   .dbline 275
 02D6           ;         unsigned char cl,ch;
 02D6           ;         unsigned char savehi,savelo;
 02D6           ;         int ii,flag;
 02D6           ;         crc16hi=0xFF;
 02D6 8FEF              ldi R24,255
 02D8 80930F01          sts _crc16hi,R24
 02DC                   .dbline 276
 02DC           ;         crc16lo=0xFF;
 02DC 80930E01          sts _crc16lo,R24
 02E0                   .dbline 277
 02E0           ;         cl=0x1;
 02E0 61E0              ldi R22,1
 02E2                   .dbline 278
 02E2           ;         ch=0xA0;
 02E2 80EA              ldi R24,160
 02E4 A82E              mov R10,R24
 02E6                   .dbline 279
 02E6           ;         for (ii=0;ii<length-2;ii++)
 02E6 4427              clr R20
 02E8 5527              clr R21
 02EA 38C0              xjmp L26
 02EC           L23:
 02EC                   .dbline 280
 02EC           ;         {
 02EC                   .dbline 281
 02EC           ;             crc16lo=(crc16lo ^ r_data[ii]);
 02EC FA01              movw R30,R20
 02EE 0B84              ldd R0,y+11
 02F0 1C84              ldd R1,y+12
 02F2 E00D              add R30,R0
 02F4 F11D              adc R31,R1
 02F6 2080              ldd R2,z+0
 02F8 30900E01          lds R3,_crc16lo
 02FC 3224              eor R3,R2
 02FE 30920E01          sts _crc16lo,R3
 0302                   .dbline 282
 0302           ;                 for (flag=0;flag<8;flag++)
 0302 CC24              clr R12
 0304 DD24              clr R13
 0306           L27:
 0306                   .dbline 283
 0306           ;                 {
 0306                   .dbline 284
 0306           ;                        savehi=crc16hi;
 0306 20900F01          lds R2,_crc16hi
 030A 2882              std y+0,R2
 030C                   .dbline 285
 030C           ;                         savelo=crc16lo;
 030C E0900E01          lds R14,_crc16lo
 0310                   .dbline 286
 0310           ;                        crc16hi=(crc16hi>>1);
 0310 2694              lsr R2
 0312 20920F01          sts _crc16hi,R2
 0316                   .dbline 287
 0316           ;                        crc16lo=(crc16lo>>1);
 0316 2E2C              mov R2,R14
 0318 2694              lsr R2
 031A 20920E01          sts _crc16lo,R2
 031E                   .dbline 288
 031E           ;                         if ((savehi & 0x01)==0x01)
 031E 8881              ldd R24,y+0
 0320 8170              andi R24,1
 0322 8130              cpi R24,1
 0324 21F4              brne L31
 0326           X3:
 0326                   .dbline 289
 0326           ;                                 crc16lo=(crc16lo | 0x80);
 0326 822D              mov R24,R2
 0328 8068              ori R24,128
 032A 80930E01          sts _crc16lo,R24
 032E           L31:
 032E                   .dbline 290
 032E           ;                         if        ((savelo & 0x01)==0x01)
 032E 8E2D              mov R24,R14
 0330 8170              andi R24,1
 0332 8130              cpi R24,1
 0334 51F4              brne L33
 0336           X4:
 0336                   .dbline 291
 0336           ;                         {
 0336                   .dbline 292
 0336           ;                                 crc16hi = (crc16hi ^ ch);
 0336 20900F01          lds R2,_crc16hi
 033A 2A24              eor R2,R10
 033C 20920F01          sts _crc16hi,R2
 0340                   .dbline 293
 0340           ;                                                               crc16lo = (crc16lo ^ cl);
 0340 20900E01          lds R2,_crc16lo
 0344 2626              eor R2,R22
 0346 20920E01          sts _crc16lo,R2
 034A                   .dbline 294
 034A           ;                         }        
 034A           L33:
 034A                   .dbline 295
 034A           ;                 }
 034A           L28:
 034A                   .dbline 282
 034A C601              movw R24,R12
 034C 0196              adiw R24,1
 034E 6C01              movw R12,R24
 0350                   .dbline 282
 0350 8830              cpi R24,8
 0352 E0E0              ldi R30,0
 0354 9E07              cpc R25,R30
 0356 BCF2              brlt L27
 0358           X5:
 0358                   .dbline 296
 0358           ;         }
 0358           L24:
 0358                   .dbline 279
 0358 4F5F              subi R20,255  ; offset = 1
 035A 5F4F              sbci R21,255
 035C           L26:
 035C                   .dbline 279
 035C C901              movw R24,R18
 035E 0297              sbiw R24,2
 0360 4817              cp R20,R24
 0362 5907              cpc R21,R25
 0364 08F4              brsh X7
 0366 C2CF              xjmp L23
 0368           X7:
 0368           X6:
 0368                   .dbline -2
 0368           L22:
 0368                   .dbline 0 ; func end
 0368 2196              adiw R28,1
 036A 0E940000          xcall pop_xgsetF0FC
 036E 2496              adiw R28,4
 0370 0895              ret
 0372                   .dbsym r ii 20 I
 0372                   .dbsym r ch 10 c
 0372                   .dbsym r cl 22 c
 0372                   .dbsym r savelo 14 c
 0372                   .dbsym l savehi 0 c
 0372                   .dbsym r flag 12 I
 0372                   .dbsym r length 18 i
 0372                   .dbsym l r_data 11 pc
 0372                   .dbend
                        .area vector(rom, abs)
                        .org 116
 0074 0C94B901          jmp _timer3_ovf_isr
                        .area text(rom, con, rel)
 0372                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0372                   .dbfunc e timer3_ovf_isr _timer3_ovf_isr fV
                        .even
 0372           _timer3_ovf_isr::
 0372 2A92              st -y,R2
 0374 8A93              st -y,R24
 0376 2FB6              IN R2,63
 0378 2A92              st -y,R2
 037A                   .dbline -1
 037A                   .dbline 301
 037A           ; }
 037A           ; 
 037A           ; #pragma interrupt_handler timer3_ovf_isr:iv_TIM3_OVF
 037A           ; void timer3_ovf_isr(void)
 037A           ; {
 037A                   .dbline 302
 037A           ;   UpdateBegin=0;//回到待命状态
 037A 2224              clr R2
 037C 20921201          sts _UpdateBegin,R2
 0380                   .dbline 303
 0380           ;   TCCR3B = 0x00; //stop  
 0380 20928A00          sts 138,R2
 0384                   .dbline 304
 0384           ;   ETIMSK &= 0xfb;//关定时器3中断
 0384 80917D00          lds R24,125
 0388 8B7F              andi R24,251
 038A 80937D00          sts 125,R24
 038E                   .dbline 305
 038E           ;   ETIFR|=0x04; //清定时器3中断标志 
 038E 80917C00          lds R24,124
 0392 8460              ori R24,4
 0394 80937C00          sts 124,R24
 0398                   .dbline -2
 0398           L35:
 0398                   .dbline 0 ; func end
 0398 2990              ld R2,y+
 039A 2FBE              OUT 63,R2
 039C 8991              ld R24,y+
 039E 2990              ld R2,y+
 03A0 1895              reti
 03A2                   .dbend
 03A2                   .dbfunc e SendUart0 _SendUart0 fV
 03A2           ;              t -> R10
 03A2           ;              s -> R18
 03A2           ;              c -> R16
                        .even
 03A2           _SendUart0::
 03A2 AA92              st -y,R10
 03A4                   .dbline -1
 03A4                   .dbline 310
 03A4           ; }
 03A4           ; 
 03A4           ;       
 03A4           ; void SendUart0(unsigned char c,unsigned char s)   //串口发送数据
 03A4           ; {//要求流量板在s个8ms内通过串口返回数据
 03A4                   .dbline 313
 03A4           ; unsigned char t;      
 03A4           ; 
 03A4           ;   Uart0RxData[0]=0xff;
 03A4 8FEF              ldi R24,255
 03A6 80930701          sts _Uart0RxData,R24
 03AA                   .dbline 314
 03AA           ;   Uart0RxData[1]=0xff;
 03AA 80930801          sts _Uart0RxData+1,R24
 03AE                   .dbline 315
 03AE           ;   Uart0RxCounter=0; //清串口接受计数  
 03AE 2224              clr R2
 03B0 20920901          sts _Uart0RxCounter,R2
 03B4                   .dbline 317
 03B4           ;   
 03B4           ;    t=UDR0;//开串口接收中断前读空缓存
 03B4 ACB0              in R10,0xc
 03B6           L38:
 03B6                   .dbline 319
 03B6           ;    
 03B6           ;   while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 03B6           L39:
 03B6                   .dbline 319
 03B6 5D9B              sbis 0xb,5
 03B8 FECF              rjmp L38
 03BA           X8:
 03BA                   .dbline 320
 03BA           ;   UDR0=c;   // 将数据放入缓冲器，发送数据
 03BA 0CB9              out 0xc,R16
 03BC                   .dbline 322
 03BC           ;                    
 03BC           ;    t=UDR0;//开串口接收中断前读空缓存
 03BC ACB0              in R10,0xc
 03BE                   .dbline 323
 03BE           ;    UCSR0B|=0x80;//开串口接收中断
 03BE 579A              sbi 0xa,7
 03C0                   .dbline 326
 03C0           ;    
 03C0           ;    //超时设定
 03C0           ;       TCCR1B = 0x00; //stop
 03C0 2224              clr R2
 03C2 2EBC              out 0x2e,R2
 03C4                   .dbline 327
 03C4           ;       if(s==0)
 03C4 2223              tst R18
 03C6 39F4              brne L41
 03C8           X9:
 03C8                   .dbline 328
 03C8           ;        {
 03C8                   .dbline 329
 03C8           ;        TCNT1 = 22576;//5500ms 
 03C8 80E3              ldi R24,22576
 03CA 98E5              ldi R25,88
 03CC 9DBD              out 0x2d,R25
 03CE 8CBD              out 0x2c,R24
 03D0                   .dbline 330
 03D0           ;          TCCR1B = 0x05; //1024分频
 03D0 85E0              ldi R24,5
 03D2 8EBD              out 0x2e,R24
 03D4                   .dbline 331
 03D4           ;        }
 03D4 06C0              xjmp L42
 03D6           L41:
 03D6                   .dbline 333
 03D6           ;        else
 03D6           ;        {
 03D6                   .dbline 334
 03D6           ;          TCNT1 = 1536;//8ms 
 03D6 80E0              ldi R24,1536
 03D8 96E0              ldi R25,6
 03DA 9DBD              out 0x2d,R25
 03DC 8CBD              out 0x2c,R24
 03DE                   .dbline 335
 03DE           ;          TCCR1B = 0x01; //1分频
 03DE 81E0              ldi R24,1
 03E0 8EBD              out 0x2e,R24
 03E2                   .dbline 336
 03E2           ;        }
 03E2           L42:
 03E2                   .dbline 338
 03E2           ;       
 03E2           ;       TIFR|=0x04; //清定时器1中断标志
 03E2 86B7              in R24,0x36
 03E4 8460              ori R24,4
 03E6 86BF              out 0x36,R24
 03E8           L43:
 03E8                   .dbline 339
 03E8           ;       while((TIFR&0x04)==0x00); 
 03E8           L44:
 03E8                   .dbline 339
 03E8 26B6              in R2,0x36
 03EA 22FE              sbrs R2,2
 03EC FDCF              rjmp L43
 03EE           X10:
 03EE                   .dbline 340
 03EE           ;       TCCR1B = 0x00; //stop
 03EE 2224              clr R2
 03F0 2EBC              out 0x2e,R2
 03F2                   .dbline 341
 03F2           ;       TIFR|=0x04; //清定时器1中断标志 
 03F2 86B7              in R24,0x36
 03F4 8460              ori R24,4
 03F6 86BF              out 0x36,R24
 03F8                   .dbline 342
 03F8           ;       UCSR0B&=0x7f;//关串口接收中断
 03F8 8AB1              in R24,0xa
 03FA 8F77              andi R24,127
 03FC 8AB9              out 0xa,R24
 03FE                   .dbline -2
 03FE           L36:
 03FE                   .dbline 0 ; func end
 03FE A990              ld R10,y+
 0400 0895              ret
 0402                   .dbsym r t 10 c
 0402                   .dbsym r s 18 c
 0402                   .dbsym r c 16 c
 0402                   .dbend
 0402                   .dbfunc e SetTimer3 _SetTimer3 fV
                        .even
 0402           _SetTimer3::
 0402                   .dbline -1
 0402                   .dbline 347
 0402           ; }
 0402           ; 
 0402           ; 
 0402           ; void SetTimer3(void)//页写开始后，如果有500ms时间内一个字节也没收到，则退出页写状态，回到待命状态
 0402           ; {  
 0402                   .dbline 348
 0402           ;     TCCR3B = 0x00; //stop    
 0402 2224              clr R2
 0404 20928A00          sts 138,R2
 0408                   .dbline 349
 0408           ;     TCNT3H = 0xF0; //8M,500ms
 0408 80EF              ldi R24,240
 040A 80938900          sts 137,R24
 040E                   .dbline 350
 040E           ;     TCNT3L = 0xBE; //8M,500ms
 040E 8EEB              ldi R24,190
 0410 80938800          sts 136,R24
 0414                   .dbline 351
 0414           ;       ETIFR|=0x04; //清定时器3中断标志
 0414 80917C00          lds R24,124
 0418 8460              ori R24,4
 041A 80937C00          sts 124,R24
 041E                   .dbline 352
 041E           ;       TCCR3B = 0x05; //1024分频
 041E 85E0              ldi R24,5
 0420 80938A00          sts 138,R24
 0424                   .dbline 353
 0424           ;       ETIFR|=0x04; //清定时器3中断标志
 0424 80917C00          lds R24,124
 0428 8460              ori R24,4
 042A 80937C00          sts 124,R24
 042E                   .dbline 354
 042E           ;       ETIMSK |= 0x04; //开定时器3中断
 042E 80917D00          lds R24,125
 0432 8460              ori R24,4
 0434 80937D00          sts 125,R24
 0438                   .dbline -2
 0438           L46:
 0438                   .dbline 0 ; func end
 0438 0895              ret
 043A                   .dbend
 043A                   .dbfunc e main _main fV
 043A           ;              t -> <dead>
 043A           ;              k -> <dead>
 043A           ;              j -> <dead>
 043A           ;              i -> <dead>
                        .even
 043A           _main::
 043A                   .dbline -1
 043A                   .dbline 358
 043A           ; }
 043A           ; 
 043A           ; void main(void)
 043A           ; {
 043A                   .dbline 361
 043A           ;        unsigned int i,j,k;
 043A           ;        unsigned char t;       
 043A           ;      Delay30Ms();
 043A 0E94C90A          xcall _Delay30Ms
 043E                   .dbline 363
 043E           ;        
 043E           ;        IntFlag=0;//无接收帧中断
 043E 2224              clr R2
 0440 20921501          sts _IntFlag,R2
 0444                   .dbline 364
 0444           ;      UpdateBegin=0;//无标定系数下发
 0444 20921201          sts _UpdateBegin,R2
 0448                   .dbline 365
 0448           ;        T_dat=0;
 0448 3324              clr R3
 044A 30923101          sts _T_dat+1,R3
 044E 20923001          sts _T_dat,R2
 0452                   .dbline 366
 0452           ;        R_dat=0;
 0452 30922F01          sts _R_dat+1,R3
 0456 20922E01          sts _R_dat,R2
 045A                   .dbline 367
 045A           ;        DSP_PageCn=0;
 045A 20920A01          sts _DSP_PageCn,R2
 045E                   .dbline 369
 045E           ;        
 045E           ;        Start();
 045E 5DDE              xcall _Start
 0460                   .dbline 371
 0460           ;        
 0460           ;        Delay30Ms();
 0460 0E94C90A          xcall _Delay30Ms
 0464                   .dbline 374
 0464           ; 
 0464           ;        
 0464           ;       TCCR3B = 0x00; //stop    
 0464 2224              clr R2
 0466 20928A00          sts 138,R2
 046A                   .dbline 375
 046A           ;       TCNT3H = 0xd1; ////8M,1.5s
 046A 81ED              ldi R24,209
 046C 80938900          sts 137,R24
 0470                   .dbline 376
 0470           ;     TCNT3L = 0x20; ////8M,1.5s
 0470 80E2              ldi R24,32
 0472 80938800          sts 136,R24
 0476                   .dbline 377
 0476           ;       ETIFR|=0x04; //清定时器3中断标志
 0476 80917C00          lds R24,124
 047A 8460              ori R24,4
 047C 80937C00          sts 124,R24
 0480                   .dbline 378
 0480           ;       ETIMSK &= 0xfb;//关定时器3中断
 0480 80917D00          lds R24,125
 0484 8B7F              andi R24,251
 0486 80937D00          sts 125,R24
 048A                   .dbline 379
 048A           ;       TCCR3B = 0x05; //1024分频
 048A 85E0              ldi R24,5
 048C 80938A00          sts 138,R24
 0490                   .dbline 380
 0490           ;       ETIFR|=0x04; //清定时器3中断标志
 0490 80917C00          lds R24,124
 0494 8460              ori R24,4
 0496 80937C00          sts 124,R24
 049A                   .dbline 382
 049A           ;           
 049A           ;        UpdateBegin=0;
 049A 20921201          sts _UpdateBegin,R2
 049E AEC0              xjmp L49
 04A0           L48:
 04A0                   .dbline 384
 04A0           ;       while( ((ETIFR&0x04)==0x00) && (UpdateBegin==0) )
 04A0           ;       {
 04A0                   .dbline 385
 04A0           ;        if((IntFlag==1))//3秒内收到开始更新命令
 04A0 80911501          lds R24,_IntFlag
 04A4 8130              cpi R24,1
 04A6 09F0              breq X36
 04A8 97C0              xjmp L51
 04AA           X36:
 04AA           X11:
 04AA                   .dbline 386
 04AA           ;        {  
 04AA                   .dbline 387
 04AA           ;         if(R_dat==0xfa) 
 04AA 80912E01          lds R24,_R_dat
 04AE 90912F01          lds R25,_R_dat+1
 04B2 8A3F              cpi R24,250
 04B4 E0E0              ldi R30,0
 04B6 9E07              cpc R25,R30
 04B8 09F5              brne L53
 04BA           X12:
 04BA                   .dbline 388
 04BA           ;          {
 04BA                   .dbline 389
 04BA           ;           UpdateBegin=1;
 04BA 81E0              ldi R24,1
 04BC 80931201          sts _UpdateBegin,R24
 04C0                   .dbline 390
 04C0           ;               SendUart0(0xb5,1);
 04C0 21E0              ldi R18,1
 04C2 05EB              ldi R16,181
 04C4 6EDF              xcall _SendUart0
 04C6                   .dbline 391
 04C6           ;           T_com=0x0f;
 04C6 8FE0              ldi R24,15
 04C8 80932D01          sts _T_com,R24
 04CC                   .dbline 392
 04CC           ;           T_dat=0xe7fa;       
 04CC 8AEF              ldi R24,59386
 04CE 97EE              ldi R25,231
 04D0 90933101          sts _T_dat+1,R25
 04D4 80933001          sts _T_dat,R24
 04D8                   .dbline 393
 04D8           ;               Delay30Ms();
 04D8 0E94C90A          xcall _Delay30Ms
 04DC                   .dbline 394
 04DC           ;               SendManchester();  
 04DC FFD4              xcall _SendManchester
 04DE                   .dbline 395
 04DE           ;               IntFlag=0;//无命令帧
 04DE 2224              clr R2
 04E0 20921501          sts _IntFlag,R2
 04E4                   .dbline 396
 04E4           ;           EIFR|=0x08;//清INT3中断标志 
 04E4 88B7              in R24,0x38
 04E6 8860              ori R24,8
 04E8 88BF              out 0x38,R24
 04EA                   .dbline 397
 04EA           ;               EICRA|=0xc0; //INT3上升沿触发 
 04EA 80916A00          lds R24,106
 04EE 806C              ori R24,192
 04F0 80936A00          sts 106,R24
 04F4                   .dbline 398
 04F4           ;               EIMSK|=0x08;//使能INT3中断 
 04F4 89B7              in R24,0x39
 04F6 8860              ori R24,8
 04F8 89BF              out 0x39,R24
 04FA                   .dbline 399
 04FA           ;          }    
 04FA 6EC0              xjmp L54
 04FC           L53:
 04FC                   .dbline 400
 04FC           ;          else if(R_dat==0xfb)
 04FC 80912E01          lds R24,_R_dat
 0500 90912F01          lds R25,_R_dat+1
 0504 8B3F              cpi R24,251
 0506 E0E0              ldi R30,0
 0508 9E07              cpc R25,R30
 050A C9F5              brne L55
 050C           X13:
 050C                   .dbline 401
 050C           ;          {
 050C                   .dbline 402
 050C           ;           UpdateBegin=1;
 050C 81E0              ldi R24,1
 050E 80931201          sts _UpdateBegin,R24
 0512                   .dbline 403
 0512           ;               SendUart0(0xb5,1);  
 0512 21E0              ldi R18,1
 0514 05EB              ldi R16,181
 0516 45DF              xcall _SendUart0
 0518                   .dbline 404
 0518           ;               T_com=0x0f;
 0518 8FE0              ldi R24,15
 051A 80932D01          sts _T_com,R24
 051E                   .dbline 405
 051E           ;               T_dat=Uart0RxData[0];//成功的话应返回0xe7fb
 051E 20900701          lds R2,_Uart0RxData
 0522 3324              clr R3
 0524 30923101          sts _T_dat+1,R3
 0528 20923001          sts _T_dat,R2
 052C                   .dbline 406
 052C           ;               T_dat<<=8;      
 052C 20903001          lds R2,_T_dat
 0530 30903101          lds R3,_T_dat+1
 0534 322C              mov R3,R2
 0536 2224              clr R2
 0538 30923101          sts _T_dat+1,R3
 053C 20923001          sts _T_dat,R2
 0540                   .dbline 407
 0540           ;               T_dat|=Uart0RxData[1];
 0540 20900801          lds R2,_Uart0RxData+1
 0544 3324              clr R3
 0546 40903001          lds R4,_T_dat
 054A 50903101          lds R5,_T_dat+1
 054E 4228              or R4,R2
 0550 5328              or R5,R3
 0552 50923101          sts _T_dat+1,R5
 0556 40923001          sts _T_dat,R4
 055A                   .dbline 408
 055A           ;               Delay30Ms();
 055A 0E94C90A          xcall _Delay30Ms
 055E                   .dbline 409
 055E           ;               SendManchester(); 
 055E BED4              xcall _SendManchester
 0560                   .dbline 410
 0560           ;               IntFlag=0;//无命令帧
 0560 2224              clr R2
 0562 20921501          sts _IntFlag,R2
 0566                   .dbline 411
 0566           ;           EIFR|=0x08;//清INT3中断标志 
 0566 88B7              in R24,0x38
 0568 8860              ori R24,8
 056A 88BF              out 0x38,R24
 056C                   .dbline 412
 056C           ;               EICRA|=0xc0; //INT3上升沿触发 
 056C 80916A00          lds R24,106
 0570 806C              ori R24,192
 0572 80936A00          sts 106,R24
 0576                   .dbline 413
 0576           ;               EIMSK|=0x08;//使能INT3中断 
 0576 89B7              in R24,0x39
 0578 8860              ori R24,8
 057A 89BF              out 0x39,R24
 057C                   .dbline 414
 057C           ;          }
 057C 2DC0              xjmp L56
 057E           L55:
 057E                   .dbline 416
 057E           ;          else //其它命令均视为退出更新
 057E           ;          {
 057E                   .dbline 417
 057E           ;            TCCR3B = 0x00; //stop    
 057E 2224              clr R2
 0580 20928A00          sts 138,R2
 0584                   .dbline 418
 0584           ;            ETIFR|=0x04; //清定时器3中断标志
 0584 80917C00          lds R24,124
 0588 8460              ori R24,4
 058A 80937C00          sts 124,R24
 058E                   .dbline 419
 058E           ;            ETIMSK &= 0xfb;//关定时器3中断
 058E 80917D00          lds R24,125
 0592 8B7F              andi R24,251
 0594 80937D00          sts 125,R24
 0598                   .dbline 420
 0598           ;            SendUart0(0xb8,1);
 0598 21E0              ldi R18,1
 059A 08EB              ldi R16,184
 059C 02DF              xcall _SendUart0
 059E                   .dbline 421
 059E           ;                T_dat=Uart0RxData[0];//成功的话应返回0xe7
 059E 20900701          lds R2,_Uart0RxData
 05A2 3324              clr R3
 05A4 30923101          sts _T_dat+1,R3
 05A8 20923001          sts _T_dat,R2
 05AC                   .dbline 422
 05AC           ;                T_dat<<=8; 
 05AC 20903001          lds R2,_T_dat
 05B0 30903101          lds R3,_T_dat+1
 05B4 322C              mov R3,R2
 05B6 2224              clr R2
 05B8 30923101          sts _T_dat+1,R3
 05BC 20923001          sts _T_dat,R2
 05C0                   .dbline 423
 05C0           ;                T_dat|=0xff;
 05C0 C101              movw R24,R2
 05C2 8F6F              ori R24,255
 05C4 90933101          sts _T_dat+1,R25
 05C8 80933001          sts _T_dat,R24
 05CC                   .dbline 424
 05CC           ;                T_com=0x0f;
 05CC 8FE0              ldi R24,15
 05CE 80932D01          sts _T_com,R24
 05D2                   .dbline 425
 05D2           ;                Delay30Ms();
 05D2 DFD7              xcall _Delay30Ms
 05D4                   .dbline 426
 05D4           ;                SendManchester();       
 05D4 83D4              xcall _SendManchester
 05D6                   .dbline 427
 05D6           ;                quit();
 05D6 99DD              xcall _quit
 05D8                   .dbline 428
 05D8           ;          }   
 05D8           L56:
 05D8           L54:
 05D8                   .dbline 429
 05D8           ;        }              
 05D8           L51:
 05D8                   .dbline 430
 05D8           ;        if(IntFlag==2)//校验位错误处理程序
 05D8 80911501          lds R24,_IntFlag
 05DC 8230              cpi R24,2
 05DE 71F4              brne L58
 05E0           X14:
 05E0                   .dbline 431
 05E0           ;        { 
 05E0                   .dbline 432
 05E0           ;          IntFlag=0;//无命令帧
 05E0 2224              clr R2
 05E2 20921501          sts _IntFlag,R2
 05E6                   .dbline 433
 05E6           ;          EIFR|=0x08;//清INT3中断标志 
 05E6 88B7              in R24,0x38
 05E8 8860              ori R24,8
 05EA 88BF              out 0x38,R24
 05EC                   .dbline 434
 05EC           ;          EICRA|=0xc0; //INT3上升沿触发 
 05EC 80916A00          lds R24,106
 05F0 806C              ori R24,192
 05F2 80936A00          sts 106,R24
 05F6                   .dbline 435
 05F6           ;          EIMSK|=0x08;//使能INT3中断 
 05F6 89B7              in R24,0x39
 05F8 8860              ori R24,8
 05FA 89BF              out 0x39,R24
 05FC                   .dbline 436
 05FC           ;        }                                                                      
 05FC           L58:
 05FC                   .dbline 437
 05FC           ;       } 
 05FC           L49:
 05FC                   .dbline 383
 05FC 20907C00          lds R2,124
 0600 22FC              sbrc R2,2
 0602 05C0              rjmp L60
 0604           X15:
 0604 20901201          lds R2,_UpdateBegin
 0608 2220              tst R2
 060A 09F4              brne X37
 060C 49CF              xjmp L48
 060E           X37:
 060E           X16:
 060E           L60:
 060E                   .dbline 439
 060E           ;       
 060E           ;       TCCR3B = 0x00; //stop    
 060E 2224              clr R2
 0610 20928A00          sts 138,R2
 0614                   .dbline 440
 0614           ;       ETIFR|=0x04; //清定时器3中断标志
 0614 80917C00          lds R24,124
 0618 8460              ori R24,4
 061A 80937C00          sts 124,R24
 061E                   .dbline 441
 061E           ;       ETIMSK &= 0xfb;//关定时器3中断
 061E 80917D00          lds R24,125
 0622 8B7F              andi R24,251
 0624 80937D00          sts 125,R24
 0628                   .dbline 443
 0628           ;       
 0628           ;       if(UpdateBegin==0)//3秒内没收到开始更新命令，则直接跳到主程序
 0628 20901201          lds R2,_UpdateBegin
 062C 2220              tst R2
 062E 09F4              brne L61
 0630           X17:
 0630                   .dbline 444
 0630           ;       {
 0630                   .dbline 445
 0630           ;        quit();
 0630 6CDD              xcall _quit
 0632                   .dbline 446
 0632           ;       }
 0632           L61:
 0632                   .dbline 448
 0632           ;       
 0632           ;       UpdateBegin=0;
 0632 2224              clr R2
 0634 20921201          sts _UpdateBegin,R2
 0638 F2C1              xjmp L64
 063A           L63:
 063A                   .dbline 450
 063A           ;       while(1)
 063A           ;       {
 063A                   .dbline 451
 063A           ;        if(IntFlag==2)//校验位错误处理程序
 063A 80911501          lds R24,_IntFlag
 063E 8230              cpi R24,2
 0640 79F4              brne L66
 0642           X18:
 0642                   .dbline 452
 0642           ;        { 
 0642                   .dbline 453
 0642           ;          IntFlag=0;//无命令帧
 0642 2224              clr R2
 0644 20921501          sts _IntFlag,R2
 0648                   .dbline 454
 0648           ;          EIFR|=0x08;//清INT3中断标志 
 0648 88B7              in R24,0x38
 064A 8860              ori R24,8
 064C 88BF              out 0x38,R24
 064E                   .dbline 455
 064E           ;          EICRA|=0xc0; //INT3上升沿触发 
 064E 80916A00          lds R24,106
 0652 806C              ori R24,192
 0654 80936A00          sts 106,R24
 0658                   .dbline 456
 0658           ;          EIMSK|=0x08;//使能INT3中断 
 0658 89B7              in R24,0x39
 065A 8860              ori R24,8
 065C 89BF              out 0x39,R24
 065E                   .dbline 457
 065E           ;        }
 065E DFC1              xjmp L67
 0660           L66:
 0660                   .dbline 458
 0660           ;       else if(IntFlag==1)//接收到了正常命令帧
 0660 80911501          lds R24,_IntFlag
 0664 8130              cpi R24,1
 0666 09F0              breq X38
 0668 DAC1              xjmp L68
 066A           X38:
 066A           X19:
 066A                   .dbline 459
 066A           ;       {
 066A                   .dbline 460
 066A           ;                if(UpdateBegin>0)//接收主程序二进制数据
 066A 80E0              ldi R24,0
 066C 20901201          lds R2,_UpdateBegin
 0670 8215              cp R24,R2
 0672 08F0              brlo X39
 0674 C6C0              xjmp L70
 0676           X39:
 0676           X20:
 0676                   .dbline 461
 0676           ;        {        
 0676                   .dbline 462
 0676           ;                     SetTimer3();       //每收到一字节就重新开始定时500ms，超时后回到待命状态
 0676 C5DE              xcall _SetTimer3
 0678                   .dbline 464
 0678           ;                                                                  
 0678           ;                     flash_buf[DataReCn]=R_dat;
 0678 80E0              ldi R24,<_flash_buf
 067A 90E0              ldi R25,>_flash_buf
 067C E0911001          lds R30,_DataReCn
 0680 F0911101          lds R31,_DataReCn+1
 0684 E80F              add R30,R24
 0686 F91F              adc R31,R25
 0688 20902E01          lds R2,_R_dat
 068C 30902F01          lds R3,_R_dat+1
 0690 2082              std z+0,R2
 0692                   .dbline 465
 0692           ;                         DataReCn++;
 0692 80911001          lds R24,_DataReCn
 0696 90911101          lds R25,_DataReCn+1
 069A 0196              adiw R24,1
 069C 90931101          sts _DataReCn+1,R25
 06A0 80931001          sts _DataReCn,R24
 06A4                   .dbline 467
 06A4           ;                         
 06A4           ;                         if(UpdateBegin==2)//如果是采集板页写准备了，直接把这个字节丢给采集板
 06A4 80911201          lds R24,_UpdateBegin
 06A8 8230              cpi R24,2
 06AA 39F4              brne L72
 06AC           X21:
 06AC                   .dbline 468
 06AC           ;                         {
 06AC           L74:
 06AC                   .dbline 469
 06AC           ;                           while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 06AC           L75:
 06AC                   .dbline 469
 06AC 5D9B              sbis 0xb,5
 06AE FECF              rjmp L74
 06B0           X22:
 06B0                   .dbline 470
 06B0           ;                           UDR0=R_dat; 
 06B0 20902E01          lds R2,_R_dat
 06B4 30902F01          lds R3,_R_dat+1
 06B8 2CB8              out 0xc,R2
 06BA                   .dbline 471
 06BA           ;                         }      
 06BA           L72:
 06BA                   .dbline 473
 06BA           ;                          
 06BA           ;                        if(DataReCn==258)//2字节页索引，256字节页数据
 06BA 80911001          lds R24,_DataReCn
 06BE 90911101          lds R25,_DataReCn+1
 06C2 8230              cpi R24,2
 06C4 E1E0              ldi R30,1
 06C6 9E07              cpc R25,R30
 06C8 09F0              breq X40
 06CA 9BC1              xjmp L71
 06CC           X40:
 06CC           X23:
 06CC                   .dbline 474
 06CC           ;                        {
 06CC                   .dbline 475
 06CC           ;                          TCCR3B = 0x00; //stop  
 06CC 2224              clr R2
 06CE 20928A00          sts 138,R2
 06D2                   .dbline 476
 06D2           ;                          ETIMSK &= 0xfb;//关定时器3中断
 06D2 80917D00          lds R24,125
 06D6 8B7F              andi R24,251
 06D8 80937D00          sts 125,R24
 06DC                   .dbline 477
 06DC           ;                          ETIFR|=0x04; //清定时器3中断标志 
 06DC 80917C00          lds R24,124
 06E0 8460              ori R24,4
 06E2 80937C00          sts 124,R24
 06E6                   .dbline 479
 06E6           ;                                          
 06E6           ;                          if(UpdateBegin==1)//如果是主控板页写准备了，则此时写入一页
 06E6 80911201          lds R24,_UpdateBegin
 06EA 8130              cpi R24,1
 06EC 09F0              breq X41
 06EE 5DC0              xjmp L79
 06F0           X41:
 06F0           X24:
 06F0                   .dbline 480
 06F0           ;                               {
 06F0                   .dbline 481
 06F0           ;                   address=flash_buf[0]*256+flash_buf[1];  
 06F0 20910200          lds R18,_flash_buf
 06F4 3327              clr R19
 06F6 00E0              ldi R16,256
 06F8 11E0              ldi R17,1
 06FA 0E940000          xcall empy16s
 06FE 1801              movw R2,R16
 0700 40900300          lds R4,_flash_buf+1
 0704 5524              clr R5
 0706 240C              add R2,R4
 0708 351C              adc R3,R5
 070A 4424              clr R4
 070C 37FC              sbrc R3,7
 070E 4094              com R4
 0710 5524              clr R5
 0712 47FC              sbrc R4,7
 0714 5094              com R5
 0716 30920100          sts _address+1,R3
 071A 20920000          sts _address,R2
 071E 50920300          sts _address+2+1,R5
 0722 40920200          sts _address+2,R4
 0726                   .dbline 482
 0726           ;                             address*=256;      
 0726 40E0              ldi R20,0
 0728 51E0              ldi R21,1
 072A 60E0              ldi R22,0
 072C 70E0              ldi R23,0
 072E 5A92              st -y,R5
 0730 4A92              st -y,R4
 0732 3A92              st -y,R3
 0734 2A92              st -y,R2
 0736 8A01              movw R16,R20
 0738 9B01              movw R18,R22
 073A 0E940000          xcall empy32s
 073E 10930100          sts _address+1,R17
 0742 00930000          sts _address,R16
 0746 30930300          sts _address+2+1,R19
 074A 20930200          sts _address+2,R18
 074E                   .dbline 484
 074E           ;                                 
 074E           ;                             if(address<0)
 074E 40E0              ldi R20,0
 0750 50E0              ldi R21,0
 0752 60E0              ldi R22,0
 0754 70E0              ldi R23,0
 0756 0417              cp R16,R20
 0758 1507              cpc R17,R21
 075A 2607              cpc R18,R22
 075C 3707              cpc R19,R23
 075E 4CF4              brge L82
 0760           X25:
 0760                   .dbline 485
 0760           ;                                 address=0;
 0760 80E0              ldi R24,0
 0762 80930000          sts _address+0,R24
 0766 80930100          sts _address+1,R24
 076A 80930200          sts _address+2,R24
 076E 80930300          sts _address+3,R24
 0772           L82:
 0772                   .dbline 487
 0772           ;                                
 0772           ;                            if(address>0xff00)//对应页索引为255，这是最后一页能写的页，目前限制固件大小为64K字节
 0772 40E0              ldi R20,0
 0774 5FEF              ldi R21,255
 0776 60E0              ldi R22,0
 0778 70E0              ldi R23,0
 077A 40900200          lds R4,_address+2
 077E 50900300          lds R5,_address+2+1
 0782 20900000          lds R2,_address
 0786 30900100          lds R3,_address+1
 078A 4215              cp R20,R2
 078C 5305              cpc R21,R3
 078E 6405              cpc R22,R4
 0790 7505              cpc R23,R5
 0792 54F4              brge L84
 0794           X26:
 0794                   .dbline 488
 0794           ;                                address=0xff00;
 0794 80E0              ldi R24,0
 0796 80930000          sts _address+0,R24
 079A 80930200          sts _address+2,R24
 079E 80930300          sts _address+3,R24
 07A2 8FEF              ldi R24,255
 07A4 80930100          sts _address+1,R24
 07A8           L84:
 07A8                   .dbline 490
 07A8           ;                               
 07A8           ;                         write_one_page();     //约20ms    
 07A8 50DC              xcall _write_one_page
 07AA                   .dbline 491
 07AA           ;                           }   
 07AA           L79:
 07AA                   .dbline 493
 07AA           ;                                 
 07AA           ;                          UpdateBegin=0;//一页写完了，下一页又从页写准备开始
 07AA 2224              clr R2
 07AC 20921201          sts _UpdateBegin,R2
 07B0                   .dbline 495
 07B0           ;                          
 07B0           ;                          T_com=0x0f;        
 07B0 8FE0              ldi R24,15
 07B2 80932D01          sts _T_com,R24
 07B6                   .dbline 496
 07B6           ;                          crc16(flash_buf,258);//12ms
 07B6 22E0              ldi R18,258
 07B8 31E0              ldi R19,1
 07BA 00E0              ldi R16,<_flash_buf
 07BC 10E0              ldi R17,>_flash_buf
 07BE 86DD              xcall _crc16
 07C0                   .dbline 497
 07C0           ;                      T_dat=crc16hi;
 07C0 20900F01          lds R2,_crc16hi
 07C4 3324              clr R3
 07C6 30923101          sts _T_dat+1,R3
 07CA 20923001          sts _T_dat,R2
 07CE                   .dbline 498
 07CE           ;                          T_dat<<=8;
 07CE 20903001          lds R2,_T_dat
 07D2 30903101          lds R3,_T_dat+1
 07D6 322C              mov R3,R2
 07D8 2224              clr R2
 07DA 30923101          sts _T_dat+1,R3
 07DE 20923001          sts _T_dat,R2
 07E2                   .dbline 499
 07E2           ;                          T_dat|=crc16lo;
 07E2 20900E01          lds R2,_crc16lo
 07E6 3324              clr R3
 07E8 40903001          lds R4,_T_dat
 07EC 50903101          lds R5,_T_dat+1
 07F0 4228              or R4,R2
 07F2 5328              or R5,R3
 07F4 50923101          sts _T_dat+1,R5
 07F8 40923001          sts _T_dat,R4
 07FC                   .dbline 500
 07FC           ;                      Delay30Ms();
 07FC CAD6              xcall _Delay30Ms
 07FE                   .dbline 501
 07FE           ;                SendManchester();      //将这一页的校验码上传给上位机，上位机判断后决定是继续烧写一页还是重烧这一页                            
 07FE 6ED3              xcall _SendManchester
 0800                   .dbline 502
 0800           ;                        }               
 0800                   .dbline 503
 0800           ;            }
 0800 00C1              xjmp L71
 0802           L70:
 0802                   .dbline 505
 0802           ;                else//若不是下发标定系数，则进入以下各个命令的子语句
 0802           ;                {
 0802                   .dbline 506
 0802           ;               switch(R_dat)
 0802 20902E01          lds R2,_R_dat
 0806 30902F01          lds R3,_R_dat+1
 080A C101              movw R24,R2
 080C 8032              cpi R24,32
 080E E0E0              ldi R30,0
 0810 9E07              cpc R25,R30
 0812 41F1              breq L88
 0814           X27:
 0814 8032              cpi R24,32
 0816 E0E0              ldi R30,0
 0818 9E07              cpc R25,R30
 081A 0CF4              brge X42
 081C F2C0              xjmp L87
 081E           X42:
 081E           X28:
 081E           L98:
 081E 20902E01          lds R2,_R_dat
 0822 30902F01          lds R3,_R_dat+1
 0826 C101              movw R24,R2
 0828 8A3F              cpi R24,250
 082A E0E0              ldi R30,0
 082C 9E07              cpc R25,R30
 082E 31F1              breq L89
 0830           X29:
 0830 8B3F              cpi R24,251
 0832 E0E0              ldi R30,0
 0834 9E07              cpc R25,R30
 0836 09F4              brne X43
 0838 30C0              xjmp L90
 083A           X43:
 083A           X30:
 083A 8C3F              cpi R24,252
 083C E0E0              ldi R30,0
 083E 9E07              cpc R25,R30
 0840 09F4              brne X44
 0842 52C0              xjmp L92
 0844           X44:
 0844           X31:
 0844 8D3F              cpi R24,253
 0846 E0E0              ldi R30,0
 0848 9E07              cpc R25,R30
 084A 09F4              brne X45
 084C 63C0              xjmp L93
 084E           X45:
 084E           X32:
 084E 8E3F              cpi R24,254
 0850 E0E0              ldi R30,0
 0852 9E07              cpc R25,R30
 0854 09F4              brne X46
 0856 8FC0              xjmp L95
 0858           X46:
 0858           X33:
 0858 8F3F              cpi R24,255
 085A E0E0              ldi R30,0
 085C 9E07              cpc R25,R30
 085E 09F4              brne X47
 0860 B0C0              xjmp L97
 0862           X47:
 0862           X34:
 0862 CFC0              xjmp L87
 0864           L88:
 0864                   .dbline 509
 0864           ;               {                       
 0864           ;                          case 0x20://读版本号  
 0864           ;                                          T_com=0x02;
 0864 82E0              ldi R24,2
 0866 80932D01          sts _T_com,R24
 086A                   .dbline 510
 086A           ;                                          T_dat=0x00;
 086A 2224              clr R2
 086C 3324              clr R3
 086E 30923101          sts _T_dat+1,R3
 0872 20923001          sts _T_dat,R2
 0876                   .dbline 511
 0876           ;                                          Delay30Ms();
 0876 8DD6              xcall _Delay30Ms
 0878                   .dbline 512
 0878           ;                                          SendManchester();    
 0878 31D3              xcall _SendManchester
 087A                   .dbline 513
 087A           ;                                          break;  
 087A C3C0              xjmp L87
 087C           L89:
 087C                   .dbline 516
 087C           ;                                          
 087C           ;                          case 0xfa://主控板握手，进入更新状态
 087C           ;                                    SendUart0(0xb5,1);
 087C 21E0              ldi R18,1
 087E 05EB              ldi R16,181
 0880 90DD              xcall _SendUart0
 0882                   .dbline 517
 0882           ;                                        T_com=0x0f;
 0882 8FE0              ldi R24,15
 0884 80932D01          sts _T_com,R24
 0888                   .dbline 518
 0888           ;                                    T_dat=0xe7fa;//上位机实收到的数,不用高低换位                                      
 0888 8AEF              ldi R24,59386
 088A 97EE              ldi R25,231
 088C 90933101          sts _T_dat+1,R25
 0890 80933001          sts _T_dat,R24
 0894                   .dbline 519
 0894           ;                                    Delay30Ms();
 0894 7ED6              xcall _Delay30Ms
 0896                   .dbline 520
 0896           ;                                    SendManchester();  
 0896 22D3              xcall _SendManchester
 0898                   .dbline 521
 0898           ;                               break;
 0898 B4C0              xjmp L87
 089A           L90:
 089A                   .dbline 524
 089A           ;                               
 089A           ;                          case 0xfb://DSP握手，进入更新状态
 089A           ;                                        T_com=0x0f;
 089A 8FE0              ldi R24,15
 089C 80932D01          sts _T_com,R24
 08A0                   .dbline 525
 08A0           ;                                        SendUart0(0xb5,1);  
 08A0 21E0              ldi R18,1
 08A2 05EB              ldi R16,181
 08A4 7EDD              xcall _SendUart0
 08A6                   .dbline 526
 08A6           ;                                        T_dat=Uart0RxData[0];//成功的话应返回0xe7fb
 08A6 20900701          lds R2,_Uart0RxData
 08AA 3324              clr R3
 08AC 30923101          sts _T_dat+1,R3
 08B0 20923001          sts _T_dat,R2
 08B4                   .dbline 527
 08B4           ;                                        T_dat<<=8;     
 08B4 20903001          lds R2,_T_dat
 08B8 30903101          lds R3,_T_dat+1
 08BC 322C              mov R3,R2
 08BE 2224              clr R2
 08C0 30923101          sts _T_dat+1,R3
 08C4 20923001          sts _T_dat,R2
 08C8                   .dbline 528
 08C8           ;                                        T_dat|=Uart0RxData[1];
 08C8 20900801          lds R2,_Uart0RxData+1
 08CC 3324              clr R3
 08CE 40903001          lds R4,_T_dat
 08D2 50903101          lds R5,_T_dat+1
 08D6 4228              or R4,R2
 08D8 5328              or R5,R3
 08DA 50923101          sts _T_dat+1,R5
 08DE 40923001          sts _T_dat,R4
 08E2                   .dbline 529
 08E2           ;                                        Delay30Ms();
 08E2 57D6              xcall _Delay30Ms
 08E4                   .dbline 530
 08E4           ;                                        SendManchester(); 
 08E4 FBD2              xcall _SendManchester
 08E6                   .dbline 531
 08E6           ;                               break;  
 08E6 8DC0              xjmp L87
 08E8           L92:
 08E8                   .dbline 534
 08E8           ;                                                                       
 08E8           ;                               case 0xfc://主控板页写准备                           
 08E8           ;                                        T_com=0x0f;
 08E8 8FE0              ldi R24,15
 08EA 80932D01          sts _T_com,R24
 08EE                   .dbline 535
 08EE           ;                                    T_dat=0xe7fc;//上位机实收到的数,不用高低换位
 08EE 8CEF              ldi R24,59388
 08F0 97EE              ldi R25,231
 08F2 90933101          sts _T_dat+1,R25
 08F6 80933001          sts _T_dat,R24
 08FA                   .dbline 536
 08FA           ;                                    Delay30Ms();
 08FA 4BD6              xcall _Delay30Ms
 08FC                   .dbline 537
 08FC           ;                                    SendManchester(); 
 08FC EFD2              xcall _SendManchester
 08FE                   .dbline 538
 08FE           ;                                        UpdateBegin=1;//页写准备，主控板从页索引0开始烧写，最大页索引255，共64K字节程序空间
 08FE 81E0              ldi R24,1
 0900 80931201          sts _UpdateBegin,R24
 0904                   .dbline 539
 0904           ;                                        DataReCn=0;
 0904 2224              clr R2
 0906 3324              clr R3
 0908 30921101          sts _DataReCn+1,R3
 090C 20921001          sts _DataReCn,R2
 0910                   .dbline 540
 0910           ;                                    SetTimer3();//开始计时，每500ms内至少要有一个字节收到
 0910 78DD              xcall _SetTimer3
 0912                   .dbline 541
 0912           ;                               break;
 0912 77C0              xjmp L87
 0914           L93:
 0914                   .dbline 544
 0914           ;                                                                                       
 0914           ;                               case 0xfd://采集板页写准备                           
 0914           ;                                        T_com=0x0f;
 0914 8FE0              ldi R24,15
 0916 80932D01          sts _T_com,R24
 091A                   .dbline 545
 091A           ;                                        SendUart0(0xb7,1);//块写FLASHE准备             
 091A 21E0              ldi R18,1
 091C 07EB              ldi R16,183
 091E 41DD              xcall _SendUart0
 0920                   .dbline 546
 0920           ;                                    T_dat=Uart0RxData[0];//高字节，正常情况下应是0xe7
 0920 20900701          lds R2,_Uart0RxData
 0924 3324              clr R3
 0926 30923101          sts _T_dat+1,R3
 092A 20923001          sts _T_dat,R2
 092E                   .dbline 547
 092E           ;                                        T_dat<<=8;
 092E 20903001          lds R2,_T_dat
 0932 30903101          lds R3,_T_dat+1
 0936 322C              mov R3,R2
 0938 2224              clr R2
 093A 30923101          sts _T_dat+1,R3
 093E 20923001          sts _T_dat,R2
 0942                   .dbline 548
 0942           ;                                        T_dat|=Uart0RxData[1];//低字节,正常情况下应是0xfd   
 0942 20900801          lds R2,_Uart0RxData+1
 0946 3324              clr R3
 0948 40903001          lds R4,_T_dat
 094C 50903101          lds R5,_T_dat+1
 0950 4228              or R4,R2
 0952 5328              or R5,R3
 0954 50923101          sts _T_dat+1,R5
 0958 40923001          sts _T_dat,R4
 095C                   .dbline 549
 095C           ;                                    Delay30Ms();
 095C 1AD6              xcall _Delay30Ms
 095E                   .dbline 550
 095E           ;                                    SendManchester(); 
 095E BED2              xcall _SendManchester
 0960                   .dbline 551
 0960           ;                                        UpdateBegin=2;//页写准备，采集板从页索引479开始往前烧写，最小页索引224，共64K字节程序空间
 0960 82E0              ldi R24,2
 0962 80931201          sts _UpdateBegin,R24
 0966                   .dbline 552
 0966           ;                                        DataReCn=0;
 0966 2224              clr R2
 0968 3324              clr R3
 096A 30921101          sts _DataReCn+1,R3
 096E 20921001          sts _DataReCn,R2
 0972                   .dbline 553
 0972           ;                                    SetTimer3();
 0972 47DD              xcall _SetTimer3
 0974                   .dbline 554
 0974           ;                               break;
 0974 46C0              xjmp L87
 0976           L95:
 0976                   .dbline 557
 0976           ;                               
 0976           ;                               case 0xfe://采集板FLASH擦除，上位机设总超时6秒                       
 0976           ;                                         SendUart0(0xb6,0);//擦除FLASHE,2秒超时 ,擦除FLASHD,2秒超时 ，共5.5秒超时                               
 0976 2227              clr R18
 0978 06EB              ldi R16,182
 097A 13DD              xcall _SendUart0
 097C                   .dbline 558
 097C           ;                                         T_dat=Uart0RxData[0];//擦除成功的话应返回0xe7
 097C 20900701          lds R2,_Uart0RxData
 0980 3324              clr R3
 0982 30923101          sts _T_dat+1,R3
 0986 20923001          sts _T_dat,R2
 098A                   .dbline 559
 098A           ;                                         T_dat<<=8;                                     
 098A 20903001          lds R2,_T_dat
 098E 30903101          lds R3,_T_dat+1
 0992 322C              mov R3,R2
 0994 2224              clr R2
 0996 30923101          sts _T_dat+1,R3
 099A 20923001          sts _T_dat,R2
 099E                   .dbline 560
 099E           ;                                         T_dat|=Uart0RxData[1];//擦除成功的话应返回0xfe                                   
 099E 20900801          lds R2,_Uart0RxData+1
 09A2 3324              clr R3
 09A4 40903001          lds R4,_T_dat
 09A8 50903101          lds R5,_T_dat+1
 09AC 4228              or R4,R2
 09AE 5328              or R5,R3
 09B0 50923101          sts _T_dat+1,R5
 09B4 40923001          sts _T_dat,R4
 09B8                   .dbline 561
 09B8           ;                                         T_com=0x0f;
 09B8 8FE0              ldi R24,15
 09BA 80932D01          sts _T_com,R24
 09BE                   .dbline 562
 09BE           ;                                         SendManchester();     //上传擦除结果                                                                  
 09BE 8ED2              xcall _SendManchester
 09C0                   .dbline 563
 09C0           ;                               break;  
 09C0 20C0              xjmp L87
 09C2           L97:
 09C2                   .dbline 566
 09C2           ;                               
 09C2           ;                               case 0xff://退出更新状态，运行正常程序
 09C2           ;                                SendUart0(0xb8,1);
 09C2 21E0              ldi R18,1
 09C4 08EB              ldi R16,184
 09C6 EDDC              xcall _SendUart0
 09C8                   .dbline 567
 09C8           ;                                T_dat=Uart0RxData[0];//成功的话应返回0xe7
 09C8 20900701          lds R2,_Uart0RxData
 09CC 3324              clr R3
 09CE 30923101          sts _T_dat+1,R3
 09D2 20923001          sts _T_dat,R2
 09D6                   .dbline 568
 09D6           ;                                T_dat<<=8; 
 09D6 20903001          lds R2,_T_dat
 09DA 30903101          lds R3,_T_dat+1
 09DE 322C              mov R3,R2
 09E0 2224              clr R2
 09E2 30923101          sts _T_dat+1,R3
 09E6 20923001          sts _T_dat,R2
 09EA                   .dbline 569
 09EA           ;                                T_dat|=0xff;
 09EA C101              movw R24,R2
 09EC 8F6F              ori R24,255
 09EE 90933101          sts _T_dat+1,R25
 09F2 80933001          sts _T_dat,R24
 09F6                   .dbline 570
 09F6           ;                                T_com=0x0f;
 09F6 8FE0              ldi R24,15
 09F8 80932D01          sts _T_com,R24
 09FC                   .dbline 571
 09FC           ;                                Delay30Ms();
 09FC CAD5              xcall _Delay30Ms
 09FE                   .dbline 572
 09FE           ;                                SendManchester();      //上传擦除结果          
 09FE 6ED2              xcall _SendManchester
 0A00                   .dbline 573
 0A00           ;                                quit();
 0A00 84DB              xcall _quit
 0A02                   .dbline 574
 0A02           ;                               break;
 0A02                   .dbline 577
 0A02           ; 
 0A02           ;                               default:
 0A02           ;                               break;
 0A02           L87:
 0A02                   .dbline 579
 0A02           ;                   }//switch(R_dat&0xf0)
 0A02           ;            }//UpdateBegin
 0A02           L71:
 0A02                   .dbline 580
 0A02           ;                IntFlag=0;
 0A02 2224              clr R2
 0A04 20921501          sts _IntFlag,R2
 0A08                   .dbline 581
 0A08           ;        EIFR|=0x08;//清INT3中断标志 
 0A08 88B7              in R24,0x38
 0A0A 8860              ori R24,8
 0A0C 88BF              out 0x38,R24
 0A0E                   .dbline 582
 0A0E           ;                EICRA|=0xc0; //INT3上升沿触发 
 0A0E 80916A00          lds R24,106
 0A12 806C              ori R24,192
 0A14 80936A00          sts 106,R24
 0A18                   .dbline 583
 0A18           ;                EIMSK|=0x08;//使能INT3中断 
 0A18 89B7              in R24,0x39
 0A1A 8860              ori R24,8
 0A1C 89BF              out 0x39,R24
 0A1E                   .dbline 584
 0A1E           ;        }//IntFlag
 0A1E           L68:
 0A1E           L67:
 0A1E                   .dbline 585
 0A1E           ;     }//while(1)
 0A1E           L64:
 0A1E                   .dbline 449
 0A1E 0DCE              xjmp L63
 0A20           X35:
 0A20                   .dbline -2
 0A20           L47:
 0A20                   .dbline 0 ; func end
 0A20 0895              ret
 0A22                   .dbsym l t 1 c
 0A22                   .dbsym l k 1 i
 0A22                   .dbsym l j 1 i
 0A22                   .dbsym l i 1 i
 0A22                   .dbend
                        .area vector(rom, abs)
                        .org 16
 0010 0C941105          jmp _int3_isr
                        .area text(rom, con, rel)
 0A22                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0A22                   .dbfunc e int3_isr _int3_isr fV
                        .even
 0A22           _int3_isr::
 0A22 2A92              st -y,R2
 0A24 3A92              st -y,R3
 0A26 0A93              st -y,R16
 0A28 1A93              st -y,R17
 0A2A 8A93              st -y,R24
 0A2C 9A93              st -y,R25
 0A2E AA93              st -y,R26
 0A30 EA93              st -y,R30
 0A32 FA93              st -y,R31
 0A34 2FB6              IN R2,63
 0A36 2A92              st -y,R2
 0A38                   .dbline -1
 0A38                   .dbline 593
 0A38           ;  
 0A38           ; }
 0A38           ; 
 0A38           ; 
 0A38           ; 
 0A38           ; #pragma interrupt_handler int3_isr:iv_INT3
 0A38           ; void int3_isr(void)//外部中断3
 0A38           ; { 
 0A38                   .dbline 594
 0A38           ;    SREG&=0x7f;//关总中断
 0A38 8FB7              in R24,0x3f
 0A3A 8F77              andi R24,127
 0A3C 8FBF              out 0x3f,R24
 0A3E                   .dbline 595
 0A3E           ;    EIMSK&=0xF7;//关INT3  
 0A3E 89B7              in R24,0x39
 0A40 877F              andi R24,247
 0A42 89BF              out 0x39,R24
 0A44                   .dbline 596
 0A44           ;    TCCR2 = 0x00; //stop
 0A44 2224              clr R2
 0A46 25BC              out 0x25,R2
 0A48                   .dbline 598
 0A48           ;   
 0A48           ;   DELAY10
 0A48 3324              clr R3
 0A4A 30921401          sts _Tt+1,R3
 0A4E 20921301          sts _Tt,R2
 0A52 09C0              xjmp L103
 0A54           L100:
 0A54                   .dbline 598
 0A54           L101:
 0A54                   .dbline 598
 0A54 80911301          lds R24,_Tt
 0A58 90911401          lds R25,_Tt+1
 0A5C 0196              adiw R24,1
 0A5E 90931401          sts _Tt+1,R25
 0A62 80931301          sts _Tt,R24
 0A66           L103:
 0A66                   .dbline 598
 0A66 80911301          lds R24,_Tt
 0A6A 90911401          lds R25,_Tt+1
 0A6E 8430              cpi R24,4
 0A70 E0E0              ldi R30,0
 0A72 9E07              cpc R25,R30
 0A74 78F3              brlo L100
 0A76           X48:
 0A76                   .dbline 599
 0A76           ;   EIFR|=0x08;//清INT3中断标志 
 0A76 88B7              in R24,0x38
 0A78 8860              ori R24,8
 0A7A 88BF              out 0x38,R24
 0A7C                   .dbline 600
 0A7C           ;   if((PIND&0x08)==0x00)//高脉冲不足10us则直接跳出
 0A7C 8399              sbic 0x10,3
 0A7E 01C0              rjmp L104
 0A80           X49:
 0A80                   .dbline 601
 0A80           ;   {
 0A80                   .dbline 602
 0A80           ;    goto End;
 0A80 CDC1              xjmp L106
 0A82           L104:
 0A82                   .dbline 605
 0A82           ;   }
 0A82           ;    
 0A82           ;    TCNT2 = 0x00;  
 0A82 2224              clr R2
 0A84 24BC              out 0x24,R2
 0A86                   .dbline 606
 0A86           ;    TCCR2 = 0x03; //64分频,8M时钟，每个CLOCK耗时8us，最大定时2048us，每周期10个计数
 0A86 83E0              ldi R24,3
 0A88 85BD              out 0x25,R24
 0A8A 29C0              xjmp L108
 0A8C           L107:
 0A8C                   .dbline 609
 0A8C           ;    
 0A8C           ;    while(1)
 0A8C           ;    {
 0A8C                   .dbline 610
 0A8C           ;      T2cn=TCNT2;
 0A8C 24B4              in R2,0x24
 0A8E 3324              clr R3
 0A90 30920100          sts _T2cn+1,R3
 0A94 20920000          sts _T2cn,R2
 0A98                   .dbline 611
 0A98           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 0A98 80E5              ldi R24,80
 0A9A 90E0              ldi R25,0
 0A9C 8215              cp R24,R2
 0A9E 9305              cpc R25,R3
 0AA0 08F4              brsh L110
 0AA2           X50:
 0AA2                   .dbline 612
 0AA2           ;         {
 0AA2                   .dbline 613
 0AA2           ;           goto End;
 0AA2 BCC1              xjmp L106
 0AA4           L110:
 0AA4                   .dbline 615
 0AA4           ;         }
 0AA4           ;      if((PIND&0x08)==0x00)
 0AA4 8399              sbic 0x10,3
 0AA6 1BC0              rjmp L112
 0AA8           X51:
 0AA8                   .dbline 616
 0AA8           ;        {
 0AA8                   .dbline 617
 0AA8           ;          DELAY20
 0AA8 2224              clr R2
 0AAA 3324              clr R3
 0AAC 30921401          sts _Tt+1,R3
 0AB0 20921301          sts _Tt,R2
 0AB4 09C0              xjmp L117
 0AB6           L114:
 0AB6                   .dbline 617
 0AB6           L115:
 0AB6                   .dbline 617
 0AB6 80911301          lds R24,_Tt
 0ABA 90911401          lds R25,_Tt+1
 0ABE 0196              adiw R24,1
 0AC0 90931401          sts _Tt+1,R25
 0AC4 80931301          sts _Tt,R24
 0AC8           L117:
 0AC8                   .dbline 617
 0AC8 80911301          lds R24,_Tt
 0ACC 90911401          lds R25,_Tt+1
 0AD0 8830              cpi R24,8
 0AD2 E0E0              ldi R30,0
 0AD4 9E07              cpc R25,R30
 0AD6 78F3              brlo L114
 0AD8           X52:
 0AD8                   .dbline 618
 0AD8           ;          if((PIND&0x08)==0x00)
 0AD8 8399              sbic 0x10,3
 0ADA 01C0              rjmp L118
 0ADC           X53:
 0ADC                   .dbline 619
 0ADC           ;           {
 0ADC                   .dbline 620
 0ADC           ;             break;
 0ADC 31C0              xjmp L121
 0ADE           L118:
 0ADE                   .dbline 622
 0ADE           ;           }
 0ADE           ;        }
 0ADE           L112:
 0ADE                   .dbline 623
 0ADE           ;    }
 0ADE           L108:
 0ADE                   .dbline 608
 0ADE D6CF              xjmp L107
 0AE0           L120:
 0AE0                   .dbline 627
 0AE0           ;                  
 0AE0           ;     //开始判断同步头  
 0AE0           ;       while(1)//还没有上升沿到来,死等
 0AE0           ;       {
 0AE0                   .dbline 628
 0AE0           ;         T2cn=TCNT2;
 0AE0 24B4              in R2,0x24
 0AE2 3324              clr R3
 0AE4 30920100          sts _T2cn+1,R3
 0AE8 20920000          sts _T2cn,R2
 0AEC                   .dbline 629
 0AEC           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 0AEC 80E5              ldi R24,80
 0AEE 90E0              ldi R25,0
 0AF0 8215              cp R24,R2
 0AF2 9305              cpc R25,R3
 0AF4 08F4              brsh L123
 0AF6           X54:
 0AF6                   .dbline 630
 0AF6           ;         {
 0AF6                   .dbline 631
 0AF6           ;           goto End;
 0AF6 92C1              xjmp L106
 0AF8           L123:
 0AF8                   .dbline 633
 0AF8           ;         }
 0AF8           ;         if((EIFR&0x08)==0x08)
 0AF8 88B7              in R24,0x38
 0AFA 8870              andi R24,8
 0AFC 8830              cpi R24,8
 0AFE 01F5              brne L125
 0B00           X55:
 0B00                   .dbline 634
 0B00           ;         {
 0B00                   .dbline 635
 0B00           ;          DELAY10
 0B00 2224              clr R2
 0B02 3324              clr R3
 0B04 30921401          sts _Tt+1,R3
 0B08 20921301          sts _Tt,R2
 0B0C 09C0              xjmp L130
 0B0E           L127:
 0B0E                   .dbline 635
 0B0E           L128:
 0B0E                   .dbline 635
 0B0E 80911301          lds R24,_Tt
 0B12 90911401          lds R25,_Tt+1
 0B16 0196              adiw R24,1
 0B18 90931401          sts _Tt+1,R25
 0B1C 80931301          sts _Tt,R24
 0B20           L130:
 0B20                   .dbline 635
 0B20 80911301          lds R24,_Tt
 0B24 90911401          lds R25,_Tt+1
 0B28 8430              cpi R24,4
 0B2A E0E0              ldi R30,0
 0B2C 9E07              cpc R25,R30
 0B2E 78F3              brlo L127
 0B30           X56:
 0B30                   .dbline 636
 0B30           ;          EIFR|=0x08;//清INT3中断标志 
 0B30 88B7              in R24,0x38
 0B32 8860              ori R24,8
 0B34 88BF              out 0x38,R24
 0B36                   .dbline 637
 0B36           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 0B36 80B3              in R24,0x10
 0B38 8870              andi R24,8
 0B3A 8830              cpi R24,8
 0B3C 09F4              brne L131
 0B3E           X57:
 0B3E                   .dbline 638
 0B3E           ;            {
 0B3E                   .dbline 639
 0B3E           ;            break;
 0B3E 01C0              xjmp L122
 0B40           L131:
 0B40                   .dbline 641
 0B40           ;                }
 0B40           ;         }  
 0B40           L125:
 0B40                   .dbline 642
 0B40           ;       }
 0B40           L121:
 0B40                   .dbline 626
 0B40 CFCF              xjmp L120
 0B42           L122:
 0B42                   .dbline 643
 0B42           ;       T2cn=TCNT2;
 0B42 24B4              in R2,0x24
 0B44 3324              clr R3
 0B46 30920100          sts _T2cn+1,R3
 0B4A 20920000          sts _T2cn,R2
 0B4E                   .dbline 644
 0B4E           ;       TCNT2=0;
 0B4E 2224              clr R2
 0B50 24BC              out 0x24,R2
 0B52                   .dbline 645
 0B52           ;       if((T2cn<60)||(T2cn>80))//同步头本应是7个周期，但收到的结果为6~8个周期内都认可
 0B52 20900000          lds R2,_T2cn
 0B56 30900100          lds R3,_T2cn+1
 0B5A C101              movw R24,R2
 0B5C 8C33              cpi R24,60
 0B5E E0E0              ldi R30,0
 0B60 9E07              cpc R25,R30
 0B62 28F0              brlo L135
 0B64           X58:
 0B64 80E5              ldi R24,80
 0B66 90E0              ldi R25,0
 0B68 8215              cp R24,R2
 0B6A 9305              cpc R25,R3
 0B6C 08F4              brsh L133
 0B6E           X59:
 0B6E           L135:
 0B6E                   .dbline 646
 0B6E           ;       {
 0B6E                   .dbline 647
 0B6E           ;        goto End;//没有收到正确的同步头，直接跳出
 0B6E 56C1              xjmp L106
 0B70           L133:
 0B70           L136:
 0B70                   .dbline 651
 0B70           ;       }
 0B70           ;       
 0B70           ; Start:        //同步头解码正确，下面开始接收9位数据位 //按位从高到低接收数据位，8位数据加1位校验共9位                         
 0B70           ;   for(Int_count=9;Int_count>0;Int_count--)
 0B70 89E0              ldi R24,9
 0B72 80931601          sts _Int_count,R24
 0B76 B3C0              xjmp L140
 0B78           L141:
 0B78                   .dbline 654
 0B78           ;   {   
 0B78           ;    while(1)
 0B78           ;    {
 0B78                   .dbline 655
 0B78           ;      T2cn=TCNT2;
 0B78 24B4              in R2,0x24
 0B7A 3324              clr R3
 0B7C 30920100          sts _T2cn+1,R3
 0B80 20920000          sts _T2cn,R2
 0B84                   .dbline 656
 0B84           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 0B84 80E5              ldi R24,80
 0B86 90E0              ldi R25,0
 0B88 8215              cp R24,R2
 0B8A 9305              cpc R25,R3
 0B8C 08F4              brsh L144
 0B8E           X60:
 0B8E                   .dbline 657
 0B8E           ;         {
 0B8E                   .dbline 658
 0B8E           ;           goto End;
 0B8E 46C1              xjmp L106
 0B90           L144:
 0B90                   .dbline 660
 0B90           ;         }
 0B90           ;      if((PIND&0x08)==0x00)
 0B90 8399              sbic 0x10,3
 0B92 1BC0              rjmp L146
 0B94           X61:
 0B94                   .dbline 661
 0B94           ;        {
 0B94                   .dbline 662
 0B94           ;          DELAY20
 0B94 2224              clr R2
 0B96 3324              clr R3
 0B98 30921401          sts _Tt+1,R3
 0B9C 20921301          sts _Tt,R2
 0BA0 09C0              xjmp L151
 0BA2           L148:
 0BA2                   .dbline 662
 0BA2           L149:
 0BA2                   .dbline 662
 0BA2 80911301          lds R24,_Tt
 0BA6 90911401          lds R25,_Tt+1
 0BAA 0196              adiw R24,1
 0BAC 90931401          sts _Tt+1,R25
 0BB0 80931301          sts _Tt,R24
 0BB4           L151:
 0BB4                   .dbline 662
 0BB4 80911301          lds R24,_Tt
 0BB8 90911401          lds R25,_Tt+1
 0BBC 8830              cpi R24,8
 0BBE E0E0              ldi R30,0
 0BC0 9E07              cpc R25,R30
 0BC2 78F3              brlo L148
 0BC4           X62:
 0BC4                   .dbline 663
 0BC4           ;          if((PIND&0x08)==0x00)
 0BC4 8399              sbic 0x10,3
 0BC6 01C0              rjmp L152
 0BC8           X63:
 0BC8                   .dbline 664
 0BC8           ;           {
 0BC8                   .dbline 665
 0BC8           ;             break;
 0BC8 31C0              xjmp L155
 0BCA           L152:
 0BCA                   .dbline 667
 0BCA           ;           }
 0BCA           ;        }
 0BCA           L146:
 0BCA                   .dbline 668
 0BCA           ;    } 
 0BCA           L142:
 0BCA                   .dbline 653
 0BCA D6CF              xjmp L141
 0BCC           L154:
 0BCC                   .dbline 670
 0BCC           ;    while(1)//还没有上升沿到来,死等
 0BCC           ;       {
 0BCC                   .dbline 671
 0BCC           ;         T2cn=TCNT2;
 0BCC 24B4              in R2,0x24
 0BCE 3324              clr R3
 0BD0 30920100          sts _T2cn+1,R3
 0BD4 20920000          sts _T2cn,R2
 0BD8                   .dbline 672
 0BD8           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 0BD8 80E5              ldi R24,80
 0BDA 90E0              ldi R25,0
 0BDC 8215              cp R24,R2
 0BDE 9305              cpc R25,R3
 0BE0 08F4              brsh L157
 0BE2           X64:
 0BE2                   .dbline 673
 0BE2           ;         {
 0BE2                   .dbline 674
 0BE2           ;           goto End;
 0BE2 1CC1              xjmp L106
 0BE4           L157:
 0BE4                   .dbline 676
 0BE4           ;         }
 0BE4           ;         if((EIFR&0x08)==0x08)
 0BE4 88B7              in R24,0x38
 0BE6 8870              andi R24,8
 0BE8 8830              cpi R24,8
 0BEA 01F5              brne L159
 0BEC           X65:
 0BEC                   .dbline 677
 0BEC           ;         {
 0BEC                   .dbline 678
 0BEC           ;          DELAY10
 0BEC 2224              clr R2
 0BEE 3324              clr R3
 0BF0 30921401          sts _Tt+1,R3
 0BF4 20921301          sts _Tt,R2
 0BF8 09C0              xjmp L164
 0BFA           L161:
 0BFA                   .dbline 678
 0BFA           L162:
 0BFA                   .dbline 678
 0BFA 80911301          lds R24,_Tt
 0BFE 90911401          lds R25,_Tt+1
 0C02 0196              adiw R24,1
 0C04 90931401          sts _Tt+1,R25
 0C08 80931301          sts _Tt,R24
 0C0C           L164:
 0C0C                   .dbline 678
 0C0C 80911301          lds R24,_Tt
 0C10 90911401          lds R25,_Tt+1
 0C14 8430              cpi R24,4
 0C16 E0E0              ldi R30,0
 0C18 9E07              cpc R25,R30
 0C1A 78F3              brlo L161
 0C1C           X66:
 0C1C                   .dbline 679
 0C1C           ;          EIFR|=0x08;//清INT3中断标志 
 0C1C 88B7              in R24,0x38
 0C1E 8860              ori R24,8
 0C20 88BF              out 0x38,R24
 0C22                   .dbline 680
 0C22           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 0C22 80B3              in R24,0x10
 0C24 8870              andi R24,8
 0C26 8830              cpi R24,8
 0C28 09F4              brne L165
 0C2A           X67:
 0C2A                   .dbline 681
 0C2A           ;            {
 0C2A                   .dbline 682
 0C2A           ;            break;
 0C2A 01C0              xjmp L156
 0C2C           L165:
 0C2C                   .dbline 684
 0C2C           ;                }
 0C2C           ;         }  
 0C2C           L159:
 0C2C                   .dbline 685
 0C2C           ;       }
 0C2C           L155:
 0C2C                   .dbline 669
 0C2C CFCF              xjmp L154
 0C2E           L156:
 0C2E                   .dbline 686
 0C2E           ;       T2cn=TCNT2;
 0C2E 24B4              in R2,0x24
 0C30 3324              clr R3
 0C32 30920100          sts _T2cn+1,R3
 0C36 20920000          sts _T2cn,R2
 0C3A                   .dbline 687
 0C3A           ;       TCNT2=0;
 0C3A 2224              clr R2
 0C3C 24BC              out 0x24,R2
 0C3E                   .dbline 688
 0C3E           ;       if(T2cn<20)//数据位最小是3位，可放宽到2位
 0C3E 80910000          lds R24,_T2cn
 0C42 90910100          lds R25,_T2cn+1
 0C46 8431              cpi R24,20
 0C48 E0E0              ldi R30,0
 0C4A 9E07              cpc R25,R30
 0C4C 20F4              brsh L167
 0C4E           X68:
 0C4E                   .dbline 689
 0C4E           ;       {
 0C4E                   .dbline 690
 0C4E           ;        IntFlag=3;//接收数据位不完整
 0C4E 83E0              ldi R24,3
 0C50 80931501          sts _IntFlag,R24
 0C54                   .dbline 691
 0C54           ;        goto End;//数据位来得太早，退出
 0C54 E3C0              xjmp L106
 0C56           L167:
 0C56                   .dbline 693
 0C56           ;       }
 0C56           ;       else if((T2cn>=20)&&(T2cn<40))//数据位1本应是3个周期，在此我们认为2~4个周期都是可以的
 0C56 20900000          lds R2,_T2cn
 0C5A 30900100          lds R3,_T2cn+1
 0C5E C101              movw R24,R2
 0C60 8431              cpi R24,20
 0C62 E0E0              ldi R30,0
 0C64 9E07              cpc R25,R30
 0C66 70F0              brlo L169
 0C68           X69:
 0C68 8832              cpi R24,40
 0C6A E0E0              ldi R30,0
 0C6C 9E07              cpc R25,R30
 0C6E 50F4              brsh L169
 0C70           X70:
 0C70                   .dbline 694
 0C70           ;       {
 0C70                   .dbline 695
 0C70           ;        Rx[Int_count]=1;
 0C70 80E0              ldi R24,<_Rx
 0C72 90E0              ldi R25,>_Rx
 0C74 E0911601          lds R30,_Int_count
 0C78 FF27              clr R31
 0C7A E80F              add R30,R24
 0C7C F91F              adc R31,R25
 0C7E 81E0              ldi R24,1
 0C80 8083              std z+0,R24
 0C82                   .dbline 696
 0C82           ;       }
 0C82 28C0              xjmp L170
 0C84           L169:
 0C84                   .dbline 697
 0C84           ;       else if((T2cn>=40)&&(T2cn<60))//数据位0本应是5个周期，在此我们认为4~6个周期都是可以的
 0C84 00910000          lds R16,_T2cn
 0C88 10910100          lds R17,_T2cn+1
 0C8C 0832              cpi R16,40
 0C8E E0E0              ldi R30,0
 0C90 1E07              cpc R17,R30
 0C92 70F0              brlo L171
 0C94           X71:
 0C94 0C33              cpi R16,60
 0C96 E0E0              ldi R30,0
 0C98 1E07              cpc R17,R30
 0C9A 50F4              brsh L171
 0C9C           X72:
 0C9C                   .dbline 698
 0C9C           ;       {
 0C9C                   .dbline 699
 0C9C           ;        Rx[Int_count]=0;
 0C9C 80E0              ldi R24,<_Rx
 0C9E 90E0              ldi R25,>_Rx
 0CA0 E0911601          lds R30,_Int_count
 0CA4 FF27              clr R31
 0CA6 E80F              add R30,R24
 0CA8 F91F              adc R31,R25
 0CAA 2224              clr R2
 0CAC 2082              std z+0,R2
 0CAE                   .dbline 700
 0CAE           ;       }
 0CAE 12C0              xjmp L172
 0CB0           L171:
 0CB0                   .dbline 701
 0CB0           ;       else if((T2cn>=60)&&(T2cn<=80))//同步位本应是7周期，在此我们认为6~8周期都是可以的
 0CB0 00910000          lds R16,_T2cn
 0CB4 10910100          lds R17,_T2cn+1
 0CB8 0C33              cpi R16,60
 0CBA E0E0              ldi R30,0
 0CBC 1E07              cpc R17,R30
 0CBE 30F0              brlo L173
 0CC0           X73:
 0CC0 80E5              ldi R24,80
 0CC2 90E0              ldi R25,0
 0CC4 8017              cp R24,R16
 0CC6 9107              cpc R25,R17
 0CC8 08F0              brlo L173
 0CCA           X74:
 0CCA                   .dbline 702
 0CCA           ;       {
 0CCA                   .dbline 703
 0CCA           ;        goto Start;//在接收数据位时收到了同步位，跳到数据位解码起始位处
 0CCA 52CF              xjmp L136
 0CCC           L173:
 0CCC                   .dbline 706
 0CCC           ;       }
 0CCC           ;       else 
 0CCC           ;       {
 0CCC                   .dbline 707
 0CCC           ;        IntFlag=3;//接收数据位不完整
 0CCC 83E0              ldi R24,3
 0CCE 80931501          sts _IntFlag,R24
 0CD2                   .dbline 708
 0CD2           ;        goto End;//数据位来得太迟，退出
 0CD2 A4C0              xjmp L106
 0CD4           L172:
 0CD4           L170:
 0CD4                   .dbline 710
 0CD4           ;       }
 0CD4           ;   }   
 0CD4           L138:
 0CD4                   .dbline 651
 0CD4 80911601          lds R24,_Int_count
 0CD8 8150              subi R24,1
 0CDA 80931601          sts _Int_count,R24
 0CDE           L140:
 0CDE                   .dbline 651
 0CDE 80E0              ldi R24,0
 0CE0 20901601          lds R2,_Int_count
 0CE4 8215              cp R24,R2
 0CE6 08F4              brsh X86
 0CE8 70CF              xjmp L142
 0CEA           X86:
 0CEA           X75:
 0CEA                   .dbline 712
 0CEA           ;       
 0CEA           ;     R_dat=0;
 0CEA 2224              clr R2
 0CEC 3324              clr R3
 0CEE 30922F01          sts _R_dat+1,R3
 0CF2 20922E01          sts _R_dat,R2
 0CF6                   .dbline 713
 0CF6           ;     if(Rx[2])
 0CF6 20903401          lds R2,_Rx+2
 0CFA 2220              tst R2
 0CFC 49F0              breq L175
 0CFE           X76:
 0CFE                   .dbline 714
 0CFE           ;           R_dat|=0x01;
 0CFE 80912E01          lds R24,_R_dat
 0D02 90912F01          lds R25,_R_dat+1
 0D06 8160              ori R24,1
 0D08 90932F01          sts _R_dat+1,R25
 0D0C 80932E01          sts _R_dat,R24
 0D10           L175:
 0D10                   .dbline 715
 0D10           ;     if(Rx[3])
 0D10 20903501          lds R2,_Rx+3
 0D14 2220              tst R2
 0D16 49F0              breq L178
 0D18           X77:
 0D18                   .dbline 716
 0D18           ;           R_dat|=0x02;
 0D18 80912E01          lds R24,_R_dat
 0D1C 90912F01          lds R25,_R_dat+1
 0D20 8260              ori R24,2
 0D22 90932F01          sts _R_dat+1,R25
 0D26 80932E01          sts _R_dat,R24
 0D2A           L178:
 0D2A                   .dbline 717
 0D2A           ;     if(Rx[4])
 0D2A 20903601          lds R2,_Rx+4
 0D2E 2220              tst R2
 0D30 49F0              breq L181
 0D32           X78:
 0D32                   .dbline 718
 0D32           ;           R_dat|=0x04;
 0D32 80912E01          lds R24,_R_dat
 0D36 90912F01          lds R25,_R_dat+1
 0D3A 8460              ori R24,4
 0D3C 90932F01          sts _R_dat+1,R25
 0D40 80932E01          sts _R_dat,R24
 0D44           L181:
 0D44                   .dbline 719
 0D44           ;     if(Rx[5])
 0D44 20903701          lds R2,_Rx+5
 0D48 2220              tst R2
 0D4A 49F0              breq L184
 0D4C           X79:
 0D4C                   .dbline 720
 0D4C           ;           R_dat|=0x08;
 0D4C 80912E01          lds R24,_R_dat
 0D50 90912F01          lds R25,_R_dat+1
 0D54 8860              ori R24,8
 0D56 90932F01          sts _R_dat+1,R25
 0D5A 80932E01          sts _R_dat,R24
 0D5E           L184:
 0D5E                   .dbline 721
 0D5E           ;     if(Rx[6])
 0D5E 20903801          lds R2,_Rx+6
 0D62 2220              tst R2
 0D64 49F0              breq L187
 0D66           X80:
 0D66                   .dbline 722
 0D66           ;           R_dat|=0x10;
 0D66 80912E01          lds R24,_R_dat
 0D6A 90912F01          lds R25,_R_dat+1
 0D6E 8061              ori R24,16
 0D70 90932F01          sts _R_dat+1,R25
 0D74 80932E01          sts _R_dat,R24
 0D78           L187:
 0D78                   .dbline 723
 0D78           ;     if(Rx[7])
 0D78 20903901          lds R2,_Rx+7
 0D7C 2220              tst R2
 0D7E 49F0              breq L190
 0D80           X81:
 0D80                   .dbline 724
 0D80           ;           R_dat|=0x20;
 0D80 80912E01          lds R24,_R_dat
 0D84 90912F01          lds R25,_R_dat+1
 0D88 8062              ori R24,32
 0D8A 90932F01          sts _R_dat+1,R25
 0D8E 80932E01          sts _R_dat,R24
 0D92           L190:
 0D92                   .dbline 725
 0D92           ;     if(Rx[8])
 0D92 20903A01          lds R2,_Rx+8
 0D96 2220              tst R2
 0D98 49F0              breq L193
 0D9A           X82:
 0D9A                   .dbline 726
 0D9A           ;           R_dat|=0x40;
 0D9A 80912E01          lds R24,_R_dat
 0D9E 90912F01          lds R25,_R_dat+1
 0DA2 8064              ori R24,64
 0DA4 90932F01          sts _R_dat+1,R25
 0DA8 80932E01          sts _R_dat,R24
 0DAC           L193:
 0DAC                   .dbline 727
 0DAC           ;     if(Rx[9])
 0DAC 20903B01          lds R2,_Rx+9
 0DB0 2220              tst R2
 0DB2 49F0              breq L196
 0DB4           X83:
 0DB4                   .dbline 728
 0DB4           ;           R_dat|=0x80;
 0DB4 80912E01          lds R24,_R_dat
 0DB8 90912F01          lds R25,_R_dat+1
 0DBC 8068              ori R24,128
 0DBE 90932F01          sts _R_dat+1,R25
 0DC2 80932E01          sts _R_dat,R24
 0DC6           L196:
 0DC6                   .dbline 730
 0DC6           ;       
 0DC6           ;       Rx[0]=1;  
 0DC6 81E0              ldi R24,1
 0DC8 80933201          sts _Rx,R24
 0DCC                   .dbline 731
 0DCC           ;       for(Int_count=2;Int_count<10;Int_count++)  
 0DCC 82E0              ldi R24,2
 0DCE 80931601          sts _Int_count,R24
 0DD2 12C0              xjmp L202
 0DD4           L199:
 0DD4                   .dbline 732
 0DD4           ;        Rx[0]^=Rx[Int_count];  
 0DD4 80E0              ldi R24,<_Rx
 0DD6 90E0              ldi R25,>_Rx
 0DD8 E0911601          lds R30,_Int_count
 0DDC FF27              clr R31
 0DDE E80F              add R30,R24
 0DE0 F91F              adc R31,R25
 0DE2 2080              ldd R2,z+0
 0DE4 30903201          lds R3,_Rx
 0DE8 3224              eor R3,R2
 0DEA 30923201          sts _Rx,R3
 0DEE           L200:
 0DEE                   .dbline 731
 0DEE 80911601          lds R24,_Int_count
 0DF2 8F5F              subi R24,255    ; addi 1
 0DF4 80931601          sts _Int_count,R24
 0DF8           L202:
 0DF8                   .dbline 731
 0DF8 80911601          lds R24,_Int_count
 0DFC 8A30              cpi R24,10
 0DFE 50F3              brlo L199
 0E00           X84:
 0E00                   .dbline 734
 0E00           ;          
 0E00           ;       if(Rx[0]==Rx[1])
 0E00 20903301          lds R2,_Rx+1
 0E04 30903201          lds R3,_Rx
 0E08 3214              cp R3,R2
 0E0A 21F4              brne L203
 0E0C           X85:
 0E0C                   .dbline 735
 0E0C           ;        {
 0E0C                   .dbline 736
 0E0C           ;                IntFlag=1;//接收帧正常 
 0E0C 81E0              ldi R24,1
 0E0E 80931501          sts _IntFlag,R24
 0E12                   .dbline 737
 0E12           ;        }
 0E12 0FC0              xjmp L206
 0E14           L203:
 0E14                   .dbline 739
 0E14           ;       else           
 0E14           ;        {
 0E14                   .dbline 740
 0E14           ;                IntFlag=2;//接收帧校验错
 0E14 82E0              ldi R24,2
 0E16 80931501          sts _IntFlag,R24
 0E1A                   .dbline 741
 0E1A           ;        }
 0E1A                   .dbline 743
 0E1A           ;          
 0E1A           ;    goto End1;//只要接收到正常的同步头，不管校验位是对是错，都暂时不开放INT0中断
 0E1A 0BC0              xjmp L206
 0E1C           L106:
 0E1C                   .dbline 746
 0E1C           ;      
 0E1C           ; End:
 0E1C           ;  EIFR|=0x08;//清INT3中断标志 
 0E1C 88B7              in R24,0x38
 0E1E 8860              ori R24,8
 0E20 88BF              out 0x38,R24
 0E22                   .dbline 747
 0E22           ;  EICRA|=0xc0; //INT3上升沿触发 
 0E22 80916A00          lds R24,106
 0E26 806C              ori R24,192
 0E28 80936A00          sts 106,R24
 0E2C                   .dbline 748
 0E2C           ;  EIMSK|=0x08;//使能INT3中断 
 0E2C 89B7              in R24,0x39
 0E2E 8860              ori R24,8
 0E30 89BF              out 0x39,R24
 0E32           L206:
 0E32                   .dbline 750
 0E32           ; End1:
 0E32           ;    TCCR2 = 0x00; //stop
 0E32 2224              clr R2
 0E34 25BC              out 0x25,R2
 0E36                   .dbline 751
 0E36           ;    SREG|=0x80;//总中断使能;  
 0E36 7894              bset 7
 0E38                   .dbline -2
 0E38           L99:
 0E38                   .dbline 0 ; func end
 0E38 2990              ld R2,y+
 0E3A 2FBE              OUT 63,R2
 0E3C F991              ld R31,y+
 0E3E E991              ld R30,y+
 0E40 A991              ld R26,y+
 0E42 9991              ld R25,y+
 0E44 8991              ld R24,y+
 0E46 1991              ld R17,y+
 0E48 0991              ld R16,y+
 0E4A 3990              ld R3,y+
 0E4C 2990              ld R2,y+
 0E4E 1895              reti
 0E50                   .dbend
                        .area vector(rom, abs)
                        .org 92
 005C 0C942807          jmp _E_comp
                        .area text(rom, con, rel)
 0E50                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0E50                   .dbfunc e E_comp _E_comp fV
                        .even
 0E50           _E_comp::
 0E50 1A92              st -y,R1
 0E52 2A92              st -y,R2
 0E54 8A93              st -y,R24
 0E56 9A93              st -y,R25
 0E58 1FB6              IN R1,63
 0E5A 1A92              st -y,R1
 0E5C                   .dbline -1
 0E5C                   .dbline 757
 0E5C           ; }
 0E5C           ; 
 0E5C           ; 
 0E5C           ; #pragma interrupt_handler E_comp:24
 0E5C           ; void E_comp(void)  //模拟比较器中断,总线电压被拉低到28.5V后，立即停电机
 0E5C           ; { 
 0E5C                   .dbline 758
 0E5C           ;    if(PWM1_PIN==1)//收放电机欠压堵转
 0E5C 89B3              in R24,0x19
 0E5E 8270              andi R24,2
 0E60 8695              lsr R24
 0E62 8130              cpi R24,1
 0E64 49F4              brne L208
 0E66           X87:
 0E66                   .dbline 759
 0E66           ;    {
 0E66                   .dbline 760
 0E66           ;        Motor1Status.s.UnderVoltage=1;
 0E66 80914601          lds R24,_Motor1Status
 0E6A 90914701          lds R25,_Motor1Status+1
 0E6E 8062              ori R24,32
 0E70 90934701          sts _Motor1Status+1,R25
 0E74 80934601          sts _Motor1Status,R24
 0E78                   .dbline 761
 0E78           ;    }
 0E78           L208:
 0E78                   .dbline 762
 0E78           ;   if(PWM2_PIN==1)//调节电机欠压堵转
 0E78 80B1              in R24,0x0
 0E7A 8470              andi R24,4
 0E7C 8695              lsr R24
 0E7E 8695              lsr R24
 0E80 8130              cpi R24,1
 0E82 49F4              brne L210
 0E84           X88:
 0E84                   .dbline 763
 0E84           ;    { 
 0E84                   .dbline 764
 0E84           ;       Motor2Status.s.UnderVoltage=1;
 0E84 80914401          lds R24,_Motor2Status
 0E88 90914501          lds R25,_Motor2Status+1
 0E8C 8062              ori R24,32
 0E8E 90934501          sts _Motor2Status+1,R25
 0E92 80934401          sts _Motor2Status,R24
 0E96                   .dbline 765
 0E96           ;    } 
 0E96           L210:
 0E96                   .dbline 766
 0E96           ;    MOTORSTOP  //关电机 
 0E96                   .dbline 766
 0E96 8AB3              in R24,0x1a
 0E98 8760              ori R24,7
 0E9A 8ABB              out 0x1a,R24
 0E9C                   .dbline 766
 0E9C 8BB3              in R24,0x1b
 0E9E 8D7F              andi R24,253
 0EA0 8BBB              out 0x1b,R24
 0EA2                   .dbline 766
 0EA2 8BB3              in R24,0x1b
 0EA4 887F              andi R24,248
 0EA6 8BBB              out 0x1b,R24
 0EA8                   .dbline 766
 0EA8 80916100          lds R24,97
 0EAC 8760              ori R24,7
 0EAE 80936100          sts 97,R24
 0EB2                   .dbline 766
 0EB2 80916200          lds R24,98
 0EB6 8B7F              andi R24,251
 0EB8 80936200          sts 98,R24
 0EBC                   .dbline 766
 0EBC 80916200          lds R24,98
 0EC0 887F              andi R24,248
 0EC2 80936200          sts 98,R24
 0EC6                   .dbline 766
 0EC6 BF9A              sbi 0x17,7
 0EC8                   .dbline 766
 0EC8 88B3              in R24,0x18
 0ECA 8F77              andi R24,127
 0ECC 88BB              out 0x18,R24
 0ECE                   .dbline 766
 0ECE                   .dbline -2
 0ECE           L207:
 0ECE                   .dbline 0 ; func end
 0ECE 1990              ld R1,y+
 0ED0 1FBE              OUT 63,R1
 0ED2 9991              ld R25,y+
 0ED4 8991              ld R24,y+
 0ED6 2990              ld R2,y+
 0ED8 1990              ld R1,y+
 0EDA 1895              reti
 0EDC                   .dbend
 0EDC                   .dbfunc e SendManchester _SendManchester fV
 0EDC           ;              L -> R20
                        .even
 0EDC           _SendManchester::
 0EDC 4A93              st -y,R20
 0EDE                   .dbline -1
 0EDE                   .dbline 771
 0EDE           ;  
 0EDE           ; }
 0EDE           ; 
 0EDE           ; void SendManchester(void) //曼码发送程序,总耗时最大约120+560+8400+720=9800us，最小约120+560+5040+720=6440us
 0EDE           ; { //每位80us
 0EDE                   .dbline 776
 0EDE           ;  //同步：1高6低
 0EDE           ;  //1:    1高2低
 0EDE           ;  //0：   1高4低  
 0EDE           ;   unsigned char L;
 0EDE           ;   SREG&=0x7f;//关总中断 
 0EDE 8FB7              in R24,0x3f
 0EE0 8F77              andi R24,127
 0EE2 8FBF              out 0x3f,R24
 0EE4                   .dbline 778
 0EE4           ;   
 0EE4           ;     M1_H //先给总线放电，耗时约120us
 0EE4 929A              sbi 0x12,2
 0EE6                   .dbline 782
 0EE6           ;       
 0EE6           ;   //模拟同步头数据
 0EE6           ;       //4位命令
 0EE6           ;       T_dat_buf[21]=(T_com&0x08)>>3;
 0EE6 80912D01          lds R24,_T_com
 0EEA 8870              andi R24,8
 0EEC 8695              lsr R24
 0EEE 8695              lsr R24
 0EF0 8695              lsr R24
 0EF2 80932C01          sts _T_dat_buf+21,R24
 0EF6                   .dbline 783
 0EF6           ;       T_dat_buf[20]=(T_com&0x04)>>2;
 0EF6 80912D01          lds R24,_T_com
 0EFA 8470              andi R24,4
 0EFC 8695              lsr R24
 0EFE 8695              lsr R24
 0F00 80932B01          sts _T_dat_buf+20,R24
 0F04                   .dbline 784
 0F04           ;       T_dat_buf[19]=(T_com&0x02)>>1;
 0F04 80912D01          lds R24,_T_com
 0F08 8270              andi R24,2
 0F0A 8695              lsr R24
 0F0C 80932A01          sts _T_dat_buf+19,R24
 0F10                   .dbline 785
 0F10           ;       T_dat_buf[18]=T_com&0x01;
 0F10 80912D01          lds R24,_T_com
 0F14 8170              andi R24,1
 0F16 80932901          sts _T_dat_buf+18,R24
 0F1A                   .dbline 787
 0F1A           ;       //16位数据
 0F1A           ;       T_dat_buf[17]=(T_dat&0x8000)>>15;
 0F1A 2FE0              ldi R18,15
 0F1C 30E0              ldi R19,0
 0F1E 00913001          lds R16,_T_dat
 0F22 10913101          lds R17,_T_dat+1
 0F26 0070              andi R16,0
 0F28 1078              andi R17,128
 0F2A 0E940000          xcall lsr16
 0F2E 00932801          sts _T_dat_buf+17,R16
 0F32                   .dbline 788
 0F32           ;       T_dat_buf[16]=(T_dat&0x4000)>>14;
 0F32 2EE0              ldi R18,14
 0F34 30E0              ldi R19,0
 0F36 00913001          lds R16,_T_dat
 0F3A 10913101          lds R17,_T_dat+1
 0F3E 0070              andi R16,0
 0F40 1074              andi R17,64
 0F42 0E940000          xcall lsr16
 0F46 00932701          sts _T_dat_buf+16,R16
 0F4A                   .dbline 789
 0F4A           ;       T_dat_buf[15]=(T_dat&0x2000)>>13;
 0F4A 2DE0              ldi R18,13
 0F4C 30E0              ldi R19,0
 0F4E 00913001          lds R16,_T_dat
 0F52 10913101          lds R17,_T_dat+1
 0F56 0070              andi R16,0
 0F58 1072              andi R17,32
 0F5A 0E940000          xcall lsr16
 0F5E 00932601          sts _T_dat_buf+15,R16
 0F62                   .dbline 790
 0F62           ;       T_dat_buf[14]=(T_dat&0x1000)>>12;
 0F62 2CE0              ldi R18,12
 0F64 30E0              ldi R19,0
 0F66 00913001          lds R16,_T_dat
 0F6A 10913101          lds R17,_T_dat+1
 0F6E 0070              andi R16,0
 0F70 1071              andi R17,16
 0F72 0E940000          xcall lsr16
 0F76 00932501          sts _T_dat_buf+14,R16
 0F7A                   .dbline 791
 0F7A           ;       T_dat_buf[13]=(T_dat&0x0800)>>11;
 0F7A 2BE0              ldi R18,11
 0F7C 30E0              ldi R19,0
 0F7E 00913001          lds R16,_T_dat
 0F82 10913101          lds R17,_T_dat+1
 0F86 0070              andi R16,0
 0F88 1870              andi R17,8
 0F8A 0E940000          xcall lsr16
 0F8E 00932401          sts _T_dat_buf+13,R16
 0F92                   .dbline 792
 0F92           ;     T_dat_buf[12]=(T_dat&0x0400)>>10;
 0F92 2AE0              ldi R18,10
 0F94 30E0              ldi R19,0
 0F96 00913001          lds R16,_T_dat
 0F9A 10913101          lds R17,_T_dat+1
 0F9E 0070              andi R16,0
 0FA0 1470              andi R17,4
 0FA2 0E940000          xcall lsr16
 0FA6 00932301          sts _T_dat_buf+12,R16
 0FAA                   .dbline 793
 0FAA           ;     T_dat_buf[11]=(T_dat&0x0200)>>9;
 0FAA 29E0              ldi R18,9
 0FAC 30E0              ldi R19,0
 0FAE 00913001          lds R16,_T_dat
 0FB2 10913101          lds R17,_T_dat+1
 0FB6 0070              andi R16,0
 0FB8 1270              andi R17,2
 0FBA 0E940000          xcall lsr16
 0FBE 00932201          sts _T_dat_buf+11,R16
 0FC2                   .dbline 794
 0FC2           ;       T_dat_buf[10]=(T_dat&0x0100)>>8;
 0FC2 80913001          lds R24,_T_dat
 0FC6 90913101          lds R25,_T_dat+1
 0FCA 8070              andi R24,0
 0FCC 9170              andi R25,1
 0FCE 1C01              movw R2,R24
 0FD0 232C              mov R2,R3
 0FD2 3324              clr R3
 0FD4 20922101          sts _T_dat_buf+10,R2
 0FD8                   .dbline 795
 0FD8           ;       T_dat_buf[9]=(T_dat&0x0080)>>7;
 0FD8 27E0              ldi R18,7
 0FDA 30E0              ldi R19,0
 0FDC 00913001          lds R16,_T_dat
 0FE0 10913101          lds R17,_T_dat+1
 0FE4 0078              andi R16,128
 0FE6 1070              andi R17,0
 0FE8 0E940000          xcall lsr16
 0FEC 00932001          sts _T_dat_buf+9,R16
 0FF0                   .dbline 796
 0FF0           ;       T_dat_buf[8]=(T_dat&0x0040)>>6;
 0FF0 26E0              ldi R18,6
 0FF2 30E0              ldi R19,0
 0FF4 00913001          lds R16,_T_dat
 0FF8 10913101          lds R17,_T_dat+1
 0FFC 0074              andi R16,64
 0FFE 1070              andi R17,0
 1000 0E940000          xcall lsr16
 1004 00931F01          sts _T_dat_buf+8,R16
 1008                   .dbline 797
 1008           ;       T_dat_buf[7]=(T_dat&0x0020)>>5;
 1008 25E0              ldi R18,5
 100A 30E0              ldi R19,0
 100C 00913001          lds R16,_T_dat
 1010 10913101          lds R17,_T_dat+1
 1014 0072              andi R16,32
 1016 1070              andi R17,0
 1018 0E940000          xcall lsr16
 101C 00931E01          sts _T_dat_buf+7,R16
 1020                   .dbline 798
 1020           ;       T_dat_buf[6]=(T_dat&0x0010)>>4;
 1020 80913001          lds R24,_T_dat
 1024 90913101          lds R25,_T_dat+1
 1028 8071              andi R24,16
 102A 9070              andi R25,0
 102C 1C01              movw R2,R24
 102E 3694              lsr R3
 1030 2794              ror R2
 1032 3694              lsr R3
 1034 2794              ror R2
 1036 3694              lsr R3
 1038 2794              ror R2
 103A 3694              lsr R3
 103C 2794              ror R2
 103E 20921D01          sts _T_dat_buf+6,R2
 1042                   .dbline 799
 1042           ;       T_dat_buf[5]=(T_dat&0x0008)>>3;
 1042 80913001          lds R24,_T_dat
 1046 90913101          lds R25,_T_dat+1
 104A 8870              andi R24,8
 104C 9070              andi R25,0
 104E 1C01              movw R2,R24
 1050 3694              lsr R3
 1052 2794              ror R2
 1054 3694              lsr R3
 1056 2794              ror R2
 1058 3694              lsr R3
 105A 2794              ror R2
 105C 20921C01          sts _T_dat_buf+5,R2
 1060                   .dbline 800
 1060           ;       T_dat_buf[4]=(T_dat&0x0004)>>2;
 1060 80913001          lds R24,_T_dat
 1064 90913101          lds R25,_T_dat+1
 1068 8470              andi R24,4
 106A 9070              andi R25,0
 106C 1C01              movw R2,R24
 106E 3694              lsr R3
 1070 2794              ror R2
 1072 3694              lsr R3
 1074 2794              ror R2
 1076 20921B01          sts _T_dat_buf+4,R2
 107A                   .dbline 801
 107A           ;       T_dat_buf[3]=(T_dat&0x0002)>>1;
 107A 80913001          lds R24,_T_dat
 107E 90913101          lds R25,_T_dat+1
 1082 8270              andi R24,2
 1084 9070              andi R25,0
 1086 1C01              movw R2,R24
 1088 3694              lsr R3
 108A 2794              ror R2
 108C 20921A01          sts _T_dat_buf+3,R2
 1090                   .dbline 802
 1090           ;       T_dat_buf[2]=T_dat&0x0001;
 1090 80913001          lds R24,_T_dat
 1094 90913101          lds R25,_T_dat+1
 1098 8170              andi R24,1
 109A 9070              andi R25,0
 109C 80931901          sts _T_dat_buf+2,R24
 10A0                   .dbline 804
 10A0           ;       //计算校验位，奇校验
 10A0           ;       T_dat_buf[1]=1;
 10A0 81E0              ldi R24,1
 10A2 80931801          sts _T_dat_buf+1,R24
 10A6                   .dbline 805
 10A6           ;       for(L=2;L<22;L++)
 10A6 42E0              ldi R20,2
 10A8 0DC0              xjmp L237
 10AA           L234:
 10AA                   .dbline 806
 10AA           ;               {T_dat_buf[1]^=T_dat_buf[L];}
 10AA                   .dbline 806
 10AA 80E0              ldi R24,<_T_dat_buf
 10AC 90E0              ldi R25,>_T_dat_buf
 10AE E42F              mov R30,R20
 10B0 FF27              clr R31
 10B2 E80F              add R30,R24
 10B4 F91F              adc R31,R25
 10B6 2080              ldd R2,z+0
 10B8 30901801          lds R3,_T_dat_buf+1
 10BC 3224              eor R3,R2
 10BE 30921801          sts _T_dat_buf+1,R3
 10C2                   .dbline 806
 10C2           L235:
 10C2                   .dbline 805
 10C2 4395              inc R20
 10C4           L237:
 10C4                   .dbline 805
 10C4 4631              cpi R20,22
 10C6 88F3              brlo L234
 10C8           X89:
 10C8                   .dbline 807
 10C8           ;     DELAY80
 10C8 2224              clr R2
 10CA 3324              clr R3
 10CC 30921401          sts _Tt+1,R3
 10D0 20921301          sts _Tt,R2
 10D4 09C0              xjmp L242
 10D6           L239:
 10D6                   .dbline 807
 10D6           L240:
 10D6                   .dbline 807
 10D6 80911301          lds R24,_Tt
 10DA 90911401          lds R25,_Tt+1
 10DE 0196              adiw R24,1
 10E0 90931401          sts _Tt+1,R25
 10E4 80931301          sts _Tt,R24
 10E8           L242:
 10E8                   .dbline 807
 10E8 80911301          lds R24,_Tt
 10EC 90911401          lds R25,_Tt+1
 10F0 8032              cpi R24,32
 10F2 E0E0              ldi R30,0
 10F4 9E07              cpc R25,R30
 10F6 78F3              brlo L239
 10F8           X90:
 10F8                   .dbline 808
 10F8           ;     M1_L
 10F8 82B3              in R24,0x12
 10FA 8B7F              andi R24,251
 10FC 82BB              out 0x12,R24
 10FE                   .dbline 809
 10FE           ;       DELAY40
 10FE 2224              clr R2
 1100 3324              clr R3
 1102 30921401          sts _Tt+1,R3
 1106 20921301          sts _Tt,R2
 110A 09C0              xjmp L246
 110C           L243:
 110C                   .dbline 809
 110C           L244:
 110C                   .dbline 809
 110C 80911301          lds R24,_Tt
 1110 90911401          lds R25,_Tt+1
 1114 0196              adiw R24,1
 1116 90931401          sts _Tt+1,R25
 111A 80931301          sts _Tt,R24
 111E           L246:
 111E                   .dbline 809
 111E 80911301          lds R24,_Tt
 1122 90911401          lds R25,_Tt+1
 1126 8031              cpi R24,16
 1128 E0E0              ldi R30,0
 112A 9E07              cpc R25,R30
 112C 78F3              brlo L243
 112E           X91:
 112E                   .dbline 814
 112E           ;    
 112E           ;    
 112E           ;       //同步头,560us
 112E           ;       //充电开始，高80us       
 112E           ;       M2_H    
 112E 919A              sbi 0x12,1
 1130                   .dbline 815
 1130           ;       DELAY80
 1130 2224              clr R2
 1132 3324              clr R3
 1134 30921401          sts _Tt+1,R3
 1138 20921301          sts _Tt,R2
 113C 09C0              xjmp L250
 113E           L247:
 113E                   .dbline 815
 113E           L248:
 113E                   .dbline 815
 113E 80911301          lds R24,_Tt
 1142 90911401          lds R25,_Tt+1
 1146 0196              adiw R24,1
 1148 90931401          sts _Tt+1,R25
 114C 80931301          sts _Tt,R24
 1150           L250:
 1150                   .dbline 815
 1150 80911301          lds R24,_Tt
 1154 90911401          lds R25,_Tt+1
 1158 8032              cpi R24,32
 115A E0E0              ldi R30,0
 115C 9E07              cpc R25,R30
 115E 78F3              brlo L247
 1160           X92:
 1160                   .dbline 816
 1160           ;       M2_L   //充电结束       
 1160 82B3              in R24,0x12
 1162 8D7F              andi R24,253
 1164 82BB              out 0x12,R24
 1166                   .dbline 818
 1166           ;       //放电开始，低80*6=480us
 1166           ;       DELAY40
 1166 2224              clr R2
 1168 3324              clr R3
 116A 30921401          sts _Tt+1,R3
 116E 20921301          sts _Tt,R2
 1172 09C0              xjmp L254
 1174           L251:
 1174                   .dbline 818
 1174           L252:
 1174                   .dbline 818
 1174 80911301          lds R24,_Tt
 1178 90911401          lds R25,_Tt+1
 117C 0196              adiw R24,1
 117E 90931401          sts _Tt+1,R25
 1182 80931301          sts _Tt,R24
 1186           L254:
 1186                   .dbline 818
 1186 80911301          lds R24,_Tt
 118A 90911401          lds R25,_Tt+1
 118E 8031              cpi R24,16
 1190 E0E0              ldi R30,0
 1192 9E07              cpc R25,R30
 1194 78F3              brlo L251
 1196           X93:
 1196                   .dbline 819
 1196           ;       M1_H    
 1196 929A              sbi 0x12,2
 1198                   .dbline 820
 1198           ;     DELAY80
 1198 2224              clr R2
 119A 3324              clr R3
 119C 30921401          sts _Tt+1,R3
 11A0 20921301          sts _Tt,R2
 11A4 09C0              xjmp L258
 11A6           L255:
 11A6                   .dbline 820
 11A6           L256:
 11A6                   .dbline 820
 11A6 80911301          lds R24,_Tt
 11AA 90911401          lds R25,_Tt+1
 11AE 0196              adiw R24,1
 11B0 90931401          sts _Tt+1,R25
 11B4 80931301          sts _Tt,R24
 11B8           L258:
 11B8                   .dbline 820
 11B8 80911301          lds R24,_Tt
 11BC 90911401          lds R25,_Tt+1
 11C0 8032              cpi R24,32
 11C2 E0E0              ldi R30,0
 11C4 9E07              cpc R25,R30
 11C6 78F3              brlo L255
 11C8           X94:
 11C8                   .dbline 821
 11C8           ;       DELAY80
 11C8 2224              clr R2
 11CA 3324              clr R3
 11CC 30921401          sts _Tt+1,R3
 11D0 20921301          sts _Tt,R2
 11D4 09C0              xjmp L262
 11D6           L259:
 11D6                   .dbline 821
 11D6           L260:
 11D6                   .dbline 821
 11D6 80911301          lds R24,_Tt
 11DA 90911401          lds R25,_Tt+1
 11DE 0196              adiw R24,1
 11E0 90931401          sts _Tt+1,R25
 11E4 80931301          sts _Tt,R24
 11E8           L262:
 11E8                   .dbline 821
 11E8 80911301          lds R24,_Tt
 11EC 90911401          lds R25,_Tt+1
 11F0 8032              cpi R24,32
 11F2 E0E0              ldi R30,0
 11F4 9E07              cpc R25,R30
 11F6 78F3              brlo L259
 11F8           X95:
 11F8                   .dbline 822
 11F8           ;       DELAY80
 11F8 2224              clr R2
 11FA 3324              clr R3
 11FC 30921401          sts _Tt+1,R3
 1200 20921301          sts _Tt,R2
 1204 09C0              xjmp L266
 1206           L263:
 1206                   .dbline 822
 1206           L264:
 1206                   .dbline 822
 1206 80911301          lds R24,_Tt
 120A 90911401          lds R25,_Tt+1
 120E 0196              adiw R24,1
 1210 90931401          sts _Tt+1,R25
 1214 80931301          sts _Tt,R24
 1218           L266:
 1218                   .dbline 822
 1218 80911301          lds R24,_Tt
 121C 90911401          lds R25,_Tt+1
 1220 8032              cpi R24,32
 1222 E0E0              ldi R30,0
 1224 9E07              cpc R25,R30
 1226 78F3              brlo L263
 1228           X96:
 1228                   .dbline 823
 1228           ;       DELAY80
 1228 2224              clr R2
 122A 3324              clr R3
 122C 30921401          sts _Tt+1,R3
 1230 20921301          sts _Tt,R2
 1234 09C0              xjmp L270
 1236           L267:
 1236                   .dbline 823
 1236           L268:
 1236                   .dbline 823
 1236 80911301          lds R24,_Tt
 123A 90911401          lds R25,_Tt+1
 123E 0196              adiw R24,1
 1240 90931401          sts _Tt+1,R25
 1244 80931301          sts _Tt,R24
 1248           L270:
 1248                   .dbline 823
 1248 80911301          lds R24,_Tt
 124C 90911401          lds R25,_Tt+1
 1250 8032              cpi R24,32
 1252 E0E0              ldi R30,0
 1254 9E07              cpc R25,R30
 1256 78F3              brlo L267
 1258           X97:
 1258                   .dbline 824
 1258           ;       DELAY80
 1258 2224              clr R2
 125A 3324              clr R3
 125C 30921401          sts _Tt+1,R3
 1260 20921301          sts _Tt,R2
 1264 09C0              xjmp L274
 1266           L271:
 1266                   .dbline 824
 1266           L272:
 1266                   .dbline 824
 1266 80911301          lds R24,_Tt
 126A 90911401          lds R25,_Tt+1
 126E 0196              adiw R24,1
 1270 90931401          sts _Tt+1,R25
 1274 80931301          sts _Tt,R24
 1278           L274:
 1278                   .dbline 824
 1278 80911301          lds R24,_Tt
 127C 90911401          lds R25,_Tt+1
 1280 8032              cpi R24,32
 1282 E0E0              ldi R30,0
 1284 9E07              cpc R25,R30
 1286 78F3              brlo L271
 1288           X98:
 1288                   .dbline 825
 1288           ;       M1_L    
 1288 82B3              in R24,0x12
 128A 8B7F              andi R24,251
 128C 82BB              out 0x12,R24
 128E                   .dbline 826
 128E           ;       DELAY40  //放电结束
 128E 2224              clr R2
 1290 3324              clr R3
 1292 30921401          sts _Tt+1,R3
 1296 20921301          sts _Tt,R2
 129A 09C0              xjmp L278
 129C           L275:
 129C                   .dbline 826
 129C           L276:
 129C                   .dbline 826
 129C 80911301          lds R24,_Tt
 12A0 90911401          lds R25,_Tt+1
 12A4 0196              adiw R24,1
 12A6 90931401          sts _Tt+1,R25
 12AA 80931301          sts _Tt,R24
 12AE           L278:
 12AE                   .dbline 826
 12AE 80911301          lds R24,_Tt
 12B2 90911401          lds R25,_Tt+1
 12B6 8031              cpi R24,16
 12B8 E0E0              ldi R30,0
 12BA 9E07              cpc R25,R30
 12BC 78F3              brlo L275
 12BE           X99:
 12BE                   .dbline 829
 12BE           ;       
 12BE           ;      //连续发送 ,全0时每位400us，共8400us，全1时每位240us，共5040us
 12BE           ;       for(L=21;L>0;L--)
 12BE 45E1              ldi R20,21
 12C0 0CC1              xjmp L282
 12C2           L279:
 12C2                   .dbline 830
 12C2           ;       {   
 12C2                   .dbline 831
 12C2           ;         if(T_dat_buf[L])//1，一高二低
 12C2 80E0              ldi R24,<_T_dat_buf
 12C4 90E0              ldi R25,>_T_dat_buf
 12C6 E42F              mov R30,R20
 12C8 FF27              clr R31
 12CA E80F              add R30,R24
 12CC F91F              adc R31,R25
 12CE 2080              ldd R2,z+0
 12D0 2220              tst R2
 12D2 09F4              brne X116
 12D4 69C0              xjmp L283
 12D6           X116:
 12D6           X100:
 12D6                   .dbline 832
 12D6           ;         {                             
 12D6                   .dbline 833
 12D6           ;               M2_H 
 12D6 919A              sbi 0x12,1
 12D8                   .dbline 834
 12D8           ;               DELAY80
 12D8 2224              clr R2
 12DA 3324              clr R3
 12DC 30921401          sts _Tt+1,R3
 12E0 20921301          sts _Tt,R2
 12E4 09C0              xjmp L288
 12E6           L285:
 12E6                   .dbline 834
 12E6           L286:
 12E6                   .dbline 834
 12E6 80911301          lds R24,_Tt
 12EA 90911401          lds R25,_Tt+1
 12EE 0196              adiw R24,1
 12F0 90931401          sts _Tt+1,R25
 12F4 80931301          sts _Tt,R24
 12F8           L288:
 12F8                   .dbline 834
 12F8 80911301          lds R24,_Tt
 12FC 90911401          lds R25,_Tt+1
 1300 8032              cpi R24,32
 1302 E0E0              ldi R30,0
 1304 9E07              cpc R25,R30
 1306 78F3              brlo L285
 1308           X101:
 1308                   .dbline 835
 1308           ;               M2_L
 1308 82B3              in R24,0x12
 130A 8D7F              andi R24,253
 130C 82BB              out 0x12,R24
 130E                   .dbline 836
 130E           ;                       DELAY40
 130E 2224              clr R2
 1310 3324              clr R3
 1312 30921401          sts _Tt+1,R3
 1316 20921301          sts _Tt,R2
 131A 09C0              xjmp L292
 131C           L289:
 131C                   .dbline 836
 131C           L290:
 131C                   .dbline 836
 131C 80911301          lds R24,_Tt
 1320 90911401          lds R25,_Tt+1
 1324 0196              adiw R24,1
 1326 90931401          sts _Tt+1,R25
 132A 80931301          sts _Tt,R24
 132E           L292:
 132E                   .dbline 836
 132E 80911301          lds R24,_Tt
 1332 90911401          lds R25,_Tt+1
 1336 8031              cpi R24,16
 1338 E0E0              ldi R30,0
 133A 9E07              cpc R25,R30
 133C 78F3              brlo L289
 133E           X102:
 133E                   .dbline 837
 133E           ;               M1_H       
 133E 929A              sbi 0x12,2
 1340                   .dbline 838
 1340           ;               DELAY80
 1340 2224              clr R2
 1342 3324              clr R3
 1344 30921401          sts _Tt+1,R3
 1348 20921301          sts _Tt,R2
 134C 09C0              xjmp L296
 134E           L293:
 134E                   .dbline 838
 134E           L294:
 134E                   .dbline 838
 134E 80911301          lds R24,_Tt
 1352 90911401          lds R25,_Tt+1
 1356 0196              adiw R24,1
 1358 90931401          sts _Tt+1,R25
 135C 80931301          sts _Tt,R24
 1360           L296:
 1360                   .dbline 838
 1360 80911301          lds R24,_Tt
 1364 90911401          lds R25,_Tt+1
 1368 8032              cpi R24,32
 136A E0E0              ldi R30,0
 136C 9E07              cpc R25,R30
 136E 78F3              brlo L293
 1370           X103:
 1370                   .dbline 839
 1370           ;                       M1_L
 1370 82B3              in R24,0x12
 1372 8B7F              andi R24,251
 1374 82BB              out 0x12,R24
 1376                   .dbline 840
 1376           ;                       DELAY40
 1376 2224              clr R2
 1378 3324              clr R3
 137A 30921401          sts _Tt+1,R3
 137E 20921301          sts _Tt,R2
 1382 09C0              xjmp L300
 1384           L297:
 1384                   .dbline 840
 1384           L298:
 1384                   .dbline 840
 1384 80911301          lds R24,_Tt
 1388 90911401          lds R25,_Tt+1
 138C 0196              adiw R24,1
 138E 90931401          sts _Tt+1,R25
 1392 80931301          sts _Tt,R24
 1396           L300:
 1396                   .dbline 840
 1396 80911301          lds R24,_Tt
 139A 90911401          lds R25,_Tt+1
 139E 8031              cpi R24,16
 13A0 E0E0              ldi R30,0
 13A2 9E07              cpc R25,R30
 13A4 78F3              brlo L297
 13A6           X104:
 13A6                   .dbline 841
 13A6           ;               } 
 13A6 98C0              xjmp L284
 13A8           L283:
 13A8                   .dbline 843
 13A8           ;        else           //0，一高四低                                           
 13A8           ;         {
 13A8                   .dbline 844
 13A8           ;                       M2_H 
 13A8 919A              sbi 0x12,1
 13AA                   .dbline 845
 13AA           ;               DELAY80
 13AA 2224              clr R2
 13AC 3324              clr R3
 13AE 30921401          sts _Tt+1,R3
 13B2 20921301          sts _Tt,R2
 13B6 09C0              xjmp L304
 13B8           L301:
 13B8                   .dbline 845
 13B8           L302:
 13B8                   .dbline 845
 13B8 80911301          lds R24,_Tt
 13BC 90911401          lds R25,_Tt+1
 13C0 0196              adiw R24,1
 13C2 90931401          sts _Tt+1,R25
 13C6 80931301          sts _Tt,R24
 13CA           L304:
 13CA                   .dbline 845
 13CA 80911301          lds R24,_Tt
 13CE 90911401          lds R25,_Tt+1
 13D2 8032              cpi R24,32
 13D4 E0E0              ldi R30,0
 13D6 9E07              cpc R25,R30
 13D8 78F3              brlo L301
 13DA           X105:
 13DA                   .dbline 846
 13DA           ;               M2_L
 13DA 82B3              in R24,0x12
 13DC 8D7F              andi R24,253
 13DE 82BB              out 0x12,R24
 13E0                   .dbline 847
 13E0           ;                       DELAY40
 13E0 2224              clr R2
 13E2 3324              clr R3
 13E4 30921401          sts _Tt+1,R3
 13E8 20921301          sts _Tt,R2
 13EC 09C0              xjmp L308
 13EE           L305:
 13EE                   .dbline 847
 13EE           L306:
 13EE                   .dbline 847
 13EE 80911301          lds R24,_Tt
 13F2 90911401          lds R25,_Tt+1
 13F6 0196              adiw R24,1
 13F8 90931401          sts _Tt+1,R25
 13FC 80931301          sts _Tt,R24
 1400           L308:
 1400                   .dbline 847
 1400 80911301          lds R24,_Tt
 1404 90911401          lds R25,_Tt+1
 1408 8031              cpi R24,16
 140A E0E0              ldi R30,0
 140C 9E07              cpc R25,R30
 140E 78F3              brlo L305
 1410           X106:
 1410                   .dbline 848
 1410           ;               M1_H       
 1410 929A              sbi 0x12,2
 1412                   .dbline 849
 1412           ;               DELAY80
 1412 2224              clr R2
 1414 3324              clr R3
 1416 30921401          sts _Tt+1,R3
 141A 20921301          sts _Tt,R2
 141E 09C0              xjmp L312
 1420           L309:
 1420                   .dbline 849
 1420           L310:
 1420                   .dbline 849
 1420 80911301          lds R24,_Tt
 1424 90911401          lds R25,_Tt+1
 1428 0196              adiw R24,1
 142A 90931401          sts _Tt+1,R25
 142E 80931301          sts _Tt,R24
 1432           L312:
 1432                   .dbline 849
 1432 80911301          lds R24,_Tt
 1436 90911401          lds R25,_Tt+1
 143A 8032              cpi R24,32
 143C E0E0              ldi R30,0
 143E 9E07              cpc R25,R30
 1440 78F3              brlo L309
 1442           X107:
 1442                   .dbline 850
 1442           ;                       DELAY80
 1442 2224              clr R2
 1444 3324              clr R3
 1446 30921401          sts _Tt+1,R3
 144A 20921301          sts _Tt,R2
 144E 09C0              xjmp L316
 1450           L313:
 1450                   .dbline 850
 1450           L314:
 1450                   .dbline 850
 1450 80911301          lds R24,_Tt
 1454 90911401          lds R25,_Tt+1
 1458 0196              adiw R24,1
 145A 90931401          sts _Tt+1,R25
 145E 80931301          sts _Tt,R24
 1462           L316:
 1462                   .dbline 850
 1462 80911301          lds R24,_Tt
 1466 90911401          lds R25,_Tt+1
 146A 8032              cpi R24,32
 146C E0E0              ldi R30,0
 146E 9E07              cpc R25,R30
 1470 78F3              brlo L313
 1472           X108:
 1472                   .dbline 851
 1472           ;                       DELAY80
 1472 2224              clr R2
 1474 3324              clr R3
 1476 30921401          sts _Tt+1,R3
 147A 20921301          sts _Tt,R2
 147E 09C0              xjmp L320
 1480           L317:
 1480                   .dbline 851
 1480           L318:
 1480                   .dbline 851
 1480 80911301          lds R24,_Tt
 1484 90911401          lds R25,_Tt+1
 1488 0196              adiw R24,1
 148A 90931401          sts _Tt+1,R25
 148E 80931301          sts _Tt,R24
 1492           L320:
 1492                   .dbline 851
 1492 80911301          lds R24,_Tt
 1496 90911401          lds R25,_Tt+1
 149A 8032              cpi R24,32
 149C E0E0              ldi R30,0
 149E 9E07              cpc R25,R30
 14A0 78F3              brlo L317
 14A2           X109:
 14A2                   .dbline 852
 14A2           ;                       M1_L
 14A2 82B3              in R24,0x12
 14A4 8B7F              andi R24,251
 14A6 82BB              out 0x12,R24
 14A8                   .dbline 853
 14A8           ;                       DELAY40
 14A8 2224              clr R2
 14AA 3324              clr R3
 14AC 30921401          sts _Tt+1,R3
 14B0 20921301          sts _Tt,R2
 14B4 09C0              xjmp L324
 14B6           L321:
 14B6                   .dbline 853
 14B6           L322:
 14B6                   .dbline 853
 14B6 80911301          lds R24,_Tt
 14BA 90911401          lds R25,_Tt+1
 14BE 0196              adiw R24,1
 14C0 90931401          sts _Tt+1,R25
 14C4 80931301          sts _Tt,R24
 14C8           L324:
 14C8                   .dbline 853
 14C8 80911301          lds R24,_Tt
 14CC 90911401          lds R25,_Tt+1
 14D0 8031              cpi R24,16
 14D2 E0E0              ldi R30,0
 14D4 9E07              cpc R25,R30
 14D6 78F3              brlo L321
 14D8           X110:
 14D8                   .dbline 854
 14D8           ;               }
 14D8           L284:
 14D8                   .dbline 855
 14D8           ;     }            
 14D8           L280:
 14D8                   .dbline 829
 14D8 4A95              dec R20
 14DA           L282:
 14DA                   .dbline 829
 14DA 80E0              ldi R24,0
 14DC 8417              cp R24,R20
 14DE 08F4              brsh X117
 14E0 F0CE              xjmp L279
 14E2           X117:
 14E2           X111:
 14E2                   .dbline 857
 14E2           ;                  //结束位，一高八低，720us
 14E2           ;                   M2_H 
 14E2 919A              sbi 0x12,1
 14E4                   .dbline 858
 14E4           ;                   DELAY80
 14E4 2224              clr R2
 14E6 3324              clr R3
 14E8 30921401          sts _Tt+1,R3
 14EC 20921301          sts _Tt,R2
 14F0 09C0              xjmp L328
 14F2           L325:
 14F2                   .dbline 858
 14F2           L326:
 14F2                   .dbline 858
 14F2 80911301          lds R24,_Tt
 14F6 90911401          lds R25,_Tt+1
 14FA 0196              adiw R24,1
 14FC 90931401          sts _Tt+1,R25
 1500 80931301          sts _Tt,R24
 1504           L328:
 1504                   .dbline 858
 1504 80911301          lds R24,_Tt
 1508 90911401          lds R25,_Tt+1
 150C 8032              cpi R24,32
 150E E0E0              ldi R30,0
 1510 9E07              cpc R25,R30
 1512 78F3              brlo L325
 1514           X112:
 1514                   .dbline 859
 1514           ;               M2_L
 1514 82B3              in R24,0x12
 1516 8D7F              andi R24,253
 1518 82BB              out 0x12,R24
 151A                   .dbline 860
 151A           ;                       DELAY40/*
 151A 2224              clr R2
 151C 3324              clr R3
 151E 30921401          sts _Tt+1,R3
 1522 20921301          sts _Tt,R2
 1526 09C0              xjmp L332
 1528           L329:
 1528                   .dbline 860
 1528           L330:
 1528                   .dbline 860
 1528 80911301          lds R24,_Tt
 152C 90911401          lds R25,_Tt+1
 1530 0196              adiw R24,1
 1532 90931401          sts _Tt+1,R25
 1536 80931301          sts _Tt,R24
 153A           L332:
 153A                   .dbline 860
 153A 80911301          lds R24,_Tt
 153E 90911401          lds R25,_Tt+1
 1542 8031              cpi R24,16
 1544 E0E0              ldi R30,0
 1546 9E07              cpc R25,R30
 1548 78F3              brlo L329
 154A           X113:
 154A                   .dbline 872
 154A           ;               M1_H       
 154A           ;               DELAY80
 154A           ;                       DELAY80
 154A           ;                       DELAY80
 154A           ;                       DELAY80
 154A           ;                       DELAY80
 154A           ;                       DELAY80
 154A           ;                       DELAY80
 154A           ;                       M1_L
 154A           ;                       DELAY40*/
 154A           ;                       
 154A           ;                       for(L=0;L>50;L++)
 154A 4427              clr R20
 154C 19C0              xjmp L336
 154E           L333:
 154E                   .dbline 873
 154E           ;                       {
 154E                   .dbline 874
 154E           ;                         DELAY80
 154E 2224              clr R2
 1550 3324              clr R3
 1552 30921401          sts _Tt+1,R3
 1556 20921301          sts _Tt,R2
 155A 09C0              xjmp L340
 155C           L337:
 155C                   .dbline 874
 155C           L338:
 155C                   .dbline 874
 155C 80911301          lds R24,_Tt
 1560 90911401          lds R25,_Tt+1
 1564 0196              adiw R24,1
 1566 90931401          sts _Tt+1,R25
 156A 80931301          sts _Tt,R24
 156E           L340:
 156E                   .dbline 874
 156E 80911301          lds R24,_Tt
 1572 90911401          lds R25,_Tt+1
 1576 8032              cpi R24,32
 1578 E0E0              ldi R30,0
 157A 9E07              cpc R25,R30
 157C 78F3              brlo L337
 157E           X114:
 157E                   .dbline 875
 157E           ;                       }
 157E           L334:
 157E                   .dbline 872
 157E 4395              inc R20
 1580           L336:
 1580                   .dbline 872
 1580 82E3              ldi R24,50
 1582 8417              cp R24,R20
 1584 20F3              brlo L333
 1586           X115:
 1586                   .dbline 877
 1586           ;       
 1586           ;       EIFR|=0x08;//清INT3中断标志 
 1586 88B7              in R24,0x38
 1588 8860              ori R24,8
 158A 88BF              out 0x38,R24
 158C                   .dbline 878
 158C           ;       SREG|=0x80; //开总中断
 158C 7894              bset 7
 158E                   .dbline -2
 158E           L212:
 158E                   .dbline 0 ; func end
 158E 4991              ld R20,y+
 1590 0895              ret
 1592                   .dbsym r L 20 c
 1592                   .dbend
 1592                   .dbfunc e Delay30Ms _Delay30Ms fV
                        .even
 1592           _Delay30Ms::
 1592                   .dbline -1
 1592                   .dbline 882
 1592           ; }
 1592           ; 
 1592           ; void Delay30Ms(void)//8M主时钟频率，则最大定时7812.5ms
 1592           ; {
 1592                   .dbline 883
 1592           ;       TCCR1B = 0x00; //stop
 1592 2224              clr R2
 1594 2EBC              out 0x2e,R2
 1596                   .dbline 884
 1596           ;     TCNT1 = 65301;//30ms  
 1596 85E1              ldi R24,65301
 1598 9FEF              ldi R25,255
 159A 9DBD              out 0x2d,R25
 159C 8CBD              out 0x2c,R24
 159E                   .dbline 885
 159E           ;       TCCR1B = 0x05; //1024分频
 159E 85E0              ldi R24,5
 15A0 8EBD              out 0x2e,R24
 15A2                   .dbline 886
 15A2           ;       TIFR|=0x04; //清定时器1中断标志
 15A2 86B7              in R24,0x36
 15A4 8460              ori R24,4
 15A6 86BF              out 0x36,R24
 15A8           L342:
 15A8                   .dbline 887
 15A8           ;       while((TIFR&0x04)==0x00); 
 15A8           L343:
 15A8                   .dbline 887
 15A8 26B6              in R2,0x36
 15AA 22FE              sbrs R2,2
 15AC FDCF              rjmp L342
 15AE           X118:
 15AE                   .dbline 888
 15AE           ;       TCCR1B = 0x00; //stop
 15AE 2224              clr R2
 15B0 2EBC              out 0x2e,R2
 15B2                   .dbline 889
 15B2           ;       TIFR|=0x04; //清定时器1中断标志
 15B2 86B7              in R24,0x36
 15B4 8460              ori R24,4
 15B6 86BF              out 0x36,R24
 15B8                   .dbline -2
 15B8           L341:
 15B8                   .dbline 0 ; func end
 15B8 0895              ret
 15BA                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C94DD0A          jmp _usart0_isr
                        .area text(rom, con, rel)
 15BA                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 15BA                   .dbfunc e usart0_isr _usart0_isr fV
                        .even
 15BA           _usart0_isr::
 15BA 2A92              st -y,R2
 15BC 8A93              st -y,R24
 15BE 9A93              st -y,R25
 15C0 EA93              st -y,R30
 15C2 FA93              st -y,R31
 15C4 2FB6              IN R2,63
 15C6 2A92              st -y,R2
 15C8                   .dbline -1
 15C8                   .dbline 894
 15C8           ; }
 15C8           ; 
 15C8           ; #pragma interrupt_handler usart0_isr:19
 15C8           ; void usart0_isr(void) //串口接收中断
 15C8           ; {
 15C8                   .dbline 895
 15C8           ;     Uart0RxData[Uart0RxCounter]=UDR0;//接收串口数据,同时清空串口接收中断标志
 15C8 80E0              ldi R24,<_Uart0RxData
 15CA 90E0              ldi R25,>_Uart0RxData
 15CC E0910901          lds R30,_Uart0RxCounter
 15D0 FF27              clr R31
 15D2 E80F              add R30,R24
 15D4 F91F              adc R31,R25
 15D6 2CB0              in R2,0xc
 15D8 2082              std z+0,R2
 15DA                   .dbline 896
 15DA           ;       Uart0RxCounter++;
 15DA 80910901          lds R24,_Uart0RxCounter
 15DE 8F5F              subi R24,255    ; addi 1
 15E0 80930901          sts _Uart0RxCounter,R24
 15E4                   .dbline -2
 15E4           L345:
 15E4                   .dbline 0 ; func end
 15E4 2990              ld R2,y+
 15E6 2FBE              OUT 63,R2
 15E8 F991              ld R31,y+
 15EA E991              ld R30,y+
 15EC 9991              ld R25,y+
 15EE 8991              ld R24,y+
 15F0 2990              ld R2,y+
 15F2 1895              reti
 15F4                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\JXY_MCUBootLoader\SBL.c
 0000           _T2cn::
 0000                   .blkb 2
 0002                   .dbsym e T2cn _T2cn i
 0002           _flash_buf::
 0002                   .blkb 258
 0104                   .dbsym e flash_buf _flash_buf A[258:258]c
 0104           _TimeOutFlag::
 0104                   .blkb 1
 0105                   .dbsym e TimeOutFlag _TimeOutFlag c
 0105           _Timer0Counter::
 0105                   .blkb 2
 0107                   .dbsym e Timer0Counter _Timer0Counter i
 0107           _Uart0RxData::
 0107                   .blkb 2
 0109                   .dbsym e Uart0RxData _Uart0RxData A[2:2]c
 0109           _Uart0RxCounter::
 0109                   .blkb 1
 010A                   .dbsym e Uart0RxCounter _Uart0RxCounter c
 010A           _DSP_PageCn::
 010A                   .blkb 1
 010B                   .dbsym e DSP_PageCn _DSP_PageCn c
 010B           _Timer3Cn::
 010B                   .blkb 2
 010D                   .dbsym e Timer3Cn _Timer3Cn i
 010D           _DownloadSpeed::
 010D                   .blkb 1
 010E                   .dbsym e DownloadSpeed _DownloadSpeed c
 010E           _crc16lo::
 010E                   .blkb 1
 010F                   .dbsym e crc16lo _crc16lo c
 010F           _crc16hi::
 010F                   .blkb 1
 0110                   .dbsym e crc16hi _crc16hi c
 0110           _DataReCn::
 0110                   .blkb 2
 0112                   .dbsym e DataReCn _DataReCn i
 0112           _UpdateBegin::
 0112                   .blkb 1
 0113                   .dbsym e UpdateBegin _UpdateBegin c
 0113           _Tt::
 0113                   .blkb 2
 0115                   .dbsym e Tt _Tt i
 0115           _IntFlag::
 0115                   .blkb 1
 0116                   .dbsym e IntFlag _IntFlag c
 0116           _Int_count::
 0116                   .blkb 1
 0117                   .dbsym e Int_count _Int_count c
 0117           _T_dat_buf::
 0117                   .blkb 22
 012D                   .dbsym e T_dat_buf _T_dat_buf A[22:22]c
 012D           _T_com::
 012D                   .blkb 1
 012E                   .dbsym e T_com _T_com c
 012E           _R_dat::
 012E                   .blkb 2
 0130                   .dbsym e R_dat _R_dat i
 0130           _T_dat::
 0130                   .blkb 2
 0132                   .dbsym e T_dat _T_dat i
 0132           _Rx::
 0132                   .blkb 18
 0144                   .dbsym e Rx _Rx A[18:18]c
 0144           _Motor2Status::
 0144                   .blkb 2
 0146                   .dbstruct 0 2 .1
 0146                   .dbfield 0 PWM F[0:1]
 0146                   .dbfield 0 DIR F[1:1]
 0146                   .dbfield 0 BrokenStop F[2:1]
 0146                   .dbfield 0 CommandStop F[3:1]
 0146                   .dbfield 0 OverCurrent F[4:1]
 0146                   .dbfield 0 UnderVoltage F[5:1]
 0146                   .dbfield 0 StartResult F[6:2]
 0146                   .dbfield 0 ThisCurrent F[8:8]
 0146                   .dbend
 0146                   .dbunion 0 2 MotorStatus
 0146                   .dbfield 0 i i
 0146                   .dbfield 0 s S[.1]
 0146                   .dbend
 0146                   .dbsym e Motor2Status _Motor2Status S[MotorStatus]
 0146           _Motor1Status::
 0146                   .blkb 2
 0148                   .dbsym e Motor1Status _Motor1Status S[MotorStatus]
 0148           ; }
 0148           ; 
 0148           ; /*
 0148           ; 
 0148           ; void EEPROM_write(unsigned int Address,unsigned char Data)    //??EEPROM?
 0148           ; {//?????1MHz,???EEPROM??????8.5ms
 0148           ;     while(EECR&0x02);                   // ??????????
 0148           ;     EEAR=Address;
 0148           ;     EEDR=Data;                                // ??????????
 0148           ;     EECR|=0x04;                         //??EEMWE
 0148           ;     EECR|=0x02;                         //??EEWE ??????
 0148           ; }
 0148           ; 
 0148           ; unsigned char EEPROM_read(unsigned int Address)                               //??EEPROM?
 0148           ; {
 0148           ;     while(EECR&0x02);                                 //?????????
 0148           ;     EEAR = Address;                     //???????                                             
 0148           ;       EECR|=0x01;                                     //??EERE ??????
 0148           ;     return EEDR;                              //??????????
 0148           ; }   */
