                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile main.c
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 0000                   .dbfunc e InitialIO _InitialIO fV
                        .even
 0000           _InitialIO::
 0000                   .dbline -1
 0000                   .dbline 154
 0000           ;  /**************************************************
 0000           ; CTZK
 0000           ; //20161110 增加了全部采样的CRC16校验
 0000           ; //20161113 改进了流量数据中时间和相位由无符号短整型转为浮点数时的转换方法，以防上位机软件出现相位超大值
 0000           ; //20161224 将电机断流判断值由26mA改为13mA，因为目前调节电机工作时空载电流值仅为23~28mA，升级版本为V4.0
 0000           ; //20161229 修改收张电机的本电机同向和反向判断，修改调节电机的电机方向控制（与原来相反）
 0000           ; //20170308 流量采样增加校验帧，升级版本为V4.2
 0000           ; //20170607 电机断路电流由原来的13mA改为26mA 升级版本为V4.3
 0000           ; //20170608 改动电机过流档位并把最大档位提升到250mA，升级版本为V4.4
 0000           ; //20170609 加入调节电机微调功能，升级版本为V4.5
 0000           ; //20170613 增加电机断路电流上位机可设定(共6档)，增加调节电机微调时间由电机命令中自带参数，改上传电流由数字量为工程量（单位mA），堵转电流上传改为档位，版本升为V4.6
 0000           ; //20170614 上传的电缆电压也改为工程量，全部采样增加电缆电压
 0000           ; //20170703 全采时总线电压稍作处理，有电机运行时上传真实电压+5V，没有电机运行时上传0
 0000           ; //20170704 总线电压采样时马笼头电压+2，电机电压+2，电机断路档位以10mA为台阶上跳
 0000           ; //20170706 微调每档均多加1秒，方便上位机查看电机电流 V4.9
 0000           ; //20170722 断路档位稍改
 0000           ; **************************************************/
 0000           ; #include <iom128v.h>                                                                  
 0000           ; #include <macros.h>
 0000           ; #include <stdio.h>
 0000           ; 
 0000           ; #define  BB     0x50        //固件版本号
 0000           ; 
 0000           ; #define M1_L    PORTD&=0xfb;
 0000           ; #define M1_H    PORTD|=0x04;
 0000           ; #define M2_L    PORTD&=0xfd;
 0000           ; #define M2_H    PORTD|=0x02;
 0000           ; 
 0000           ;  
 0000           ; //收放电机管脚定义和控制项
 0000           ; #define DIR1_PIN    ((PINA&0x04)>>2)
 0000           ; #define PWM1_PIN    ((PINA&0x02)>>1)
 0000           ; #define BREAKE1_PIN (PINA&0x01)
 0000           ; 
 0000           ; #define DIR1_H      {DDRA|=0x04;PORTA|=0x04;}
 0000           ; #define PWM1_H      {DDRA|=0x02;PORTA|=0x02;}
 0000           ; #define BREAKE1_H   {DDRA|=0x01;PORTA|=0x01;}
 0000           ; 
 0000           ; #define DIR1_L      {DDRA|=0x04;PORTA&=0xfb;}
 0000           ; #define PWM1_L      {DDRA|=0x02;PORTA&=0xFD;}
 0000           ; #define BREAKE1_L   {DDRA|=0x01;PORTA&=0xFE;}
 0000           ; 
 0000           ; //调节电机管脚定义和控制项
 0000           ; #define PWM2_PIN    ((PINF&0x04)>>2)
 0000           ; #define BREAKE2_PIN ((PINF&0x02)>>1)
 0000           ; #define DIR2_PIN    (PINF&0x01)
 0000           ; 
 0000           ; #define PWM2_H      {DDRF|=0x04;PORTF|=0x04;}
 0000           ; #define BREAKE2_H   {DDRF|=0x02;PORTF|=0x02;}
 0000           ; #define DIR2_H      {DDRF|=0x01;PORTF|=0x01;}
 0000           ; 
 0000           ; #define PWM2_L      {DDRF|=0x04;PORTF&=0xfb;}
 0000           ; #define BREAKE2_L   {DDRF|=0x02;PORTF&=0xFD;}
 0000           ; #define DIR2_L      {DDRF|=0x01;PORTF&=0xFE;}
 0000           ; 
 0000           ; //电机电源
 0000           ; #define VM_H        {DDRB|=0x80;PORTB|=0x80;}
 0000           ; 
 0000           ; //同时关二个电机，先把PWM置低，后把DIR和BREAK置低，最后关电机电源
 0000           ; //最好不关刹车，这样电机堵转停止后不会有1.6秒的反向电压，电机不会喘气
 0000           ; #define MOTORSTOP   {DDRA|=0x07;PORTA&=0xFD;PORTA&=0xF8;   DDRF|=0x07;PORTF&=0xFB;PORTF&=0xF8;     DDRB|=0x80;PORTB&=0x7f;}
 0000           ; 
 0000           ; #define DELAY10 for(Tt=0;Tt<4;Tt++);
 0000           ; #define DELAY20 for(Tt=0;Tt<4;Tt++);
 0000           ; #define DELAY40 for(Tt=0;Tt<16;Tt++); 
 0000           ; #define DELAY50 for(Tt=0;Tt<21;Tt++); 
 0000           ; #define DELAY80 for(Tt=0;Tt<32;Tt++); 
 0000           ; #define DELAY89 for(Tt=0;Tt<36;Tt++); 
 0000           ; #define DELAY100 for(Tt=0;Tt<42;Tt++); 
 0000           ; #define DELAY170 for(Tt=0;Tt<72;Tt++);
 0000           ; #define DELAY268 for(Tt=0;Tt<113;Tt++);
 0000           ; #define DELAY397 for(Tt=0;Tt<165;Tt++);
 0000           ; #define DELAY400 for(Tt=0;Tt<168;Tt++);
 0000           ; 
 0000           ; union FIB
 0000           ; {
 0000           ;  float f;
 0000           ;  unsigned int i[2];
 0000           ;  unsigned char b[4];
 0000           ; }myFIB;
 0000           ; 
 0000           ; union MotorStatus
 0000           ; {
 0000           ;  unsigned int i;
 0000           ;  struct 
 0000           ;  { 
 0000           ;    unsigned int PWM:1;//bit0,电机运行状态，0：停止，1：运行
 0000           ;    unsigned int DIR:1;//bit1,电机运行方向，0：反转,收臂-调大(DIR_L)，1：正转,张臂-调小(DIR_H)
 0000           ;    unsigned int BrokenStop:1;//bit2, 断路停
 0000           ;    unsigned int CommandStop:1;//bit3,手动停
 0000           ;    unsigned int OverCurrent:1;//bit4,过流停
 0000           ;    unsigned int UnderVoltage:1;//bit5,欠压停
 0000           ;    unsigned int StartResult:2;//bit6-bit7,电机最近一次启动结果(0：正常上电启动，1：本电机同向运行，2：本电机反向运行，3：另一个电机正在运行)
 0000           ;    
 0000           ;    unsigned int ThisCurrent:8;//bit8-bit15 ,  电机当前或停止前最近一次电流
 0000           ;  }s;
 0000           ; }Motor1Status,Motor2Status;//电机状态
 0000           ; 
 0000           ; unsigned char Motor1Gear,Motor2Gear;// 电机过流档位
 0000           ; unsigned char Motor1Thr,Motor2Thr;//电机堵转过流阈值
 0000           ; unsigned char MotorIdelGear;//电机断路档位
 0000           ; unsigned char MotorIdelCur;// 电机断路电流
 0000           ;  
 0000           ; 
 0000           ; unsigned char T_Flag;
 0000           ; 
 0000           ; unsigned int Timer0Counter;//定时器0超过4ms时的计数
 0000           ; 
 0000           ; unsigned char Uart0RxData[74];//串口接收数据缓存
 0000           ; unsigned char Uart0RxCounter;
 0000           ; 
 0000           ; unsigned char Rx[18];//解码接收9位共18个半位
 0000           ; int  T_dat,R_dat;//曼码发送数据
 0000           ; unsigned char T_com;//曼码发送命令
 0000           ; 
 0000           ; unsigned char TimeOutFlag;//发送超时标志
 0000           ; 
 0000           ; unsigned char T_dat_buf[22];//曼码发送缓冲 
 0000           ; 
 0000           ; unsigned int DataFlag;//下发标定系数开始标志
 0000           ; unsigned char Int_count;
 0000           ; unsigned char IntFlag;//接收帧状态
 0000           ; 
 0000           ; unsigned int Tt,k;
 0000           ; unsigned int T2cn;
 0000           ; unsigned char coeffdata[320];
 0000           ; 
 0000           ; unsigned char Uart0TxData[74];//串口发送数据缓存
 0000           ; 
 0000           ; unsigned char EEPAdd;//接收系数存放地址索引
 0000           ; unsigned int coeff_len,coeff_count;//接收系数长度，接收系数计数
 0000           ; unsigned int CompCounter;
 0000           ; 
 0000           ; unsigned int bf;
 0000           ; 
 0000           ; unsigned long lfib;//短整型转浮点数时用的临时变量
 0000           ; unsigned char crc16hi,crc16lo,crc16array[18];
 0000           ; 
 0000           ; void InitialIO(void);
 0000           ; void init_USART0(void);
 0000           ; void SendUart0_2(unsigned char len,unsigned int s);
 0000           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn);
 0000           ; void Pwm_startup(unsigned char motor);
 0000           ; void Start(void);
 0000           ; void SendManchester(void); 
 0000           ; unsigned char SampleADC(unsigned char ch);
 0000           ; void EEPROM_write(unsigned int Address,unsigned char Data);
 0000           ; unsigned char EEPROM_read(unsigned int Address);
 0000           ; void CheckMotor(unsigned int t);
 0000           ; void crc16(unsigned char r_data[],unsigned int length);
 0000           ; void Gear2Thr(void);
 0000           ; 
 0000           ; void InitialIO(void)
 0000           ; {//1输出，0输入
 0000                   .dbline 155
 0000           ;  PORTA=0x00;
 0000 2224              clr R2
 0002 2BBA              out 0x1b,R2
 0004                   .dbline 156
 0004           ;  DDRA=0x07; //PA0=BREAKE1 PA1=PWM1 PA2=DIR1
 0004 87E0              ldi R24,7
 0006 8ABB              out 0x1a,R24
 0008                   .dbline 158
 0008           ; 
 0008           ;  PORTB=0x00; 
 0008 28BA              out 0x18,R2
 000A                   .dbline 159
 000A           ;  DDRB=0x80; //PB7=VM_CTRL
 000A 80E8              ldi R24,128
 000C 87BB              out 0x17,R24
 000E                   .dbline 161
 000E           ;  
 000E           ;  PORTC=0x00;
 000E 25BA              out 0x15,R2
 0010                   .dbline 162
 0010           ;  DDRC=0x00; 
 0010 24BA              out 0x14,R2
 0012                   .dbline 164
 0012           ;  
 0012           ;  PORTD=0x00; 
 0012 22BA              out 0x12,R2
 0014                   .dbline 165
 0014           ;  DDRD=0x06;//PD1=M2 PD2=M1
 0014 86E0              ldi R24,6
 0016 81BB              out 0x11,R24
 0018                   .dbline 167
 0018           ;  
 0018           ;  PORTE=0x00; 
 0018 23B8              out 0x3,R2
 001A                   .dbline 168
 001A           ;  DDRE=0x00;
 001A 22B8              out 0x2,R2
 001C                   .dbline 170
 001C           ;  
 001C           ;  PORTF=0x00; 
 001C 20926200          sts 98,R2
 0020                   .dbline 171
 0020           ;  DDRF=0x07;//PF0=DIR2 PF1=BREAKE2 PF2=PWM2
 0020 87E0              ldi R24,7
 0022 80936100          sts 97,R24
 0026                   .dbline 173
 0026           ;  
 0026           ;  PORTG=0x00; 
 0026 20926500          sts 101,R2
 002A                   .dbline 174
 002A           ;  DDRG=0x00; 
 002A 20926400          sts 100,R2
 002E                   .dbline -2
 002E           L2:
 002E                   .dbline 0 ; func end
 002E 0895              ret
 0030                   .dbend
 0030                   .dbfunc e uart0_init _uart0_init fV
                        .even
 0030           _uart0_init::
 0030                   .dbline -1
 0030                   .dbline 183
 0030           ; }
 0030           ; 
 0030           ; //UART0 initialize
 0030           ; // desired baud rate: 57600
 0030           ; // actual: baud rate:58824 (2.1%)
 0030           ; // char size: 8 bit
 0030           ; // parity: Disabled
 0030           ; void uart0_init(void)
 0030           ; {
 0030                   .dbline 184
 0030           ;  UCSR0B = 0x00; //disable while setting baud rate
 0030 2224              clr R2
 0032 2AB8              out 0xa,R2
 0034                   .dbline 185
 0034           ;  UCSR0A = 0x02;
 0034 82E0              ldi R24,2
 0036 8BB9              out 0xb,R24
 0038                   .dbline 186
 0038           ;  UCSR0C = 0x06;
 0038 86E0              ldi R24,6
 003A 80939500          sts 149,R24
 003E                   .dbline 187
 003E           ;  UBRR0L = 0x10; //set baud rate lo 57600
 003E 80E1              ldi R24,16
 0040 89B9              out 0x9,R24
 0042                   .dbline 188
 0042           ;  UBRR0H = 0x00; //set baud rate hi
 0042 20929000          sts 144,R2
 0046                   .dbline 189
 0046           ;  UCSR0B = 0x98;
 0046 88E9              ldi R24,152
 0048 8AB9              out 0xa,R24
 004A                   .dbline -2
 004A           L3:
 004A                   .dbline 0 ; func end
 004A 0895              ret
 004C                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C942600          jmp _uart0_rx_isr
                        .area text(rom, con, rel)
 004C                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 004C                   .dbfunc e uart0_rx_isr _uart0_rx_isr fV
                        .even
 004C           _uart0_rx_isr::
 004C                   .dbline -1
 004C                   .dbline 194
 004C           ; }
 004C           ; 
 004C           ; #pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
 004C           ; void uart0_rx_isr(void)
 004C           ; {
 004C                   .dbline -2
 004C           L4:
 004C                   .dbline 0 ; func end
 004C 1895              reti
 004E                   .dbend
                        .area vector(rom, abs)
                        .org 64
 0040 0C942700          jmp _timer0_ovf_isr
                        .area text(rom, con, rel)
 004E                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 004E                   .dbfunc e timer0_ovf_isr _timer0_ovf_isr fV
                        .even
 004E           _timer0_ovf_isr::
 004E 2A92              st -y,R2
 0050 8A93              st -y,R24
 0052 9A93              st -y,R25
 0054 2FB6              IN R2,63
 0056 2A92              st -y,R2
 0058                   .dbline -1
 0058                   .dbline 200
 0058           ;  //uart has received a character in UDR
 0058           ; }
 0058           ; 
 0058           ; #pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
 0058           ; void timer0_ovf_isr(void)
 0058           ; {
 0058                   .dbline 201
 0058           ; Timer0Counter--;
 0058 80912E02          lds R24,_Timer0Counter
 005C 90912F02          lds R25,_Timer0Counter+1
 0060 0197              sbiw R24,1
 0062 90932F02          sts _Timer0Counter+1,R25
 0066 80932E02          sts _Timer0Counter,R24
 006A                   .dbline 202
 006A           ; if(Timer0Counter==0)
 006A 8030              cpi R24,0
 006C 8907              cpc R24,R25
 006E 61F4              brne L6
 0070           X0:
 0070                   .dbline 203
 0070           ; {
 0070                   .dbline 204
 0070           ;  TCNT0=0;
 0070 2224              clr R2
 0072 22BE              out 0x32,R2
 0074                   .dbline 205
 0074           ;  TimeOutFlag=1;
 0074 81E0              ldi R24,1
 0076 8093CB01          sts _TimeOutFlag,R24
 007A                   .dbline 206
 007A           ;  TIMSK&=0xFE;//关定时器0中断
 007A 87B7              in R24,0x37
 007C 8E7F              andi R24,254
 007E 87BF              out 0x37,R24
 0080                   .dbline 207
 0080           ;  UCSR0B&=0x7f;//关串口接收中断
 0080 8AB1              in R24,0xa
 0082 8F77              andi R24,127
 0084 8AB9              out 0xa,R24
 0086                   .dbline 208
 0086           ;  }
 0086 02C0              xjmp L7
 0088           L6:
 0088                   .dbline 210
 0088           ;  else
 0088           ;  {
 0088                   .dbline 211
 0088           ;  TCNT0=0x06;//定时8ms
 0088 86E0              ldi R24,6
 008A 82BF              out 0x32,R24
 008C                   .dbline 212
 008C           ;  }
 008C           L7:
 008C                   .dbline -2
 008C           L5:
 008C                   .dbline 0 ; func end
 008C 2990              ld R2,y+
 008E 2FBE              OUT 63,R2
 0090 9991              ld R25,y+
 0092 8991              ld R24,y+
 0094 2990              ld R2,y+
 0096 1895              reti
 0098                   .dbend
                        .area vector(rom, abs)
                        .org 116
 0074 0C944C00          jmp _timer3_ovf_isr
                        .area text(rom, con, rel)
 0098                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 0098                   .dbfunc e timer3_ovf_isr _timer3_ovf_isr fV
                        .even
 0098           _timer3_ovf_isr::
 0098 1A92              st -y,R1
 009A 2A92              st -y,R2
 009C 8A93              st -y,R24
 009E 9A93              st -y,R25
 00A0 1FB6              IN R1,63
 00A2 1A92              st -y,R1
 00A4                   .dbline -1
 00A4                   .dbline 217
 00A4           ; }
 00A4           ; 
 00A4           ; #pragma interrupt_handler timer3_ovf_isr:iv_TIM3_OVF
 00A4           ; void timer3_ovf_isr(void)
 00A4           ; {
 00A4                   .dbline 218
 00A4           ;        ETIMSK = 0x00; //Timer3中断关闭
 00A4 2224              clr R2
 00A6 20927D00          sts 125,R2
 00AA                   .dbline 219
 00AA           ;        TCCR3B = 0x00; //stop
 00AA 20928A00          sts 138,R2
 00AE                   .dbline 221
 00AE           ;               
 00AE           ;                  if(PWM1_PIN==1)//收放电机正在运行
 00AE 89B3              in R24,0x19
 00B0 8270              andi R24,2
 00B2 8695              lsr R24
 00B4 8130              cpi R24,1
 00B6 49F4              brne L9
 00B8           X1:
 00B8                   .dbline 222
 00B8           ;                  {
 00B8                   .dbline 223
 00B8           ;                  Motor1Status.s.CommandStop=1;
 00B8 80913902          lds R24,_Motor1Status
 00BC 90913A02          lds R25,_Motor1Status+1
 00C0 8860              ori R24,8
 00C2 90933A02          sts _Motor1Status+1,R25
 00C6 80933902          sts _Motor1Status,R24
 00CA                   .dbline 224
 00CA           ;                  }
 00CA           L9:
 00CA                   .dbline 225
 00CA           ;                  if(PWM2_PIN==1)//调节电机正在运行
 00CA 80B1              in R24,0x0
 00CC 8470              andi R24,4
 00CE 8695              lsr R24
 00D0 8695              lsr R24
 00D2 8130              cpi R24,1
 00D4 49F4              brne L11
 00D6           X2:
 00D6                   .dbline 226
 00D6           ;                  { 
 00D6                   .dbline 227
 00D6           ;                  Motor2Status.s.CommandStop=1;
 00D6 80913702          lds R24,_Motor2Status
 00DA 90913802          lds R25,_Motor2Status+1
 00DE 8860              ori R24,8
 00E0 90933802          sts _Motor2Status+1,R25
 00E4 80933702          sts _Motor2Status,R24
 00E8                   .dbline 228
 00E8           ;                  }
 00E8           L11:
 00E8                   .dbline 229
 00E8           ;                  MOTORSTOP  //关电机
 00E8                   .dbline 229
 00E8 8AB3              in R24,0x1a
 00EA 8760              ori R24,7
 00EC 8ABB              out 0x1a,R24
 00EE                   .dbline 229
 00EE 8BB3              in R24,0x1b
 00F0 8D7F              andi R24,253
 00F2 8BBB              out 0x1b,R24
 00F4                   .dbline 229
 00F4 8BB3              in R24,0x1b
 00F6 887F              andi R24,248
 00F8 8BBB              out 0x1b,R24
 00FA                   .dbline 229
 00FA 80916100          lds R24,97
 00FE 8760              ori R24,7
 0100 80936100          sts 97,R24
 0104                   .dbline 229
 0104 80916200          lds R24,98
 0108 8B7F              andi R24,251
 010A 80936200          sts 98,R24
 010E                   .dbline 229
 010E 80916200          lds R24,98
 0112 887F              andi R24,248
 0114 80936200          sts 98,R24
 0118                   .dbline 229
 0118 BF9A              sbi 0x17,7
 011A                   .dbline 229
 011A 88B3              in R24,0x18
 011C 8F77              andi R24,127
 011E 88BB              out 0x18,R24
 0120                   .dbline 229
 0120                   .dbline -2
 0120           L8:
 0120                   .dbline 0 ; func end
 0120 1990              ld R1,y+
 0122 1FBE              OUT 63,R1
 0124 9991              ld R25,y+
 0126 8991              ld R24,y+
 0128 2990              ld R2,y+
 012A 1990              ld R1,y+
 012C 1895              reti
 012E                   .dbend
 012E                   .dbfunc e SendUart0_2 _SendUart0_2 fV
 012E           ;              t -> R20
 012E           ;              i -> R22
 012E           ;              s -> R10,R11
 012E           ;            len -> R12
                        .even
 012E           _SendUart0_2::
 012E 0E940000          xcall push_xgsetF03C
 0132 5901              movw R10,R18
 0134 C02E              mov R12,R16
 0136                   .dbline -1
 0136                   .dbline 233
 0136           ; }
 0136           ; 
 0136           ; void SendUart0_2(unsigned char len,unsigned int s)   //串口发送数据
 0136           ; {//要求流量板在s个8ms内通过串口返回数据
 0136                   .dbline 236
 0136           ; unsigned char t,i;    
 0136           ; 
 0136           ; for(t=0;t<74;t++)
 0136 4427              clr R20
 0138 09C0              xjmp L17
 013A           L14:
 013A                   .dbline 237
 013A           ;   Uart0RxData[t]=0xff;
 013A 80E0              ldi R24,<_Uart0RxData
 013C 90E0              ldi R25,>_Uart0RxData
 013E E42F              mov R30,R20
 0140 FF27              clr R31
 0142 E80F              add R30,R24
 0144 F91F              adc R31,R25
 0146 8FEF              ldi R24,255
 0148 8083              std z+0,R24
 014A           L15:
 014A                   .dbline 236
 014A 4395              inc R20
 014C           L17:
 014C                   .dbline 236
 014C 4A34              cpi R20,74
 014E A8F3              brlo L14
 0150           X3:
 0150                   .dbline 239
 0150           ;   
 0150           ; Uart0RxCounter=0; //清串口接受计数  
 0150 2224              clr R2
 0152 2092E301          sts _Uart0RxCounter,R2
 0156                   .dbline 241
 0156           ; 
 0156           ; for(t=0;t<len;t++)
 0156 4427              clr R20
 0158 10C0              xjmp L21
 015A           L22:
 015A                   .dbline 243
 015A           ; {
 015A           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 015A           L23:
 015A                   .dbline 243
 015A 5D9B              sbis 0xb,5
 015C FECF              rjmp L22
 015E           X4:
 015E                   .dbline 244
 015E           ; for(i=0;i<200;i++);
 015E 6627              clr R22
 0160 01C0              xjmp L28
 0162           L25:
 0162                   .dbline 244
 0162           L26:
 0162                   .dbline 244
 0162 6395              inc R22
 0164           L28:
 0164                   .dbline 244
 0164 683C              cpi R22,200
 0166 E8F3              brlo L25
 0168           X5:
 0168                   .dbline 245
 0168           ; UDR0=Uart0TxData[t];  
 0168 80E0              ldi R24,<_Uart0TxData
 016A 90E0              ldi R25,>_Uart0TxData
 016C E42F              mov R30,R20
 016E FF27              clr R31
 0170 E80F              add R30,R24
 0172 F91F              adc R31,R25
 0174 2080              ldd R2,z+0
 0176 2CB8              out 0xc,R2
 0178                   .dbline 246
 0178           ; }
 0178           L19:
 0178                   .dbline 241
 0178 4395              inc R20
 017A           L21:
 017A                   .dbline 241
 017A 4C15              cp R20,R12
 017C 70F3              brlo L23
 017E           X6:
 017E                   .dbline 248
 017E           ;                   
 017E           ; if(s>0)
 017E AA20              tst R10
 0180 11F4              brne X7
 0182 BB20              tst R11
 0184 11F1              breq L29
 0186           X7:
 0186                   .dbline 249
 0186           ; {
 0186                   .dbline 251
 0186           ;  //超时设定
 0186           ; TimeOutFlag=0; //超时标志置0
 0186 2224              clr R2
 0188 2092CB01          sts _TimeOutFlag,R2
 018C                   .dbline 252
 018C           ; Timer0Counter=s; //8ms定时循环次数
 018C B0922F02          sts _Timer0Counter+1,R11
 0190 A0922E02          sts _Timer0Counter,R10
 0194                   .dbline 253
 0194           ; TCNT0=0x06;//定时8ms
 0194 86E0              ldi R24,6
 0196 82BF              out 0x32,R24
 0198                   .dbline 254
 0198           ; TCCR0|=0x06;//256分频
 0198 83B7              in R24,0x33
 019A 8660              ori R24,6
 019C 83BF              out 0x33,R24
 019E                   .dbline 255
 019E           ; TIFR|=0x01; //清定时器0中断标志
 019E 86B7              in R24,0x36
 01A0 8160              ori R24,1
 01A2 86BF              out 0x36,R24
 01A4                   .dbline 256
 01A4           ; TIMSK|=0x01;//使能定时器0中断
 01A4 87B7              in R24,0x37
 01A6 8160              ori R24,1
 01A8 87BF              out 0x37,R24
 01AA                   .dbline 257
 01AA           ; t=UDR0;//开串口接收中断前读空缓存
 01AA 4CB1              in R20,0xc
 01AC                   .dbline 258
 01AC           ; UCSR0B|=0x80;//开串口接收中断
 01AC 579A              sbi 0xa,7
 01AE 03C0              xjmp L32
 01B0           L31:
 01B0                   .dbline 260
 01B0           ; while(TimeOutFlag==0)
 01B0           ; {
 01B0                   .dbline 261
 01B0           ; CheckMotor(0);
 01B0 0027              clr R16
 01B2 1127              clr R17
 01B4 FAD1              xcall _CheckMotor
 01B6                   .dbline 262
 01B6           ; }
 01B6           L32:
 01B6                   .dbline 259
 01B6 2090CB01          lds R2,_TimeOutFlag
 01BA 2220              tst R2
 01BC C9F3              breq L31
 01BE           X8:
 01BE                   .dbline 263
 01BE           ; TIMSK&=0xFE;//关定时器0中断
 01BE 87B7              in R24,0x37
 01C0 8E7F              andi R24,254
 01C2 87BF              out 0x37,R24
 01C4                   .dbline 264
 01C4           ; UCSR0B&=0x7f;//关串口接收中断
 01C4 8AB1              in R24,0xa
 01C6 8F77              andi R24,127
 01C8 8AB9              out 0xa,R24
 01CA                   .dbline 265
 01CA           ; }
 01CA           L29:
 01CA                   .dbline -2
 01CA           L13:
 01CA                   .dbline 0 ; func end
 01CA 0C940000          xjmp pop_xgsetF03C
 01CE                   .dbsym r t 20 c
 01CE                   .dbsym r i 22 c
 01CE                   .dbsym r s 10 i
 01CE                   .dbsym r len 12 c
 01CE                   .dbend
 01CE                   .dbfunc e SendUart0_3 _SendUart0_3 fV
 01CE           ;              t -> R20
 01CE           ;              i -> R22
 01CE           ;             cn -> R10
 01CE           ;              s -> R12,R13
 01CE           ;            len -> R14
                        .even
 01CE           _SendUart0_3::
 01CE 0E940000          xcall push_xgsetF0FC
 01D2 6901              movw R12,R18
 01D4 E02E              mov R14,R16
 01D6 AA84              ldd R10,y+10
 01D8                   .dbline -1
 01D8                   .dbline 269
 01D8           ; }
 01D8           ; 
 01D8           ; void SendUart0_3(unsigned char len,unsigned int s,unsigned char cn)   //串口发送数据，不死等，收到采集板返回的cn个字节后即退出，如一直没收到cn个字节，则超时时间s*8ms到后也退出
 01D8           ; {//要求流量板在s个8ms内通过串口返回数据
 01D8                   .dbline 272
 01D8           ; unsigned char t,i;    
 01D8           ; 
 01D8           ; for(t=0;t<74;t++)
 01D8 4427              clr R20
 01DA 09C0              xjmp L38
 01DC           L35:
 01DC                   .dbline 273
 01DC           ;   Uart0RxData[t]=0xff;
 01DC 80E0              ldi R24,<_Uart0RxData
 01DE 90E0              ldi R25,>_Uart0RxData
 01E0 E42F              mov R30,R20
 01E2 FF27              clr R31
 01E4 E80F              add R30,R24
 01E6 F91F              adc R31,R25
 01E8 8FEF              ldi R24,255
 01EA 8083              std z+0,R24
 01EC           L36:
 01EC                   .dbline 272
 01EC 4395              inc R20
 01EE           L38:
 01EE                   .dbline 272
 01EE 4A34              cpi R20,74
 01F0 A8F3              brlo L35
 01F2           X9:
 01F2                   .dbline 275
 01F2           ;   
 01F2           ; Uart0RxCounter=0; //清串口接受计数  
 01F2 2224              clr R2
 01F4 2092E301          sts _Uart0RxCounter,R2
 01F8                   .dbline 277
 01F8           ; 
 01F8           ; for(t=0;t<len;t++)
 01F8 4427              clr R20
 01FA 10C0              xjmp L42
 01FC           L43:
 01FC                   .dbline 279
 01FC           ; {
 01FC           ; while(!(UCSR0A&(1<<UDRE0)));   // 等待发送缓冲器为空
 01FC           L44:
 01FC                   .dbline 279
 01FC 5D9B              sbis 0xb,5
 01FE FECF              rjmp L43
 0200           X10:
 0200                   .dbline 280
 0200           ; for(i=0;i<200;i++);
 0200 6627              clr R22
 0202 01C0              xjmp L49
 0204           L46:
 0204                   .dbline 280
 0204           L47:
 0204                   .dbline 280
 0204 6395              inc R22
 0206           L49:
 0206                   .dbline 280
 0206 683C              cpi R22,200
 0208 E8F3              brlo L46
 020A           X11:
 020A                   .dbline 281
 020A           ; UDR0=Uart0TxData[t];  
 020A 80E0              ldi R24,<_Uart0TxData
 020C 90E0              ldi R25,>_Uart0TxData
 020E E42F              mov R30,R20
 0210 FF27              clr R31
 0212 E80F              add R30,R24
 0214 F91F              adc R31,R25
 0216 2080              ldd R2,z+0
 0218 2CB8              out 0xc,R2
 021A                   .dbline 282
 021A           ; }
 021A           L40:
 021A                   .dbline 277
 021A 4395              inc R20
 021C           L42:
 021C                   .dbline 277
 021C 4E15              cp R20,R14
 021E 70F3              brlo L44
 0220           X12:
 0220                   .dbline 284
 0220           ;                   
 0220           ; if(s>0)
 0220 CC20              tst R12
 0222 11F4              brne X13
 0224 DD20              tst R13
 0226 39F1              breq L50
 0228           X13:
 0228                   .dbline 285
 0228           ; {
 0228                   .dbline 287
 0228           ;  //超时设定
 0228           ; TimeOutFlag=0; //超时标志置0
 0228 2224              clr R2
 022A 2092CB01          sts _TimeOutFlag,R2
 022E                   .dbline 288
 022E           ; Timer0Counter=s; //8ms定时循环次数
 022E D0922F02          sts _Timer0Counter+1,R13
 0232 C0922E02          sts _Timer0Counter,R12
 0236                   .dbline 289
 0236           ; TCNT0=0x06;//定时8ms
 0236 86E0              ldi R24,6
 0238 82BF              out 0x32,R24
 023A                   .dbline 290
 023A           ; TCCR0|=0x06;//256分频
 023A 83B7              in R24,0x33
 023C 8660              ori R24,6
 023E 83BF              out 0x33,R24
 0240                   .dbline 291
 0240           ; TIFR|=0x01; //清定时器0中断标志
 0240 86B7              in R24,0x36
 0242 8160              ori R24,1
 0244 86BF              out 0x36,R24
 0246                   .dbline 292
 0246           ; TIMSK|=0x01;//使能定时器0中断
 0246 87B7              in R24,0x37
 0248 8160              ori R24,1
 024A 87BF              out 0x37,R24
 024C                   .dbline 293
 024C           ; t=UDR0;//开串口接收中断前读空缓存
 024C 4CB1              in R20,0xc
 024E                   .dbline 294
 024E           ; UCSR0B|=0x80;//开串口接收中断
 024E 579A              sbi 0xa,7
 0250 08C0              xjmp L53
 0252           L52:
 0252                   .dbline 296
 0252           ; while(TimeOutFlag==0)
 0252           ; {
 0252                   .dbline 297
 0252           ; CheckMotor(0);
 0252 0027              clr R16
 0254 1127              clr R17
 0256 A9D1              xcall _CheckMotor
 0258                   .dbline 298
 0258           ;  if(Uart0RxCounter>=cn)
 0258 2090E301          lds R2,_Uart0RxCounter
 025C 2A14              cp R2,R10
 025E 08F0              brlo L55
 0260           X14:
 0260                   .dbline 299
 0260           ;    break;
 0260 04C0              xjmp L54
 0262           L55:
 0262                   .dbline 300
 0262           ; }
 0262           L53:
 0262                   .dbline 295
 0262 2090CB01          lds R2,_TimeOutFlag
 0266 2220              tst R2
 0268 A1F3              breq L52
 026A           X15:
 026A           L54:
 026A                   .dbline 301
 026A           ; TIMSK&=0xFE;//关定时器0中断
 026A 87B7              in R24,0x37
 026C 8E7F              andi R24,254
 026E 87BF              out 0x37,R24
 0270                   .dbline 302
 0270           ; UCSR0B&=0x7f;//关串口接收中断
 0270 8AB1              in R24,0xa
 0272 8F77              andi R24,127
 0274 8AB9              out 0xa,R24
 0276                   .dbline 303
 0276           ; }
 0276           L50:
 0276                   .dbline -2
 0276           L34:
 0276                   .dbline 0 ; func end
 0276 0C940000          xjmp pop_xgsetF0FC
 027A                   .dbsym r t 20 c
 027A                   .dbsym r i 22 c
 027A                   .dbsym r cn 10 c
 027A                   .dbsym r s 12 i
 027A                   .dbsym r len 14 c
 027A                   .dbend
 027A                   .dbfunc e Pwm_startup _Pwm_startup fV
 027A           ;              c -> R20
 027A           ;              b -> R22
 027A           ;          motor -> R16
                        .even
 027A           _Pwm_startup::
 027A 4A93              st -y,R20
 027C 6A93              st -y,R22
 027E                   .dbline -1
 027E                   .dbline 308
 027E           ; }
 027E           ; 
 027E           ; 
 027E           ; void Pwm_startup(unsigned char motor)//电机软启动
 027E           ; {     unsigned char c,b;
 027E                   .dbline 310
 027E           ; 
 027E           ;       if(motor==1)
 027E 0130              cpi R16,1
 0280 09F0              breq X32
 0282 7FC0              xjmp L58
 0284           X32:
 0284           X16:
 0284                   .dbline 311
 0284           ;       {         
 0284                   .dbline 312
 0284           ;            for(b=0;b<30;b++)//6ms采用降低占空比启动电机
 0284 6627              clr R22
 0286 37C0              xjmp L63
 0288           L60:
 0288                   .dbline 313
 0288           ;                {
 0288                   .dbline 314
 0288           ;                 PWM1_H
 0288                   .dbline 314
 0288 D19A              sbi 0x1a,1
 028A                   .dbline 314
 028A D99A              sbi 0x1b,1
 028C                   .dbline 314
 028C                   .dbline 315
 028C           ;                 DELAY100
 028C 2224              clr R2
 028E 3324              clr R3
 0290 3092B001          sts _Tt+1,R3
 0294 2092AF01          sts _Tt,R2
 0298 09C0              xjmp L67
 029A           L64:
 029A                   .dbline 315
 029A           L65:
 029A                   .dbline 315
 029A 8091AF01          lds R24,_Tt
 029E 9091B001          lds R25,_Tt+1
 02A2 0196              adiw R24,1
 02A4 9093B001          sts _Tt+1,R25
 02A8 8093AF01          sts _Tt,R24
 02AC           L67:
 02AC                   .dbline 315
 02AC 8091AF01          lds R24,_Tt
 02B0 9091B001          lds R25,_Tt+1
 02B4 8A32              cpi R24,42
 02B6 E0E0              ldi R30,0
 02B8 9E07              cpc R25,R30
 02BA 78F3              brlo L64
 02BC           X17:
 02BC                   .dbline 316
 02BC           ;                 PWM1_L
 02BC                   .dbline 316
 02BC D19A              sbi 0x1a,1
 02BE                   .dbline 316
 02BE 8BB3              in R24,0x1b
 02C0 8D7F              andi R24,253
 02C2 8BBB              out 0x1b,R24
 02C4                   .dbline 316
 02C4                   .dbline 317
 02C4           ;                 DELAY100
 02C4 2224              clr R2
 02C6 3324              clr R3
 02C8 3092B001          sts _Tt+1,R3
 02CC 2092AF01          sts _Tt,R2
 02D0 09C0              xjmp L71
 02D2           L68:
 02D2                   .dbline 317
 02D2           L69:
 02D2                   .dbline 317
 02D2 8091AF01          lds R24,_Tt
 02D6 9091B001          lds R25,_Tt+1
 02DA 0196              adiw R24,1
 02DC 9093B001          sts _Tt+1,R25
 02E0 8093AF01          sts _Tt,R24
 02E4           L71:
 02E4                   .dbline 317
 02E4 8091AF01          lds R24,_Tt
 02E8 9091B001          lds R25,_Tt+1
 02EC 8A32              cpi R24,42
 02EE E0E0              ldi R30,0
 02F0 9E07              cpc R25,R30
 02F2 78F3              brlo L68
 02F4           X18:
 02F4                   .dbline 318
 02F4           ;                }
 02F4           L61:
 02F4                   .dbline 312
 02F4 6395              inc R22
 02F6           L63:
 02F6                   .dbline 312
 02F6 6E31              cpi R22,30
 02F8 38F2              brlo L60
 02FA           X19:
 02FA                   .dbline 320
 02FA           ;  
 02FA           ;        for(c=0;c<200;c++)//150ms采用降低占空比启动电机
 02FA 4427              clr R20
 02FC 3EC0              xjmp L75
 02FE           L72:
 02FE                   .dbline 321
 02FE           ;                {
 02FE                   .dbline 322
 02FE           ;              PWM1_L
 02FE                   .dbline 322
 02FE D19A              sbi 0x1a,1
 0300                   .dbline 322
 0300 8BB3              in R24,0x1b
 0302 8D7F              andi R24,253
 0304 8BBB              out 0x1b,R24
 0306                   .dbline 322
 0306                   .dbline 323
 0306           ;                  for(b=0;b<(200-c);b++)
 0306 6627              clr R22
 0308 0CC0              xjmp L79
 030A           L76:
 030A                   .dbline 324
 030A           ;                   {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 030A                   .dbline 324
 030A 0000              nop
 030C                   .dbline 324
 030C 0000              nop
 030E                   .dbline 324
 030E 0000              nop
 0310                   .dbline 324
 0310 0000              nop
 0312                   .dbline 324
 0312 0000              nop
 0314                   .dbline 324
 0314 0000              nop
 0316                   .dbline 324
 0316 0000              nop
 0318                   .dbline 324
 0318 0000              nop
 031A                   .dbline 324
 031A 0000              nop
 031C                   .dbline 324
 031C 0000              nop
 031E                   .dbline 324
 031E 0000              nop
 0320                   .dbline 324
 0320           L77:
 0320                   .dbline 323
 0320 6395              inc R22
 0322           L79:
 0322                   .dbline 323
 0322 242E              mov R2,R20
 0324 3324              clr R3
 0326 88EC              ldi R24,200
 0328 90E0              ldi R25,0
 032A 2C01              movw R4,R24
 032C 4218              sub R4,R2
 032E 5308              sbc R5,R3
 0330 262E              mov R2,R22
 0332 3324              clr R3
 0334 2414              cp R2,R4
 0336 3504              cpc R3,R5
 0338 44F3              brlt L76
 033A           X20:
 033A                   .dbline 326
 033A           ;                       
 033A           ;              if(Motor1Status.s.UnderVoltage==0)//如意启动过程中没有发生欠压，则继续启动
 033A 20903902          lds R2,_Motor1Status
 033E 30903A02          lds R3,_Motor1Status+1
 0342 25FC              sbrc R2,5
 0344 03C0              rjmp L80
 0346           X21:
 0346                   .dbline 327
 0346           ;                  {PWM1_H}
 0346                   .dbline 327
 0346                   .dbline 327
 0346 D19A              sbi 0x1a,1
 0348                   .dbline 327
 0348 D99A              sbi 0x1b,1
 034A                   .dbline 327
 034A                   .dbline 327
 034A 04C0              xjmp L81
 034C           L80:
 034C                   .dbline 329
 034C           ;                  else 
 034C           ;                  {PWM1_L}
 034C                   .dbline 329
 034C                   .dbline 329
 034C D19A              sbi 0x1a,1
 034E                   .dbline 329
 034E 8BB3              in R24,0x1b
 0350 8D7F              andi R24,253
 0352 8BBB              out 0x1b,R24
 0354                   .dbline 329
 0354                   .dbline 329
 0354           L81:
 0354                   .dbline 331
 0354           ;                  
 0354           ;              for(b=0;b<(c+50);b++)
 0354 6627              clr R22
 0356 0CC0              xjmp L85
 0358           L82:
 0358                   .dbline 332
 0358           ;                  {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 0358                   .dbline 332
 0358 0000              nop
 035A                   .dbline 332
 035A 0000              nop
 035C                   .dbline 332
 035C 0000              nop
 035E                   .dbline 332
 035E 0000              nop
 0360                   .dbline 332
 0360 0000              nop
 0362                   .dbline 332
 0362 0000              nop
 0364                   .dbline 332
 0364 0000              nop
 0366                   .dbline 332
 0366 0000              nop
 0368                   .dbline 332
 0368 0000              nop
 036A                   .dbline 332
 036A 0000              nop
 036C                   .dbline 332
 036C 0000              nop
 036E                   .dbline 332
 036E           L83:
 036E                   .dbline 331
 036E 6395              inc R22
 0370           L85:
 0370                   .dbline 331
 0370 842F              mov R24,R20
 0372 8E5C              subi R24,206    ; addi 50
 0374 6817              cp R22,R24
 0376 80F3              brlo L82
 0378           X22:
 0378                   .dbline 333
 0378           ;                }      
 0378           L73:
 0378                   .dbline 320
 0378 4395              inc R20
 037A           L75:
 037A                   .dbline 320
 037A 483C              cpi R20,200
 037C 08F4              brsh X33
 037E BFCF              xjmp L72
 0380           X33:
 0380           X23:
 0380                   .dbline 334
 0380           ;       } 
 0380 A4C0              xjmp L59
 0382           L58:
 0382                   .dbline 335
 0382           ;       else if(motor==2)
 0382 0230              cpi R16,2
 0384 09F0              breq X34
 0386 A1C0              xjmp L86
 0388           X34:
 0388           X24:
 0388                   .dbline 336
 0388           ;       {  
 0388                   .dbline 337
 0388           ;            for(b=0;b<30;b++)//6ms采用降低占空比启动电机
 0388 6627              clr R22
 038A 45C0              xjmp L91
 038C           L88:
 038C                   .dbline 338
 038C           ;                {
 038C                   .dbline 339
 038C           ;                 PWM2_H
 038C                   .dbline 339
 038C 80916100          lds R24,97
 0390 8460              ori R24,4
 0392 80936100          sts 97,R24
 0396                   .dbline 339
 0396 80916200          lds R24,98
 039A 8460              ori R24,4
 039C 80936200          sts 98,R24
 03A0                   .dbline 339
 03A0                   .dbline 340
 03A0           ;                 DELAY100
 03A0 2224              clr R2
 03A2 3324              clr R3
 03A4 3092B001          sts _Tt+1,R3
 03A8 2092AF01          sts _Tt,R2
 03AC 09C0              xjmp L95
 03AE           L92:
 03AE                   .dbline 340
 03AE           L93:
 03AE                   .dbline 340
 03AE 8091AF01          lds R24,_Tt
 03B2 9091B001          lds R25,_Tt+1
 03B6 0196              adiw R24,1
 03B8 9093B001          sts _Tt+1,R25
 03BC 8093AF01          sts _Tt,R24
 03C0           L95:
 03C0                   .dbline 340
 03C0 8091AF01          lds R24,_Tt
 03C4 9091B001          lds R25,_Tt+1
 03C8 8A32              cpi R24,42
 03CA E0E0              ldi R30,0
 03CC 9E07              cpc R25,R30
 03CE 78F3              brlo L92
 03D0           X25:
 03D0                   .dbline 341
 03D0           ;                 PWM2_L
 03D0                   .dbline 341
 03D0 80916100          lds R24,97
 03D4 8460              ori R24,4
 03D6 80936100          sts 97,R24
 03DA                   .dbline 341
 03DA 80916200          lds R24,98
 03DE 8B7F              andi R24,251
 03E0 80936200          sts 98,R24
 03E4                   .dbline 341
 03E4                   .dbline 342
 03E4           ;                 DELAY100
 03E4 2224              clr R2
 03E6 3324              clr R3
 03E8 3092B001          sts _Tt+1,R3
 03EC 2092AF01          sts _Tt,R2
 03F0 09C0              xjmp L99
 03F2           L96:
 03F2                   .dbline 342
 03F2           L97:
 03F2                   .dbline 342
 03F2 8091AF01          lds R24,_Tt
 03F6 9091B001          lds R25,_Tt+1
 03FA 0196              adiw R24,1
 03FC 9093B001          sts _Tt+1,R25
 0400 8093AF01          sts _Tt,R24
 0404           L99:
 0404                   .dbline 342
 0404 8091AF01          lds R24,_Tt
 0408 9091B001          lds R25,_Tt+1
 040C 8A32              cpi R24,42
 040E E0E0              ldi R30,0
 0410 9E07              cpc R25,R30
 0412 78F3              brlo L96
 0414           X26:
 0414                   .dbline 343
 0414           ;                }
 0414           L89:
 0414                   .dbline 337
 0414 6395              inc R22
 0416           L91:
 0416                   .dbline 337
 0416 6E31              cpi R22,30
 0418 08F4              brsh X35
 041A B8CF              xjmp L88
 041C           X35:
 041C           X27:
 041C                   .dbline 345
 041C           ;  
 041C           ;        for(c=0;c<200;c++)//150ms采用降低占空比启动电机
 041C 4427              clr R20
 041E 52C0              xjmp L103
 0420           L100:
 0420                   .dbline 346
 0420           ;                {
 0420                   .dbline 347
 0420           ;              PWM2_L
 0420                   .dbline 347
 0420 80916100          lds R24,97
 0424 8460              ori R24,4
 0426 80936100          sts 97,R24
 042A                   .dbline 347
 042A 80916200          lds R24,98
 042E 8B7F              andi R24,251
 0430 80936200          sts 98,R24
 0434                   .dbline 347
 0434                   .dbline 348
 0434           ;                  for(b=0;b<(200-c);b++)
 0434 6627              clr R22
 0436 0CC0              xjmp L107
 0438           L104:
 0438                   .dbline 349
 0438           ;                   {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 0438                   .dbline 349
 0438 0000              nop
 043A                   .dbline 349
 043A 0000              nop
 043C                   .dbline 349
 043C 0000              nop
 043E                   .dbline 349
 043E 0000              nop
 0440                   .dbline 349
 0440 0000              nop
 0442                   .dbline 349
 0442 0000              nop
 0444                   .dbline 349
 0444 0000              nop
 0446                   .dbline 349
 0446 0000              nop
 0448                   .dbline 349
 0448 0000              nop
 044A                   .dbline 349
 044A 0000              nop
 044C                   .dbline 349
 044C 0000              nop
 044E                   .dbline 349
 044E           L105:
 044E                   .dbline 348
 044E 6395              inc R22
 0450           L107:
 0450                   .dbline 348
 0450 242E              mov R2,R20
 0452 3324              clr R3
 0454 88EC              ldi R24,200
 0456 90E0              ldi R25,0
 0458 2C01              movw R4,R24
 045A 4218              sub R4,R2
 045C 5308              sbc R5,R3
 045E 262E              mov R2,R22
 0460 3324              clr R3
 0462 2414              cp R2,R4
 0464 3504              cpc R3,R5
 0466 44F3              brlt L104
 0468           X28:
 0468                   .dbline 351
 0468           ;                       
 0468           ;              if(Motor2Status.s.UnderVoltage==0)//如意启动过程中没有发生欠压，则继续启动
 0468 20903702          lds R2,_Motor2Status
 046C 30903802          lds R3,_Motor2Status+1
 0470 25FC              sbrc R2,5
 0472 0BC0              rjmp L108
 0474           X29:
 0474                   .dbline 352
 0474           ;                  {PWM2_H}
 0474                   .dbline 352
 0474                   .dbline 352
 0474 80916100          lds R24,97
 0478 8460              ori R24,4
 047A 80936100          sts 97,R24
 047E                   .dbline 352
 047E 80916200          lds R24,98
 0482 8460              ori R24,4
 0484 80936200          sts 98,R24
 0488                   .dbline 352
 0488                   .dbline 352
 0488 0AC0              xjmp L109
 048A           L108:
 048A                   .dbline 354
 048A           ;                  else 
 048A           ;                  {PWM2_L}
 048A                   .dbline 354
 048A                   .dbline 354
 048A 80916100          lds R24,97
 048E 8460              ori R24,4
 0490 80936100          sts 97,R24
 0494                   .dbline 354
 0494 80916200          lds R24,98
 0498 8B7F              andi R24,251
 049A 80936200          sts 98,R24
 049E                   .dbline 354
 049E                   .dbline 354
 049E           L109:
 049E                   .dbline 356
 049E           ;                  
 049E           ;              for(b=0;b<(c+50);b++)
 049E 6627              clr R22
 04A0 0CC0              xjmp L113
 04A2           L110:
 04A2                   .dbline 357
 04A2           ;                  {asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");asm("nop");}
 04A2                   .dbline 357
 04A2 0000              nop
 04A4                   .dbline 357
 04A4 0000              nop
 04A6                   .dbline 357
 04A6 0000              nop
 04A8                   .dbline 357
 04A8 0000              nop
 04AA                   .dbline 357
 04AA 0000              nop
 04AC                   .dbline 357
 04AC 0000              nop
 04AE                   .dbline 357
 04AE 0000              nop
 04B0                   .dbline 357
 04B0 0000              nop
 04B2                   .dbline 357
 04B2 0000              nop
 04B4                   .dbline 357
 04B4 0000              nop
 04B6                   .dbline 357
 04B6 0000              nop
 04B8                   .dbline 357
 04B8           L111:
 04B8                   .dbline 356
 04B8 6395              inc R22
 04BA           L113:
 04BA                   .dbline 356
 04BA 842F              mov R24,R20
 04BC 8E5C              subi R24,206    ; addi 50
 04BE 6817              cp R22,R24
 04C0 80F3              brlo L110
 04C2           X30:
 04C2                   .dbline 358
 04C2           ;                }      
 04C2           L101:
 04C2                   .dbline 345
 04C2 4395              inc R20
 04C4           L103:
 04C4                   .dbline 345
 04C4 483C              cpi R20,200
 04C6 08F4              brsh X36
 04C8 ABCF              xjmp L100
 04CA           X36:
 04CA           X31:
 04CA                   .dbline 359
 04CA           ;       }
 04CA           L86:
 04CA           L59:
 04CA                   .dbline -2
 04CA           L57:
 04CA                   .dbline 0 ; func end
 04CA 6991              ld R22,y+
 04CC 4991              ld R20,y+
 04CE 0895              ret
 04D0                   .dbsym r c 20 c
 04D0                   .dbsym r b 22 c
 04D0                   .dbsym r motor 16 c
 04D0                   .dbend
 04D0                   .dbfunc e SampleADC _SampleADC fc
 04D0           ;           adcl -> y+0
 04D0           ;              c -> R10
 04D0           ;         ADdata -> R12,R13
 04D0           ;             ch -> R10
                        .even
 04D0           _SampleADC::
 04D0 0E940000          xcall push_xgsetF03C
 04D4 A02E              mov R10,R16
 04D6 2497              sbiw R28,4
 04D8                   .dbline -1
 04D8                   .dbline 364
 04D8           ; }
 04D8           ; 
 04D8           ;    
 04D8           ; unsigned char SampleADC(unsigned char ch)//耗时约5ms
 04D8           ; {     unsigned char c;
 04D8                   .dbline 368
 04D8           ;       unsigned long adcl;
 04D8           ;         unsigned int ADdata;
 04D8           ; 
 04D8           ;         ADMUX  = ch;//片外基准，选择单端输入通道 
 04D8 A7B8              out 0x7,R10
 04DA                   .dbline 369
 04DA           ;         ADCSRA =0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 04DA 83EC              ldi R24,195
 04DC 86B9              out 0x6,R24
 04DE                   .dbline 372
 04DE           ;    
 04DE           ;         //第一次采样值不要
 04DE           ;         for(ADdata=0;ADdata<100;ADdata++);
 04DE CC24              clr R12
 04E0 DD24              clr R13
 04E2 03C0              xjmp L118
 04E4           L115:
 04E4                   .dbline 372
 04E4           L116:
 04E4                   .dbline 372
 04E4 C601              movw R24,R12
 04E6 0196              adiw R24,1
 04E8 6C01              movw R12,R24
 04EA           L118:
 04EA                   .dbline 372
 04EA C601              movw R24,R12
 04EC 8436              cpi R24,100
 04EE E0E0              ldi R30,0
 04F0 9E07              cpc R25,R30
 04F2 C0F3              brlo L115
 04F4           X37:
 04F4           L119:
 04F4                   .dbline 373
 04F4           ;         while((ADCSRA&0x40)==0x40);//等待转换完成
 04F4           L120:
 04F4                   .dbline 373
 04F4 86B1              in R24,0x6
 04F6 8074              andi R24,64
 04F8 8034              cpi R24,64
 04FA E1F3              breq L119
 04FC           X38:
 04FC                   .dbline 374
 04FC           ;         ADdata=ADCL;
 04FC C4B0              in R12,0x4
 04FE DD24              clr R13
 0500                   .dbline 375
 0500           ;         ADdata=ADCH;  
 0500 C5B0              in R12,0x5
 0502 DD24              clr R13
 0504                   .dbline 377
 0504           ;   
 0504           ;         adcl=0;
 0504 80E0              ldi R24,0
 0506 8883              std y+0,R24
 0508 8983              std y+1,R24
 050A 8A83              std y+2,R24
 050C 8B83              std y+3,R24
 050E                   .dbline 378
 050E           ;         for(c=0;c<32;c++)//32次值取平均
 050E AA24              clr R10
 0510 2CC0              xjmp L125
 0512           L122:
 0512                   .dbline 379
 0512           ;         {
 0512                   .dbline 380
 0512           ;          ADCSRA = 0xC3;//ADC使能，ADC开始转换，ADC自动触发使能（连续转换模式），8分频 
 0512 83EC              ldi R24,195
 0514 86B9              out 0x6,R24
 0516                   .dbline 381
 0516           ;          for(ADdata=0;ADdata<100;ADdata++);
 0516 CC24              clr R12
 0518 DD24              clr R13
 051A 03C0              xjmp L129
 051C           L126:
 051C                   .dbline 381
 051C           L127:
 051C                   .dbline 381
 051C C601              movw R24,R12
 051E 0196              adiw R24,1
 0520 6C01              movw R12,R24
 0522           L129:
 0522                   .dbline 381
 0522 C601              movw R24,R12
 0524 8436              cpi R24,100
 0526 E0E0              ldi R30,0
 0528 9E07              cpc R25,R30
 052A C0F3              brlo L126
 052C           X39:
 052C           L130:
 052C                   .dbline 382
 052C           ;          while((ADCSRA&0x40)==0x40);//等待转换完成    
 052C           L131:
 052C                   .dbline 382
 052C 86B1              in R24,0x6
 052E 8074              andi R24,64
 0530 8034              cpi R24,64
 0532 E1F3              breq L130
 0534           X40:
 0534                   .dbline 383
 0534           ;          ADdata=ADCL;   
 0534 C4B0              in R12,0x4
 0536 DD24              clr R13
 0538                   .dbline 384
 0538           ;          ADdata|=(ADCH<<8);
 0538 25B0              in R2,0x5
 053A 3324              clr R3
 053C 322C              mov R3,R2
 053E 2224              clr R2
 0540 C228              or R12,R2
 0542 D328              or R13,R3
 0544                   .dbline 385
 0544           ;          ADdata&=0x03ff;//10位有效转换结果
 0544 C601              movw R24,R12
 0546 9370              andi R25,3
 0548 6C01              movw R12,R24
 054A                   .dbline 386
 054A           ;          adcl+=ADdata;
 054A 1C01              movw R2,R24
 054C 4424              clr R4
 054E 5524              clr R5
 0550 6880              ldd R6,y+0
 0552 7980              ldd R7,y+1
 0554 8A80              ldd R8,y+2
 0556 9B80              ldd R9,y+3
 0558 620C              add R6,R2
 055A 731C              adc R7,R3
 055C 841C              adc R8,R4
 055E 951C              adc R9,R5
 0560 6882              std y+0,R6
 0562 7982              std y+1,R7
 0564 8A82              std y+2,R8
 0566 9B82              std y+3,R9
 0568                   .dbline 387
 0568           ;         }
 0568           L123:
 0568                   .dbline 378
 0568 A394              inc R10
 056A           L125:
 056A                   .dbline 378
 056A 8A2D              mov R24,R10
 056C 8032              cpi R24,32
 056E 88F2              brlo L122
 0570           X41:
 0570                   .dbline 389
 0570           ; 
 0570           ;         adcl>>=7;//除以32，再除以4，相当于8位AD
 0570 87E0              ldi R24,7
 0572 90E0              ldi R25,0
 0574 0881              ldd R16,y+0
 0576 1981              ldd R17,y+1
 0578 2A81              ldd R18,y+2
 057A 3B81              ldd R19,y+3
 057C 8A93              st -y,R24
 057E 0E940000          xcall lsr32
 0582 0883              std y+0,R16
 0584 1983              std y+1,R17
 0586 2A83              std y+2,R18
 0588 3B83              std y+3,R19
 058A                   .dbline 390
 058A           ;         return (adcl&0x000000ff);//取8位有效位
 058A 4FEF              ldi R20,255
 058C 50E0              ldi R21,0
 058E 60E0              ldi R22,0
 0590 70E0              ldi R23,0
 0592 2880              ldd R2,y+0
 0594 3980              ldd R3,y+1
 0596 4A80              ldd R4,y+2
 0598 5B80              ldd R5,y+3
 059A 2422              and R2,R20
 059C 3522              and R3,R21
 059E 4622              and R4,R22
 05A0 5722              and R5,R23
 05A2 022D              mov R16,R2
 05A4                   .dbline -2
 05A4           L114:
 05A4                   .dbline 0 ; func end
 05A4 2496              adiw R28,4
 05A6 0C940000          xjmp pop_xgsetF03C
 05AA                   .dbsym l adcl 0 l
 05AA                   .dbsym r c 10 c
 05AA                   .dbsym r ADdata 12 i
 05AA                   .dbsym r ch 10 c
 05AA                   .dbend
 05AA                   .dbfunc e CheckMotor _CheckMotor fV
 05AA           ;              n -> R12,R13
 05AA           ;              f -> y+0
 05AA           ;              a -> R12
 05AA           ;              t -> R10,R11
                        .even
 05AA           _CheckMotor::
 05AA 0E940000          xcall push_xgsetF03C
 05AE 5801              movw R10,R16
 05B0 2497              sbiw R28,4
 05B2                   .dbline -1
 05B2                   .dbline 394
 05B2           ; }
 05B2           ; 
 05B2           ; void CheckMotor(unsigned int t)//电机不转时耗时5us，最大定时8388ms
 05B2           ; {   
 05B2                   .dbline 398
 05B2           ;     float f;
 05B2           ;       unsigned char a;
 05B2           ;     unsigned int n;
 05B2           ;     TCCR1B = 0x00; //stop
 05B2 2224              clr R2
 05B4 2EBC              out 0x2e,R2
 05B6                   .dbline 399
 05B6           ;       if(t>8388)
 05B6 84EC              ldi R24,8388
 05B8 90E2              ldi R25,32
 05BA 8A15              cp R24,R10
 05BC 9B05              cpc R25,R11
 05BE 08F4              brsh L134
 05C0           X42:
 05C0                   .dbline 400
 05C0           ;          t=8388;
 05C0 5C01              movw R10,R24
 05C2           L134:
 05C2                   .dbline 401
 05C2           ;       f=t;
 05C2 8501              movw R16,R10
 05C4 0E940000          xcall uint2fp
 05C8 0883              std y+0,R16
 05CA 1983              std y+1,R17
 05CC 2A83              std y+2,R18
 05CE 3B83              std y+3,R19
 05D0                   .dbline 402
 05D0           ;       f*=7.8125;
 05D0 00E0              ldi R16,<L136
 05D2 10E0              ldi R17,>L136
 05D4 0E940000          xcall elpm32
 05D8 CE01              movw R24,R28
 05DA 9A93              st -y,R25
 05DC 8A93              st -y,R24
 05DE 0E940000          xcall fpmule1
 05E2 0883              std y+0,R16
 05E4 1983              std y+1,R17
 05E6 2A83              std y+2,R18
 05E8 3B83              std y+3,R19
 05EA                   .dbline 403
 05EA           ;       n=f;
 05EA 0881              ldd R16,y+0
 05EC 1981              ldd R17,y+1
 05EE 2A81              ldd R18,y+2
 05F0 3B81              ldd R19,y+3
 05F2 0E940000          xcall fpint
 05F6 6801              movw R12,R16
 05F8                   .dbline 404
 05F8           ;     TCNT1 = 65536-n;   
 05F8 1601              movw R2,R12
 05FA 4424              clr R4
 05FC 5524              clr R5
 05FE 40E0              ldi R20,0
 0600 50E0              ldi R21,0
 0602 61E0              ldi R22,1
 0604 70E0              ldi R23,0
 0606 4219              sub R20,R2
 0608 5309              sbc R21,R3
 060A 6409              sbc R22,R4
 060C 7509              sbc R23,R5
 060E 5DBD              out 0x2d,R21
 0610 4CBD              out 0x2c,R20
 0612                   .dbline 405
 0612           ;       TCCR1B = 0x05; //1024分频
 0612 85E0              ldi R24,5
 0614 8EBD              out 0x2e,R24
 0616                   .dbline 406
 0616           ;       TIFR|=0x04; //清定时器1中断标志
 0616 86B7              in R24,0x36
 0618 8460              ori R24,4
 061A 86BF              out 0x36,R24
 061C 6AC1              xjmp L138
 061E           L137:
 061E                   .dbline 408
 061E           ;       while((TIFR&0x04)==0x00) 
 061E           ;    {
 061E                   .dbline 409
 061E           ;    if(PWM1_PIN==1)//电机运行时才实时检测电流，否则电流保存最后一次的测试值
 061E 89B3              in R24,0x19
 0620 8270              andi R24,2
 0622 8695              lsr R24
 0624 8130              cpi R24,1
 0626 09F0              breq X51
 0628 85C0              xjmp L140
 062A           X51:
 062A           X43:
 062A                   .dbline 410
 062A           ;    {
 062A                   .dbline 411
 062A           ;     a=SampleADC(7);
 062A 07E0              ldi R16,7
 062C 51DF              xcall _SampleADC
 062E C02E              mov R12,R16
 0630                   .dbline 412
 0630           ;     if(a>Motor1Thr)//过流关电机
 0630 20903402          lds R2,_Motor1Thr
 0634 3324              clr R3
 0636 4C2C              mov R4,R12
 0638 5524              clr R5
 063A 2414              cp R2,R4
 063C 3504              cpc R3,R5
 063E 34F5              brge L142
 0640           X44:
 0640                   .dbline 413
 0640           ;     {
 0640                   .dbline 414
 0640           ;        MOTORSTOP//关电机
 0640                   .dbline 414
 0640 8AB3              in R24,0x1a
 0642 8760              ori R24,7
 0644 8ABB              out 0x1a,R24
 0646                   .dbline 414
 0646 8BB3              in R24,0x1b
 0648 8D7F              andi R24,253
 064A 8BBB              out 0x1b,R24
 064C                   .dbline 414
 064C 8BB3              in R24,0x1b
 064E 887F              andi R24,248
 0650 8BBB              out 0x1b,R24
 0652                   .dbline 414
 0652 80916100          lds R24,97
 0656 8760              ori R24,7
 0658 80936100          sts 97,R24
 065C                   .dbline 414
 065C 80916200          lds R24,98
 0660 8B7F              andi R24,251
 0662 80936200          sts 98,R24
 0666                   .dbline 414
 0666 80916200          lds R24,98
 066A 887F              andi R24,248
 066C 80936200          sts 98,R24
 0670                   .dbline 414
 0670 BF9A              sbi 0x17,7
 0672                   .dbline 414
 0672 88B3              in R24,0x18
 0674 8F77              andi R24,127
 0676 88BB              out 0x18,R24
 0678                   .dbline 414
 0678                   .dbline 415
 0678           ;      Motor1Status.s.OverCurrent=1;//过流状态置1，表示电机上次停止原因为过流停
 0678 80913902          lds R24,_Motor1Status
 067C 90913A02          lds R25,_Motor1Status+1
 0680 8061              ori R24,16
 0682 90933A02          sts _Motor1Status+1,R25
 0686 80933902          sts _Motor1Status,R24
 068A                   .dbline 416
 068A           ;       }
 068A 29C0              xjmp L143
 068C           L142:
 068C                   .dbline 417
 068C           ;       else if(a<MotorIdelCur)//断路关电机 
 068C 20903102          lds R2,_MotorIdelCur
 0690 C214              cp R12,R2
 0692 28F5              brsh L144
 0694           X45:
 0694                   .dbline 418
 0694           ;       {
 0694                   .dbline 419
 0694           ;        MOTORSTOP//关电机
 0694                   .dbline 419
 0694 8AB3              in R24,0x1a
 0696 8760              ori R24,7
 0698 8ABB              out 0x1a,R24
 069A                   .dbline 419
 069A 8BB3              in R24,0x1b
 069C 8D7F              andi R24,253
 069E 8BBB              out 0x1b,R24
 06A0                   .dbline 419
 06A0 8BB3              in R24,0x1b
 06A2 887F              andi R24,248
 06A4 8BBB              out 0x1b,R24
 06A6                   .dbline 419
 06A6 80916100          lds R24,97
 06AA 8760              ori R24,7
 06AC 80936100          sts 97,R24
 06B0                   .dbline 419
 06B0 80916200          lds R24,98
 06B4 8B7F              andi R24,251
 06B6 80936200          sts 98,R24
 06BA                   .dbline 419
 06BA 80916200          lds R24,98
 06BE 887F              andi R24,248
 06C0 80936200          sts 98,R24
 06C4                   .dbline 419
 06C4 BF9A              sbi 0x17,7
 06C6                   .dbline 419
 06C6 88B3              in R24,0x18
 06C8 8F77              andi R24,127
 06CA 88BB              out 0x18,R24
 06CC                   .dbline 419
 06CC                   .dbline 420
 06CC           ;      Motor1Status.s.BrokenStop=1;//断路状态置1，表示电机上次停止原因为断路停
 06CC 80913902          lds R24,_Motor1Status
 06D0 90913A02          lds R25,_Motor1Status+1
 06D4 8460              ori R24,4
 06D6 90933A02          sts _Motor1Status+1,R25
 06DA 80933902          sts _Motor1Status,R24
 06DE                   .dbline 421
 06DE           ;       }
 06DE           L144:
 06DE           L143:
 06DE                   .dbline 422
 06DE           ;       f=a;
 06DE 0C2D              mov R16,R12
 06E0 1127              clr R17
 06E2 0E940000          xcall int2fp
 06E6 0883              std y+0,R16
 06E8 1983              std y+1,R17
 06EA 2A83              std y+2,R18
 06EC 3B83              std y+3,R19
 06EE                   .dbline 423
 06EE           ;       f*=1.2952;//f/=0.7721;
 06EE 00E0              ldi R16,<L146
 06F0 10E0              ldi R17,>L146
 06F2 0E940000          xcall elpm32
 06F6 CE01              movw R24,R28
 06F8 9A93              st -y,R25
 06FA 8A93              st -y,R24
 06FC 0E940000          xcall fpmule1
 0700 0883              std y+0,R16
 0702 1983              std y+1,R17
 0704 2A83              std y+2,R18
 0706 3B83              std y+3,R19
 0708                   .dbline 424
 0708           ;       Motor1Status.s.ThisCurrent=f;
 0708 0881              ldd R16,y+0
 070A 1981              ldd R17,y+1
 070C 2A81              ldd R18,y+2
 070E 3B81              ldd R19,y+3
 0710 0E940000          xcall fpint
 0714 C801              movw R24,R16
 0716 9070              andi R25,0
 0718 982F              mov R25,R24
 071A 8827              clr R24
 071C 8070              andi R24,0
 071E E0913902          lds R30,_Motor1Status
 0722 F0913A02          lds R31,_Motor1Status+1
 0726 F070              andi R31,0
 0728 E82B              or R30,R24
 072A F92B              or R31,R25
 072C F0933A02          sts _Motor1Status+1,R31
 0730 E0933902          sts _Motor1Status,R30
 0734                   .dbline 425
 0734           ;    }
 0734           L140:
 0734                   .dbline 426
 0734           ;     Motor1Status.s.PWM=PWM1_PIN; 
 0734 89B3              in R24,0x19
 0736 9927              clr R25
 0738 8270              andi R24,2
 073A 9070              andi R25,0
 073C 9595              asr R25
 073E 8795              ror R24
 0740 8170              andi R24,1
 0742 9070              andi R25,0
 0744 E0913902          lds R30,_Motor1Status
 0748 F0913A02          lds R31,_Motor1Status+1
 074C EE7F              andi R30,254
 074E E82B              or R30,R24
 0750 F92B              or R31,R25
 0752 F0933A02          sts _Motor1Status+1,R31
 0756 E0933902          sts _Motor1Status,R30
 075A                   .dbline 427
 075A           ;       Motor1Status.s.DIR=DIR1_PIN;
 075A 89B3              in R24,0x19
 075C 9927              clr R25
 075E 8470              andi R24,4
 0760 9070              andi R25,0
 0762 9595              asr R25
 0764 8795              ror R24
 0766 9595              asr R25
 0768 8795              ror R24
 076A 8170              andi R24,1
 076C 9070              andi R25,0
 076E 880F              lsl R24
 0770 991F              rol R25
 0772 8270              andi R24,2
 0774 9070              andi R25,0
 0776 ED7F              andi R30,253
 0778 E82B              or R30,R24
 077A F92B              or R31,R25
 077C F0933A02          sts _Motor1Status+1,R31
 0780 E0933902          sts _Motor1Status,R30
 0784                   .dbline 430
 0784           ;        
 0784           ;                          
 0784           ;    if(PWM2_PIN==1)//电机运行时才实时检测电流，否则电流保存最后一次的测试值
 0784 80B1              in R24,0x0
 0786 8470              andi R24,4
 0788 8695              lsr R24
 078A 8695              lsr R24
 078C 8130              cpi R24,1
 078E 09F0              breq X52
 0790 85C0              xjmp L147
 0792           X52:
 0792           X46:
 0792                   .dbline 431
 0792           ;    {
 0792                   .dbline 432
 0792           ;       a=SampleADC(6);
 0792 06E0              ldi R16,6
 0794 9DDE              xcall _SampleADC
 0796 C02E              mov R12,R16
 0798                   .dbline 433
 0798           ;     if(a>Motor2Thr)//过流关电机
 0798 20903302          lds R2,_Motor2Thr
 079C 3324              clr R3
 079E 4C2C              mov R4,R12
 07A0 5524              clr R5
 07A2 2414              cp R2,R4
 07A4 3504              cpc R3,R5
 07A6 34F5              brge L149
 07A8           X47:
 07A8                   .dbline 434
 07A8           ;     {
 07A8                   .dbline 435
 07A8           ;        MOTORSTOP//关电机
 07A8                   .dbline 435
 07A8 8AB3              in R24,0x1a
 07AA 8760              ori R24,7
 07AC 8ABB              out 0x1a,R24
 07AE                   .dbline 435
 07AE 8BB3              in R24,0x1b
 07B0 8D7F              andi R24,253
 07B2 8BBB              out 0x1b,R24
 07B4                   .dbline 435
 07B4 8BB3              in R24,0x1b
 07B6 887F              andi R24,248
 07B8 8BBB              out 0x1b,R24
 07BA                   .dbline 435
 07BA 80916100          lds R24,97
 07BE 8760              ori R24,7
 07C0 80936100          sts 97,R24
 07C4                   .dbline 435
 07C4 80916200          lds R24,98
 07C8 8B7F              andi R24,251
 07CA 80936200          sts 98,R24
 07CE                   .dbline 435
 07CE 80916200          lds R24,98
 07D2 887F              andi R24,248
 07D4 80936200          sts 98,R24
 07D8                   .dbline 435
 07D8 BF9A              sbi 0x17,7
 07DA                   .dbline 435
 07DA 88B3              in R24,0x18
 07DC 8F77              andi R24,127
 07DE 88BB              out 0x18,R24
 07E0                   .dbline 435
 07E0                   .dbline 436
 07E0           ;      Motor2Status.s.OverCurrent=1;//过流状态置1，表示电机上次停止原因为过流停
 07E0 80913702          lds R24,_Motor2Status
 07E4 90913802          lds R25,_Motor2Status+1
 07E8 8061              ori R24,16
 07EA 90933802          sts _Motor2Status+1,R25
 07EE 80933702          sts _Motor2Status,R24
 07F2                   .dbline 437
 07F2           ;       } 
 07F2 29C0              xjmp L150
 07F4           L149:
 07F4                   .dbline 438
 07F4           ;       else if(a<MotorIdelCur) //断路关电机
 07F4 20903102          lds R2,_MotorIdelCur
 07F8 C214              cp R12,R2
 07FA 28F5              brsh L151
 07FC           X48:
 07FC                   .dbline 439
 07FC           ;       {
 07FC                   .dbline 440
 07FC           ;        MOTORSTOP//关电机
 07FC                   .dbline 440
 07FC 8AB3              in R24,0x1a
 07FE 8760              ori R24,7
 0800 8ABB              out 0x1a,R24
 0802                   .dbline 440
 0802 8BB3              in R24,0x1b
 0804 8D7F              andi R24,253
 0806 8BBB              out 0x1b,R24
 0808                   .dbline 440
 0808 8BB3              in R24,0x1b
 080A 887F              andi R24,248
 080C 8BBB              out 0x1b,R24
 080E                   .dbline 440
 080E 80916100          lds R24,97
 0812 8760              ori R24,7
 0814 80936100          sts 97,R24
 0818                   .dbline 440
 0818 80916200          lds R24,98
 081C 8B7F              andi R24,251
 081E 80936200          sts 98,R24
 0822                   .dbline 440
 0822 80916200          lds R24,98
 0826 887F              andi R24,248
 0828 80936200          sts 98,R24
 082C                   .dbline 440
 082C BF9A              sbi 0x17,7
 082E                   .dbline 440
 082E 88B3              in R24,0x18
 0830 8F77              andi R24,127
 0832 88BB              out 0x18,R24
 0834                   .dbline 440
 0834                   .dbline 441
 0834           ;      Motor2Status.s.BrokenStop=1;//断路状态置1，表示电机上次停止原因为断路停
 0834 80913702          lds R24,_Motor2Status
 0838 90913802          lds R25,_Motor2Status+1
 083C 8460              ori R24,4
 083E 90933802          sts _Motor2Status+1,R25
 0842 80933702          sts _Motor2Status,R24
 0846                   .dbline 442
 0846           ;       }
 0846           L151:
 0846           L150:
 0846                   .dbline 443
 0846           ;       f=a;
 0846 0C2D              mov R16,R12
 0848 1127              clr R17
 084A 0E940000          xcall int2fp
 084E 0883              std y+0,R16
 0850 1983              std y+1,R17
 0852 2A83              std y+2,R18
 0854 3B83              std y+3,R19
 0856                   .dbline 444
 0856           ;       f*=1.2952;//f/=0.7721;
 0856 00E0              ldi R16,<L146
 0858 10E0              ldi R17,>L146
 085A 0E940000          xcall elpm32
 085E CE01              movw R24,R28
 0860 9A93              st -y,R25
 0862 8A93              st -y,R24
 0864 0E940000          xcall fpmule1
 0868 0883              std y+0,R16
 086A 1983              std y+1,R17
 086C 2A83              std y+2,R18
 086E 3B83              std y+3,R19
 0870                   .dbline 445
 0870           ;       Motor2Status.s.ThisCurrent=f;
 0870 0881              ldd R16,y+0
 0872 1981              ldd R17,y+1
 0874 2A81              ldd R18,y+2
 0876 3B81              ldd R19,y+3
 0878 0E940000          xcall fpint
 087C C801              movw R24,R16
 087E 9070              andi R25,0
 0880 982F              mov R25,R24
 0882 8827              clr R24
 0884 8070              andi R24,0
 0886 E0913702          lds R30,_Motor2Status
 088A F0913802          lds R31,_Motor2Status+1
 088E F070              andi R31,0
 0890 E82B              or R30,R24
 0892 F92B              or R31,R25
 0894 F0933802          sts _Motor2Status+1,R31
 0898 E0933702          sts _Motor2Status,R30
 089C                   .dbline 446
 089C           ;    }
 089C           L147:
 089C                   .dbline 447
 089C           ;    Motor2Status.s.PWM=PWM2_PIN; 
 089C 80B1              in R24,0x0
 089E 9927              clr R25
 08A0 8470              andi R24,4
 08A2 9070              andi R25,0
 08A4 9595              asr R25
 08A6 8795              ror R24
 08A8 9595              asr R25
 08AA 8795              ror R24
 08AC 8170              andi R24,1
 08AE 9070              andi R25,0
 08B0 E0913702          lds R30,_Motor2Status
 08B4 F0913802          lds R31,_Motor2Status+1
 08B8 EE7F              andi R30,254
 08BA E82B              or R30,R24
 08BC F92B              or R31,R25
 08BE F0933802          sts _Motor2Status+1,R31
 08C2 E0933702          sts _Motor2Status,R30
 08C6                   .dbline 448
 08C6           ;    Motor2Status.s.DIR=DIR2_PIN;  
 08C6 80B1              in R24,0x0
 08C8 9927              clr R25
 08CA 8170              andi R24,1
 08CC 9070              andi R25,0
 08CE 8170              andi R24,1
 08D0 9070              andi R25,0
 08D2 880F              lsl R24
 08D4 991F              rol R25
 08D6 8270              andi R24,2
 08D8 9070              andi R25,0
 08DA ED7F              andi R30,253
 08DC E82B              or R30,R24
 08DE F92B              or R31,R25
 08E0 F0933802          sts _Motor2Status+1,R31
 08E4 E0933702          sts _Motor2Status,R30
 08E8                   .dbline 449
 08E8           ;    if(t==0){break;}//不定时则检测一次电机状态后直接跳出
 08E8 AA20              tst R10
 08EA 19F4              brne L153
 08EC BB20              tst R11
 08EE 09F4              brne L153
 08F0           X49:
 08F0                   .dbline 449
 08F0                   .dbline 449
 08F0 03C0              xjmp L139
 08F2           L153:
 08F2                   .dbline 450
 08F2           ;    } 
 08F2           L138:
 08F2                   .dbline 407
 08F2 26B6              in R2,0x36
 08F4 22FE              sbrs R2,2
 08F6 93CE              rjmp L137
 08F8           X50:
 08F8           L139:
 08F8                   .dbline 451
 08F8           ;    TCCR1B = 0x00; //stop
 08F8 2224              clr R2
 08FA 2EBC              out 0x2e,R2
 08FC                   .dbline -2
 08FC           L133:
 08FC                   .dbline 0 ; func end
 08FC 2496              adiw R28,4
 08FE 0C940000          xjmp pop_xgsetF03C
 0902                   .dbsym r n 12 i
 0902                   .dbsym l f 0 D
 0902                   .dbsym r a 12 c
 0902                   .dbsym r t 10 i
 0902                   .dbend
 0902                   .dbfunc e Start _Start fV
                        .even
 0902           _Start::
 0902                   .dbline -1
 0902                   .dbline 456
 0902           ; }
 0902           ; 
 0902           ; 
 0902           ; void Start(void)
 0902           ; {
 0902                   .dbline 457
 0902           ;  InitialIO();
 0902 7EDB              xcall _InitialIO
 0904                   .dbline 458
 0904           ;  uart0_init();
 0904 95DB              xcall _uart0_init
 0906                   .dbline 460
 0906           ;  
 0906           ;  MOTORSTOP//关电机
 0906                   .dbline 460
 0906 8AB3              in R24,0x1a
 0908 8760              ori R24,7
 090A 8ABB              out 0x1a,R24
 090C                   .dbline 460
 090C 8BB3              in R24,0x1b
 090E 8D7F              andi R24,253
 0910 8BBB              out 0x1b,R24
 0912                   .dbline 460
 0912 8BB3              in R24,0x1b
 0914 887F              andi R24,248
 0916 8BBB              out 0x1b,R24
 0918                   .dbline 460
 0918 80916100          lds R24,97
 091C 8760              ori R24,7
 091E 80936100          sts 97,R24
 0922                   .dbline 460
 0922 80916200          lds R24,98
 0926 8B7F              andi R24,251
 0928 80936200          sts 98,R24
 092C                   .dbline 460
 092C 80916200          lds R24,98
 0930 887F              andi R24,248
 0932 80936200          sts 98,R24
 0936                   .dbline 460
 0936 BF9A              sbi 0x17,7
 0938                   .dbline 460
 0938 88B3              in R24,0x18
 093A 8F77              andi R24,127
 093C 88BB              out 0x18,R24
 093E                   .dbline 460
 093E                   .dbline 461
 093E           ;  BREAKE1_L//放开刹车
 093E                   .dbline 461
 093E D09A              sbi 0x1a,0
 0940                   .dbline 461
 0940 8BB3              in R24,0x1b
 0942 8E7F              andi R24,254
 0944 8BBB              out 0x1b,R24
 0946                   .dbline 461
 0946                   .dbline 462
 0946           ;  BREAKE2_L//放开刹车
 0946                   .dbline 462
 0946 80916100          lds R24,97
 094A 8260              ori R24,2
 094C 80936100          sts 97,R24
 0950                   .dbline 462
 0950 80916200          lds R24,98
 0954 8D7F              andi R24,253
 0956 80936200          sts 98,R24
 095A                   .dbline 462
 095A                   .dbline 464
 095A           ;  
 095A           ;  Motor1Status.s.PWM=PWM1_PIN; 
 095A 89B3              in R24,0x19
 095C 9927              clr R25
 095E 8270              andi R24,2
 0960 9070              andi R25,0
 0962 9595              asr R25
 0964 8795              ror R24
 0966 8170              andi R24,1
 0968 9070              andi R25,0
 096A E0913902          lds R30,_Motor1Status
 096E F0913A02          lds R31,_Motor1Status+1
 0972 EE7F              andi R30,254
 0974 E82B              or R30,R24
 0976 F92B              or R31,R25
 0978 F0933A02          sts _Motor1Status+1,R31
 097C E0933902          sts _Motor1Status,R30
 0980                   .dbline 465
 0980           ;  Motor1Status.s.DIR=DIR1_PIN;
 0980 89B3              in R24,0x19
 0982 9927              clr R25
 0984 8470              andi R24,4
 0986 9070              andi R25,0
 0988 9595              asr R25
 098A 8795              ror R24
 098C 9595              asr R25
 098E 8795              ror R24
 0990 8170              andi R24,1
 0992 9070              andi R25,0
 0994 880F              lsl R24
 0996 991F              rol R25
 0998 8270              andi R24,2
 099A 9070              andi R25,0
 099C ED7F              andi R30,253
 099E E82B              or R30,R24
 09A0 F92B              or R31,R25
 09A2 F0933A02          sts _Motor1Status+1,R31
 09A6 E0933902          sts _Motor1Status,R30
 09AA                   .dbline 466
 09AA           ;  Motor1Status.s.BrokenStop=0;
 09AA CF01              movw R24,R30
 09AC 8B7F              andi R24,251
 09AE 90933A02          sts _Motor1Status+1,R25
 09B2 80933902          sts _Motor1Status,R24
 09B6                   .dbline 467
 09B6           ;  Motor1Status.s.CommandStop=0;
 09B6 877F              andi R24,247
 09B8 90933A02          sts _Motor1Status+1,R25
 09BC 80933902          sts _Motor1Status,R24
 09C0                   .dbline 468
 09C0           ;  Motor1Status.s.OverCurrent=0;
 09C0 8F7E              andi R24,239
 09C2 90933A02          sts _Motor1Status+1,R25
 09C6 80933902          sts _Motor1Status,R24
 09CA                   .dbline 469
 09CA           ;  Motor1Status.s.UnderVoltage=0;
 09CA 8F7D              andi R24,223
 09CC 90933A02          sts _Motor1Status+1,R25
 09D0 80933902          sts _Motor1Status,R24
 09D4                   .dbline 470
 09D4           ;  Motor1Status.s.StartResult=0;
 09D4 8F73              andi R24,63
 09D6 90933A02          sts _Motor1Status+1,R25
 09DA 80933902          sts _Motor1Status,R24
 09DE                   .dbline 471
 09DE           ;  Motor1Status.s.ThisCurrent=0;
 09DE 9070              andi R25,0
 09E0 90933A02          sts _Motor1Status+1,R25
 09E4 80933902          sts _Motor1Status,R24
 09E8                   .dbline 473
 09E8           ;  
 09E8           ;  Motor2Status.s.PWM=PWM2_PIN; 
 09E8 80B1              in R24,0x0
 09EA 9927              clr R25
 09EC 8470              andi R24,4
 09EE 9070              andi R25,0
 09F0 9595              asr R25
 09F2 8795              ror R24
 09F4 9595              asr R25
 09F6 8795              ror R24
 09F8 8170              andi R24,1
 09FA 9070              andi R25,0
 09FC E0913702          lds R30,_Motor2Status
 0A00 F0913802          lds R31,_Motor2Status+1
 0A04 EE7F              andi R30,254
 0A06 E82B              or R30,R24
 0A08 F92B              or R31,R25
 0A0A F0933802          sts _Motor2Status+1,R31
 0A0E E0933702          sts _Motor2Status,R30
 0A12                   .dbline 474
 0A12           ;  Motor2Status.s.DIR=DIR2_PIN;
 0A12 80B1              in R24,0x0
 0A14 9927              clr R25
 0A16 8170              andi R24,1
 0A18 9070              andi R25,0
 0A1A 8170              andi R24,1
 0A1C 9070              andi R25,0
 0A1E 880F              lsl R24
 0A20 991F              rol R25
 0A22 8270              andi R24,2
 0A24 9070              andi R25,0
 0A26 ED7F              andi R30,253
 0A28 E82B              or R30,R24
 0A2A F92B              or R31,R25
 0A2C F0933802          sts _Motor2Status+1,R31
 0A30 E0933702          sts _Motor2Status,R30
 0A34                   .dbline 475
 0A34           ;  Motor2Status.s.BrokenStop=0;
 0A34 CF01              movw R24,R30
 0A36 8B7F              andi R24,251
 0A38 90933802          sts _Motor2Status+1,R25
 0A3C 80933702          sts _Motor2Status,R24
 0A40                   .dbline 476
 0A40           ;  Motor2Status.s.CommandStop=0;
 0A40 877F              andi R24,247
 0A42 90933802          sts _Motor2Status+1,R25
 0A46 80933702          sts _Motor2Status,R24
 0A4A                   .dbline 477
 0A4A           ;  Motor2Status.s.OverCurrent=0;
 0A4A 8F7E              andi R24,239
 0A4C 90933802          sts _Motor2Status+1,R25
 0A50 80933702          sts _Motor2Status,R24
 0A54                   .dbline 478
 0A54           ;  Motor2Status.s.UnderVoltage=0;
 0A54 8F7D              andi R24,223
 0A56 90933802          sts _Motor2Status+1,R25
 0A5A 80933702          sts _Motor2Status,R24
 0A5E                   .dbline 479
 0A5E           ;  Motor2Status.s.StartResult=0;
 0A5E 8F73              andi R24,63
 0A60 90933802          sts _Motor2Status+1,R25
 0A64 80933702          sts _Motor2Status,R24
 0A68                   .dbline 480
 0A68           ;  Motor2Status.s.ThisCurrent=0;
 0A68 9070              andi R25,0
 0A6A 90933802          sts _Motor2Status+1,R25
 0A6E 80933702          sts _Motor2Status,R24
 0A72                   .dbline 482
 0A72           ;  
 0A72           ;  IntFlag=0;//无接收帧中断
 0A72 2224              clr R2
 0A74 2092B101          sts _IntFlag,R2
 0A78                   .dbline 483
 0A78           ;  DataFlag=0;//无标定系数下发 
 0A78 3324              clr R3
 0A7A 3092B401          sts _DataFlag+1,R3
 0A7E 2092B301          sts _DataFlag,R2
 0A82                   .dbline 484
 0A82           ;  coeff_len=0;
 0A82 30921F00          sts _coeff_len+1,R3
 0A86 20921E00          sts _coeff_len,R2
 0A8A                   .dbline 485
 0A8A           ;  coeff_count=0;//标定系数计数
 0A8A 30921D00          sts _coeff_count+1,R3
 0A8E 20921C00          sts _coeff_count,R2
 0A92                   .dbline 487
 0A92           ;  
 0A92           ;  ACSR|=0x10;//清模拟比较器中断标志
 0A92 449A              sbi 0x8,4
 0A94                   .dbline 488
 0A94           ;  ACSR&=0xf7;//关模拟比较器中断，
 0A94 88B1              in R24,0x8
 0A96 877F              andi R24,247
 0A98 88B9              out 0x8,R24
 0A9A                   .dbline 489
 0A9A           ;  ACSR|=0x02;//开模拟比较器,AIN1连到比较器负极，0:比较器输出变化即中断，1：保留，2：下降沿中断，3:上升沿中断       
 0A9A 419A              sbi 0x8,1
 0A9C                   .dbline 490
 0A9C           ;  ACSR|=0x08;//开模拟比较器中断，任何时候都要进行欠压监测      
 0A9C 439A              sbi 0x8,3
 0A9E                   .dbline 491
 0A9E           ;  ACSR|=0x10;//清模拟比较器中断标志    
 0A9E 449A              sbi 0x8,4
 0AA0                   .dbline 494
 0AA0           ;       
 0AA0           ; 
 0AA0           ;  EIFR|=0x08;//清INT3中断标志,每位控制一个中断，可控制8个中断
 0AA0 88B7              in R24,0x38
 0AA2 8860              ori R24,8
 0AA4 88BF              out 0x38,R24
 0AA6                   .dbline 495
 0AA6           ;  EICRA|=0xc0; //INT3上升沿触发 ，每2位控制一个中断，共4个中断，0-低电平触发，1-保留，2-下降沿触发，3-上升沿触发
 0AA6 80916A00          lds R24,106
 0AAA 806C              ori R24,192
 0AAC 80936A00          sts 106,R24
 0AB0                   .dbline 496
 0AB0           ;  EIMSK|=0x08;//使能INT3中断 ,每位控制一个中断，可控制8个中断
 0AB0 89B7              in R24,0x39
 0AB2 8860              ori R24,8
 0AB4 89BF              out 0x39,R24
 0AB6                   .dbline 498
 0AB6           ;  
 0AB6           ;  SREG=0x80;//总中断使能
 0AB6 80E8              ldi R24,128
 0AB8 8FBF              out 0x3f,R24
 0ABA                   .dbline 500
 0ABA           ;  
 0ABA           ;  M1_H
 0ABA 929A              sbi 0x12,2
 0ABC                   .dbline 501
 0ABC           ;  CheckMotor(50);
 0ABC 02E3              ldi R16,50
 0ABE 10E0              ldi R17,0
 0AC0 74DD              xcall _CheckMotor
 0AC2                   .dbline 502
 0AC2           ;  M1_L
 0AC2 82B3              in R24,0x12
 0AC4 8B7F              andi R24,251
 0AC6 82BB              out 0x12,R24
 0AC8                   .dbline -2
 0AC8           L155:
 0AC8                   .dbline 0 ; func end
 0AC8 0895              ret
 0ACA                   .dbend
 0ACA                   .dbfunc e Gear2Thr _Gear2Thr fV
                        .even
 0ACA           _Gear2Thr::
 0ACA                   .dbline -1
 0ACA                   .dbline 507
 0ACA           ;  
 0ACA           ; }
 0ACA           ; 
 0ACA           ; void Gear2Thr(void)
 0ACA           ; {
 0ACA                   .dbline 509
 0ACA           ; //将电机过流档位换算为数字量，方便中断函数中进行比较运算
 0ACA           ;   if(Motor1Gear<1) {Motor1Gear=1;}//堵转电流最小为1档
 0ACA 80913602          lds R24,_Motor1Gear
 0ACE 8130              cpi R24,1
 0AD0 18F4              brsh L157
 0AD2           X53:
 0AD2                   .dbline 509
 0AD2                   .dbline 509
 0AD2 81E0              ldi R24,1
 0AD4 80933602          sts _Motor1Gear,R24
 0AD8                   .dbline 509
 0AD8           L157:
 0AD8                   .dbline 510
 0AD8           ;   if(Motor1Gear>6) {Motor1Gear=6;}//堵转电流最大为6档
 0AD8 86E0              ldi R24,6
 0ADA 20903602          lds R2,_Motor1Gear
 0ADE 8215              cp R24,R2
 0AE0 10F4              brsh L159
 0AE2           X54:
 0AE2                   .dbline 510
 0AE2                   .dbline 510
 0AE2 80933602          sts _Motor1Gear,R24
 0AE6                   .dbline 510
 0AE6           L159:
 0AE6                   .dbline 511
 0AE6           ;   if(Motor2Gear<1) {Motor2Gear=6;}//堵转电流最小为1档
 0AE6 80913502          lds R24,_Motor2Gear
 0AEA 8130              cpi R24,1
 0AEC 18F4              brsh L161
 0AEE           X55:
 0AEE                   .dbline 511
 0AEE                   .dbline 511
 0AEE 86E0              ldi R24,6
 0AF0 80933502          sts _Motor2Gear,R24
 0AF4                   .dbline 511
 0AF4           L161:
 0AF4                   .dbline 512
 0AF4           ;   if(Motor2Gear>6) {Motor2Gear=6;}//堵转电流最大为6档
 0AF4 86E0              ldi R24,6
 0AF6 20903502          lds R2,_Motor2Gear
 0AFA 8215              cp R24,R2
 0AFC 10F4              brsh L163
 0AFE           X56:
 0AFE                   .dbline 512
 0AFE                   .dbline 512
 0AFE 80933502          sts _Motor2Gear,R24
 0B02                   .dbline 512
 0B02           L163:
 0B02                   .dbline 514
 0B02           ;   //第1档从100mA起步，每档差值30mA,7.721/10mA，第6档约250mA
 0B02           ;   Motor1Thr= 78+ (Motor1Gear-1)*23;
 0B02 10913602          lds R17,_Motor1Gear
 0B06 07E1              ldi R16,23
 0B08 0103              mulsu R16,R17
 0B0A 802D              mov R24,R0
 0B0C 8751              subi R24,23
 0B0E 825B              subi R24,178    ; addi 78
 0B10 80933402          sts _Motor1Thr,R24
 0B14                   .dbline 515
 0B14           ;   Motor2Thr= 78+ (Motor2Gear-1)*23;
 0B14 10913502          lds R17,_Motor2Gear
 0B18 0103              mulsu R16,R17
 0B1A 802D              mov R24,R0
 0B1C 8751              subi R24,23
 0B1E 825B              subi R24,178    ; addi 78
 0B20 80933302          sts _Motor2Thr,R24
 0B24                   .dbline 517
 0B24           ;   
 0B24           ;   if(MotorIdelGear<1){MotorIdelGear=1;}//电机断路电流最小1档
 0B24 80913202          lds R24,_MotorIdelGear
 0B28 8130              cpi R24,1
 0B2A 18F4              brsh L165
 0B2C           X57:
 0B2C                   .dbline 517
 0B2C                   .dbline 517
 0B2C 81E0              ldi R24,1
 0B2E 80933202          sts _MotorIdelGear,R24
 0B32                   .dbline 517
 0B32           L165:
 0B32                   .dbline 518
 0B32           ;   if(MotorIdelGear>6){MotorIdelGear=6;}//电机断路电流最大6档
 0B32 86E0              ldi R24,6
 0B34 20903202          lds R2,_MotorIdelGear
 0B38 8215              cp R24,R2
 0B3A 10F4              brsh L167
 0B3C           X58:
 0B3C                   .dbline 518
 0B3C                   .dbline 518
 0B3C 80933202          sts _MotorIdelGear,R24
 0B40                   .dbline 518
 0B40           L167:
 0B40                   .dbline 520
 0B40           ;   //从5mA起步，最大55mA
 0B40           ;   MotorIdelCur=(MotorIdelGear-1)*8+4;
 0B40 80913202          lds R24,_MotorIdelGear
 0B44 8150              subi R24,1
 0B46 880F              lsl R24
 0B48 880F              lsl R24
 0B4A 880F              lsl R24
 0B4C 8C5F              subi R24,252    ; addi 4
 0B4E 80933102          sts _MotorIdelCur,R24
 0B52                   .dbline -2
 0B52           L156:
 0B52                   .dbline 0 ; func end
 0B52 0895              ret
 0B54                   .dbend
 0B54                   .dbfunc e main _main fV
 0B54           ;              l -> y+5
 0B54           ;             pt -> <dead>
 0B54           ;             mk -> <dead>
 0B54           ;             at -> <dead>
 0B54           ;            add -> <dead>
 0B54           ;              j -> R12,R13
 0B54           ; TestDataBlockCount -> R12,R13
 0B54           ; TestDataBlockIndex -> R10,R11
 0B54           ;              f -> y+1
 0B54           ;              i -> R10
                        .even
 0B54           _main::
 0B54 2997              sbiw R28,9
 0B56                   .dbline -1
 0B56                   .dbline 525
 0B56           ;   
 0B56           ; }
 0B56           ; 
 0B56           ; void main(void)
 0B56           ; { 
 0B56                   .dbline 532
 0B56           ;   unsigned char i;
 0B56           ;   unsigned int add,at,mk,pt,j;
 0B56           ;   unsigned long l;
 0B56           ;   unsigned int TestDataBlockIndex,TestDataBlockCount;
 0B56           ;   float f;
 0B56           ;  
 0B56           ;   Start();
 0B56 D5DE              xcall _Start
 0B58                   .dbline 534
 0B58           ;   
 0B58           ;   CheckMotor(50); 
 0B58 02E3              ldi R16,50
 0B5A 10E0              ldi R17,0
 0B5C 26DD              xcall _CheckMotor
 0B5E                   .dbline 536
 0B5E           ;   
 0B5E           ;   Motor1Gear=EEPROM_read(0);
 0B5E 0027              clr R16
 0B60 1127              clr R17
 0B62 0E94CD21          xcall _EEPROM_read
 0B66 00933602          sts _Motor1Gear,R16
 0B6A                   .dbline 537
 0B6A           ;   Motor2Gear=EEPROM_read(1);
 0B6A 01E0              ldi R16,1
 0B6C 10E0              ldi R17,0
 0B6E 0E94CD21          xcall _EEPROM_read
 0B72 00933502          sts _Motor2Gear,R16
 0B76                   .dbline 538
 0B76           ;   MotorIdelCur=EEPROM_read(2);
 0B76 02E0              ldi R16,2
 0B78 10E0              ldi R17,0
 0B7A 0E94CD21          xcall _EEPROM_read
 0B7E A02E              mov R10,R16
 0B80 A0923102          sts _MotorIdelCur,R10
 0B84                   .dbline 539
 0B84           ;   Gear2Thr();
 0B84 A2DF              xcall _Gear2Thr
 0B86                   .dbline 542
 0B86           ;   
 0B86           ;   //采集总线电压，判断是否进入存储状态  
 0B86           ;   if(SampleADC(5)<45)//Cable端的电压低于30V 
 0B86 05E0              ldi R16,5
 0B88 A3DC              xcall _SampleADC
 0B8A A02E              mov R10,R16
 0B8C 0D32              cpi R16,45
 0B8E 10F0              brlo X247
 0B90 0C94401B          xjmp L176
 0B94           X247:
 0B94           X59:
 0B94                   .dbline 543
 0B94           ;       {         UCSR0B = 0x00;
 0B94                   .dbline 543
 0B94 2224              clr R2
 0B96 2AB8              out 0xa,R2
 0B98                   .dbline 544
 0B98           ;             PORTE&=0xFD;
 0B98 83B1              in R24,0x3
 0B9A 8D7F              andi R24,253
 0B9C 83B9              out 0x3,R24
 0B9E                   .dbline 545
 0B9E           ;                 DDRE|=0x02;
 0B9E 119A              sbi 0x2,1
 0BA0                   .dbline 546
 0BA0           ;                 PORTE&=0xFD;   
 0BA0 83B1              in R24,0x3
 0BA2 8D7F              andi R24,253
 0BA4 83B9              out 0x3,R24
 0BA6           L172:
 0BA6                   .dbline 547
 0BA6           ;                 while(1); 
 0BA6           L173:
 0BA6                   .dbline 547
 0BA6 FFCF              xjmp L172
 0BA8           L175:
 0BA8                   .dbline 551
 0BA8           ;       }
 0BA8           ;            
 0BA8           ; while(1)//若Cable端为高电压，则进入正常的通讯状态
 0BA8           ; { 
 0BA8                   .dbline 552
 0BA8           ;    CheckMotor(0);//实时进行电机过流检测
 0BA8 0027              clr R16
 0BAA 1127              clr R17
 0BAC FEDC              xcall _CheckMotor
 0BAE                   .dbline 554
 0BAE           ; 
 0BAE           ;    if(IntFlag==2)//校验位错误，不上传任何响应，上位机按超时处理
 0BAE 8091B101          lds R24,_IntFlag
 0BB2 8230              cpi R24,2
 0BB4 59F4              brne L178
 0BB6           X60:
 0BB6                   .dbline 555
 0BB6           ;    { 
 0BB6                   .dbline 556
 0BB6           ;       IntFlag=0;//无命令帧
 0BB6 2224              clr R2
 0BB8 2092B101          sts _IntFlag,R2
 0BBC                   .dbline 557
 0BBC           ;       EIFR|=0x08;//清INT3中断标志
 0BBC 88B7              in R24,0x38
 0BBE 8860              ori R24,8
 0BC0 88BF              out 0x38,R24
 0BC2                   .dbline 558
 0BC2           ;     EIMSK|=0x08;//使能INT3中断         
 0BC2 89B7              in R24,0x39
 0BC4 8860              ori R24,8
 0BC6 89BF              out 0x39,R24
 0BC8                   .dbline 559
 0BC8           ;    }
 0BC8 0C94401B          xjmp L179
 0BCC           L178:
 0BCC                   .dbline 560
 0BCC           ;    else if(IntFlag==1)//接收到了正常命令帧
 0BCC 8091B101          lds R24,_IntFlag
 0BD0 8130              cpi R24,1
 0BD2 11F0              breq X248
 0BD4 0C94401B          xjmp L180
 0BD8           X248:
 0BD8           X61:
 0BD8                   .dbline 561
 0BD8           ;    {
 0BD8                   .dbline 562
 0BD8           ;       if(DataFlag)
 0BD8 2090B301          lds R2,_DataFlag
 0BDC 3090B401          lds R3,_DataFlag+1
 0BE0 2220              tst R2
 0BE2 19F4              brne X62
 0BE4 3320              tst R3
 0BE6 09F4              brne X249
 0BE8 B9C4              xjmp L182
 0BEA           X249:
 0BEA           X62:
 0BEA                   .dbline 563
 0BEA           ;      {                  
 0BEA                   .dbline 564
 0BEA           ;         coeffdata[coeff_count]=R_dat;
 0BEA 80E0              ldi R24,<_coeffdata
 0BEC 90E0              ldi R25,>_coeffdata
 0BEE E0911C00          lds R30,_coeff_count
 0BF2 F0911D00          lds R31,_coeff_count+1
 0BF6 E80F              add R30,R24
 0BF8 F91F              adc R31,R25
 0BFA 2090CD01          lds R2,_R_dat
 0BFE 3090CE01          lds R3,_R_dat+1
 0C02 2082              std z+0,R2
 0C04                   .dbline 565
 0C04           ;         coeff_count++;          
 0C04 80911C00          lds R24,_coeff_count
 0C08 90911D00          lds R25,_coeff_count+1
 0C0C 0196              adiw R24,1
 0C0E 90931D00          sts _coeff_count+1,R25
 0C12 80931C00          sts _coeff_count,R24
 0C16                   .dbline 567
 0C16           ;  
 0C16           ;         if(coeff_count==coeff_len)
 0C16 20901E00          lds R2,_coeff_len
 0C1A 30901F00          lds R3,_coeff_len+1
 0C1E 8215              cp R24,R2
 0C20 9305              cpc R25,R3
 0C22 11F0              breq X250
 0C24 0C94371B          xjmp L183
 0C28           X250:
 0C28           X63:
 0C28                   .dbline 568
 0C28           ;         {
 0C28                   .dbline 569
 0C28           ;               if(DataFlag==1)//下发压力温度系数
 0C28 8091B301          lds R24,_DataFlag
 0C2C 9091B401          lds R25,_DataFlag+1
 0C30 8130              cpi R24,1
 0C32 E0E0              ldi R30,0
 0C34 9E07              cpc R25,R30
 0C36 09F0              breq X251
 0C38 E5C0              xjmp L186
 0C3A           X251:
 0C3A           X64:
 0C3A                   .dbline 570
 0C3A           ;           {
 0C3A                   .dbline 571
 0C3A           ;                Uart0TxData[0]=0xE8;
 0C3A 88EE              ldi R24,232
 0C3C 80932100          sts _Uart0TxData,R24
 0C40                   .dbline 572
 0C40           ;                Uart0TxData[1]=0x40;
 0C40 80E4              ldi R24,64
 0C42 80932200          sts _Uart0TxData+1,R24
 0C46                   .dbline 573
 0C46           ;                Uart0TxData[2]=0x88;
 0C46 88E8              ldi R24,136
 0C48 80932300          sts _Uart0TxData+2,R24
 0C4C                   .dbline 574
 0C4C           ;                Uart0TxData[3]=0;//压力温度系数包0
 0C4C 2224              clr R2
 0C4E 20922400          sts _Uart0TxData+3,R2
 0C52                   .dbline 575
 0C52           ;                Uart0TxData[4]=0x21;
 0C52 81E2              ldi R24,33
 0C54 80932500          sts _Uart0TxData+4,R24
 0C58                   .dbline 576
 0C58           ;                Uart0TxData[5]=0x22;
 0C58 82E2              ldi R24,34
 0C5A 80932600          sts _Uart0TxData+5,R24
 0C5E                   .dbline 577
 0C5E           ;                Uart0TxData[6]=0x23;
 0C5E 83E2              ldi R24,35
 0C60 80932700          sts _Uart0TxData+6,R24
 0C64                   .dbline 578
 0C64           ;                Uart0TxData[7]=0x24;
 0C64 84E2              ldi R24,36
 0C66 80932800          sts _Uart0TxData+7,R24
 0C6A                   .dbline 579
 0C6A           ;                Uart0TxData[8]=0x32;    
 0C6A 82E3              ldi R24,50
 0C6C 80932900          sts _Uart0TxData+8,R24
 0C70                   .dbline 580
 0C70           ;                for(k=0;k<64;k++)
 0C70 3324              clr R3
 0C72 3092AE01          sts _k+1,R3
 0C76 2092AD01          sts _k,R2
 0C7A 1AC0              xjmp L199
 0C7C           L196:
 0C7C                   .dbline 581
 0C7C           ;                {
 0C7C                   .dbline 582
 0C7C           ;                Uart0TxData[9+k]=coeffdata[k];  
 0C7C A090AD01          lds R10,_k
 0C80 B090AE01          lds R11,_k+1
 0C84 80E0              ldi R24,<_coeffdata
 0C86 90E0              ldi R25,>_coeffdata
 0C88 F501              movw R30,R10
 0C8A E80F              add R30,R24
 0C8C F91F              adc R31,R25
 0C8E 2080              ldd R2,z+0
 0C90 80E0              ldi R24,<_Uart0TxData
 0C92 90E0              ldi R25,>_Uart0TxData
 0C94 F501              movw R30,R10
 0C96 3996              adiw R30,9
 0C98 E80F              add R30,R24
 0C9A F91F              adc R31,R25
 0C9C 2082              std z+0,R2
 0C9E                   .dbline 583
 0C9E           ;                }               
 0C9E           L197:
 0C9E                   .dbline 580
 0C9E 8091AD01          lds R24,_k
 0CA2 9091AE01          lds R25,_k+1
 0CA6 0196              adiw R24,1
 0CA8 9093AE01          sts _k+1,R25
 0CAC 8093AD01          sts _k,R24
 0CB0           L199:
 0CB0                   .dbline 580
 0CB0 8091AD01          lds R24,_k
 0CB4 9091AE01          lds R25,_k+1
 0CB8 8034              cpi R24,64
 0CBA E0E0              ldi R30,0
 0CBC 9E07              cpc R25,R30
 0CBE F0F2              brlo L196
 0CC0           X65:
 0CC0                   .dbline 584
 0CC0           ;                SendUart0_2(74,20);//超时160ms
 0CC0 24E1              ldi R18,20
 0CC2 30E0              ldi R19,0
 0CC4 0AE4              ldi R16,74
 0CC6 33DA              xcall _SendUart0_2
 0CC8                   .dbline 585
 0CC8           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0CC8 8091E301          lds R24,_Uart0RxCounter
 0CCC 8930              cpi R24,9
 0CCE B1F4              brne L200
 0CD0           X66:
 0CD0 8091E401          lds R24,_Uart0RxData
 0CD4 8535              cpi R24,85
 0CD6 91F4              brne L200
 0CD8           X67:
 0CD8 8091E501          lds R24,_Uart0RxData+1
 0CDC 8034              cpi R24,64
 0CDE 71F4              brne L200
 0CE0           X68:
 0CE0 8091E601          lds R24,_Uart0RxData+2
 0CE4 8838              cpi R24,136
 0CE6 51F4              brne L200
 0CE8           X69:
 0CE8                   .dbline 586
 0CE8           ;                {T_dat&=0xff00; }
 0CE8                   .dbline 586
 0CE8 8091CF01          lds R24,_T_dat
 0CEC 9091D001          lds R25,_T_dat+1
 0CF0 8070              andi R24,0
 0CF2 9093D001          sts _T_dat+1,R25
 0CF6 8093CF01          sts _T_dat,R24
 0CFA                   .dbline 586
 0CFA 06C0              xjmp L201
 0CFC           L200:
 0CFC                   .dbline 588
 0CFC           ;                else
 0CFC           ;                {T_dat=0x00aa; }
 0CFC                   .dbline 588
 0CFC 8AEA              ldi R24,170
 0CFE 90E0              ldi R25,0
 0D00 9093D001          sts _T_dat+1,R25
 0D04 8093CF01          sts _T_dat,R24
 0D08                   .dbline 588
 0D08           L201:
 0D08                   .dbline 590
 0D08           ;                
 0D08           ;                Uart0TxData[0]=0xE8;
 0D08 88EE              ldi R24,232
 0D0A 80932100          sts _Uart0TxData,R24
 0D0E                   .dbline 591
 0D0E           ;                Uart0TxData[1]=0x40;
 0D0E 80E4              ldi R24,64
 0D10 80932200          sts _Uart0TxData+1,R24
 0D14                   .dbline 592
 0D14           ;                Uart0TxData[2]=0x88;
 0D14 88E8              ldi R24,136
 0D16 80932300          sts _Uart0TxData+2,R24
 0D1A                   .dbline 593
 0D1A           ;                Uart0TxData[3]=1;//压力温度系数包1
 0D1A 81E0              ldi R24,1
 0D1C 80932400          sts _Uart0TxData+3,R24
 0D20                   .dbline 594
 0D20           ;                Uart0TxData[4]=0x21;
 0D20 81E2              ldi R24,33
 0D22 80932500          sts _Uart0TxData+4,R24
 0D26                   .dbline 595
 0D26           ;                Uart0TxData[5]=0x22;
 0D26 82E2              ldi R24,34
 0D28 80932600          sts _Uart0TxData+5,R24
 0D2C                   .dbline 596
 0D2C           ;                Uart0TxData[6]=0x23;
 0D2C 83E2              ldi R24,35
 0D2E 80932700          sts _Uart0TxData+6,R24
 0D32                   .dbline 597
 0D32           ;                Uart0TxData[7]=0x24;
 0D32 84E2              ldi R24,36
 0D34 80932800          sts _Uart0TxData+7,R24
 0D38                   .dbline 598
 0D38           ;                Uart0TxData[8]=0x32;    
 0D38 82E3              ldi R24,50
 0D3A 80932900          sts _Uart0TxData+8,R24
 0D3E                   .dbline 599
 0D3E           ;                for(k=0;k<64;k++)
 0D3E 2224              clr R2
 0D40 3324              clr R3
 0D42 3092AE01          sts _k+1,R3
 0D46 2092AD01          sts _k,R2
 0D4A 1CC0              xjmp L215
 0D4C           L212:
 0D4C                   .dbline 600
 0D4C           ;                {
 0D4C                   .dbline 601
 0D4C           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 0D4C A090AD01          lds R10,_k
 0D50 B090AE01          lds R11,_k+1
 0D54 80E0              ldi R24,<_coeffdata
 0D56 90E0              ldi R25,>_coeffdata
 0D58 F501              movw R30,R10
 0D5A E05C              subi R30,192  ; offset = 64
 0D5C FF4F              sbci R31,255
 0D5E E80F              add R30,R24
 0D60 F91F              adc R31,R25
 0D62 2080              ldd R2,z+0
 0D64 80E0              ldi R24,<_Uart0TxData
 0D66 90E0              ldi R25,>_Uart0TxData
 0D68 F501              movw R30,R10
 0D6A 3996              adiw R30,9
 0D6C E80F              add R30,R24
 0D6E F91F              adc R31,R25
 0D70 2082              std z+0,R2
 0D72                   .dbline 602
 0D72           ;                }               
 0D72           L213:
 0D72                   .dbline 599
 0D72 8091AD01          lds R24,_k
 0D76 9091AE01          lds R25,_k+1
 0D7A 0196              adiw R24,1
 0D7C 9093AE01          sts _k+1,R25
 0D80 8093AD01          sts _k,R24
 0D84           L215:
 0D84                   .dbline 599
 0D84 8091AD01          lds R24,_k
 0D88 9091AE01          lds R25,_k+1
 0D8C 8034              cpi R24,64
 0D8E E0E0              ldi R30,0
 0D90 9E07              cpc R25,R30
 0D92 E0F2              brlo L212
 0D94           X70:
 0D94                   .dbline 603
 0D94           ;                SendUart0_2(74,20);//超时160ms
 0D94 24E1              ldi R18,20
 0D96 30E0              ldi R19,0
 0D98 0AE4              ldi R16,74
 0D9A C9D9              xcall _SendUart0_2
 0D9C                   .dbline 604
 0D9C           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0D9C 8091E301          lds R24,_Uart0RxCounter
 0DA0 8930              cpi R24,9
 0DA2 B1F4              brne L216
 0DA4           X71:
 0DA4 8091E401          lds R24,_Uart0RxData
 0DA8 8535              cpi R24,85
 0DAA 91F4              brne L216
 0DAC           X72:
 0DAC 8091E501          lds R24,_Uart0RxData+1
 0DB0 8034              cpi R24,64
 0DB2 71F4              brne L216
 0DB4           X73:
 0DB4 8091E601          lds R24,_Uart0RxData+2
 0DB8 8838              cpi R24,136
 0DBA 51F4              brne L216
 0DBC           X74:
 0DBC                   .dbline 605
 0DBC           ;                {T_dat&=0x00ff; }
 0DBC                   .dbline 605
 0DBC 8091CF01          lds R24,_T_dat
 0DC0 9091D001          lds R25,_T_dat+1
 0DC4 9070              andi R25,0
 0DC6 9093D001          sts _T_dat+1,R25
 0DCA 8093CF01          sts _T_dat,R24
 0DCE                   .dbline 605
 0DCE 09C0              xjmp L217
 0DD0           L216:
 0DD0                   .dbline 607
 0DD0           ;                else
 0DD0           ;                {T_dat|=0x5500; }
 0DD0                   .dbline 607
 0DD0 8091CF01          lds R24,_T_dat
 0DD4 9091D001          lds R25,_T_dat+1
 0DD8 9565              ori R25,85
 0DDA 9093D001          sts _T_dat+1,R25
 0DDE 8093CF01          sts _T_dat,R24
 0DE2                   .dbline 607
 0DE2           L217:
 0DE2                   .dbline 609
 0DE2           ;                
 0DE2           ;                DataFlag=0;
 0DE2 2224              clr R2
 0DE4 3324              clr R3
 0DE6 3092B401          sts _DataFlag+1,R3
 0DEA 2092B301          sts _DataFlag,R2
 0DEE                   .dbline 610
 0DEE           ;                coeff_len=0;   
 0DEE 30921F00          sts _coeff_len+1,R3
 0DF2 20921E00          sts _coeff_len,R2
 0DF6                   .dbline 611
 0DF6           ;                T_com=0x0A;
 0DF6 8AE0              ldi R24,10
 0DF8 8093CC01          sts _T_com,R24
 0DFC                   .dbline 612
 0DFC           ;                SendManchester();              
 0DFC 0E94C21D          xcall _SendManchester
 0E00                   .dbline 613
 0E00           ;               }
 0E00 0C94371B          xjmp L183
 0E04           L186:
 0E04                   .dbline 614
 0E04           ;               else if(DataFlag==2)//下发流量系数
 0E04 8091B301          lds R24,_DataFlag
 0E08 9091B401          lds R25,_DataFlag+1
 0E0C 8230              cpi R24,2
 0E0E E0E0              ldi R30,0
 0E10 9E07              cpc R25,R30
 0E12 09F0              breq X252
 0E14 E6C0              xjmp L220
 0E16           X252:
 0E16           X75:
 0E16                   .dbline 615
 0E16           ;               {
 0E16                   .dbline 616
 0E16           ;                 Uart0TxData[0]=0xE8;
 0E16 88EE              ldi R24,232
 0E18 80932100          sts _Uart0TxData,R24
 0E1C                   .dbline 617
 0E1C           ;                Uart0TxData[1]=0x40;
 0E1C 80E4              ldi R24,64
 0E1E 80932200          sts _Uart0TxData+1,R24
 0E22                   .dbline 618
 0E22           ;                Uart0TxData[2]=0x88;
 0E22 88E8              ldi R24,136
 0E24 80932300          sts _Uart0TxData+2,R24
 0E28                   .dbline 619
 0E28           ;                Uart0TxData[3]=2;//流量系数包2
 0E28 82E0              ldi R24,2
 0E2A 80932400          sts _Uart0TxData+3,R24
 0E2E                   .dbline 620
 0E2E           ;                Uart0TxData[4]=0x21;
 0E2E 81E2              ldi R24,33
 0E30 80932500          sts _Uart0TxData+4,R24
 0E34                   .dbline 621
 0E34           ;                Uart0TxData[5]=0x22;
 0E34 82E2              ldi R24,34
 0E36 80932600          sts _Uart0TxData+5,R24
 0E3A                   .dbline 622
 0E3A           ;                Uart0TxData[6]=0x23;
 0E3A 83E2              ldi R24,35
 0E3C 80932700          sts _Uart0TxData+6,R24
 0E40                   .dbline 623
 0E40           ;                Uart0TxData[7]=0x24;
 0E40 84E2              ldi R24,36
 0E42 80932800          sts _Uart0TxData+7,R24
 0E46                   .dbline 624
 0E46           ;                Uart0TxData[8]=0x32;    
 0E46 82E3              ldi R24,50
 0E48 80932900          sts _Uart0TxData+8,R24
 0E4C                   .dbline 625
 0E4C           ;                for(k=0;k<64;k++)
 0E4C 2224              clr R2
 0E4E 3324              clr R3
 0E50 3092AE01          sts _k+1,R3
 0E54 2092AD01          sts _k,R2
 0E58 1AC0              xjmp L233
 0E5A           L230:
 0E5A                   .dbline 626
 0E5A           ;                {
 0E5A                   .dbline 627
 0E5A           ;                Uart0TxData[9+k]=coeffdata[k];  
 0E5A A090AD01          lds R10,_k
 0E5E B090AE01          lds R11,_k+1
 0E62 80E0              ldi R24,<_coeffdata
 0E64 90E0              ldi R25,>_coeffdata
 0E66 F501              movw R30,R10
 0E68 E80F              add R30,R24
 0E6A F91F              adc R31,R25
 0E6C 2080              ldd R2,z+0
 0E6E 80E0              ldi R24,<_Uart0TxData
 0E70 90E0              ldi R25,>_Uart0TxData
 0E72 F501              movw R30,R10
 0E74 3996              adiw R30,9
 0E76 E80F              add R30,R24
 0E78 F91F              adc R31,R25
 0E7A 2082              std z+0,R2
 0E7C                   .dbline 628
 0E7C           ;                }               
 0E7C           L231:
 0E7C                   .dbline 625
 0E7C 8091AD01          lds R24,_k
 0E80 9091AE01          lds R25,_k+1
 0E84 0196              adiw R24,1
 0E86 9093AE01          sts _k+1,R25
 0E8A 8093AD01          sts _k,R24
 0E8E           L233:
 0E8E                   .dbline 625
 0E8E 8091AD01          lds R24,_k
 0E92 9091AE01          lds R25,_k+1
 0E96 8034              cpi R24,64
 0E98 E0E0              ldi R30,0
 0E9A 9E07              cpc R25,R30
 0E9C F0F2              brlo L230
 0E9E           X76:
 0E9E                   .dbline 629
 0E9E           ;                SendUart0_2(74,20);//超时160ms
 0E9E 24E1              ldi R18,20
 0EA0 30E0              ldi R19,0
 0EA2 0AE4              ldi R16,74
 0EA4 44D9              xcall _SendUart0_2
 0EA6                   .dbline 630
 0EA6           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0EA6 8091E301          lds R24,_Uart0RxCounter
 0EAA 8930              cpi R24,9
 0EAC B1F4              brne L234
 0EAE           X77:
 0EAE 8091E401          lds R24,_Uart0RxData
 0EB2 8535              cpi R24,85
 0EB4 91F4              brne L234
 0EB6           X78:
 0EB6 8091E501          lds R24,_Uart0RxData+1
 0EBA 8034              cpi R24,64
 0EBC 71F4              brne L234
 0EBE           X79:
 0EBE 8091E601          lds R24,_Uart0RxData+2
 0EC2 8838              cpi R24,136
 0EC4 51F4              brne L234
 0EC6           X80:
 0EC6                   .dbline 631
 0EC6           ;                {T_dat&=0xff00; }
 0EC6                   .dbline 631
 0EC6 8091CF01          lds R24,_T_dat
 0ECA 9091D001          lds R25,_T_dat+1
 0ECE 8070              andi R24,0
 0ED0 9093D001          sts _T_dat+1,R25
 0ED4 8093CF01          sts _T_dat,R24
 0ED8                   .dbline 631
 0ED8 06C0              xjmp L235
 0EDA           L234:
 0EDA                   .dbline 633
 0EDA           ;                else
 0EDA           ;                {T_dat=0x00aa; }
 0EDA                   .dbline 633
 0EDA 8AEA              ldi R24,170
 0EDC 90E0              ldi R25,0
 0EDE 9093D001          sts _T_dat+1,R25
 0EE2 8093CF01          sts _T_dat,R24
 0EE6                   .dbline 633
 0EE6           L235:
 0EE6                   .dbline 635
 0EE6           ;                
 0EE6           ;                Uart0TxData[0]=0xE8;
 0EE6 88EE              ldi R24,232
 0EE8 80932100          sts _Uart0TxData,R24
 0EEC                   .dbline 636
 0EEC           ;                Uart0TxData[1]=0x40;
 0EEC 80E4              ldi R24,64
 0EEE 80932200          sts _Uart0TxData+1,R24
 0EF2                   .dbline 637
 0EF2           ;                Uart0TxData[2]=0x88;
 0EF2 88E8              ldi R24,136
 0EF4 80932300          sts _Uart0TxData+2,R24
 0EF8                   .dbline 638
 0EF8           ;                Uart0TxData[3]=3;//流量系数包3
 0EF8 83E0              ldi R24,3
 0EFA 80932400          sts _Uart0TxData+3,R24
 0EFE                   .dbline 639
 0EFE           ;                Uart0TxData[4]=0x21;
 0EFE 81E2              ldi R24,33
 0F00 80932500          sts _Uart0TxData+4,R24
 0F04                   .dbline 640
 0F04           ;                Uart0TxData[5]=0x22;
 0F04 82E2              ldi R24,34
 0F06 80932600          sts _Uart0TxData+5,R24
 0F0A                   .dbline 641
 0F0A           ;                Uart0TxData[6]=0x23;
 0F0A 83E2              ldi R24,35
 0F0C 80932700          sts _Uart0TxData+6,R24
 0F10                   .dbline 642
 0F10           ;                Uart0TxData[7]=0x24;
 0F10 84E2              ldi R24,36
 0F12 80932800          sts _Uart0TxData+7,R24
 0F16                   .dbline 643
 0F16           ;                Uart0TxData[8]=0x32;    
 0F16 82E3              ldi R24,50
 0F18 80932900          sts _Uart0TxData+8,R24
 0F1C                   .dbline 644
 0F1C           ;                for(k=0;k<64;k++)
 0F1C 2224              clr R2
 0F1E 3324              clr R3
 0F20 3092AE01          sts _k+1,R3
 0F24 2092AD01          sts _k,R2
 0F28 1CC0              xjmp L249
 0F2A           L246:
 0F2A                   .dbline 645
 0F2A           ;                {
 0F2A                   .dbline 646
 0F2A           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 0F2A A090AD01          lds R10,_k
 0F2E B090AE01          lds R11,_k+1
 0F32 80E0              ldi R24,<_coeffdata
 0F34 90E0              ldi R25,>_coeffdata
 0F36 F501              movw R30,R10
 0F38 E05C              subi R30,192  ; offset = 64
 0F3A FF4F              sbci R31,255
 0F3C E80F              add R30,R24
 0F3E F91F              adc R31,R25
 0F40 2080              ldd R2,z+0
 0F42 80E0              ldi R24,<_Uart0TxData
 0F44 90E0              ldi R25,>_Uart0TxData
 0F46 F501              movw R30,R10
 0F48 3996              adiw R30,9
 0F4A E80F              add R30,R24
 0F4C F91F              adc R31,R25
 0F4E 2082              std z+0,R2
 0F50                   .dbline 647
 0F50           ;                }               
 0F50           L247:
 0F50                   .dbline 644
 0F50 8091AD01          lds R24,_k
 0F54 9091AE01          lds R25,_k+1
 0F58 0196              adiw R24,1
 0F5A 9093AE01          sts _k+1,R25
 0F5E 8093AD01          sts _k,R24
 0F62           L249:
 0F62                   .dbline 644
 0F62 8091AD01          lds R24,_k
 0F66 9091AE01          lds R25,_k+1
 0F6A 8034              cpi R24,64
 0F6C E0E0              ldi R30,0
 0F6E 9E07              cpc R25,R30
 0F70 E0F2              brlo L246
 0F72           X81:
 0F72                   .dbline 648
 0F72           ;                SendUart0_2(74,20);//超时160ms
 0F72 24E1              ldi R18,20
 0F74 30E0              ldi R19,0
 0F76 0AE4              ldi R16,74
 0F78 DAD8              xcall _SendUart0_2
 0F7A                   .dbline 649
 0F7A           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x88))
 0F7A 8091E301          lds R24,_Uart0RxCounter
 0F7E 8930              cpi R24,9
 0F80 B1F4              brne L250
 0F82           X82:
 0F82 8091E401          lds R24,_Uart0RxData
 0F86 8535              cpi R24,85
 0F88 91F4              brne L250
 0F8A           X83:
 0F8A 8091E501          lds R24,_Uart0RxData+1
 0F8E 8034              cpi R24,64
 0F90 71F4              brne L250
 0F92           X84:
 0F92 8091E601          lds R24,_Uart0RxData+2
 0F96 8838              cpi R24,136
 0F98 51F4              brne L250
 0F9A           X85:
 0F9A                   .dbline 650
 0F9A           ;                {T_dat&=0x00ff; }
 0F9A                   .dbline 650
 0F9A 8091CF01          lds R24,_T_dat
 0F9E 9091D001          lds R25,_T_dat+1
 0FA2 9070              andi R25,0
 0FA4 9093D001          sts _T_dat+1,R25
 0FA8 8093CF01          sts _T_dat,R24
 0FAC                   .dbline 650
 0FAC 09C0              xjmp L251
 0FAE           L250:
 0FAE                   .dbline 652
 0FAE           ;                else
 0FAE           ;                {T_dat|=0x5500; }
 0FAE                   .dbline 652
 0FAE 8091CF01          lds R24,_T_dat
 0FB2 9091D001          lds R25,_T_dat+1
 0FB6 9565              ori R25,85
 0FB8 9093D001          sts _T_dat+1,R25
 0FBC 8093CF01          sts _T_dat,R24
 0FC0                   .dbline 652
 0FC0           L251:
 0FC0                   .dbline 654
 0FC0           ;                
 0FC0           ;                DataFlag=0;
 0FC0 2224              clr R2
 0FC2 3324              clr R3
 0FC4 3092B401          sts _DataFlag+1,R3
 0FC8 2092B301          sts _DataFlag,R2
 0FCC                   .dbline 655
 0FCC           ;                coeff_len=0;   
 0FCC 30921F00          sts _coeff_len+1,R3
 0FD0 20921E00          sts _coeff_len,R2
 0FD4                   .dbline 656
 0FD4           ;                T_com=0x0B;
 0FD4 8BE0              ldi R24,11
 0FD6 8093CC01          sts _T_com,R24
 0FDA                   .dbline 657
 0FDA           ;                SendManchester();              
 0FDA 0E94C21D          xcall _SendManchester
 0FDE                   .dbline 658
 0FDE           ;               }       
 0FDE 0C94371B          xjmp L183
 0FE2           L220:
 0FE2                   .dbline 659
 0FE2           ;               else if(DataFlag==3)//提取测试数据
 0FE2 8091B301          lds R24,_DataFlag
 0FE6 9091B401          lds R25,_DataFlag+1
 0FEA 8330              cpi R24,3
 0FEC E0E0              ldi R30,0
 0FEE 9E07              cpc R25,R30
 0FF0 09F0              breq X253
 0FF2 A4C0              xjmp L254
 0FF4           X253:
 0FF4           X86:
 0FF4                   .dbline 660
 0FF4           ;               {
 0FF4                   .dbline 661
 0FF4           ;                DataFlag=0;
 0FF4 2224              clr R2
 0FF6 3324              clr R3
 0FF8 3092B401          sts _DataFlag+1,R3
 0FFC 2092B301          sts _DataFlag,R2
 1000                   .dbline 662
 1000           ;                coeff_len=0;   
 1000 30921F00          sts _coeff_len+1,R3
 1004 20921E00          sts _coeff_len,R2
 1008                   .dbline 663
 1008           ;                T_com=0x09;
 1008 89E0              ldi R24,9
 100A 8093CC01          sts _T_com,R24
 100E                   .dbline 664
 100E           ;                TestDataBlockIndex=coeffdata[1];
 100E A0906C00          lds R10,_coeffdata+1
 1012 BB24              clr R11
 1014                   .dbline 665
 1014           ;                TestDataBlockIndex<<=8;
 1014 BA2C              mov R11,R10
 1016 AA24              clr R10
 1018                   .dbline 666
 1018           ;                TestDataBlockIndex|=coeffdata[0];//首块地址/索引
 1018 20906B00          lds R2,_coeffdata
 101C 3324              clr R3
 101E A228              or R10,R2
 1020 B328              or R11,R3
 1022                   .dbline 667
 1022           ;                TestDataBlockCount=coeffdata[3];
 1022 C0906E00          lds R12,_coeffdata+3
 1026 DD24              clr R13
 1028                   .dbline 668
 1028           ;                TestDataBlockCount<<=8;
 1028 DC2C              mov R13,R12
 102A CC24              clr R12
 102C                   .dbline 669
 102C           ;                TestDataBlockCount|=coeffdata[2];//需提取的总包数，每包64字节，每块4096字节共64包
 102C 20906D00          lds R2,_coeffdata+2
 1030 3324              clr R3
 1032 C228              or R12,R2
 1034 D328              or R13,R3
 1036                   .dbline 671
 1036           ;                
 1036           ;                for(k=0;k<TestDataBlockCount;k++)//按用户要求分包进行上传，每包64字节传32帧
 1036 2224              clr R2
 1038 3092AE01          sts _k+1,R3
 103C 2092AD01          sts _k,R2
 1040 73C0              xjmp L262
 1042           L259:
 1042                   .dbline 672
 1042           ;                {
 1042                   .dbline 673
 1042           ;                  Uart0TxData[0]=0xE8;
 1042 88EE              ldi R24,232
 1044 80932100          sts _Uart0TxData,R24
 1048                   .dbline 674
 1048           ;                  Uart0TxData[1]=0x40;
 1048 80E4              ldi R24,64
 104A 80932200          sts _Uart0TxData+1,R24
 104E                   .dbline 675
 104E           ;                  Uart0TxData[2]=0x9A;//读测试数据
 104E 8AE9              ldi R24,154
 1050 80932300          sts _Uart0TxData+2,R24
 1054                   .dbline 676
 1054           ;                  Uart0TxData[3]=8;
 1054 88E0              ldi R24,8
 1056 80932400          sts _Uart0TxData+3,R24
 105A                   .dbline 679
 105A           ;                  
 105A           ;                  //统一块索引
 105A           ;                  Uart0TxData[4]=(k);  
 105A 2090AD01          lds R2,_k
 105E 3090AE01          lds R3,_k+1
 1062 20922500          sts _Uart0TxData+4,R2
 1066                   .dbline 680
 1066           ;                  Uart0TxData[5]=(k>>8);       //包索引        
 1066 232C              mov R2,R3
 1068 3324              clr R3
 106A 20922600          sts _Uart0TxData+5,R2
 106E                   .dbline 681
 106E           ;                  Uart0TxData[6]=(TestDataBlockIndex);
 106E A0922700          sts _Uart0TxData+6,R10
 1072                   .dbline 682
 1072           ;                  Uart0TxData[7]=(TestDataBlockIndex>>8);//首块索引
 1072 1501              movw R2,R10
 1074 232C              mov R2,R3
 1076 3324              clr R3
 1078 20922800          sts _Uart0TxData+7,R2
 107C                   .dbline 692
 107C           ;                  
 107C           ;                  /*
 107C           ;                  // 单独块索引
 107C           ;                  Uart0TxData[4]=(k%8);        
 107C           ;                  Uart0TxData[5]=0;    //包索引        
 107C           ;                  Uart0TxData[6]=(TestDataBlockIndex+k/8);
 107C           ;                  Uart0TxData[7]=((TestDataBlockIndex+k/8)>>8);//首块索引
 107C           ;                  */
 107C           ;                  
 107C           ;                  SendUart0_2(9,6);//超时48ms
 107C 26E0              ldi R18,6
 107E 30E0              ldi R19,0
 1080 09E0              ldi R16,9
 1082 55D8              xcall _SendUart0_2
 1084                   .dbline 693
 1084           ;                  for(bf=0;bf<32;bf++)
 1084 2224              clr R2
 1086 3324              clr R3
 1088 30921900          sts _bf+1,R3
 108C 20921800          sts _bf,R2
 1090 39C0              xjmp L273
 1092           L270:
 1092                   .dbline 694
 1092           ;                  {            
 1092                   .dbline 695
 1092           ;                       T_dat=Uart0RxData[bf*2+1];//高字节
 1092 80E0              ldi R24,<_Uart0RxData
 1094 90E0              ldi R25,>_Uart0RxData
 1096 E0911800          lds R30,_bf
 109A F0911900          lds R31,_bf+1
 109E EE0F              lsl R30
 10A0 FF1F              rol R31
 10A2 3196              adiw R30,1
 10A4 E80F              add R30,R24
 10A6 F91F              adc R31,R25
 10A8 2080              ldd R2,z+0
 10AA 3324              clr R3
 10AC 3092D001          sts _T_dat+1,R3
 10B0 2092CF01          sts _T_dat,R2
 10B4                   .dbline 696
 10B4           ;                       T_dat<<=8;
 10B4 322C              mov R3,R2
 10B6 2224              clr R2
 10B8 3092D001          sts _T_dat+1,R3
 10BC 2092CF01          sts _T_dat,R2
 10C0                   .dbline 697
 10C0           ;                       T_dat|=Uart0RxData[bf*2+0];//低字节
 10C0 E0911800          lds R30,_bf
 10C4 F0911900          lds R31,_bf+1
 10C8 EE0F              lsl R30
 10CA FF1F              rol R31
 10CC E80F              add R30,R24
 10CE F91F              adc R31,R25
 10D0 2080              ldd R2,z+0
 10D2 3324              clr R3
 10D4 4090CF01          lds R4,_T_dat
 10D8 5090D001          lds R5,_T_dat+1
 10DC 4228              or R4,R2
 10DE 5328              or R5,R3
 10E0 5092D001          sts _T_dat+1,R5
 10E4 4092CF01          sts _T_dat,R4
 10E8                   .dbline 698
 10E8           ;                       SendManchester();       
 10E8 0E94C21D          xcall _SendManchester
 10EC                   .dbline 699
 10EC           ;                       CheckMotor(10);  
 10EC 0AE0              ldi R16,10
 10EE 10E0              ldi R17,0
 10F0 5CDA              xcall _CheckMotor
 10F2                   .dbline 700
 10F2           ;                  }            
 10F2           L271:
 10F2                   .dbline 693
 10F2 80911800          lds R24,_bf
 10F6 90911900          lds R25,_bf+1
 10FA 0196              adiw R24,1
 10FC 90931900          sts _bf+1,R25
 1100 80931800          sts _bf,R24
 1104           L273:
 1104                   .dbline 693
 1104 80911800          lds R24,_bf
 1108 90911900          lds R25,_bf+1
 110C 8032              cpi R24,32
 110E E0E0              ldi R30,0
 1110 9E07              cpc R25,R30
 1112 08F4              brsh X254
 1114 BECF              xjmp L270
 1116           X254:
 1116           X87:
 1116                   .dbline 701
 1116           ;                 }
 1116           L260:
 1116                   .dbline 671
 1116 8091AD01          lds R24,_k
 111A 9091AE01          lds R25,_k+1
 111E 0196              adiw R24,1
 1120 9093AE01          sts _k+1,R25
 1124 8093AD01          sts _k,R24
 1128           L262:
 1128                   .dbline 671
 1128 2090AD01          lds R2,_k
 112C 3090AE01          lds R3,_k+1
 1130 2C14              cp R2,R12
 1132 3D04              cpc R3,R13
 1134 08F4              brsh X255
 1136 85CF              xjmp L259
 1138           X255:
 1138           X88:
 1138                   .dbline 702
 1138           ;               } 
 1138 0C94371B          xjmp L183
 113C           L254:
 113C                   .dbline 703
 113C           ;               else if(DataFlag==4)//下发仪器信息
 113C 8091B301          lds R24,_DataFlag
 1140 9091B401          lds R25,_DataFlag+1
 1144 8430              cpi R24,4
 1146 E0E0              ldi R30,0
 1148 9E07              cpc R25,R30
 114A 11F0              breq X256
 114C 0C94371B          xjmp L183
 1150           X256:
 1150           X89:
 1150                   .dbline 704
 1150           ;               {
 1150                   .dbline 705
 1150           ;               T_dat=0x0000;
 1150 2224              clr R2
 1152 3324              clr R3
 1154 3092D001          sts _T_dat+1,R3
 1158 2092CF01          sts _T_dat,R2
 115C                   .dbline 707
 115C           ;               
 115C           ;                Uart0TxData[0]=0xE8;
 115C 88EE              ldi R24,232
 115E 80932100          sts _Uart0TxData,R24
 1162                   .dbline 708
 1162           ;                Uart0TxData[1]=0x40;
 1162 80E4              ldi R24,64
 1164 80932200          sts _Uart0TxData+1,R24
 1168                   .dbline 709
 1168           ;                Uart0TxData[2]=0x84;
 1168 84E8              ldi R24,132
 116A 80932300          sts _Uart0TxData+2,R24
 116E                   .dbline 710
 116E           ;                Uart0TxData[3]=0;//包0
 116E 20922400          sts _Uart0TxData+3,R2
 1172                   .dbline 711
 1172           ;                Uart0TxData[4]=0x21;
 1172 81E2              ldi R24,33
 1174 80932500          sts _Uart0TxData+4,R24
 1178                   .dbline 712
 1178           ;                Uart0TxData[5]=0x22;
 1178 82E2              ldi R24,34
 117A 80932600          sts _Uart0TxData+5,R24
 117E                   .dbline 713
 117E           ;                Uart0TxData[6]=0x23;
 117E 83E2              ldi R24,35
 1180 80932700          sts _Uart0TxData+6,R24
 1184                   .dbline 714
 1184           ;                Uart0TxData[7]=0x24;
 1184 84E2              ldi R24,36
 1186 80932800          sts _Uart0TxData+7,R24
 118A                   .dbline 715
 118A           ;                Uart0TxData[8]=0x32;    
 118A 82E3              ldi R24,50
 118C 80932900          sts _Uart0TxData+8,R24
 1190                   .dbline 716
 1190           ;                for(k=0;k<64;k++)
 1190 3092AE01          sts _k+1,R3
 1194 2092AD01          sts _k,R2
 1198 1AC0              xjmp L287
 119A           L284:
 119A                   .dbline 717
 119A           ;                {
 119A                   .dbline 718
 119A           ;                Uart0TxData[9+k]=coeffdata[k];  
 119A A090AD01          lds R10,_k
 119E B090AE01          lds R11,_k+1
 11A2 80E0              ldi R24,<_coeffdata
 11A4 90E0              ldi R25,>_coeffdata
 11A6 F501              movw R30,R10
 11A8 E80F              add R30,R24
 11AA F91F              adc R31,R25
 11AC 2080              ldd R2,z+0
 11AE 80E0              ldi R24,<_Uart0TxData
 11B0 90E0              ldi R25,>_Uart0TxData
 11B2 F501              movw R30,R10
 11B4 3996              adiw R30,9
 11B6 E80F              add R30,R24
 11B8 F91F              adc R31,R25
 11BA 2082              std z+0,R2
 11BC                   .dbline 719
 11BC           ;                }               
 11BC           L285:
 11BC                   .dbline 716
 11BC 8091AD01          lds R24,_k
 11C0 9091AE01          lds R25,_k+1
 11C4 0196              adiw R24,1
 11C6 9093AE01          sts _k+1,R25
 11CA 8093AD01          sts _k,R24
 11CE           L287:
 11CE                   .dbline 716
 11CE 8091AD01          lds R24,_k
 11D2 9091AE01          lds R25,_k+1
 11D6 8034              cpi R24,64
 11D8 E0E0              ldi R30,0
 11DA 9E07              cpc R25,R30
 11DC F0F2              brlo L284
 11DE           X90:
 11DE                   .dbline 720
 11DE           ;                SendUart0_2(74,20);//超时160ms
 11DE 24E1              ldi R18,20
 11E0 30E0              ldi R19,0
 11E2 0AE4              ldi R16,74
 11E4 0E949700          xcall _SendUart0_2
 11E8                   .dbline 721
 11E8           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 11E8 8091E301          lds R24,_Uart0RxCounter
 11EC 8930              cpi R24,9
 11EE 61F4              brne L294
 11F0           X91:
 11F0 8091E401          lds R24,_Uart0RxData
 11F4 8535              cpi R24,85
 11F6 41F4              brne L294
 11F8           X92:
 11F8 8091E501          lds R24,_Uart0RxData+1
 11FC 8034              cpi R24,64
 11FE 21F4              brne L294
 1200           X93:
 1200 8091E601          lds R24,_Uart0RxData+2
 1204 8438              cpi R24,132
 1206 49F0              breq L288
 1208           X94:
 1208           L294:
 1208                   .dbline 722
 1208           ;                {T_dat|=0x0001; }
 1208                   .dbline 722
 1208 8091CF01          lds R24,_T_dat
 120C 9091D001          lds R25,_T_dat+1
 1210 8160              ori R24,1
 1212 9093D001          sts _T_dat+1,R25
 1216 8093CF01          sts _T_dat,R24
 121A                   .dbline 722
 121A           L288:
 121A                   .dbline 724
 121A           ;                
 121A           ;                Uart0TxData[0]=0xE8;
 121A 88EE              ldi R24,232
 121C 80932100          sts _Uart0TxData,R24
 1220                   .dbline 725
 1220           ;                Uart0TxData[1]=0x40;
 1220 80E4              ldi R24,64
 1222 80932200          sts _Uart0TxData+1,R24
 1226                   .dbline 726
 1226           ;                Uart0TxData[2]=0x84;
 1226 84E8              ldi R24,132
 1228 80932300          sts _Uart0TxData+2,R24
 122C                   .dbline 727
 122C           ;                Uart0TxData[3]=1;//包1
 122C 81E0              ldi R24,1
 122E 80932400          sts _Uart0TxData+3,R24
 1232                   .dbline 728
 1232           ;                Uart0TxData[4]=0x21;
 1232 81E2              ldi R24,33
 1234 80932500          sts _Uart0TxData+4,R24
 1238                   .dbline 729
 1238           ;                Uart0TxData[5]=0x22;
 1238 82E2              ldi R24,34
 123A 80932600          sts _Uart0TxData+5,R24
 123E                   .dbline 730
 123E           ;                Uart0TxData[6]=0x23;
 123E 83E2              ldi R24,35
 1240 80932700          sts _Uart0TxData+6,R24
 1244                   .dbline 731
 1244           ;                Uart0TxData[7]=0x24;
 1244 84E2              ldi R24,36
 1246 80932800          sts _Uart0TxData+7,R24
 124A                   .dbline 732
 124A           ;                Uart0TxData[8]=0x32;    
 124A 82E3              ldi R24,50
 124C 80932900          sts _Uart0TxData+8,R24
 1250                   .dbline 733
 1250           ;                for(k=0;k<64;k++)
 1250 2224              clr R2
 1252 3324              clr R3
 1254 3092AE01          sts _k+1,R3
 1258 2092AD01          sts _k,R2
 125C 1CC0              xjmp L306
 125E           L303:
 125E                   .dbline 734
 125E           ;                {
 125E                   .dbline 735
 125E           ;                Uart0TxData[9+k]=coeffdata[k+64];  
 125E A090AD01          lds R10,_k
 1262 B090AE01          lds R11,_k+1
 1266 80E0              ldi R24,<_coeffdata
 1268 90E0              ldi R25,>_coeffdata
 126A F501              movw R30,R10
 126C E05C              subi R30,192  ; offset = 64
 126E FF4F              sbci R31,255
 1270 E80F              add R30,R24
 1272 F91F              adc R31,R25
 1274 2080              ldd R2,z+0
 1276 80E0              ldi R24,<_Uart0TxData
 1278 90E0              ldi R25,>_Uart0TxData
 127A F501              movw R30,R10
 127C 3996              adiw R30,9
 127E E80F              add R30,R24
 1280 F91F              adc R31,R25
 1282 2082              std z+0,R2
 1284                   .dbline 736
 1284           ;                }               
 1284           L304:
 1284                   .dbline 733
 1284 8091AD01          lds R24,_k
 1288 9091AE01          lds R25,_k+1
 128C 0196              adiw R24,1
 128E 9093AE01          sts _k+1,R25
 1292 8093AD01          sts _k,R24
 1296           L306:
 1296                   .dbline 733
 1296 8091AD01          lds R24,_k
 129A 9091AE01          lds R25,_k+1
 129E 8034              cpi R24,64
 12A0 E0E0              ldi R30,0
 12A2 9E07              cpc R25,R30
 12A4 E0F2              brlo L303
 12A6           X95:
 12A6                   .dbline 737
 12A6           ;                SendUart0_2(74,20);//超时160ms
 12A6 24E1              ldi R18,20
 12A8 30E0              ldi R19,0
 12AA 0AE4              ldi R16,74
 12AC 0E949700          xcall _SendUart0_2
 12B0                   .dbline 738
 12B0           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 12B0 8091E301          lds R24,_Uart0RxCounter
 12B4 8930              cpi R24,9
 12B6 61F4              brne L313
 12B8           X96:
 12B8 8091E401          lds R24,_Uart0RxData
 12BC 8535              cpi R24,85
 12BE 41F4              brne L313
 12C0           X97:
 12C0 8091E501          lds R24,_Uart0RxData+1
 12C4 8034              cpi R24,64
 12C6 21F4              brne L313
 12C8           X98:
 12C8 8091E601          lds R24,_Uart0RxData+2
 12CC 8438              cpi R24,132
 12CE 49F0              breq L307
 12D0           X99:
 12D0           L313:
 12D0                   .dbline 739
 12D0           ;          {T_dat|=0x0002; }
 12D0                   .dbline 739
 12D0 8091CF01          lds R24,_T_dat
 12D4 9091D001          lds R25,_T_dat+1
 12D8 8260              ori R24,2
 12DA 9093D001          sts _T_dat+1,R25
 12DE 8093CF01          sts _T_dat,R24
 12E2                   .dbline 739
 12E2           L307:
 12E2                   .dbline 741
 12E2           ;                
 12E2           ;                Uart0TxData[0]=0xE8;
 12E2 88EE              ldi R24,232
 12E4 80932100          sts _Uart0TxData,R24
 12E8                   .dbline 742
 12E8           ;                Uart0TxData[1]=0x40;
 12E8 80E4              ldi R24,64
 12EA 80932200          sts _Uart0TxData+1,R24
 12EE                   .dbline 743
 12EE           ;                Uart0TxData[2]=0x84;
 12EE 84E8              ldi R24,132
 12F0 80932300          sts _Uart0TxData+2,R24
 12F4                   .dbline 744
 12F4           ;                Uart0TxData[3]=2;//包2
 12F4 82E0              ldi R24,2
 12F6 80932400          sts _Uart0TxData+3,R24
 12FA                   .dbline 745
 12FA           ;                Uart0TxData[4]=0x21;
 12FA 81E2              ldi R24,33
 12FC 80932500          sts _Uart0TxData+4,R24
 1300                   .dbline 746
 1300           ;                Uart0TxData[5]=0x22;
 1300 82E2              ldi R24,34
 1302 80932600          sts _Uart0TxData+5,R24
 1306                   .dbline 747
 1306           ;                Uart0TxData[6]=0x23;
 1306 83E2              ldi R24,35
 1308 80932700          sts _Uart0TxData+6,R24
 130C                   .dbline 748
 130C           ;                Uart0TxData[7]=0x24;
 130C 84E2              ldi R24,36
 130E 80932800          sts _Uart0TxData+7,R24
 1312                   .dbline 749
 1312           ;                Uart0TxData[8]=0x32;    
 1312 82E3              ldi R24,50
 1314 80932900          sts _Uart0TxData+8,R24
 1318                   .dbline 750
 1318           ;                for(k=0;k<64;k++)
 1318 2224              clr R2
 131A 3324              clr R3
 131C 3092AE01          sts _k+1,R3
 1320 2092AD01          sts _k,R2
 1324 1CC0              xjmp L325
 1326           L322:
 1326                   .dbline 751
 1326           ;                {
 1326                   .dbline 752
 1326           ;                Uart0TxData[9+k]=coeffdata[k+128];  
 1326 A090AD01          lds R10,_k
 132A B090AE01          lds R11,_k+1
 132E 80E0              ldi R24,<_coeffdata
 1330 90E0              ldi R25,>_coeffdata
 1332 F501              movw R30,R10
 1334 E058              subi R30,128  ; offset = 128
 1336 FF4F              sbci R31,255
 1338 E80F              add R30,R24
 133A F91F              adc R31,R25
 133C 2080              ldd R2,z+0
 133E 80E0              ldi R24,<_Uart0TxData
 1340 90E0              ldi R25,>_Uart0TxData
 1342 F501              movw R30,R10
 1344 3996              adiw R30,9
 1346 E80F              add R30,R24
 1348 F91F              adc R31,R25
 134A 2082              std z+0,R2
 134C                   .dbline 753
 134C           ;                }               
 134C           L323:
 134C                   .dbline 750
 134C 8091AD01          lds R24,_k
 1350 9091AE01          lds R25,_k+1
 1354 0196              adiw R24,1
 1356 9093AE01          sts _k+1,R25
 135A 8093AD01          sts _k,R24
 135E           L325:
 135E                   .dbline 750
 135E 8091AD01          lds R24,_k
 1362 9091AE01          lds R25,_k+1
 1366 8034              cpi R24,64
 1368 E0E0              ldi R30,0
 136A 9E07              cpc R25,R30
 136C E0F2              brlo L322
 136E           X100:
 136E                   .dbline 754
 136E           ;                SendUart0_2(74,20);//超时160ms
 136E 24E1              ldi R18,20
 1370 30E0              ldi R19,0
 1372 0AE4              ldi R16,74
 1374 0E949700          xcall _SendUart0_2
 1378                   .dbline 755
 1378           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1378 8091E301          lds R24,_Uart0RxCounter
 137C 8930              cpi R24,9
 137E 61F4              brne L332
 1380           X101:
 1380 8091E401          lds R24,_Uart0RxData
 1384 8535              cpi R24,85
 1386 41F4              brne L332
 1388           X102:
 1388 8091E501          lds R24,_Uart0RxData+1
 138C 8034              cpi R24,64
 138E 21F4              brne L332
 1390           X103:
 1390 8091E601          lds R24,_Uart0RxData+2
 1394 8438              cpi R24,132
 1396 49F0              breq L326
 1398           X104:
 1398           L332:
 1398                   .dbline 756
 1398           ;          {T_dat|=0x0004; }
 1398                   .dbline 756
 1398 8091CF01          lds R24,_T_dat
 139C 9091D001          lds R25,_T_dat+1
 13A0 8460              ori R24,4
 13A2 9093D001          sts _T_dat+1,R25
 13A6 8093CF01          sts _T_dat,R24
 13AA                   .dbline 756
 13AA           L326:
 13AA                   .dbline 758
 13AA           ;                
 13AA           ;                Uart0TxData[0]=0xE8;
 13AA 88EE              ldi R24,232
 13AC 80932100          sts _Uart0TxData,R24
 13B0                   .dbline 759
 13B0           ;                Uart0TxData[1]=0x40;
 13B0 80E4              ldi R24,64
 13B2 80932200          sts _Uart0TxData+1,R24
 13B6                   .dbline 760
 13B6           ;                Uart0TxData[2]=0x84;
 13B6 84E8              ldi R24,132
 13B8 80932300          sts _Uart0TxData+2,R24
 13BC                   .dbline 761
 13BC           ;                Uart0TxData[3]=3;//包3
 13BC 83E0              ldi R24,3
 13BE 80932400          sts _Uart0TxData+3,R24
 13C2                   .dbline 762
 13C2           ;                Uart0TxData[4]=0x21;
 13C2 81E2              ldi R24,33
 13C4 80932500          sts _Uart0TxData+4,R24
 13C8                   .dbline 763
 13C8           ;                Uart0TxData[5]=0x22;
 13C8 82E2              ldi R24,34
 13CA 80932600          sts _Uart0TxData+5,R24
 13CE                   .dbline 764
 13CE           ;                Uart0TxData[6]=0x23;
 13CE 83E2              ldi R24,35
 13D0 80932700          sts _Uart0TxData+6,R24
 13D4                   .dbline 765
 13D4           ;                Uart0TxData[7]=0x24;
 13D4 84E2              ldi R24,36
 13D6 80932800          sts _Uart0TxData+7,R24
 13DA                   .dbline 766
 13DA           ;                Uart0TxData[8]=0x32;    
 13DA 82E3              ldi R24,50
 13DC 80932900          sts _Uart0TxData+8,R24
 13E0                   .dbline 767
 13E0           ;                for(k=0;k<64;k++)
 13E0 2224              clr R2
 13E2 3324              clr R3
 13E4 3092AE01          sts _k+1,R3
 13E8 2092AD01          sts _k,R2
 13EC 1CC0              xjmp L344
 13EE           L341:
 13EE                   .dbline 768
 13EE           ;                {
 13EE                   .dbline 769
 13EE           ;                Uart0TxData[9+k]=coeffdata[k+192];  
 13EE A090AD01          lds R10,_k
 13F2 B090AE01          lds R11,_k+1
 13F6 80E0              ldi R24,<_coeffdata
 13F8 90E0              ldi R25,>_coeffdata
 13FA F501              movw R30,R10
 13FC E054              subi R30,64  ; offset = 192
 13FE FF4F              sbci R31,255
 1400 E80F              add R30,R24
 1402 F91F              adc R31,R25
 1404 2080              ldd R2,z+0
 1406 80E0              ldi R24,<_Uart0TxData
 1408 90E0              ldi R25,>_Uart0TxData
 140A F501              movw R30,R10
 140C 3996              adiw R30,9
 140E E80F              add R30,R24
 1410 F91F              adc R31,R25
 1412 2082              std z+0,R2
 1414                   .dbline 770
 1414           ;                }               
 1414           L342:
 1414                   .dbline 767
 1414 8091AD01          lds R24,_k
 1418 9091AE01          lds R25,_k+1
 141C 0196              adiw R24,1
 141E 9093AE01          sts _k+1,R25
 1422 8093AD01          sts _k,R24
 1426           L344:
 1426                   .dbline 767
 1426 8091AD01          lds R24,_k
 142A 9091AE01          lds R25,_k+1
 142E 8034              cpi R24,64
 1430 E0E0              ldi R30,0
 1432 9E07              cpc R25,R30
 1434 E0F2              brlo L341
 1436           X105:
 1436                   .dbline 771
 1436           ;                SendUart0_2(74,20);//超时160ms
 1436 24E1              ldi R18,20
 1438 30E0              ldi R19,0
 143A 0AE4              ldi R16,74
 143C 0E949700          xcall _SendUart0_2
 1440                   .dbline 772
 1440           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1440 8091E301          lds R24,_Uart0RxCounter
 1444 8930              cpi R24,9
 1446 61F4              brne L351
 1448           X106:
 1448 8091E401          lds R24,_Uart0RxData
 144C 8535              cpi R24,85
 144E 41F4              brne L351
 1450           X107:
 1450 8091E501          lds R24,_Uart0RxData+1
 1454 8034              cpi R24,64
 1456 21F4              brne L351
 1458           X108:
 1458 8091E601          lds R24,_Uart0RxData+2
 145C 8438              cpi R24,132
 145E 49F0              breq L345
 1460           X109:
 1460           L351:
 1460                   .dbline 773
 1460           ;          {T_dat|=0x0008; }
 1460                   .dbline 773
 1460 8091CF01          lds R24,_T_dat
 1464 9091D001          lds R25,_T_dat+1
 1468 8860              ori R24,8
 146A 9093D001          sts _T_dat+1,R25
 146E 8093CF01          sts _T_dat,R24
 1472                   .dbline 773
 1472           L345:
 1472                   .dbline 775
 1472           ;                
 1472           ;                Uart0TxData[0]=0xE8;
 1472 88EE              ldi R24,232
 1474 80932100          sts _Uart0TxData,R24
 1478                   .dbline 776
 1478           ;                Uart0TxData[1]=0x40;
 1478 80E4              ldi R24,64
 147A 80932200          sts _Uart0TxData+1,R24
 147E                   .dbline 777
 147E           ;                Uart0TxData[2]=0x84;
 147E 84E8              ldi R24,132
 1480 80932300          sts _Uart0TxData+2,R24
 1484                   .dbline 778
 1484           ;                Uart0TxData[3]=4;//包4
 1484 84E0              ldi R24,4
 1486 80932400          sts _Uart0TxData+3,R24
 148A                   .dbline 779
 148A           ;                Uart0TxData[4]=0x21;
 148A 81E2              ldi R24,33
 148C 80932500          sts _Uart0TxData+4,R24
 1490                   .dbline 780
 1490           ;                Uart0TxData[5]=0x22;
 1490 82E2              ldi R24,34
 1492 80932600          sts _Uart0TxData+5,R24
 1496                   .dbline 781
 1496           ;                Uart0TxData[6]=0x23;
 1496 83E2              ldi R24,35
 1498 80932700          sts _Uart0TxData+6,R24
 149C                   .dbline 782
 149C           ;                Uart0TxData[7]=0x24;
 149C 84E2              ldi R24,36
 149E 80932800          sts _Uart0TxData+7,R24
 14A2                   .dbline 783
 14A2           ;                Uart0TxData[8]=0x32;    
 14A2 82E3              ldi R24,50
 14A4 80932900          sts _Uart0TxData+8,R24
 14A8                   .dbline 784
 14A8           ;                for(k=0;k<64;k++)
 14A8 2224              clr R2
 14AA 3324              clr R3
 14AC 3092AE01          sts _k+1,R3
 14B0 2092AD01          sts _k,R2
 14B4 1CC0              xjmp L363
 14B6           L360:
 14B6                   .dbline 785
 14B6           ;                {
 14B6                   .dbline 786
 14B6           ;                Uart0TxData[9+k]=coeffdata[k+256];  
 14B6 A090AD01          lds R10,_k
 14BA B090AE01          lds R11,_k+1
 14BE 80E0              ldi R24,<_coeffdata
 14C0 90E0              ldi R25,>_coeffdata
 14C2 F501              movw R30,R10
 14C4 E050              subi R30,0  ; offset = 256
 14C6 FF4F              sbci R31,255
 14C8 E80F              add R30,R24
 14CA F91F              adc R31,R25
 14CC 2080              ldd R2,z+0
 14CE 80E0              ldi R24,<_Uart0TxData
 14D0 90E0              ldi R25,>_Uart0TxData
 14D2 F501              movw R30,R10
 14D4 3996              adiw R30,9
 14D6 E80F              add R30,R24
 14D8 F91F              adc R31,R25
 14DA 2082              std z+0,R2
 14DC                   .dbline 787
 14DC           ;                }               
 14DC           L361:
 14DC                   .dbline 784
 14DC 8091AD01          lds R24,_k
 14E0 9091AE01          lds R25,_k+1
 14E4 0196              adiw R24,1
 14E6 9093AE01          sts _k+1,R25
 14EA 8093AD01          sts _k,R24
 14EE           L363:
 14EE                   .dbline 784
 14EE 8091AD01          lds R24,_k
 14F2 9091AE01          lds R25,_k+1
 14F6 8034              cpi R24,64
 14F8 E0E0              ldi R30,0
 14FA 9E07              cpc R25,R30
 14FC E0F2              brlo L360
 14FE           X110:
 14FE                   .dbline 788
 14FE           ;                SendUart0_2(74,20);//超时160ms
 14FE 24E1              ldi R18,20
 1500 30E0              ldi R19,0
 1502 0AE4              ldi R16,74
 1504 0E949700          xcall _SendUart0_2
 1508                   .dbline 789
 1508           ;                if(!((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x84)))
 1508 8091E301          lds R24,_Uart0RxCounter
 150C 8930              cpi R24,9
 150E 61F4              brne L370
 1510           X111:
 1510 8091E401          lds R24,_Uart0RxData
 1514 8535              cpi R24,85
 1516 41F4              brne L370
 1518           X112:
 1518 8091E501          lds R24,_Uart0RxData+1
 151C 8034              cpi R24,64
 151E 21F4              brne L370
 1520           X113:
 1520 8091E601          lds R24,_Uart0RxData+2
 1524 8438              cpi R24,132
 1526 49F0              breq L364
 1528           X114:
 1528           L370:
 1528                   .dbline 790
 1528           ;          {T_dat|=0x0010; }
 1528                   .dbline 790
 1528 8091CF01          lds R24,_T_dat
 152C 9091D001          lds R25,_T_dat+1
 1530 8061              ori R24,16
 1532 9093D001          sts _T_dat+1,R25
 1536 8093CF01          sts _T_dat,R24
 153A                   .dbline 790
 153A           L364:
 153A                   .dbline 792
 153A           ;                
 153A           ;                DataFlag=0;
 153A 2224              clr R2
 153C 3324              clr R3
 153E 3092B401          sts _DataFlag+1,R3
 1542 2092B301          sts _DataFlag,R2
 1546                   .dbline 793
 1546           ;                coeff_len=0;   
 1546 30921F00          sts _coeff_len+1,R3
 154A 20921E00          sts _coeff_len,R2
 154E                   .dbline 794
 154E           ;                T_com=0x0C;
 154E 8CE0              ldi R24,12
 1550 8093CC01          sts _T_com,R24
 1554                   .dbline 795
 1554           ;                SendManchester();              
 1554 0E94C21D          xcall _SendManchester
 1558                   .dbline 796
 1558           ;               }     
 1558                   .dbline 797
 1558           ;         }      
 1558                   .dbline 798
 1558           ;       }
 1558 0C94371B          xjmp L183
 155C           L182:
 155C                   .dbline 801
 155C           ;        
 155C           ;    else//若不是下发标定系数，则进入以下各个命令的子语句
 155C           ;       { 
 155C                   .dbline 802
 155C           ;       T_com=(R_dat>>4);
 155C 2090CD01          lds R2,_R_dat
 1560 3090CE01          lds R3,_R_dat+1
 1564 3594              asr R3
 1566 2794              ror R2
 1568 3594              asr R3
 156A 2794              ror R2
 156C 3594              asr R3
 156E 2794              ror R2
 1570 3594              asr R3
 1572 2794              ror R2
 1574 2092CC01          sts _T_com,R2
 1578                   .dbline 803
 1578           ;     switch(R_dat&0xf0)
 1578 8091CD01          lds R24,_R_dat
 157C 9091CE01          lds R25,_R_dat+1
 1580 807F              andi R24,240
 1582 9070              andi R25,0
 1584 5C01              movw R10,R24
 1586 8036              cpi R24,96
 1588 E0E0              ldi R30,0
 158A 9E07              cpc R25,R30
 158C 09F4              brne X257
 158E 5AC3              xjmp L420
 1590           X257:
 1590           X115:
 1590 80E6              ldi R24,96
 1592 90E0              ldi R25,0
 1594 8A15              cp R24,R10
 1596 9B05              cpc R25,R11
 1598 0CF4              brge X258
 159A 33C0              xjmp L752
 159C           X258:
 159C           X116:
 159C           L751:
 159C C501              movw R24,R10
 159E 8033              cpi R24,48
 15A0 E0E0              ldi R30,0
 15A2 9E07              cpc R25,R30
 15A4 09F4              brne X259
 15A6 EDC0              xjmp L391
 15A8           X259:
 15A8           X117:
 15A8 80E3              ldi R24,48
 15AA 90E0              ldi R25,0
 15AC 8A15              cp R24,R10
 15AE 9B05              cpc R25,R11
 15B0 A4F0              brlt L754
 15B2           X118:
 15B2           L753:
 15B2 C501              movw R24,R10
 15B4 8031              cpi R24,16
 15B6 E0E0              ldi R30,0
 15B8 9E07              cpc R25,R30
 15BA 09F4              brne X260
 15BC 5FC0              xjmp L374
 15BE           X260:
 15BE           X119:
 15BE 8031              cpi R24,16
 15C0 E0E0              ldi R30,0
 15C2 9E07              cpc R25,R30
 15C4 14F4              brge X261
 15C6 0C94371B          xjmp L372
 15CA           X261:
 15CA           X120:
 15CA           L755:
 15CA C501              movw R24,R10
 15CC 8032              cpi R24,32
 15CE E0E0              ldi R30,0
 15D0 9E07              cpc R25,R30
 15D2 09F4              brne X262
 15D4 93C0              xjmp L382
 15D6           X262:
 15D6           X121:
 15D6 0C94371B          xjmp L372
 15DA           L754:
 15DA C501              movw R24,R10
 15DC 8034              cpi R24,64
 15DE E0E0              ldi R30,0
 15E0 9E07              cpc R25,R30
 15E2 09F4              brne X263
 15E4 91C1              xjmp L396
 15E6           X263:
 15E6           X122:
 15E6 8034              cpi R24,64
 15E8 E0E0              ldi R30,0
 15EA 9E07              cpc R25,R30
 15EC 14F4              brge X264
 15EE 0C94371B          xjmp L372
 15F2           X264:
 15F2           X123:
 15F2           L756:
 15F2 C501              movw R24,R10
 15F4 8035              cpi R24,80
 15F6 E0E0              ldi R30,0
 15F8 9E07              cpc R25,R30
 15FA 09F4              brne X265
 15FC DCC1              xjmp L403
 15FE           X265:
 15FE           X124:
 15FE 0C94371B          xjmp L372
 1602           L752:
 1602 C501              movw R24,R10
 1604 8039              cpi R24,144
 1606 E0E0              ldi R30,0
 1608 9E07              cpc R25,R30
 160A 09F4              brne X266
 160C DEC6              xjmp L506
 160E           X266:
 160E           X125:
 160E 80E9              ldi R24,144
 1610 90E0              ldi R25,0
 1612 8A15              cp R24,R10
 1614 9B05              cpc R25,R11
 1616 A4F0              brlt L758
 1618           X126:
 1618           L757:
 1618 C501              movw R24,R10
 161A 8037              cpi R24,112
 161C E0E0              ldi R30,0
 161E 9E07              cpc R25,R30
 1620 09F4              brne X267
 1622 EBC3              xjmp L442
 1624           X267:
 1624           X127:
 1624 8037              cpi R24,112
 1626 E0E0              ldi R30,0
 1628 9E07              cpc R25,R30
 162A 14F4              brge X268
 162C 0C94371B          xjmp L372
 1630           X268:
 1630           X128:
 1630           L759:
 1630 C501              movw R24,R10
 1632 8038              cpi R24,128
 1634 E0E0              ldi R30,0
 1636 9E07              cpc R25,R30
 1638 09F4              brne X269
 163A ECC4              xjmp L467
 163C           X269:
 163C           X129:
 163C 0C94371B          xjmp L372
 1640           L758:
 1640 C501              movw R24,R10
 1642 803B              cpi R24,176
 1644 E0E0              ldi R30,0
 1646 9E07              cpc R25,R30
 1648 11F4              brne X270
 164A 0C942816          xjmp L635
 164E           X270:
 164E           X130:
 164E 80EB              ldi R24,176
 1650 90E0              ldi R25,0
 1652 8A15              cp R24,R10
 1654 9B05              cpc R25,R11
 1656 4CF0              brlt L761
 1658           X131:
 1658           L760:
 1658 C501              movw R24,R10
 165A 803A              cpi R24,160
 165C E0E0              ldi R30,0
 165E 9E07              cpc R25,R30
 1660 11F4              brne X271
 1662 0C946015          xjmp L610
 1666           X271:
 1666           X132:
 1666 0C94371B          xjmp L372
 166A           L761:
 166A C501              movw R24,R10
 166C 803C              cpi R24,192
 166E E0E0              ldi R30,0
 1670 9E07              cpc R25,R30
 1672 11F4              brne X272
 1674 0C94F016          xjmp L660
 1678           X272:
 1678           X133:
 1678 0C94371B          xjmp L372
 167C           L374:
 167C                   .dbline 806
 167C           ;      { 
 167C           ;         case 0x10://复位      
 167C           ;               Uart0TxData[0]=0xE8;
 167C 88EE              ldi R24,232
 167E 80932100          sts _Uart0TxData,R24
 1682                   .dbline 807
 1682           ;               Uart0TxData[1]=0x40;
 1682 80E4              ldi R24,64
 1684 80932200          sts _Uart0TxData+1,R24
 1688                   .dbline 808
 1688           ;               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 1688 8DE8              ldi R24,141
 168A 80932300          sts _Uart0TxData+2,R24
 168E                   .dbline 809
 168E           ;               Uart0TxData[3]=31;
 168E 8FE1              ldi R24,31
 1690 80932400          sts _Uart0TxData+3,R24
 1694                   .dbline 810
 1694           ;               SendUart0_2(9,5); 
 1694 25E0              ldi R18,5
 1696 30E0              ldi R19,0
 1698 09E0              ldi R16,9
 169A 0E949700          xcall _SendUart0_2
 169E                   .dbline 811
 169E           ;               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 169E 8091E301          lds R24,_Uart0RxCounter
 16A2 8930              cpi R24,9
 16A4 99F4              brne L378
 16A6           X134:
 16A6 8091E401          lds R24,_Uart0RxData
 16AA 8535              cpi R24,85
 16AC 79F4              brne L378
 16AE           X135:
 16AE 8091E501          lds R24,_Uart0RxData+1
 16B2 8034              cpi R24,64
 16B4 59F4              brne L378
 16B6           X136:
 16B6 8091E601          lds R24,_Uart0RxData+2
 16BA 8D38              cpi R24,141
 16BC 39F4              brne L378
 16BE           X137:
 16BE                   .dbline 812
 16BE           ;                {T_dat=0x00;}
 16BE                   .dbline 812
 16BE 2224              clr R2
 16C0 3324              clr R3
 16C2 3092D001          sts _T_dat+1,R3
 16C6 2092CF01          sts _T_dat,R2
 16CA                   .dbline 812
 16CA 06C0              xjmp L379
 16CC           L378:
 16CC                   .dbline 814
 16CC           ;               else
 16CC           ;                {T_dat=0xff;}
 16CC                   .dbline 814
 16CC 8FEF              ldi R24,255
 16CE 90E0              ldi R25,0
 16D0 9093D001          sts _T_dat+1,R25
 16D4 8093CF01          sts _T_dat,R24
 16D8                   .dbline 814
 16D8           L379:
 16D8                   .dbline 815
 16D8           ;               T_dat<<=8;
 16D8 2090CF01          lds R2,_T_dat
 16DC 3090D001          lds R3,_T_dat+1
 16E0 322C              mov R3,R2
 16E2 2224              clr R2
 16E4 3092D001          sts _T_dat+1,R3
 16E8 2092CF01          sts _T_dat,R2
 16EC                   .dbline 816
 16EC           ;               T_dat|=0x00;
 16EC 3092D001          sts _T_dat+1,R3
 16F0 2092CF01          sts _T_dat,R2
 16F4                   .dbline 817
 16F4           ;               SendManchester();       
 16F4 0E94C21D          xcall _SendManchester
 16F8                   .dbline 818
 16F8           ;         break;
 16F8 0C94371B          xjmp L372
 16FC           L382:
 16FC                   .dbline 821
 16FC           ;         
 16FC           ;         case 0x20://读版本号
 16FC           ;               Uart0TxData[0]=0xE8;
 16FC 88EE              ldi R24,232
 16FE 80932100          sts _Uart0TxData,R24
 1702                   .dbline 822
 1702           ;               Uart0TxData[1]=0x40;
 1702 80E4              ldi R24,64
 1704 80932200          sts _Uart0TxData+1,R24
 1708                   .dbline 823
 1708           ;               Uart0TxData[2]=0x8D;//流量板握手，超时40ms
 1708 8DE8              ldi R24,141
 170A 80932300          sts _Uart0TxData+2,R24
 170E                   .dbline 824
 170E           ;               Uart0TxData[3]=31;
 170E 8FE1              ldi R24,31
 1710 80932400          sts _Uart0TxData+3,R24
 1714                   .dbline 825
 1714           ;               SendUart0_2(9,5); 
 1714 25E0              ldi R18,5
 1716 30E0              ldi R19,0
 1718 09E0              ldi R16,9
 171A 0E949700          xcall _SendUart0_2
 171E                   .dbline 826
 171E           ;               if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8D))
 171E 8091E301          lds R24,_Uart0RxCounter
 1722 8930              cpi R24,9
 1724 A1F4              brne L386
 1726           X138:
 1726 8091E401          lds R24,_Uart0RxData
 172A 8535              cpi R24,85
 172C 81F4              brne L386
 172E           X139:
 172E 8091E501          lds R24,_Uart0RxData+1
 1732 8034              cpi R24,64
 1734 61F4              brne L386
 1736           X140:
 1736 8091E601          lds R24,_Uart0RxData+2
 173A 8D38              cpi R24,141
 173C 41F4              brne L386
 173E           X141:
 173E                   .dbline 827
 173E           ;                {T_dat=Uart0RxData[3];}
 173E                   .dbline 827
 173E 2090E701          lds R2,_Uart0RxData+3
 1742 3324              clr R3
 1744 3092D001          sts _T_dat+1,R3
 1748 2092CF01          sts _T_dat,R2
 174C                   .dbline 827
 174C 06C0              xjmp L387
 174E           L386:
 174E                   .dbline 829
 174E           ;               else
 174E           ;                {T_dat=0xff;}    
 174E                   .dbline 829
 174E 8FEF              ldi R24,255
 1750 90E0              ldi R25,0
 1752 9093D001          sts _T_dat+1,R25
 1756 8093CF01          sts _T_dat,R24
 175A                   .dbline 829
 175A           L387:
 175A                   .dbline 830
 175A           ;               T_dat<<=8;
 175A 2090CF01          lds R2,_T_dat
 175E 3090D001          lds R3,_T_dat+1
 1762 322C              mov R3,R2
 1764 2224              clr R2
 1766 3092D001          sts _T_dat+1,R3
 176A 2092CF01          sts _T_dat,R2
 176E                   .dbline 831
 176E           ;               T_dat|=BB;
 176E C101              movw R24,R2
 1770 8065              ori R24,80
 1772 9093D001          sts _T_dat+1,R25
 1776 8093CF01          sts _T_dat,R24
 177A                   .dbline 832
 177A           ;               SendManchester();       
 177A 0E94C21D          xcall _SendManchester
 177E                   .dbline 833
 177E           ;         break;
 177E 0C94371B          xjmp L372
 1782           L391:
 1782                   .dbline 836
 1782           ;         
 1782           ;         case 0x30://Cable电压,VIN/VR电压
 1782           ;          CheckMotor(30);   
 1782 0EE1              ldi R16,30
 1784 10E0              ldi R17,0
 1786 0E94D502          xcall _CheckMotor
 178A                   .dbline 837
 178A           ;          f=SampleADC(5);//Cable 
 178A 05E0              ldi R16,5
 178C 0E946802          xcall _SampleADC
 1790 1127              clr R17
 1792 0E940000          xcall int2fp
 1796 0983              std y+1,R16
 1798 1A83              std y+2,R17
 179A 2B83              std y+3,R18
 179C 3C83              std y+4,R19
 179E                   .dbline 838
 179E           ;          f=f*2.5;
 179E 00E0              ldi R16,<L392
 17A0 10E0              ldi R17,>L392
 17A2 0E940000          xcall elpm32
 17A6 CE01              movw R24,R28
 17A8 0196              adiw R24,1
 17AA 9A93              st -y,R25
 17AC 8A93              st -y,R24
 17AE 0E940000          xcall fpmule1
 17B2 0983              std y+1,R16
 17B4 1A83              std y+2,R17
 17B6 2B83              std y+3,R18
 17B8 3C83              std y+4,R19
 17BA                   .dbline 839
 17BA           ;          f=f*67.666;
 17BA 00E0              ldi R16,<L393
 17BC 10E0              ldi R17,>L393
 17BE 0E940000          xcall elpm32
 17C2 CE01              movw R24,R28
 17C4 0196              adiw R24,1
 17C6 9A93              st -y,R25
 17C8 8A93              st -y,R24
 17CA 0E940000          xcall fpmule1
 17CE 0983              std y+1,R16
 17D0 1A83              std y+2,R17
 17D2 2B83              std y+3,R18
 17D4 3C83              std y+4,R19
 17D6                   .dbline 840
 17D6           ;          f=f/256;
 17D6 2980              ldd R2,y+1
 17D8 3A80              ldd R3,y+2
 17DA 4B80              ldd R4,y+3
 17DC 5C80              ldd R5,y+4
 17DE 00E0              ldi R16,<L394
 17E0 10E0              ldi R17,>L394
 17E2 0E940000          xcall elpm32
 17E6 3A93              st -y,R19
 17E8 2A93              st -y,R18
 17EA 1A93              st -y,R17
 17EC 0A93              st -y,R16
 17EE 8101              movw R16,R2
 17F0 9201              movw R18,R4
 17F2 0E940000          xcall fpdiv2
 17F6 0983              std y+1,R16
 17F8 1A83              std y+2,R17
 17FA 2B83              std y+3,R18
 17FC 3C83              std y+4,R19
 17FE                   .dbline 841
 17FE           ;          T_dat=f+2;
 17FE 2980              ldd R2,y+1
 1800 3A80              ldd R3,y+2
 1802 4B80              ldd R4,y+3
 1804 5C80              ldd R5,y+4
 1806 00E0              ldi R16,<L395
 1808 10E0              ldi R17,>L395
 180A 0E940000          xcall elpm32
 180E 3A93              st -y,R19
 1810 2A93              st -y,R18
 1812 1A93              st -y,R17
 1814 0A93              st -y,R16
 1816 8101              movw R16,R2
 1818 9201              movw R18,R4
 181A 0E940000          xcall fpadd2
 181E 0E940000          xcall fpint
 1822 1093D001          sts _T_dat+1,R17
 1826 0093CF01          sts _T_dat,R16
 182A                   .dbline 842
 182A           ;          CheckMotor(30);
 182A 0EE1              ldi R16,30
 182C 10E0              ldi R17,0
 182E 0E94D502          xcall _CheckMotor
 1832                   .dbline 843
 1832           ;          T_dat<<=8;   
 1832 2090CF01          lds R2,_T_dat
 1836 3090D001          lds R3,_T_dat+1
 183A 322C              mov R3,R2
 183C 2224              clr R2
 183E 3092D001          sts _T_dat+1,R3
 1842 2092CF01          sts _T_dat,R2
 1846                   .dbline 844
 1846           ;          f=SampleADC(4);//VIN / VR 
 1846 04E0              ldi R16,4
 1848 0E946802          xcall _SampleADC
 184C 1127              clr R17
 184E 0E940000          xcall int2fp
 1852 0983              std y+1,R16
 1854 1A83              std y+2,R17
 1856 2B83              std y+3,R18
 1858 3C83              std y+4,R19
 185A                   .dbline 845
 185A           ;          f=f*2.5;
 185A 00E0              ldi R16,<L392
 185C 10E0              ldi R17,>L392
 185E 0E940000          xcall elpm32
 1862 CE01              movw R24,R28
 1864 0196              adiw R24,1
 1866 9A93              st -y,R25
 1868 8A93              st -y,R24
 186A 0E940000          xcall fpmule1
 186E 0983              std y+1,R16
 1870 1A83              std y+2,R17
 1872 2B83              std y+3,R18
 1874 3C83              std y+4,R19
 1876                   .dbline 846
 1876           ;          f=f*67.666;
 1876 00E0              ldi R16,<L393
 1878 10E0              ldi R17,>L393
 187A 0E940000          xcall elpm32
 187E CE01              movw R24,R28
 1880 0196              adiw R24,1
 1882 9A93              st -y,R25
 1884 8A93              st -y,R24
 1886 0E940000          xcall fpmule1
 188A 0983              std y+1,R16
 188C 1A83              std y+2,R17
 188E 2B83              std y+3,R18
 1890 3C83              std y+4,R19
 1892                   .dbline 847
 1892           ;          f=f/256;
 1892 2980              ldd R2,y+1
 1894 3A80              ldd R3,y+2
 1896 4B80              ldd R4,y+3
 1898 5C80              ldd R5,y+4
 189A 00E0              ldi R16,<L394
 189C 10E0              ldi R17,>L394
 189E 0E940000          xcall elpm32
 18A2 3A93              st -y,R19
 18A4 2A93              st -y,R18
 18A6 1A93              st -y,R17
 18A8 0A93              st -y,R16
 18AA 8101              movw R16,R2
 18AC 9201              movw R18,R4
 18AE 0E940000          xcall fpdiv2
 18B2 0983              std y+1,R16
 18B4 1A83              std y+2,R17
 18B6 2B83              std y+3,R18
 18B8 3C83              std y+4,R19
 18BA                   .dbline 848
 18BA           ;          i=f+2;
 18BA 2980              ldd R2,y+1
 18BC 3A80              ldd R3,y+2
 18BE 4B80              ldd R4,y+3
 18C0 5C80              ldd R5,y+4
 18C2 00E0              ldi R16,<L395
 18C4 10E0              ldi R17,>L395
 18C6 0E940000          xcall elpm32
 18CA 3A93              st -y,R19
 18CC 2A93              st -y,R18
 18CE 1A93              st -y,R17
 18D0 0A93              st -y,R16
 18D2 8101              movw R16,R2
 18D4 9201              movw R18,R4
 18D6 0E940000          xcall fpadd2
 18DA 0E940000          xcall fpint
 18DE A02E              mov R10,R16
 18E0                   .dbline 849
 18E0           ;          T_dat|=i; 
 18E0 2A2C              mov R2,R10
 18E2 3324              clr R3
 18E4 4090CF01          lds R4,_T_dat
 18E8 5090D001          lds R5,_T_dat+1
 18EC 4228              or R4,R2
 18EE 5328              or R5,R3
 18F0 5092D001          sts _T_dat+1,R5
 18F4 4092CF01          sts _T_dat,R4
 18F8                   .dbline 850
 18F8           ;          CheckMotor(30);
 18F8 0EE1              ldi R16,30
 18FA 10E0              ldi R17,0
 18FC 0E94D502          xcall _CheckMotor
 1900                   .dbline 851
 1900           ;          SendManchester();   
 1900 0E94C21D          xcall _SendManchester
 1904                   .dbline 852
 1904           ;         break;
 1904 0C94371B          xjmp L372
 1908           L396:
 1908                   .dbline 863
 1908           ;         
 1908           ;         case 0x40: //采集板压力和温度
 1908           ;         /*
 1908           ;               CheckMotor(40); //40ms定时              
 1908           ;               T_dat=1234;//没有流量板时暂用一固定数值表示压力
 1908           ;               SendManchester();
 1908           ;         CheckMotor(40); //40ms定时             
 1908           ;               T_dat=5678;//没有流量板时暂用一固定数值表示温度
 1908           ;               SendManchester();
 1908           ;               */
 1908           ;               Uart0TxData[0]=0xE8;
 1908 88EE              ldi R24,232
 190A 80932100          sts _Uart0TxData,R24
 190E                   .dbline 864
 190E           ;               Uart0TxData[1]=0x40;
 190E 80E4              ldi R24,64
 1910 80932200          sts _Uart0TxData+1,R24
 1914                   .dbline 865
 1914           ;               Uart0TxData[2]=0x89;
 1914 89E8              ldi R24,137
 1916 80932300          sts _Uart0TxData+2,R24
 191A                   .dbline 866
 191A           ;               Uart0TxData[3]=9;
 191A 89E0              ldi R24,9
 191C 80932400          sts _Uart0TxData+3,R24
 1920                   .dbline 867
 1920           ;               SendUart0_2(9,50);//流量板直读检测，超时400ms
 1920 22E3              ldi R18,50
 1922 30E0              ldi R19,0
 1924 09E0              ldi R16,9
 1926 0E949700          xcall _SendUart0_2
 192A                   .dbline 869
 192A           ;               
 192A           ;                T_dat=Uart0RxData[1];
 192A 2090E501          lds R2,_Uart0RxData+1
 192E 3324              clr R3
 1930 3092D001          sts _T_dat+1,R3
 1934 2092CF01          sts _T_dat,R2
 1938                   .dbline 870
 1938           ;                T_dat<<=8;
 1938 2090CF01          lds R2,_T_dat
 193C 3090D001          lds R3,_T_dat+1
 1940 322C              mov R3,R2
 1942 2224              clr R2
 1944 3092D001          sts _T_dat+1,R3
 1948 2092CF01          sts _T_dat,R2
 194C                   .dbline 871
 194C           ;                T_dat|=Uart0RxData[0];
 194C 2090E401          lds R2,_Uart0RxData
 1950 3324              clr R3
 1952 4090CF01          lds R4,_T_dat
 1956 5090D001          lds R5,_T_dat+1
 195A 4228              or R4,R2
 195C 5328              or R5,R3
 195E 5092D001          sts _T_dat+1,R5
 1962 4092CF01          sts _T_dat,R4
 1966                   .dbline 872
 1966           ;                SendManchester();//压力
 1966 0E94C21D          xcall _SendManchester
 196A                   .dbline 874
 196A           ;                
 196A           ;                CheckMotor(30);        
 196A 0EE1              ldi R16,30
 196C 10E0              ldi R17,0
 196E 0E94D502          xcall _CheckMotor
 1972                   .dbline 875
 1972           ;                T_dat=Uart0RxData[3];
 1972 2090E701          lds R2,_Uart0RxData+3
 1976 3324              clr R3
 1978 3092D001          sts _T_dat+1,R3
 197C 2092CF01          sts _T_dat,R2
 1980                   .dbline 876
 1980           ;                T_dat<<=8;
 1980 2090CF01          lds R2,_T_dat
 1984 3090D001          lds R3,_T_dat+1
 1988 322C              mov R3,R2
 198A 2224              clr R2
 198C 3092D001          sts _T_dat+1,R3
 1990 2092CF01          sts _T_dat,R2
 1994                   .dbline 877
 1994           ;                T_dat|=Uart0RxData[2];
 1994 2090E601          lds R2,_Uart0RxData+2
 1998 3324              clr R3
 199A 4090CF01          lds R4,_T_dat
 199E 5090D001          lds R5,_T_dat+1
 19A2 4228              or R4,R2
 19A4 5328              or R5,R3
 19A6 5092D001          sts _T_dat+1,R5
 19AA 4092CF01          sts _T_dat,R4
 19AE                   .dbline 878
 19AE           ;                SendManchester();//温度
 19AE 0E94C21D          xcall _SendManchester
 19B2                   .dbline 879
 19B2           ;       break;
 19B2 0C94371B          xjmp L372
 19B6           L403:
 19B6                   .dbline 899
 19B6           ;       
 19B6           ;       case 0x50://流量采样                                                     
 19B6           ;                 /*    
 19B6           ;                 CheckMotor(40); //40ms定时            
 19B6           ;                 myFIB.f=123.456; 
 19B6           ;                 T_dat=myFIB.i[1];
 19B6           ;                 SendManchester();
 19B6           ;                 CheckMotor(40);
 19B6           ;                 T_dat=myFIB.i[0];
 19B6           ;                 SendManchester();
 19B6           ;                 CheckMotor(40);
 19B6           ;                 myFIB.f=789.012; 
 19B6           ;                 T_dat=myFIB.i[1];
 19B6           ;                 SendManchester();
 19B6           ;                 CheckMotor(40);
 19B6           ;                 T_dat=myFIB.i[0];
 19B6           ;                 SendManchester();
 19B6           ;                 CheckMotor(40);
 19B6           ;                 */
 19B6           ;                 Uart0TxData[0]=0xE8;
 19B6 88EE              ldi R24,232
 19B8 80932100          sts _Uart0TxData,R24
 19BC                   .dbline 900
 19BC           ;                 Uart0TxData[1]=0x40;
 19BC 80E4              ldi R24,64
 19BE 80932200          sts _Uart0TxData+1,R24
 19C2                   .dbline 901
 19C2           ;                 Uart0TxData[2]=0x89;
 19C2 89E8              ldi R24,137
 19C4 80932300          sts _Uart0TxData+2,R24
 19C8                   .dbline 902
 19C8           ;                 Uart0TxData[3]=9;
 19C8 89E0              ldi R24,9
 19CA 80932400          sts _Uart0TxData+3,R24
 19CE                   .dbline 903
 19CE           ;                 SendUart0_2(9,50);//流量板直读检测，超时400ms
 19CE 22E3              ldi R18,50
 19D0 30E0              ldi R19,0
 19D2 09E0              ldi R16,9
 19D4 0E949700          xcall _SendUart0_2
 19D8                   .dbline 905
 19D8           ;               
 19D8           ;                 lfib=Uart0RxData[5];
 19D8 2090E901          lds R2,_Uart0RxData+5
 19DC 3324              clr R3
 19DE 4424              clr R4
 19E0 5524              clr R5
 19E2 30921500          sts _lfib+1,R3
 19E6 20921400          sts _lfib,R2
 19EA 50921700          sts _lfib+2+1,R5
 19EE 40921600          sts _lfib+2,R4
 19F2                   .dbline 906
 19F2           ;                 lfib<<=8;
 19F2 88E0              ldi R24,8
 19F4 90E0              ldi R25,0
 19F6 20911600          lds R18,_lfib+2
 19FA 30911700          lds R19,_lfib+2+1
 19FE 00911400          lds R16,_lfib
 1A02 10911500          lds R17,_lfib+1
 1A06 8A93              st -y,R24
 1A08 0E940000          xcall lsl32
 1A0C 10931500          sts _lfib+1,R17
 1A10 00931400          sts _lfib,R16
 1A14 30931700          sts _lfib+2+1,R19
 1A18 20931600          sts _lfib+2,R18
 1A1C                   .dbline 907
 1A1C           ;                 lfib|=Uart0RxData[4];
 1A1C 2090E801          lds R2,_Uart0RxData+4
 1A20 3324              clr R3
 1A22 4424              clr R4
 1A24 5524              clr R5
 1A26 3801              movw R6,R16
 1A28 4901              movw R8,R18
 1A2A 6228              or R6,R2
 1A2C 7328              or R7,R3
 1A2E 8428              or R8,R4
 1A30 9528              or R9,R5
 1A32 70921500          sts _lfib+1,R7
 1A36 60921400          sts _lfib,R6
 1A3A 90921700          sts _lfib+2+1,R9
 1A3E 80921600          sts _lfib+2,R8
 1A42                   .dbline 908
 1A42           ;                 lfib&=0x0000ffff;
 1A42 4FEF              ldi R20,255
 1A44 5FEF              ldi R21,255
 1A46 60E0              ldi R22,0
 1A48 70E0              ldi R23,0
 1A4A 1301              movw R2,R6
 1A4C 2401              movw R4,R8
 1A4E 2422              and R2,R20
 1A50 3522              and R3,R21
 1A52 4622              and R4,R22
 1A54 5722              and R5,R23
 1A56 30921500          sts _lfib+1,R3
 1A5A 20921400          sts _lfib,R2
 1A5E 50921700          sts _lfib+2+1,R5
 1A62 40921600          sts _lfib+2,R4
 1A66                   .dbline 909
 1A66           ;                 myFIB.f=(unsigned long)lfib; 
 1A66 8101              movw R16,R2
 1A68 9201              movw R18,R4
 1A6A 0E940000          xcall ulong2fp
 1A6E 10933C02          sts _myFIB+1,R17
 1A72 00933B02          sts _myFIB,R16
 1A76 30933E02          sts _myFIB+2+1,R19
 1A7A 20933D02          sts _myFIB+2,R18
 1A7E                   .dbline 911
 1A7E           ;                 
 1A7E           ;                 T_dat=myFIB.i[1];
 1A7E 20903D02          lds R2,_myFIB+2
 1A82 30903E02          lds R3,_myFIB+2+1
 1A86 3092D001          sts _T_dat+1,R3
 1A8A 2092CF01          sts _T_dat,R2
 1A8E                   .dbline 912
 1A8E           ;                 SendManchester();//流量-时间
 1A8E 0E94C21D          xcall _SendManchester
 1A92                   .dbline 913
 1A92           ;                 crc16array[0]=(unsigned char)(T_dat);
 1A92 2090CF01          lds R2,_T_dat
 1A96 3090D001          lds R3,_T_dat+1
 1A9A 20920000          sts _crc16array,R2
 1A9E                   .dbline 914
 1A9E           ;                 crc16array[1]=(unsigned char)(T_dat>>8);
 1A9E 232C              mov R2,R3
 1AA0 3324              clr R3
 1AA2 27FC              sbrc R2,7
 1AA4 3094              com R3
 1AA6 20920100          sts _crc16array+1,R2
 1AAA                   .dbline 916
 1AAA           ;                 
 1AAA           ;                 CheckMotor(30);       
 1AAA 0EE1              ldi R16,30
 1AAC 10E0              ldi R17,0
 1AAE 0E94D502          xcall _CheckMotor
 1AB2                   .dbline 917
 1AB2           ;                 T_dat=myFIB.i[0];
 1AB2 20903B02          lds R2,_myFIB
 1AB6 30903C02          lds R3,_myFIB+1
 1ABA 3092D001          sts _T_dat+1,R3
 1ABE 2092CF01          sts _T_dat,R2
 1AC2                   .dbline 918
 1AC2           ;                 SendManchester();//流量-时间
 1AC2 0E94C21D          xcall _SendManchester
 1AC6                   .dbline 919
 1AC6           ;                 crc16array[2]=(unsigned char)(T_dat);
 1AC6 2090CF01          lds R2,_T_dat
 1ACA 3090D001          lds R3,_T_dat+1
 1ACE 20920200          sts _crc16array+2,R2
 1AD2                   .dbline 920
 1AD2           ;                 crc16array[3]=(unsigned char)(T_dat>>8);
 1AD2 232C              mov R2,R3
 1AD4 3324              clr R3
 1AD6 27FC              sbrc R2,7
 1AD8 3094              com R3
 1ADA 20920300          sts _crc16array+3,R2
 1ADE                   .dbline 922
 1ADE           ;         
 1ADE           ;                 CheckMotor(30);       
 1ADE 0EE1              ldi R16,30
 1AE0 10E0              ldi R17,0
 1AE2 0E94D502          xcall _CheckMotor
 1AE6                   .dbline 924
 1AE6           ;                 
 1AE6           ;                 lfib=Uart0RxData[7];
 1AE6 2090EB01          lds R2,_Uart0RxData+7
 1AEA 3324              clr R3
 1AEC 4424              clr R4
 1AEE 5524              clr R5
 1AF0 30921500          sts _lfib+1,R3
 1AF4 20921400          sts _lfib,R2
 1AF8 50921700          sts _lfib+2+1,R5
 1AFC 40921600          sts _lfib+2,R4
 1B00                   .dbline 925
 1B00           ;                 lfib<<=8;
 1B00 88E0              ldi R24,8
 1B02 90E0              ldi R25,0
 1B04 20911600          lds R18,_lfib+2
 1B08 30911700          lds R19,_lfib+2+1
 1B0C 00911400          lds R16,_lfib
 1B10 10911500          lds R17,_lfib+1
 1B14 8A93              st -y,R24
 1B16 0E940000          xcall lsl32
 1B1A 10931500          sts _lfib+1,R17
 1B1E 00931400          sts _lfib,R16
 1B22 30931700          sts _lfib+2+1,R19
 1B26 20931600          sts _lfib+2,R18
 1B2A                   .dbline 926
 1B2A           ;                 lfib|=Uart0RxData[6];
 1B2A 2090EA01          lds R2,_Uart0RxData+6
 1B2E 3324              clr R3
 1B30 4424              clr R4
 1B32 5524              clr R5
 1B34 3801              movw R6,R16
 1B36 4901              movw R8,R18
 1B38 6228              or R6,R2
 1B3A 7328              or R7,R3
 1B3C 8428              or R8,R4
 1B3E 9528              or R9,R5
 1B40 70921500          sts _lfib+1,R7
 1B44 60921400          sts _lfib,R6
 1B48 90921700          sts _lfib+2+1,R9
 1B4C 80921600          sts _lfib+2,R8
 1B50                   .dbline 927
 1B50           ;                 lfib&=0x0000ffff;
 1B50 4FEF              ldi R20,255
 1B52 5FEF              ldi R21,255
 1B54 60E0              ldi R22,0
 1B56 70E0              ldi R23,0
 1B58 1301              movw R2,R6
 1B5A 2401              movw R4,R8
 1B5C 2422              and R2,R20
 1B5E 3522              and R3,R21
 1B60 4622              and R4,R22
 1B62 5722              and R5,R23
 1B64 30921500          sts _lfib+1,R3
 1B68 20921400          sts _lfib,R2
 1B6C 50921700          sts _lfib+2+1,R5
 1B70 40921600          sts _lfib+2,R4
 1B74                   .dbline 928
 1B74           ;                 myFIB.f=(unsigned long)lfib; 
 1B74 8101              movw R16,R2
 1B76 9201              movw R18,R4
 1B78 0E940000          xcall ulong2fp
 1B7C 10933C02          sts _myFIB+1,R17
 1B80 00933B02          sts _myFIB,R16
 1B84 30933E02          sts _myFIB+2+1,R19
 1B88 20933D02          sts _myFIB+2,R18
 1B8C                   .dbline 930
 1B8C           ;                 
 1B8C           ;                 T_dat=myFIB.i[1];
 1B8C 20903D02          lds R2,_myFIB+2
 1B90 30903E02          lds R3,_myFIB+2+1
 1B94 3092D001          sts _T_dat+1,R3
 1B98 2092CF01          sts _T_dat,R2
 1B9C                   .dbline 931
 1B9C           ;                 SendManchester();//流量-相位1
 1B9C 0E94C21D          xcall _SendManchester
 1BA0                   .dbline 932
 1BA0           ;                 crc16array[4]=(unsigned char)(T_dat);
 1BA0 2090CF01          lds R2,_T_dat
 1BA4 3090D001          lds R3,_T_dat+1
 1BA8 20920400          sts _crc16array+4,R2
 1BAC                   .dbline 933
 1BAC           ;                 crc16array[5]=(unsigned char)(T_dat>>8);
 1BAC 232C              mov R2,R3
 1BAE 3324              clr R3
 1BB0 27FC              sbrc R2,7
 1BB2 3094              com R3
 1BB4 20920500          sts _crc16array+5,R2
 1BB8                   .dbline 936
 1BB8           ; 
 1BB8           ; 
 1BB8           ;                 CheckMotor(30);       
 1BB8 0EE1              ldi R16,30
 1BBA 10E0              ldi R17,0
 1BBC 0E94D502          xcall _CheckMotor
 1BC0                   .dbline 937
 1BC0           ;                 T_dat=myFIB.i[0];
 1BC0 20903B02          lds R2,_myFIB
 1BC4 30903C02          lds R3,_myFIB+1
 1BC8 3092D001          sts _T_dat+1,R3
 1BCC 2092CF01          sts _T_dat,R2
 1BD0                   .dbline 938
 1BD0           ;                 SendManchester();//流量-相位2
 1BD0 0E94C21D          xcall _SendManchester
 1BD4                   .dbline 939
 1BD4           ;                 crc16array[6]=(unsigned char)(T_dat);
 1BD4 2090CF01          lds R2,_T_dat
 1BD8 3090D001          lds R3,_T_dat+1
 1BDC 20920600          sts _crc16array+6,R2
 1BE0                   .dbline 940
 1BE0           ;                 crc16array[7]=(unsigned char)(T_dat>>8);
 1BE0 232C              mov R2,R3
 1BE2 3324              clr R3
 1BE4 27FC              sbrc R2,7
 1BE6 3094              com R3
 1BE8 20920700          sts _crc16array+7,R2
 1BEC                   .dbline 942
 1BEC           ;                 
 1BEC           ;                  CheckMotor(30);      
 1BEC 0EE1              ldi R16,30
 1BEE 10E0              ldi R17,0
 1BF0 0E94D502          xcall _CheckMotor
 1BF4                   .dbline 943
 1BF4           ;                 crc16(crc16array,8);//0.75ms
 1BF4 28E0              ldi R18,8
 1BF6 30E0              ldi R19,0
 1BF8 00E0              ldi R16,<_crc16array
 1BFA 10E0              ldi R17,>_crc16array
 1BFC 0E94D421          xcall _crc16
 1C00                   .dbline 944
 1C00           ;                 T_dat=crc16hi;
 1C00 20901300          lds R2,_crc16hi
 1C04 3324              clr R3
 1C06 3092D001          sts _T_dat+1,R3
 1C0A 2092CF01          sts _T_dat,R2
 1C0E                   .dbline 945
 1C0E           ;                 T_dat<<=8;
 1C0E 2090CF01          lds R2,_T_dat
 1C12 3090D001          lds R3,_T_dat+1
 1C16 322C              mov R3,R2
 1C18 2224              clr R2
 1C1A 3092D001          sts _T_dat+1,R3
 1C1E 2092CF01          sts _T_dat,R2
 1C22                   .dbline 946
 1C22           ;                 T_dat|=crc16lo;         
 1C22 20901200          lds R2,_crc16lo
 1C26 3324              clr R3
 1C28 4090CF01          lds R4,_T_dat
 1C2C 5090D001          lds R5,_T_dat+1
 1C30 4228              or R4,R2
 1C32 5328              or R5,R3
 1C34 5092D001          sts _T_dat+1,R5
 1C38 4092CF01          sts _T_dat,R4
 1C3C                   .dbline 947
 1C3C           ;           SendManchester();//上传CRC校验共2字节
 1C3C 0E94C21D          xcall _SendManchester
 1C40                   .dbline 948
 1C40           ;       break;
 1C40 0C94371B          xjmp L372
 1C44           L420:
 1C44                   .dbline 951
 1C44           ;  
 1C44           ;   case 0x60://收放电机   
 1C44           ;     if( !(((R_dat)==0x61)  || ((R_dat)==0x62) ) )//既不是正转，也不是反转，则立即返回且不响应上位机
 1C44 C090CD01          lds R12,_R_dat
 1C48 D090CE01          lds R13,_R_dat+1
 1C4C C601              movw R24,R12
 1C4E 8136              cpi R24,97
 1C50 E0E0              ldi R30,0
 1C52 9E07              cpc R25,R30
 1C54 31F0              breq L421
 1C56           X142:
 1C56 8236              cpi R24,98
 1C58 E0E0              ldi R30,0
 1C5A 9E07              cpc R25,R30
 1C5C 11F0              breq L421
 1C5E           X143:
 1C5E                   .dbline 952
 1C5E           ;        break;
 1C5E 0C94371B          xjmp L372
 1C62           L421:
 1C62                   .dbline 954
 1C62           ;       
 1C62           ;     if(PWM2_PIN==1)//调节电机正在运行
 1C62 80B1              in R24,0x0
 1C64 8470              andi R24,4
 1C66 8695              lsr R24
 1C68 8695              lsr R24
 1C6A 8130              cpi R24,1
 1C6C 71F4              brne L423
 1C6E           X144:
 1C6E                   .dbline 955
 1C6E           ;        {
 1C6E                   .dbline 956
 1C6E           ;              Motor1Status.s.StartResult=3;//另一电机正在运行
 1C6E 80913902          lds R24,_Motor1Status
 1C72 90913A02          lds R25,_Motor1Status+1
 1C76 806C              ori R24,192
 1C78 90933A02          sts _Motor1Status+1,R25
 1C7C 80933902          sts _Motor1Status,R24
 1C80                   .dbline 957
 1C80           ;                  CheckMotor(100);//很快响应上位机
 1C80 04E6              ldi R16,100
 1C82 10E0              ldi R17,0
 1C84 0E94D502          xcall _CheckMotor
 1C88                   .dbline 958
 1C88           ;        }
 1C88 ACC0              xjmp L424
 1C8A           L423:
 1C8A                   .dbline 959
 1C8A           ;     else if(PWM1_PIN==1)//收放电机正在运行
 1C8A 89B3              in R24,0x19
 1C8C 8270              andi R24,2
 1C8E 8695              lsr R24
 1C90 8130              cpi R24,1
 1C92 09F0              breq X273
 1C94 50C0              xjmp L425
 1C96           X273:
 1C96           X145:
 1C96                   .dbline 960
 1C96           ;        { 
 1C96                   .dbline 961
 1C96           ;          if( ((DIR1_PIN==1) && (R_dat==0x61)) || ((DIR1_PIN==0) && (R_dat==0x62)) )//20161229
 1C96 89B3              in R24,0x19
 1C98 8470              andi R24,4
 1C9A 8695              lsr R24
 1C9C 8695              lsr R24
 1C9E 8130              cpi R24,1
 1CA0 41F4              brne L430
 1CA2           X146:
 1CA2 8091CD01          lds R24,_R_dat
 1CA6 9091CE01          lds R25,_R_dat+1
 1CAA 8136              cpi R24,97
 1CAC E0E0              ldi R30,0
 1CAE 9E07              cpc R25,R30
 1CB0 69F0              breq L429
 1CB2           X147:
 1CB2           L430:
 1CB2 89B3              in R24,0x19
 1CB4 8470              andi R24,4
 1CB6 8695              lsr R24
 1CB8 8695              lsr R24
 1CBA 99F4              brne L427
 1CBC           X148:
 1CBC 8091CD01          lds R24,_R_dat
 1CC0 9091CE01          lds R25,_R_dat+1
 1CC4 8236              cpi R24,98
 1CC6 E0E0              ldi R30,0
 1CC8 9E07              cpc R25,R30
 1CCA 59F4              brne L427
 1CCC           X149:
 1CCC           L429:
 1CCC                   .dbline 962
 1CCC           ;           { 
 1CCC                   .dbline 963
 1CCC           ;                  Motor1Status.s.StartResult=1;//本电机正在同向运行
 1CCC 80913902          lds R24,_Motor1Status
 1CD0 90913A02          lds R25,_Motor1Status+1
 1CD4 8F73              andi R24,63
 1CD6 8064              ori R24,64
 1CD8 90933A02          sts _Motor1Status+1,R25
 1CDC 80933902          sts _Motor1Status,R24
 1CE0                   .dbline 964
 1CE0           ;               }
 1CE0 25C0              xjmp L428
 1CE2           L427:
 1CE2                   .dbline 965
 1CE2           ;               else if( ((DIR1_PIN==1) && (R_dat==0x62)) || ((DIR1_PIN==0) && (R_dat==0x61)) ) //20161229
 1CE2 89B3              in R24,0x19
 1CE4 8470              andi R24,4
 1CE6 8695              lsr R24
 1CE8 8695              lsr R24
 1CEA 8130              cpi R24,1
 1CEC 41F4              brne L434
 1CEE           X150:
 1CEE 8091CD01          lds R24,_R_dat
 1CF2 9091CE01          lds R25,_R_dat+1
 1CF6 8236              cpi R24,98
 1CF8 E0E0              ldi R30,0
 1CFA 9E07              cpc R25,R30
 1CFC 69F0              breq L433
 1CFE           X151:
 1CFE           L434:
 1CFE 89B3              in R24,0x19
 1D00 8470              andi R24,4
 1D02 8695              lsr R24
 1D04 8695              lsr R24
 1D06 91F4              brne L431
 1D08           X152:
 1D08 8091CD01          lds R24,_R_dat
 1D0C 9091CE01          lds R25,_R_dat+1
 1D10 8136              cpi R24,97
 1D12 E0E0              ldi R30,0
 1D14 9E07              cpc R25,R30
 1D16 51F4              brne L431
 1D18           X153:
 1D18           L433:
 1D18                   .dbline 966
 1D18           ;               {
 1D18                   .dbline 967
 1D18           ;                   Motor1Status.s.StartResult=2;//本电机正在反向运行
 1D18 80913902          lds R24,_Motor1Status
 1D1C 90913A02          lds R25,_Motor1Status+1
 1D20 8F73              andi R24,63
 1D22 8068              ori R24,128
 1D24 90933A02          sts _Motor1Status+1,R25
 1D28 80933902          sts _Motor1Status,R24
 1D2C                   .dbline 968
 1D2C           ;               }
 1D2C           L431:
 1D2C           L428:
 1D2C                   .dbline 969
 1D2C           ;               CheckMotor(100); //很快响应上位机
 1D2C 04E6              ldi R16,100
 1D2E 10E0              ldi R17,0
 1D30 0E94D502          xcall _CheckMotor
 1D34                   .dbline 970
 1D34           ;        }
 1D34 56C0              xjmp L426
 1D36           L425:
 1D36                   .dbline 972
 1D36           ;       else //二个电机都是停止状态，按命令要求启动电机，约1.5秒后反馈上位机
 1D36           ;        {  
 1D36                   .dbline 974
 1D36           ;           //全部电机状态置初值，上一次停止原因全部清除
 1D36           ;               Motor1Status.s.BrokenStop=0;
 1D36 80913902          lds R24,_Motor1Status
 1D3A 90913A02          lds R25,_Motor1Status+1
 1D3E 8B7F              andi R24,251
 1D40 90933A02          sts _Motor1Status+1,R25
 1D44 80933902          sts _Motor1Status,R24
 1D48                   .dbline 975
 1D48           ;           Motor1Status.s.CommandStop=0;
 1D48 877F              andi R24,247
 1D4A 90933A02          sts _Motor1Status+1,R25
 1D4E 80933902          sts _Motor1Status,R24
 1D52                   .dbline 976
 1D52           ;           Motor1Status.s.OverCurrent=0;
 1D52 8F7E              andi R24,239
 1D54 90933A02          sts _Motor1Status+1,R25
 1D58 80933902          sts _Motor1Status,R24
 1D5C                   .dbline 977
 1D5C           ;           Motor1Status.s.UnderVoltage=0;
 1D5C 8F7D              andi R24,223
 1D5E 90933A02          sts _Motor1Status+1,R25
 1D62 80933902          sts _Motor1Status,R24
 1D66                   .dbline 978
 1D66           ;               Motor1Status.s.StartResult=0;//正常启动
 1D66 8F73              andi R24,63
 1D68 90933A02          sts _Motor1Status+1,R25
 1D6C 80933902          sts _Motor1Status,R24
 1D70                   .dbline 980
 1D70           ;               
 1D70           ;               if((R_dat)==0x61)//张开命令
 1D70 8091CD01          lds R24,_R_dat
 1D74 9091CE01          lds R25,_R_dat+1
 1D78 8136              cpi R24,97
 1D7A E0E0              ldi R30,0
 1D7C 9E07              cpc R25,R30
 1D7E 19F4              brne L435
 1D80           X154:
 1D80                   .dbline 981
 1D80           ;                 { 
 1D80                   .dbline 982
 1D80           ;                  DIR1_H       //张开
 1D80                   .dbline 982
 1D80 D29A              sbi 0x1a,2
 1D82                   .dbline 982
 1D82 DA9A              sbi 0x1b,2
 1D84                   .dbline 982
 1D84                   .dbline 983
 1D84           ;                 }
 1D84 0EC0              xjmp L436
 1D86           L435:
 1D86                   .dbline 984
 1D86           ;               else if((R_dat)==0x62)          
 1D86 8091CD01          lds R24,_R_dat
 1D8A 9091CE01          lds R25,_R_dat+1
 1D8E 8236              cpi R24,98
 1D90 E0E0              ldi R30,0
 1D92 9E07              cpc R25,R30
 1D94 11F0              breq X274
 1D96 0C94421B          xjmp L169
 1D9A           X274:
 1D9A           X155:
 1D9A                   .dbline 985
 1D9A           ;                { 
 1D9A                   .dbline 986
 1D9A           ;                  DIR1_L      //收拢
 1D9A                   .dbline 986
 1D9A D29A              sbi 0x1a,2
 1D9C                   .dbline 986
 1D9C 8BB3              in R24,0x1b
 1D9E 8B7F              andi R24,251
 1DA0 8BBB              out 0x1b,R24
 1DA2                   .dbline 986
 1DA2                   .dbline 987
 1DA2           ;                }
 1DA2                   .dbline 989
 1DA2           ;                else
 1DA2           ;                {
 1DA2                   .dbline 990
 1DA2           ;                return;//20170609
 1DA2           L438:
 1DA2           L436:
 1DA2                   .dbline 993
 1DA2           ;                }
 1DA2           ;                
 1DA2           ;               VM_H//开电机电源
 1DA2                   .dbline 993
 1DA2 BF9A              sbi 0x17,7
 1DA4                   .dbline 993
 1DA4 C79A              sbi 0x18,7
 1DA6                   .dbline 993
 1DA6                   .dbline 995
 1DA6           ;               
 1DA6           ;               CheckMotor(500);//开电机电源后需等待半秒让大功率二极管电压稳定
 1DA6 04EF              ldi R16,500
 1DA8 11E0              ldi R17,1
 1DAA 0E94D502          xcall _CheckMotor
 1DAE                   .dbline 1003
 1DAE           ;                
 1DAE           ;           
 1DAE           ;                       
 1DAE           ;               //CompCounter=0; //电流监测计数器清0
 1DAE           ;               //EIFR|=0x01;//清INT0中断标志
 1DAE           ;               //EIMSK&=0xfe;//关INT0中断，电机启动前期不用监测过流情况
 1DAE           ;               
 1DAE           ;               TCCR1B = 0x00; //stop
 1DAE 2224              clr R2
 1DB0 2EBC              out 0x2e,R2
 1DB2                   .dbline 1004
 1DB2           ;       TCNT1 = 61629;   //定时500ms
 1DB2 8DEB              ldi R24,61629
 1DB4 90EF              ldi R25,240
 1DB6 9DBD              out 0x2d,R25
 1DB8 8CBD              out 0x2c,R24
 1DBA                   .dbline 1005
 1DBA           ;               TIFR|=0x04; //清定时器1中断标志
 1DBA 86B7              in R24,0x36
 1DBC 8460              ori R24,4
 1DBE 86BF              out 0x36,R24
 1DC0                   .dbline 1006
 1DC0           ;               TCCR1B = 0x05; //1024分频
 1DC0 85E0              ldi R24,5
 1DC2 8EBD              out 0x2e,R24
 1DC4                   .dbline 1007
 1DC4           ;               TIFR|=0x04; //清定时器1中断标志
 1DC4 86B7              in R24,0x36
 1DC6 8460              ori R24,4
 1DC8 86BF              out 0x36,R24
 1DCA                   .dbline 1009
 1DCA           ;               
 1DCA           ;               Pwm_startup(1);//PWM启动，耗时约200ms,电机启动前期不进行电流检查，但有欠压监测          
 1DCA 01E0              ldi R16,1
 1DCC 0E943D01          xcall _Pwm_startup
 1DD0           L439:
 1DD0                   .dbline 1011
 1DD0           ;                         
 1DD0           ;               while((TIFR&0x04)==0x00); //等待定时到，期间可能有欠压中断发生
 1DD0           L440:
 1DD0                   .dbline 1011
 1DD0 26B6              in R2,0x36
 1DD2 22FE              sbrs R2,2
 1DD4 FDCF              rjmp L439
 1DD6           X156:
 1DD6                   .dbline 1012
 1DD6           ;               TCCR1B = 0x00; //stop
 1DD6 2224              clr R2
 1DD8 2EBC              out 0x2e,R2
 1DDA                   .dbline 1017
 1DDA           ;               
 1DDA           ;               //EIFR|=0x01;//清INT0中断标志
 1DDA           ;               //EIMSK|=0x01;//开INT0中断，电机启动500ms后即开始监测过流情况
 1DDA           ; 
 1DDA           ;               CheckMotor(500);//延时保证总线电压稳定          
 1DDA 04EF              ldi R16,500
 1DDC 11E0              ldi R17,1
 1DDE 0E94D502          xcall _CheckMotor
 1DE2                   .dbline 1018
 1DE2           ;      }
 1DE2           L426:
 1DE2           L424:
 1DE2                   .dbline 1019
 1DE2           ;         T_dat=Motor1Status.i;
 1DE2 20903902          lds R2,_Motor1Status
 1DE6 30903A02          lds R3,_Motor1Status+1
 1DEA 3092D001          sts _T_dat+1,R3
 1DEE 2092CF01          sts _T_dat,R2
 1DF2                   .dbline 1020
 1DF2           ;         SendManchester();      
 1DF2 0E94C21D          xcall _SendManchester
 1DF6                   .dbline 1022
 1DF6           ;       
 1DF6           ;       break;
 1DF6 0C94371B          xjmp L372
 1DFA           L442:
 1DFA                   .dbline 1025
 1DFA           ;       
 1DFA           ;       case 0x70://调节电机   
 1DFA           ;     if( ((R_dat)<0x71)  || ((R_dat)>0x7c)  )//既不是调大，也不是调小，也不微调大，也不是微调小，则立即返回且不响应上位机
 1DFA C090CD01          lds R12,_R_dat
 1DFE D090CE01          lds R13,_R_dat+1
 1E02 C601              movw R24,R12
 1E04 8137              cpi R24,113
 1E06 E0E0              ldi R30,0
 1E08 9E07              cpc R25,R30
 1E0A 2CF0              brlt L445
 1E0C           X157:
 1E0C 8CE7              ldi R24,124
 1E0E 90E0              ldi R25,0
 1E10 8C15              cp R24,R12
 1E12 9D05              cpc R25,R13
 1E14 14F4              brge L443
 1E16           X158:
 1E16           L445:
 1E16                   .dbline 1026
 1E16           ;        break;
 1E16 0C94371B          xjmp L372
 1E1A           L443:
 1E1A                   .dbline 1028
 1E1A           ; 
 1E1A           ;        i=R_dat%2;
 1E1A 22E0              ldi R18,2
 1E1C 30E0              ldi R19,0
 1E1E 0091CD01          lds R16,_R_dat
 1E22 1091CE01          lds R17,_R_dat+1
 1E26 0E940000          xcall mod16s
 1E2A A02E              mov R10,R16
 1E2C                   .dbline 1029
 1E2C           ;     if(PWM1_PIN==1)//收放电机正在运行
 1E2C 89B3              in R24,0x19
 1E2E 8270              andi R24,2
 1E30 8695              lsr R24
 1E32 8130              cpi R24,1
 1E34 71F4              brne L446
 1E36           X159:
 1E36                   .dbline 1030
 1E36           ;        {
 1E36                   .dbline 1031
 1E36           ;             Motor2Status.s.StartResult=3;//另一电机正在运行
 1E36 80913702          lds R24,_Motor2Status
 1E3A 90913802          lds R25,_Motor2Status+1
 1E3E 806C              ori R24,192
 1E40 90933802          sts _Motor2Status+1,R25
 1E44 80933702          sts _Motor2Status,R24
 1E48                   .dbline 1032
 1E48           ;                 CheckMotor(100);//很快响应上位机
 1E48 04E6              ldi R16,100
 1E4A 10E0              ldi R17,0
 1E4C 0E94D502          xcall _CheckMotor
 1E50                   .dbline 1033
 1E50           ;        }
 1E50 8FC0              xjmp L447
 1E52           L446:
 1E52                   .dbline 1034
 1E52           ;     else if(PWM2_PIN==1)//调节电机正在运行
 1E52 80B1              in R24,0x0
 1E54 8470              andi R24,4
 1E56 8695              lsr R24
 1E58 8695              lsr R24
 1E5A 8130              cpi R24,1
 1E5C 81F5              brne L448
 1E5E           X160:
 1E5E                   .dbline 1035
 1E5E           ;        { 
 1E5E                   .dbline 1037
 1E5E           ;          
 1E5E           ;          if( ( (DIR2_PIN==0) && (i==1) ) || ( (DIR2_PIN==1) && (i==0) ) )
 1E5E 0099              sbic 0x0,0
 1E60 03C0              rjmp L453
 1E62           X161:
 1E62 8A2D              mov R24,R10
 1E64 8130              cpi R24,1
 1E66 31F0              breq L452
 1E68           X162:
 1E68           L453:
 1E68 80B1              in R24,0x0
 1E6A 8170              andi R24,1
 1E6C 8130              cpi R24,1
 1E6E 69F4              brne L450
 1E70           X163:
 1E70 AA20              tst R10
 1E72 59F4              brne L450
 1E74           X164:
 1E74           L452:
 1E74                   .dbline 1038
 1E74           ;           { 
 1E74                   .dbline 1039
 1E74           ;                  Motor2Status.s.StartResult=1;//本电机正在同向运行
 1E74 80913702          lds R24,_Motor2Status
 1E78 90913802          lds R25,_Motor2Status+1
 1E7C 8F73              andi R24,63
 1E7E 8064              ori R24,64
 1E80 90933802          sts _Motor2Status+1,R25
 1E84 80933702          sts _Motor2Status,R24
 1E88                   .dbline 1040
 1E88           ;               }
 1E88 15C0              xjmp L451
 1E8A           L450:
 1E8A                   .dbline 1041
 1E8A           ;               else if( ( (DIR2_PIN==0) && (i==0) ) || ((DIR2_PIN==1) && (i==1) ) )
 1E8A 0099              sbic 0x0,0
 1E8C 02C0              rjmp L457
 1E8E           X165:
 1E8E AA20              tst R10
 1E90 39F0              breq L456
 1E92           X166:
 1E92           L457:
 1E92 80B1              in R24,0x0
 1E94 8170              andi R24,1
 1E96 8130              cpi R24,1
 1E98 69F4              brne L454
 1E9A           X167:
 1E9A 8A2D              mov R24,R10
 1E9C 8130              cpi R24,1
 1E9E 51F4              brne L454
 1EA0           X168:
 1EA0           L456:
 1EA0                   .dbline 1042
 1EA0           ;               {
 1EA0                   .dbline 1043
 1EA0           ;                  Motor2Status.s.StartResult=2;//本电机正在反向运行
 1EA0 80913702          lds R24,_Motor2Status
 1EA4 90913802          lds R25,_Motor2Status+1
 1EA8 8F73              andi R24,63
 1EAA 8068              ori R24,128
 1EAC 90933802          sts _Motor2Status+1,R25
 1EB0 80933702          sts _Motor2Status,R24
 1EB4                   .dbline 1044
 1EB4           ;               }        
 1EB4           L454:
 1EB4           L451:
 1EB4                   .dbline 1045
 1EB4           ;               CheckMotor(100); //很快响应上位机
 1EB4 04E6              ldi R16,100
 1EB6 10E0              ldi R17,0
 1EB8 0E94D502          xcall _CheckMotor
 1EBC                   .dbline 1046
 1EBC           ;        }
 1EBC 59C0              xjmp L449
 1EBE           L448:
 1EBE                   .dbline 1048
 1EBE           ;       else //二个电机都是停止状态，按命令要求启动电机，约1.5秒后反馈上位机
 1EBE           ;        {  
 1EBE                   .dbline 1050
 1EBE           ;           //全部电机状态置初值，上一次停止原因全部清除
 1EBE           ;               Motor2Status.s.BrokenStop=0;
 1EBE 80913702          lds R24,_Motor2Status
 1EC2 90913802          lds R25,_Motor2Status+1
 1EC6 8B7F              andi R24,251
 1EC8 90933802          sts _Motor2Status+1,R25
 1ECC 80933702          sts _Motor2Status,R24
 1ED0                   .dbline 1051
 1ED0           ;           Motor2Status.s.CommandStop=0;
 1ED0 877F              andi R24,247
 1ED2 90933802          sts _Motor2Status+1,R25
 1ED6 80933702          sts _Motor2Status,R24
 1EDA                   .dbline 1052
 1EDA           ;           Motor2Status.s.OverCurrent=0;
 1EDA 8F7E              andi R24,239
 1EDC 90933802          sts _Motor2Status+1,R25
 1EE0 80933702          sts _Motor2Status,R24
 1EE4                   .dbline 1053
 1EE4           ;           Motor2Status.s.UnderVoltage=0;
 1EE4 8F7D              andi R24,223
 1EE6 90933802          sts _Motor2Status+1,R25
 1EEA 80933702          sts _Motor2Status,R24
 1EEE                   .dbline 1054
 1EEE           ;               Motor2Status.s.StartResult=0;//正常启动
 1EEE 8F73              andi R24,63
 1EF0 90933802          sts _Motor2Status+1,R25
 1EF4 80933702          sts _Motor2Status,R24
 1EF8                   .dbline 1056
 1EF8           ;               
 1EF8           ;                if( i==1 )//奇数命令，调大
 1EF8 8A2D              mov R24,R10
 1EFA 8130              cpi R24,1
 1EFC 59F4              brne L458
 1EFE           X169:
 1EFE                   .dbline 1057
 1EFE           ;                 { 
 1EFE                   .dbline 1058
 1EFE           ;                  DIR2_L      //20161229 
 1EFE                   .dbline 1058
 1EFE 80916100          lds R24,97
 1F02 8160              ori R24,1
 1F04 80936100          sts 97,R24
 1F08                   .dbline 1058
 1F08 80916200          lds R24,98
 1F0C 8E7F              andi R24,254
 1F0E 80936200          sts 98,R24
 1F12                   .dbline 1058
 1F12                   .dbline 1059
 1F12           ;                 }
 1F12 0EC0              xjmp L459
 1F14           L458:
 1F14                   .dbline 1060
 1F14           ;               else if( i==0 )    //偶数命令，调小
 1F14 AA20              tst R10
 1F16 11F0              breq X275
 1F18 0C94421B          xjmp L169
 1F1C           X275:
 1F1C           X170:
 1F1C                   .dbline 1061
 1F1C           ;                { 
 1F1C                   .dbline 1062
 1F1C           ;                  DIR2_H      //20161229 
 1F1C                   .dbline 1062
 1F1C 80916100          lds R24,97
 1F20 8160              ori R24,1
 1F22 80936100          sts 97,R24
 1F26                   .dbline 1062
 1F26 80916200          lds R24,98
 1F2A 8160              ori R24,1
 1F2C 80936200          sts 98,R24
 1F30                   .dbline 1062
 1F30                   .dbline 1063
 1F30           ;                }
 1F30                   .dbline 1065
 1F30           ;                else
 1F30           ;                {
 1F30                   .dbline 1066
 1F30           ;                 return;//20170609
 1F30           L461:
 1F30           L459:
 1F30                   .dbline 1069
 1F30           ;                }
 1F30           ;                
 1F30           ;               VM_H//开电机电源
 1F30                   .dbline 1069
 1F30 BF9A              sbi 0x17,7
 1F32                   .dbline 1069
 1F32 C79A              sbi 0x18,7
 1F34                   .dbline 1069
 1F34                   .dbline 1071
 1F34           ;               
 1F34           ;               CheckMotor(500);//开电机电源后需等待半秒让大功率二极管电压稳定
 1F34 04EF              ldi R16,500
 1F36 11E0              ldi R17,1
 1F38 0E94D502          xcall _CheckMotor
 1F3C                   .dbline 1077
 1F3C           ;               
 1F3C           ;               //CompCounter=0; //电流监测计数器清0
 1F3C           ;               //EIFR|=0x01;//清INT0中断标志
 1F3C           ;               //EIMSK&=0xfe;//关INT0中断，电机启动前期不用监测过流情况
 1F3C           ;               
 1F3C           ;               TCCR1B = 0x00; //stop
 1F3C 2224              clr R2
 1F3E 2EBC              out 0x2e,R2
 1F40                   .dbline 1078
 1F40           ;       TCNT1 = 61629;   //定时500ms
 1F40 8DEB              ldi R24,61629
 1F42 90EF              ldi R25,240
 1F44 9DBD              out 0x2d,R25
 1F46 8CBD              out 0x2c,R24
 1F48                   .dbline 1079
 1F48           ;               TIFR|=0x04; //清定时器1中断标志
 1F48 86B7              in R24,0x36
 1F4A 8460              ori R24,4
 1F4C 86BF              out 0x36,R24
 1F4E                   .dbline 1080
 1F4E           ;               TCCR1B = 0x05; //1024分频
 1F4E 85E0              ldi R24,5
 1F50 8EBD              out 0x2e,R24
 1F52                   .dbline 1081
 1F52           ;               TIFR|=0x04; //清定时器1中断标志
 1F52 86B7              in R24,0x36
 1F54 8460              ori R24,4
 1F56 86BF              out 0x36,R24
 1F58                   .dbline 1083
 1F58           ; 
 1F58           ;               Pwm_startup(2);//PWM启动，耗时约200ms,电机启动前期不进行电流检查，但有欠压监测                                  
 1F58 02E0              ldi R16,2
 1F5A 0E943D01          xcall _Pwm_startup
 1F5E           L462:
 1F5E                   .dbline 1085
 1F5E           ;                         
 1F5E           ;               while((TIFR&0x04)==0x00); //等待定时到，期间可能有欠压中断发生
 1F5E           L463:
 1F5E                   .dbline 1085
 1F5E 26B6              in R2,0x36
 1F60 22FE              sbrs R2,2
 1F62 FDCF              rjmp L462
 1F64           X171:
 1F64                   .dbline 1086
 1F64           ;               TCCR1B = 0x00; //stop
 1F64 2224              clr R2
 1F66 2EBC              out 0x2e,R2
 1F68                   .dbline 1091
 1F68           ;               
 1F68           ;               //EIFR|=0x01;//清INT0中断标志
 1F68           ;               //EIMSK|=0x01;//开INT0中断，电机启动500ms后即开始监测过流情况
 1F68           ;                                       
 1F68           ;               CheckMotor(500);//延时保证总线电压稳定                   
 1F68 04EF              ldi R16,500
 1F6A 11E0              ldi R17,1
 1F6C 0E94D502          xcall _CheckMotor
 1F70                   .dbline 1092
 1F70           ;      }
 1F70           L449:
 1F70           L447:
 1F70                   .dbline 1093
 1F70           ;         T_dat=Motor2Status.i;
 1F70 20903702          lds R2,_Motor2Status
 1F74 30903802          lds R3,_Motor2Status+1
 1F78 3092D001          sts _T_dat+1,R3
 1F7C 2092CF01          sts _T_dat,R2
 1F80                   .dbline 1094
 1F80           ;         SendManchester();             
 1F80 0E94C21D          xcall _SendManchester
 1F84                   .dbline 1095
 1F84           ;         if(R_dat>0x72)//微调，需要定时，定时到后自动停止
 1F84 82E7              ldi R24,114
 1F86 90E0              ldi R25,0
 1F88 2090CD01          lds R2,_R_dat
 1F8C 3090CE01          lds R3,_R_dat+1
 1F90 8215              cp R24,R2
 1F92 9305              cpc R25,R3
 1F94 14F0              brlt X276
 1F96 0C94371B          xjmp L372
 1F9A           X276:
 1F9A           X172:
 1F9A                   .dbline 1096
 1F9A           ;         {
 1F9A                   .dbline 1097
 1F9A           ;           ETIFR=0x04;//清Timer3溢出中断标志
 1F9A 84E0              ldi R24,4
 1F9C 80937C00          sts 124,R24
 1FA0                   .dbline 1098
 1FA0           ;           ETIMSK = 0x04; //Timer3溢出中断使能，其它中断关闭
 1FA0 80937D00          sts 125,R24
 1FA4                   .dbline 1099
 1FA4           ;           TCCR3B = 0x00;
 1FA4 2224              clr R2
 1FA6 20928A00          sts 138,R2
 1FAA                   .dbline 1101
 1FAA           ;               
 1FAA           ;               j=(R_dat-0x72+1)/2;
 1FAA 22E0              ldi R18,2
 1FAC 30E0              ldi R19,0
 1FAE 0091CD01          lds R16,_R_dat
 1FB2 1091CE01          lds R17,_R_dat+1
 1FB6 0257              subi R16,114
 1FB8 1040              sbci R17,0
 1FBA 0F5F              subi R16,255  ; offset = 1
 1FBC 1F4F              sbci R17,255
 1FBE 0E940000          xcall div16s
 1FC2 6801              movw R12,R16
 1FC4                   .dbline 1102
 1FC4           ;               j+=1;//多加一秒
 1FC4 C601              movw R24,R12
 1FC6 0196              adiw R24,1
 1FC8                   .dbline 1103
 1FC8           ;               j=j*7812;
 1FC8 04E8              ldi R16,7812
 1FCA 1EE1              ldi R17,30
 1FCC 9C01              movw R18,R24
 1FCE 0E940000          xcall empy16s
 1FD2 6801              movw R12,R16
 1FD4                   .dbline 1104
 1FD4           ;               j=65536-j;
 1FD4 1601              movw R2,R12
 1FD6 4424              clr R4
 1FD8 5524              clr R5
 1FDA 40E0              ldi R20,0
 1FDC 50E0              ldi R21,0
 1FDE 61E0              ldi R22,1
 1FE0 70E0              ldi R23,0
 1FE2 4219              sub R20,R2
 1FE4 5309              sbc R21,R3
 1FE6 6409              sbc R22,R4
 1FE8 7509              sbc R23,R5
 1FEA                   .dbline 1105
 1FEA           ;               j+=1;
 1FEA CA01              movw R24,R20
 1FEC 0196              adiw R24,1
 1FEE 6C01              movw R12,R24
 1FF0                   .dbline 1107
 1FF0           ;               
 1FF0           ;               TCNT3H = j>>8;  //最小1秒，最多5秒
 1FF0 1C01              movw R2,R24
 1FF2 232C              mov R2,R3
 1FF4 3324              clr R3
 1FF6 20928900          sts 137,R2
 1FFA                   .dbline 1108
 1FFA           ;               TCNT3L = j;
 1FFA C0928800          sts 136,R12
 1FFE                   .dbline 1120
 1FFE           ;               
 1FFE           ;               //TCNT3H = 0xE1;  //1秒
 1FFE           ;               //TCNT3L = 0x7C;
 1FFE           ;               
 1FFE           ;                //TCNT3H = 0xC2; //2秒
 1FFE           ;                //TCNT3L = 0xF7;
 1FFE           ;  
 1FFE           ;               // TCNT3H = 0xA4; //3秒
 1FFE           ;               // TCNT3L = 0x73;
 1FFE           ;  
 1FFE           ;               
 1FFE           ;               TCCR3A = 0x00;
 1FFE 2224              clr R2
 2000 20928B00          sts 139,R2
 2004                   .dbline 1121
 2004           ;               TCCR3B = 0x05; //8M时钟，1024分频，定时1秒
 2004 85E0              ldi R24,5
 2006 80938A00          sts 138,R24
 200A                   .dbline 1122
 200A           ;               ETIFR=0x04;//清Timer3溢出中断标志
 200A 84E0              ldi R24,4
 200C 80937C00          sts 124,R24
 2010                   .dbline 1123
 2010           ;         } 
 2010                   .dbline 1124
 2010           ;       break;
 2010 0C94371B          xjmp L372
 2014           L467:
 2014                   .dbline 1127
 2014           ;  
 2014           ;     case 0x80://电机相关
 2014           ;          if(R_dat==0x80)//只开电机电源，不开电机
 2014 8091CD01          lds R24,_R_dat
 2018 9091CE01          lds R25,_R_dat+1
 201C 8038              cpi R24,128
 201E E0E0              ldi R30,0
 2020 9E07              cpc R25,R30
 2022 A1F4              brne L468
 2024           X173:
 2024                   .dbline 1128
 2024           ;               {                 
 2024                   .dbline 1129
 2024           ;             CheckMotor(30);//延迟10ms  
 2024 0EE1              ldi R16,30
 2026 10E0              ldi R17,0
 2028 0E94D502          xcall _CheckMotor
 202C                   .dbline 1130
 202C           ;                 VM_H//开电机电源
 202C                   .dbline 1130
 202C BF9A              sbi 0x17,7
 202E                   .dbline 1130
 202E C79A              sbi 0x18,7
 2030                   .dbline 1130
 2030                   .dbline 1131
 2030           ;                 CheckMotor(30);//延迟10ms  
 2030 0EE1              ldi R16,30
 2032 10E0              ldi R17,0
 2034 0E94D502          xcall _CheckMotor
 2038                   .dbline 1132
 2038           ;                 T_dat=0x0000;   
 2038 2224              clr R2
 203A 3324              clr R3
 203C 3092D001          sts _T_dat+1,R3
 2040 2092CF01          sts _T_dat,R2
 2044                   .dbline 1133
 2044           ;             SendManchester();
 2044 0E94C21D          xcall _SendManchester
 2048                   .dbline 1134
 2048           ;               }         
 2048 0C94371B          xjmp L372
 204C           L468:
 204C                   .dbline 1135
 204C           ;               else if(R_dat==0x81)//获取电机状态      
 204C 8091CD01          lds R24,_R_dat
 2050 9091CE01          lds R25,_R_dat+1
 2054 8138              cpi R24,129
 2056 E0E0              ldi R30,0
 2058 9E07              cpc R25,R30
 205A F1F4              brne L470
 205C           X174:
 205C                   .dbline 1136
 205C           ;               { 
 205C                   .dbline 1138
 205C           ;          //先处理收放电机
 205C           ;             CheckMotor(30);//延迟10ms  
 205C 0EE1              ldi R16,30
 205E 10E0              ldi R17,0
 2060 0E94D502          xcall _CheckMotor
 2064                   .dbline 1139
 2064           ;                 T_dat=Motor1Status.i;    
 2064 20903902          lds R2,_Motor1Status
 2068 30903A02          lds R3,_Motor1Status+1
 206C 3092D001          sts _T_dat+1,R3
 2070 2092CF01          sts _T_dat,R2
 2074                   .dbline 1140
 2074           ;             SendManchester();
 2074 0E94C21D          xcall _SendManchester
 2078                   .dbline 1143
 2078           ;                 
 2078           ;                 //再处理调节电机 
 2078           ;             CheckMotor(30);//延迟10ms  
 2078 0EE1              ldi R16,30
 207A 10E0              ldi R17,0
 207C 0E94D502          xcall _CheckMotor
 2080                   .dbline 1144
 2080           ;                 T_dat=Motor2Status.i;     
 2080 20903702          lds R2,_Motor2Status
 2084 30903802          lds R3,_Motor2Status+1
 2088 3092D001          sts _T_dat+1,R3
 208C 2092CF01          sts _T_dat,R2
 2090                   .dbline 1145
 2090           ;             SendManchester();   
 2090 0E94C21D          xcall _SendManchester
 2094                   .dbline 1146
 2094           ;               }         
 2094 0C94371B          xjmp L372
 2098           L470:
 2098                   .dbline 1147
 2098           ;        else if(R_dat==0x82)//电机停止，同时停止二个电机
 2098 8091CD01          lds R24,_R_dat
 209C 9091CE01          lds R25,_R_dat+1
 20A0 8238              cpi R24,130
 20A2 E0E0              ldi R30,0
 20A4 9E07              cpc R25,R30
 20A6 09F0              breq X277
 20A8 47C0              xjmp L472
 20AA           X277:
 20AA           X175:
 20AA                   .dbline 1148
 20AA           ;               {        
 20AA                   .dbline 1149
 20AA           ;                  if(PWM1_PIN==1)//收放电机正在运行
 20AA 89B3              in R24,0x19
 20AC 8270              andi R24,2
 20AE 8695              lsr R24
 20B0 8130              cpi R24,1
 20B2 49F4              brne L474
 20B4           X176:
 20B4                   .dbline 1150
 20B4           ;                  {
 20B4                   .dbline 1151
 20B4           ;                  Motor1Status.s.CommandStop=1;
 20B4 80913902          lds R24,_Motor1Status
 20B8 90913A02          lds R25,_Motor1Status+1
 20BC 8860              ori R24,8
 20BE 90933A02          sts _Motor1Status+1,R25
 20C2 80933902          sts _Motor1Status,R24
 20C6                   .dbline 1152
 20C6           ;                  }
 20C6           L474:
 20C6                   .dbline 1153
 20C6           ;                  if(PWM2_PIN==1)//调节电机正在运行
 20C6 80B1              in R24,0x0
 20C8 8470              andi R24,4
 20CA 8695              lsr R24
 20CC 8695              lsr R24
 20CE 8130              cpi R24,1
 20D0 49F4              brne L476
 20D2           X177:
 20D2                   .dbline 1154
 20D2           ;                  { 
 20D2                   .dbline 1155
 20D2           ;                  Motor2Status.s.CommandStop=1;
 20D2 80913702          lds R24,_Motor2Status
 20D6 90913802          lds R25,_Motor2Status+1
 20DA 8860              ori R24,8
 20DC 90933802          sts _Motor2Status+1,R25
 20E0 80933702          sts _Motor2Status,R24
 20E4                   .dbline 1156
 20E4           ;                  }
 20E4           L476:
 20E4                   .dbline 1157
 20E4           ;                  MOTORSTOP  //关电机
 20E4                   .dbline 1157
 20E4 8AB3              in R24,0x1a
 20E6 8760              ori R24,7
 20E8 8ABB              out 0x1a,R24
 20EA                   .dbline 1157
 20EA 8BB3              in R24,0x1b
 20EC 8D7F              andi R24,253
 20EE 8BBB              out 0x1b,R24
 20F0                   .dbline 1157
 20F0 8BB3              in R24,0x1b
 20F2 887F              andi R24,248
 20F4 8BBB              out 0x1b,R24
 20F6                   .dbline 1157
 20F6 80916100          lds R24,97
 20FA 8760              ori R24,7
 20FC 80936100          sts 97,R24
 2100                   .dbline 1157
 2100 80916200          lds R24,98
 2104 8B7F              andi R24,251
 2106 80936200          sts 98,R24
 210A                   .dbline 1157
 210A 80916200          lds R24,98
 210E 887F              andi R24,248
 2110 80936200          sts 98,R24
 2114                   .dbline 1157
 2114 BF9A              sbi 0x17,7
 2116                   .dbline 1157
 2116 88B3              in R24,0x18
 2118 8F77              andi R24,127
 211A 88BB              out 0x18,R24
 211C                   .dbline 1157
 211C                   .dbline 1158
 211C           ;                  CheckMotor(200);
 211C 08EC              ldi R16,200
 211E 10E0              ldi R17,0
 2120 0E94D502          xcall _CheckMotor
 2124                   .dbline 1159
 2124           ;                  T_dat=0x0000;        
 2124 2224              clr R2
 2126 3324              clr R3
 2128 3092D001          sts _T_dat+1,R3
 212C 2092CF01          sts _T_dat,R2
 2130                   .dbline 1160
 2130           ;                  SendManchester();     
 2130 0E94C21D          xcall _SendManchester
 2134                   .dbline 1161
 2134           ;               }
 2134 0C94371B          xjmp L372
 2138           L472:
 2138                   .dbline 1162
 2138           ;               else if(R_dat==0x83)//读取电机堵转电流档位和断路档位
 2138 8091CD01          lds R24,_R_dat
 213C 9091CE01          lds R25,_R_dat+1
 2140 8338              cpi R24,131
 2142 E0E0              ldi R30,0
 2144 9E07              cpc R25,R30
 2146 09F0              breq X278
 2148 5DC0              xjmp L478
 214A           X278:
 214A           X178:
 214A                   .dbline 1163
 214A           ;           {
 214A                   .dbline 1164
 214A           ;                 Motor1Gear=EEPROM_read(0);//收放电机
 214A 0027              clr R16
 214C 1127              clr R17
 214E 0E94CD21          xcall _EEPROM_read
 2152 C02E              mov R12,R16
 2154 C0923602          sts _Motor1Gear,R12
 2158                   .dbline 1165
 2158           ;                 Motor2Gear=EEPROM_read(1);//调节电机
 2158 01E0              ldi R16,1
 215A 10E0              ldi R17,0
 215C 0E94CD21          xcall _EEPROM_read
 2160 C02E              mov R12,R16
 2162 C0923502          sts _Motor2Gear,R12
 2166                   .dbline 1166
 2166           ;                 MotorIdelGear=EEPROM_read(2); //电机断路
 2166 02E0              ldi R16,2
 2168 10E0              ldi R17,0
 216A 0E94CD21          xcall _EEPROM_read
 216E C02E              mov R12,R16
 2170 C0923202          sts _MotorIdelGear,R12
 2174                   .dbline 1167
 2174           ;                 Gear2Thr();
 2174 0E946505          xcall _Gear2Thr
 2178                   .dbline 1168
 2178           ;                 CheckMotor(30);//延迟30ms     
 2178 0EE1              ldi R16,30
 217A 10E0              ldi R17,0
 217C 0E94D502          xcall _CheckMotor
 2180                   .dbline 1169
 2180           ;                 T_dat=MotorIdelGear;
 2180 20903202          lds R2,_MotorIdelGear
 2184 3324              clr R3
 2186 3092D001          sts _T_dat+1,R3
 218A 2092CF01          sts _T_dat,R2
 218E                   .dbline 1170
 218E           ;                 T_dat<<=4;
 218E 2090CF01          lds R2,_T_dat
 2192 3090D001          lds R3,_T_dat+1
 2196 220C              lsl R2
 2198 331C              rol R3
 219A 220C              lsl R2
 219C 331C              rol R3
 219E 220C              lsl R2
 21A0 331C              rol R3
 21A2 220C              lsl R2
 21A4 331C              rol R3
 21A6 3092D001          sts _T_dat+1,R3
 21AA 2092CF01          sts _T_dat,R2
 21AE                   .dbline 1171
 21AE           ;                 T_dat|=Motor2Gear;     
 21AE 20903502          lds R2,_Motor2Gear
 21B2 3324              clr R3
 21B4 4090CF01          lds R4,_T_dat
 21B8 5090D001          lds R5,_T_dat+1
 21BC 4228              or R4,R2
 21BE 5328              or R5,R3
 21C0 5092D001          sts _T_dat+1,R5
 21C4 4092CF01          sts _T_dat,R4
 21C8                   .dbline 1172
 21C8           ;                 T_dat<<=4;
 21C8 1201              movw R2,R4
 21CA 220C              lsl R2
 21CC 331C              rol R3
 21CE 220C              lsl R2
 21D0 331C              rol R3
 21D2 220C              lsl R2
 21D4 331C              rol R3
 21D6 220C              lsl R2
 21D8 331C              rol R3
 21DA 3092D001          sts _T_dat+1,R3
 21DE 2092CF01          sts _T_dat,R2
 21E2                   .dbline 1173
 21E2           ;                 T_dat|=Motor1Gear; 
 21E2 20903602          lds R2,_Motor1Gear
 21E6 3324              clr R3
 21E8 4090CF01          lds R4,_T_dat
 21EC 5090D001          lds R5,_T_dat+1
 21F0 4228              or R4,R2
 21F2 5328              or R5,R3
 21F4 5092D001          sts _T_dat+1,R5
 21F8 4092CF01          sts _T_dat,R4
 21FC                   .dbline 1174
 21FC           ;             SendManchester();
 21FC 0E94C21D          xcall _SendManchester
 2200                   .dbline 1175
 2200           ;           }   
 2200 0C94371B          xjmp L372
 2204           L478:
 2204                   .dbline 1176
 2204           ;               else if(R_dat>0x83)//还剩12档，用于设置电机堵转电流, 收放电机和调节电机各6档
 2204 83E8              ldi R24,131
 2206 90E0              ldi R25,0
 2208 2090CD01          lds R2,_R_dat
 220C 3090CE01          lds R3,_R_dat+1
 2210 8215              cp R24,R2
 2212 9305              cpc R25,R3
 2214 14F0              brlt X279
 2216 0C94371B          xjmp L372
 221A           X279:
 221A           X179:
 221A                   .dbline 1177
 221A           ;               {
 221A                   .dbline 1178
 221A           ;                 if(R_dat==0x84)
 221A C101              movw R24,R2
 221C 8438              cpi R24,132
 221E E0E0              ldi R30,0
 2220 9E07              cpc R25,R30
 2222 49F4              brne L482
 2224           X180:
 2224                   .dbline 1179
 2224           ;                 {
 2224                   .dbline 1180
 2224           ;                   Motor1Gear=1; 
 2224 81E0              ldi R24,1
 2226 80933602          sts _Motor1Gear,R24
 222A                   .dbline 1181
 222A           ;                       EEPROM_write(0,Motor1Gear);
 222A 282F              mov R18,R24
 222C 0027              clr R16
 222E 1127              clr R17
 2230 0E94C521          xcall _EEPROM_write
 2234                   .dbline 1182
 2234           ;                 }
 2234 BAC0              xjmp L483
 2236           L482:
 2236                   .dbline 1183
 2236           ;                 else if(R_dat==0x85)
 2236 8091CD01          lds R24,_R_dat
 223A 9091CE01          lds R25,_R_dat+1
 223E 8538              cpi R24,133
 2240 E0E0              ldi R30,0
 2242 9E07              cpc R25,R30
 2244 49F4              brne L484
 2246           X181:
 2246                   .dbline 1184
 2246           ;                 {
 2246                   .dbline 1185
 2246           ;                   Motor1Gear=2; 
 2246 82E0              ldi R24,2
 2248 80933602          sts _Motor1Gear,R24
 224C                   .dbline 1186
 224C           ;                       EEPROM_write(0,Motor1Gear);
 224C 282F              mov R18,R24
 224E 0027              clr R16
 2250 1127              clr R17
 2252 0E94C521          xcall _EEPROM_write
 2256                   .dbline 1187
 2256           ;                 }
 2256 A9C0              xjmp L485
 2258           L484:
 2258                   .dbline 1188
 2258           ;                 else if(R_dat==0x86)
 2258 8091CD01          lds R24,_R_dat
 225C 9091CE01          lds R25,_R_dat+1
 2260 8638              cpi R24,134
 2262 E0E0              ldi R30,0
 2264 9E07              cpc R25,R30
 2266 49F4              brne L486
 2268           X182:
 2268                   .dbline 1189
 2268           ;                 {
 2268                   .dbline 1190
 2268           ;                   Motor1Gear=3; 
 2268 83E0              ldi R24,3
 226A 80933602          sts _Motor1Gear,R24
 226E                   .dbline 1191
 226E           ;                       EEPROM_write(0,Motor1Gear);
 226E 282F              mov R18,R24
 2270 0027              clr R16
 2272 1127              clr R17
 2274 0E94C521          xcall _EEPROM_write
 2278                   .dbline 1192
 2278           ;                 }
 2278 98C0              xjmp L487
 227A           L486:
 227A                   .dbline 1193
 227A           ;                 else if(R_dat==0x87)
 227A 8091CD01          lds R24,_R_dat
 227E 9091CE01          lds R25,_R_dat+1
 2282 8738              cpi R24,135
 2284 E0E0              ldi R30,0
 2286 9E07              cpc R25,R30
 2288 49F4              brne L488
 228A           X183:
 228A                   .dbline 1194
 228A           ;                 {
 228A                   .dbline 1195
 228A           ;                   Motor1Gear=4; 
 228A 84E0              ldi R24,4
 228C 80933602          sts _Motor1Gear,R24
 2290                   .dbline 1196
 2290           ;                       EEPROM_write(0,Motor1Gear);
 2290 282F              mov R18,R24
 2292 0027              clr R16
 2294 1127              clr R17
 2296 0E94C521          xcall _EEPROM_write
 229A                   .dbline 1197
 229A           ;                 }
 229A 87C0              xjmp L489
 229C           L488:
 229C                   .dbline 1198
 229C           ;                 else if(R_dat==0x88)
 229C 8091CD01          lds R24,_R_dat
 22A0 9091CE01          lds R25,_R_dat+1
 22A4 8838              cpi R24,136
 22A6 E0E0              ldi R30,0
 22A8 9E07              cpc R25,R30
 22AA 49F4              brne L490
 22AC           X184:
 22AC                   .dbline 1199
 22AC           ;                 {
 22AC                   .dbline 1200
 22AC           ;                   Motor1Gear=5; 
 22AC 85E0              ldi R24,5
 22AE 80933602          sts _Motor1Gear,R24
 22B2                   .dbline 1201
 22B2           ;                       EEPROM_write(0,Motor1Gear);
 22B2 282F              mov R18,R24
 22B4 0027              clr R16
 22B6 1127              clr R17
 22B8 0E94C521          xcall _EEPROM_write
 22BC                   .dbline 1202
 22BC           ;                 }
 22BC 76C0              xjmp L491
 22BE           L490:
 22BE                   .dbline 1203
 22BE           ;                 else if(R_dat==0x89)
 22BE 8091CD01          lds R24,_R_dat
 22C2 9091CE01          lds R25,_R_dat+1
 22C6 8938              cpi R24,137
 22C8 E0E0              ldi R30,0
 22CA 9E07              cpc R25,R30
 22CC 49F4              brne L492
 22CE           X185:
 22CE                   .dbline 1204
 22CE           ;                 {
 22CE                   .dbline 1205
 22CE           ;                   Motor1Gear=6; 
 22CE 86E0              ldi R24,6
 22D0 80933602          sts _Motor1Gear,R24
 22D4                   .dbline 1206
 22D4           ;                       EEPROM_write(0,Motor1Gear);
 22D4 282F              mov R18,R24
 22D6 0027              clr R16
 22D8 1127              clr R17
 22DA 0E94C521          xcall _EEPROM_write
 22DE                   .dbline 1207
 22DE           ;                 }
 22DE 65C0              xjmp L493
 22E0           L492:
 22E0                   .dbline 1208
 22E0           ;                 else if(R_dat==0x8a)
 22E0 8091CD01          lds R24,_R_dat
 22E4 9091CE01          lds R25,_R_dat+1
 22E8 8A38              cpi R24,138
 22EA E0E0              ldi R30,0
 22EC 9E07              cpc R25,R30
 22EE 49F4              brne L494
 22F0           X186:
 22F0                   .dbline 1209
 22F0           ;                 {
 22F0                   .dbline 1210
 22F0           ;                   Motor2Gear=1; 
 22F0 81E0              ldi R24,1
 22F2 80933502          sts _Motor2Gear,R24
 22F6                   .dbline 1211
 22F6           ;                       EEPROM_write(1,Motor2Gear);
 22F6 282F              mov R18,R24
 22F8 01E0              ldi R16,1
 22FA 10E0              ldi R17,0
 22FC 0E94C521          xcall _EEPROM_write
 2300                   .dbline 1212
 2300           ;                 }
 2300 54C0              xjmp L495
 2302           L494:
 2302                   .dbline 1213
 2302           ;                 else if(R_dat==0x8b)
 2302 8091CD01          lds R24,_R_dat
 2306 9091CE01          lds R25,_R_dat+1
 230A 8B38              cpi R24,139
 230C E0E0              ldi R30,0
 230E 9E07              cpc R25,R30
 2310 49F4              brne L496
 2312           X187:
 2312                   .dbline 1214
 2312           ;                 {
 2312                   .dbline 1215
 2312           ;                   Motor2Gear=2;
 2312 82E0              ldi R24,2
 2314 80933502          sts _Motor2Gear,R24
 2318                   .dbline 1216
 2318           ;                       EEPROM_write(1,Motor2Gear);
 2318 282F              mov R18,R24
 231A 01E0              ldi R16,1
 231C 10E0              ldi R17,0
 231E 0E94C521          xcall _EEPROM_write
 2322                   .dbline 1217
 2322           ;                 }
 2322 43C0              xjmp L497
 2324           L496:
 2324                   .dbline 1218
 2324           ;                 else if(R_dat==0x8c)
 2324 8091CD01          lds R24,_R_dat
 2328 9091CE01          lds R25,_R_dat+1
 232C 8C38              cpi R24,140
 232E E0E0              ldi R30,0
 2330 9E07              cpc R25,R30
 2332 49F4              brne L498
 2334           X188:
 2334                   .dbline 1219
 2334           ;                 {
 2334                   .dbline 1220
 2334           ;                   Motor2Gear=3;
 2334 83E0              ldi R24,3
 2336 80933502          sts _Motor2Gear,R24
 233A                   .dbline 1221
 233A           ;                       EEPROM_write(1,Motor2Gear);
 233A 282F              mov R18,R24
 233C 01E0              ldi R16,1
 233E 10E0              ldi R17,0
 2340 0E94C521          xcall _EEPROM_write
 2344                   .dbline 1222
 2344           ;                 }
 2344 32C0              xjmp L499
 2346           L498:
 2346                   .dbline 1223
 2346           ;                 else if(R_dat==0x8d)
 2346 8091CD01          lds R24,_R_dat
 234A 9091CE01          lds R25,_R_dat+1
 234E 8D38              cpi R24,141
 2350 E0E0              ldi R30,0
 2352 9E07              cpc R25,R30
 2354 49F4              brne L500
 2356           X189:
 2356                   .dbline 1224
 2356           ;                 {
 2356                   .dbline 1225
 2356           ;                   Motor2Gear=4;
 2356 84E0              ldi R24,4
 2358 80933502          sts _Motor2Gear,R24
 235C                   .dbline 1226
 235C           ;                       EEPROM_write(1,Motor2Gear);
 235C 282F              mov R18,R24
 235E 01E0              ldi R16,1
 2360 10E0              ldi R17,0
 2362 0E94C521          xcall _EEPROM_write
 2366                   .dbline 1227
 2366           ;                 }
 2366 21C0              xjmp L501
 2368           L500:
 2368                   .dbline 1228
 2368           ;                 else if(R_dat==0x8e)
 2368 8091CD01          lds R24,_R_dat
 236C 9091CE01          lds R25,_R_dat+1
 2370 8E38              cpi R24,142
 2372 E0E0              ldi R30,0
 2374 9E07              cpc R25,R30
 2376 49F4              brne L502
 2378           X190:
 2378                   .dbline 1229
 2378           ;                 {
 2378                   .dbline 1230
 2378           ;                   Motor2Gear=5;
 2378 85E0              ldi R24,5
 237A 80933502          sts _Motor2Gear,R24
 237E                   .dbline 1231
 237E           ;                       EEPROM_write(1,Motor2Gear);
 237E 282F              mov R18,R24
 2380 01E0              ldi R16,1
 2382 10E0              ldi R17,0
 2384 0E94C521          xcall _EEPROM_write
 2388                   .dbline 1232
 2388           ;                 }
 2388 10C0              xjmp L503
 238A           L502:
 238A                   .dbline 1233
 238A           ;                 else if(R_dat==0x8f)
 238A 8091CD01          lds R24,_R_dat
 238E 9091CE01          lds R25,_R_dat+1
 2392 8F38              cpi R24,143
 2394 E0E0              ldi R30,0
 2396 9E07              cpc R25,R30
 2398 41F4              brne L504
 239A           X191:
 239A                   .dbline 1234
 239A           ;                 {
 239A                   .dbline 1235
 239A           ;                   Motor2Gear=6;
 239A 86E0              ldi R24,6
 239C 80933502          sts _Motor2Gear,R24
 23A0                   .dbline 1236
 23A0           ;                       EEPROM_write(1,Motor2Gear);
 23A0 282F              mov R18,R24
 23A2 01E0              ldi R16,1
 23A4 10E0              ldi R17,0
 23A6 0E94C521          xcall _EEPROM_write
 23AA                   .dbline 1237
 23AA           ;                 }       
 23AA           L504:
 23AA           L503:
 23AA           L501:
 23AA           L499:
 23AA           L497:
 23AA           L495:
 23AA           L493:
 23AA           L491:
 23AA           L489:
 23AA           L487:
 23AA           L485:
 23AA           L483:
 23AA                   .dbline 1238
 23AA           ;                 Gear2Thr();
 23AA 0E946505          xcall _Gear2Thr
 23AE                   .dbline 1239
 23AE           ;                 CheckMotor(30);//延迟30ms     
 23AE 0EE1              ldi R16,30
 23B0 10E0              ldi R17,0
 23B2 0E94D502          xcall _CheckMotor
 23B6                   .dbline 1240
 23B6           ;                 T_dat=0;          
 23B6 2224              clr R2
 23B8 3324              clr R3
 23BA 3092D001          sts _T_dat+1,R3
 23BE 2092CF01          sts _T_dat,R2
 23C2                   .dbline 1241
 23C2           ;             SendManchester(); 
 23C2 0E94C21D          xcall _SendManchester
 23C6                   .dbline 1242
 23C6           ;               }         
 23C6                   .dbline 1243
 23C6           ;       break;
 23C6 0C94371B          xjmp L372
 23CA           L506:
 23CA                   .dbline 1248
 23CA           ;  
 23CA           ;       
 23CA           ;        
 23CA           ;       case 0x90: //标定数据
 23CA           ;         if(R_dat==0x90)//提取测试信息
 23CA 8091CD01          lds R24,_R_dat
 23CE 9091CE01          lds R25,_R_dat+1
 23D2 8039              cpi R24,144
 23D4 E0E0              ldi R30,0
 23D6 9E07              cpc R25,R30
 23D8 09F0              breq X280
 23DA 16C1              xjmp L507
 23DC           X280:
 23DC           X192:
 23DC                   .dbline 1249
 23DC           ;         {
 23DC                   .dbline 1250
 23DC           ;            Uart0TxData[0]=0xE8;
 23DC 88EE              ldi R24,232
 23DE 80932100          sts _Uart0TxData,R24
 23E2                   .dbline 1251
 23E2           ;                Uart0TxData[1]=0x40;
 23E2 80E4              ldi R24,64
 23E4 80932200          sts _Uart0TxData+1,R24
 23E8                   .dbline 1252
 23E8           ;                Uart0TxData[2]=0xc8;
 23E8 88EC              ldi R24,200
 23EA 80932300          sts _Uart0TxData+2,R24
 23EE                   .dbline 1253
 23EE           ;                Uart0TxData[3]=0;//测试信息包0
 23EE 2224              clr R2
 23F0 20922400          sts _Uart0TxData+3,R2
 23F4                   .dbline 1254
 23F4           ;                SendUart0_2(9,4);// 超时32ms    
 23F4 24E0              ldi R18,4
 23F6 30E0              ldi R19,0
 23F8 09E0              ldi R16,9
 23FA 0E949700          xcall _SendUart0_2
 23FE                   .dbline 1255
 23FE           ;                for(i=0;i<32;i++)
 23FE AA24              clr R10
 2400 2FC0              xjmp L515
 2402           L512:
 2402                   .dbline 1256
 2402           ;                {
 2402                   .dbline 1257
 2402           ;                CheckMotor(20);
 2402 04E1              ldi R16,20
 2404 10E0              ldi R17,0
 2406 0E94D502          xcall _CheckMotor
 240A                   .dbline 1258
 240A           ;                T_dat=Uart0RxData[i*2+1];//高字节
 240A 80E0              ldi R24,<_Uart0RxData+1
 240C 90E0              ldi R25,>_Uart0RxData+1
 240E EA2D              mov R30,R10
 2410 FF27              clr R31
 2412 EE0F              lsl R30
 2414 FF1F              rol R31
 2416 E80F              add R30,R24
 2418 F91F              adc R31,R25
 241A 2080              ldd R2,z+0
 241C 3324              clr R3
 241E 3092D001          sts _T_dat+1,R3
 2422 2092CF01          sts _T_dat,R2
 2426                   .dbline 1259
 2426           ;                T_dat<<=8;
 2426 322C              mov R3,R2
 2428 2224              clr R2
 242A 3092D001          sts _T_dat+1,R3
 242E 2092CF01          sts _T_dat,R2
 2432                   .dbline 1260
 2432           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 2432 80E0              ldi R24,<_Uart0RxData
 2434 90E0              ldi R25,>_Uart0RxData
 2436 EA2D              mov R30,R10
 2438 FF27              clr R31
 243A EE0F              lsl R30
 243C FF1F              rol R31
 243E E80F              add R30,R24
 2440 F91F              adc R31,R25
 2442 2080              ldd R2,z+0
 2444 3324              clr R3
 2446 4090CF01          lds R4,_T_dat
 244A 5090D001          lds R5,_T_dat+1
 244E 4228              or R4,R2
 2450 5328              or R5,R3
 2452 5092D001          sts _T_dat+1,R5
 2456 4092CF01          sts _T_dat,R4
 245A                   .dbline 1261
 245A           ;                SendManchester();               
 245A 0E94C21D          xcall _SendManchester
 245E                   .dbline 1262
 245E           ;                }              
 245E           L513:
 245E                   .dbline 1255
 245E A394              inc R10
 2460           L515:
 2460                   .dbline 1255
 2460 8A2D              mov R24,R10
 2462 8032              cpi R24,32
 2464 70F2              brlo L512
 2466           X193:
 2466                   .dbline 1264
 2466           ; 
 2466           ;                Uart0TxData[0]=0xE8;
 2466 88EE              ldi R24,232
 2468 80932100          sts _Uart0TxData,R24
 246C                   .dbline 1265
 246C           ;                Uart0TxData[1]=0x40;
 246C 80E4              ldi R24,64
 246E 80932200          sts _Uart0TxData+1,R24
 2472                   .dbline 1266
 2472           ;                Uart0TxData[2]=0xc8;
 2472 88EC              ldi R24,200
 2474 80932300          sts _Uart0TxData+2,R24
 2478                   .dbline 1267
 2478           ;                Uart0TxData[3]=1;//测试信息包1
 2478 81E0              ldi R24,1
 247A 80932400          sts _Uart0TxData+3,R24
 247E                   .dbline 1268
 247E           ;                SendUart0_2(9,4);// 超时32ms    
 247E 24E0              ldi R18,4
 2480 30E0              ldi R19,0
 2482 09E0              ldi R16,9
 2484 0E949700          xcall _SendUart0_2
 2488                   .dbline 1269
 2488           ;                for(i=0;i<32;i++)
 2488 AA24              clr R10
 248A 2FC0              xjmp L523
 248C           L520:
 248C                   .dbline 1270
 248C           ;                {
 248C                   .dbline 1271
 248C           ;                T_dat=Uart0RxData[i*2+1];//高字节
 248C 80E0              ldi R24,<_Uart0RxData+1
 248E 90E0              ldi R25,>_Uart0RxData+1
 2490 EA2D              mov R30,R10
 2492 FF27              clr R31
 2494 EE0F              lsl R30
 2496 FF1F              rol R31
 2498 E80F              add R30,R24
 249A F91F              adc R31,R25
 249C 2080              ldd R2,z+0
 249E 3324              clr R3
 24A0 3092D001          sts _T_dat+1,R3
 24A4 2092CF01          sts _T_dat,R2
 24A8                   .dbline 1272
 24A8           ;                T_dat<<=8;
 24A8 322C              mov R3,R2
 24AA 2224              clr R2
 24AC 3092D001          sts _T_dat+1,R3
 24B0 2092CF01          sts _T_dat,R2
 24B4                   .dbline 1273
 24B4           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 24B4 80E0              ldi R24,<_Uart0RxData
 24B6 90E0              ldi R25,>_Uart0RxData
 24B8 EA2D              mov R30,R10
 24BA FF27              clr R31
 24BC EE0F              lsl R30
 24BE FF1F              rol R31
 24C0 E80F              add R30,R24
 24C2 F91F              adc R31,R25
 24C4 2080              ldd R2,z+0
 24C6 3324              clr R3
 24C8 4090CF01          lds R4,_T_dat
 24CC 5090D001          lds R5,_T_dat+1
 24D0 4228              or R4,R2
 24D2 5328              or R5,R3
 24D4 5092D001          sts _T_dat+1,R5
 24D8 4092CF01          sts _T_dat,R4
 24DC                   .dbline 1274
 24DC           ;                SendManchester();
 24DC 0E94C21D          xcall _SendManchester
 24E0                   .dbline 1275
 24E0           ;                CheckMotor(20);
 24E0 04E1              ldi R16,20
 24E2 10E0              ldi R17,0
 24E4 0E94D502          xcall _CheckMotor
 24E8                   .dbline 1276
 24E8           ;                }      
 24E8           L521:
 24E8                   .dbline 1269
 24E8 A394              inc R10
 24EA           L523:
 24EA                   .dbline 1269
 24EA 8A2D              mov R24,R10
 24EC 8032              cpi R24,32
 24EE 70F2              brlo L520
 24F0           X194:
 24F0                   .dbline 1278
 24F0           ;                
 24F0           ;                Uart0TxData[0]=0xE8;
 24F0 88EE              ldi R24,232
 24F2 80932100          sts _Uart0TxData,R24
 24F6                   .dbline 1279
 24F6           ;                Uart0TxData[1]=0x40;
 24F6 80E4              ldi R24,64
 24F8 80932200          sts _Uart0TxData+1,R24
 24FC                   .dbline 1280
 24FC           ;                Uart0TxData[2]=0xc8;
 24FC 88EC              ldi R24,200
 24FE 80932300          sts _Uart0TxData+2,R24
 2502                   .dbline 1281
 2502           ;                Uart0TxData[3]=2;//测试信息包2
 2502 82E0              ldi R24,2
 2504 80932400          sts _Uart0TxData+3,R24
 2508                   .dbline 1282
 2508           ;                SendUart0_2(9,4);// 超时32ms    
 2508 24E0              ldi R18,4
 250A 30E0              ldi R19,0
 250C 09E0              ldi R16,9
 250E 0E949700          xcall _SendUart0_2
 2512                   .dbline 1283
 2512           ;                for(i=0;i<32;i++)
 2512 AA24              clr R10
 2514 2FC0              xjmp L531
 2516           L528:
 2516                   .dbline 1284
 2516           ;                {
 2516                   .dbline 1285
 2516           ;                T_dat=Uart0RxData[i*2+1];//高字节
 2516 80E0              ldi R24,<_Uart0RxData+1
 2518 90E0              ldi R25,>_Uart0RxData+1
 251A EA2D              mov R30,R10
 251C FF27              clr R31
 251E EE0F              lsl R30
 2520 FF1F              rol R31
 2522 E80F              add R30,R24
 2524 F91F              adc R31,R25
 2526 2080              ldd R2,z+0
 2528 3324              clr R3
 252A 3092D001          sts _T_dat+1,R3
 252E 2092CF01          sts _T_dat,R2
 2532                   .dbline 1286
 2532           ;                T_dat<<=8;
 2532 322C              mov R3,R2
 2534 2224              clr R2
 2536 3092D001          sts _T_dat+1,R3
 253A 2092CF01          sts _T_dat,R2
 253E                   .dbline 1287
 253E           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 253E 80E0              ldi R24,<_Uart0RxData
 2540 90E0              ldi R25,>_Uart0RxData
 2542 EA2D              mov R30,R10
 2544 FF27              clr R31
 2546 EE0F              lsl R30
 2548 FF1F              rol R31
 254A E80F              add R30,R24
 254C F91F              adc R31,R25
 254E 2080              ldd R2,z+0
 2550 3324              clr R3
 2552 4090CF01          lds R4,_T_dat
 2556 5090D001          lds R5,_T_dat+1
 255A 4228              or R4,R2
 255C 5328              or R5,R3
 255E 5092D001          sts _T_dat+1,R5
 2562 4092CF01          sts _T_dat,R4
 2566                   .dbline 1288
 2566           ;                SendManchester();
 2566 0E94C21D          xcall _SendManchester
 256A                   .dbline 1289
 256A           ;                CheckMotor(20);
 256A 04E1              ldi R16,20
 256C 10E0              ldi R17,0
 256E 0E94D502          xcall _CheckMotor
 2572                   .dbline 1290
 2572           ;                }              
 2572           L529:
 2572                   .dbline 1283
 2572 A394              inc R10
 2574           L531:
 2574                   .dbline 1283
 2574 8A2D              mov R24,R10
 2576 8032              cpi R24,32
 2578 70F2              brlo L528
 257A           X195:
 257A                   .dbline 1292
 257A           ;                
 257A           ;                Uart0TxData[0]=0xE8;
 257A 88EE              ldi R24,232
 257C 80932100          sts _Uart0TxData,R24
 2580                   .dbline 1293
 2580           ;                Uart0TxData[1]=0x40;
 2580 80E4              ldi R24,64
 2582 80932200          sts _Uart0TxData+1,R24
 2586                   .dbline 1294
 2586           ;                Uart0TxData[2]=0xc8;
 2586 88EC              ldi R24,200
 2588 80932300          sts _Uart0TxData+2,R24
 258C                   .dbline 1295
 258C           ;                Uart0TxData[3]=3;//测试信息包3
 258C 83E0              ldi R24,3
 258E 80932400          sts _Uart0TxData+3,R24
 2592                   .dbline 1296
 2592           ;                SendUart0_2(9,4);// 超时32ms    
 2592 24E0              ldi R18,4
 2594 30E0              ldi R19,0
 2596 09E0              ldi R16,9
 2598 0E949700          xcall _SendUart0_2
 259C                   .dbline 1297
 259C           ;                for(i=0;i<32;i++)
 259C AA24              clr R10
 259E 2FC0              xjmp L539
 25A0           L536:
 25A0                   .dbline 1298
 25A0           ;                {
 25A0                   .dbline 1299
 25A0           ;                T_dat=Uart0RxData[i*2+1];//高字节
 25A0 80E0              ldi R24,<_Uart0RxData+1
 25A2 90E0              ldi R25,>_Uart0RxData+1
 25A4 EA2D              mov R30,R10
 25A6 FF27              clr R31
 25A8 EE0F              lsl R30
 25AA FF1F              rol R31
 25AC E80F              add R30,R24
 25AE F91F              adc R31,R25
 25B0 2080              ldd R2,z+0
 25B2 3324              clr R3
 25B4 3092D001          sts _T_dat+1,R3
 25B8 2092CF01          sts _T_dat,R2
 25BC                   .dbline 1300
 25BC           ;                T_dat<<=8;
 25BC 322C              mov R3,R2
 25BE 2224              clr R2
 25C0 3092D001          sts _T_dat+1,R3
 25C4 2092CF01          sts _T_dat,R2
 25C8                   .dbline 1301
 25C8           ;                T_dat|=Uart0RxData[i*2+0];//低字节
 25C8 80E0              ldi R24,<_Uart0RxData
 25CA 90E0              ldi R25,>_Uart0RxData
 25CC EA2D              mov R30,R10
 25CE FF27              clr R31
 25D0 EE0F              lsl R30
 25D2 FF1F              rol R31
 25D4 E80F              add R30,R24
 25D6 F91F              adc R31,R25
 25D8 2080              ldd R2,z+0
 25DA 3324              clr R3
 25DC 4090CF01          lds R4,_T_dat
 25E0 5090D001          lds R5,_T_dat+1
 25E4 4228              or R4,R2
 25E6 5328              or R5,R3
 25E8 5092D001          sts _T_dat+1,R5
 25EC 4092CF01          sts _T_dat,R4
 25F0                   .dbline 1302
 25F0           ;                SendManchester();
 25F0 0E94C21D          xcall _SendManchester
 25F4                   .dbline 1303
 25F4           ;                CheckMotor(20);
 25F4 04E1              ldi R16,20
 25F6 10E0              ldi R17,0
 25F8 0E94D502          xcall _CheckMotor
 25FC                   .dbline 1304
 25FC           ;                }                      
 25FC           L537:
 25FC                   .dbline 1297
 25FC A394              inc R10
 25FE           L539:
 25FE                   .dbline 1297
 25FE 8A2D              mov R24,R10
 2600 8032              cpi R24,32
 2602 70F2              brlo L536
 2604           X196:
 2604                   .dbline 1305
 2604           ;         }
 2604 0C94371B          xjmp L372
 2608           L507:
 2608                   .dbline 1306
 2608           ;         else if(R_dat==0x91)//上传压力标定数据,20ms/帧        
 2608 8091CD01          lds R24,_R_dat
 260C 9091CE01          lds R25,_R_dat+1
 2610 8139              cpi R24,145
 2612 E0E0              ldi R30,0
 2614 9E07              cpc R25,R30
 2616 29F5              brne L541
 2618           X197:
 2618                   .dbline 1307
 2618           ;         {
 2618                   .dbline 1309
 2618           ;          //先获取总标定点数    
 2618           ;            DataFlag=3;
 2618 83E0              ldi R24,3
 261A 90E0              ldi R25,0
 261C 9093B401          sts _DataFlag+1,R25
 2620 8093B301          sts _DataFlag,R24
 2624                   .dbline 1310
 2624           ;                coeff_len=4;//上位机还需传4字节，分别为首块地址和包数
 2624 84E0              ldi R24,4
 2626 90931F00          sts _coeff_len+1,R25
 262A 80931E00          sts _coeff_len,R24
 262E                   .dbline 1311
 262E           ;            coeff_count=0;
 262E 2224              clr R2
 2630 3324              clr R3
 2632 30921D00          sts _coeff_count+1,R3
 2636 20921C00          sts _coeff_count,R2
 263A                   .dbline 1312
 263A           ;                TimeOutFlag=0;
 263A 2092CB01          sts _TimeOutFlag,R2
 263E                   .dbline 1313
 263E           ;                Timer0Counter=200;//1.6s定时
 263E 88EC              ldi R24,200
 2640 90932F02          sts _Timer0Counter+1,R25
 2644 80932E02          sts _Timer0Counter,R24
 2648                   .dbline 1314
 2648           ;            TCNT0=0x06; //8ms
 2648 86E0              ldi R24,6
 264A 82BF              out 0x32,R24
 264C                   .dbline 1315
 264C           ;            TCCR0|=0x06;//256分频
 264C 83B7              in R24,0x33
 264E 8660              ori R24,6
 2650 83BF              out 0x33,R24
 2652                   .dbline 1316
 2652           ;            TIFR|=0x01; //清定时器0中断标志
 2652 86B7              in R24,0x36
 2654 8160              ori R24,1
 2656 86BF              out 0x36,R24
 2658                   .dbline 1317
 2658           ;          TIMSK|=0x01;//使能定时器0中断                
 2658 87B7              in R24,0x37
 265A 8160              ori R24,1
 265C 87BF              out 0x37,R24
 265E                   .dbline 1318
 265E           ;               }
 265E 0C94371B          xjmp L372
 2662           L541:
 2662                   .dbline 1319
 2662           ;         else if(R_dat==0x92)//清空标定数据,整机格式化  
 2662 8091CD01          lds R24,_R_dat
 2666 9091CE01          lds R25,_R_dat+1
 266A 8239              cpi R24,146
 266C E0E0              ldi R30,0
 266E 9E07              cpc R25,R30
 2670 E9F5              brne L543
 2672           X198:
 2672                   .dbline 1320
 2672           ;          {    
 2672                   .dbline 1321
 2672           ;            Uart0TxData[0]=0xE8;
 2672 88EE              ldi R24,232
 2674 80932100          sts _Uart0TxData,R24
 2678                   .dbline 1322
 2678           ;                Uart0TxData[1]=0x40;
 2678 80E4              ldi R24,64
 267A 80932200          sts _Uart0TxData+1,R24
 267E                   .dbline 1323
 267E           ;                Uart0TxData[2]=0x8c;
 267E 8CE8              ldi R24,140
 2680 80932300          sts _Uart0TxData+2,R24
 2684                   .dbline 1324
 2684           ;                Uart0TxData[3]=8;
 2684 88E0              ldi R24,8
 2686 80932400          sts _Uart0TxData+3,R24
 268A                   .dbline 1325
 268A           ;                Uart0TxData[4]=0;
 268A 2224              clr R2
 268C 20922500          sts _Uart0TxData+4,R2
 2690                   .dbline 1326
 2690           ;                Uart0TxData[5]=0;
 2690 20922600          sts _Uart0TxData+5,R2
 2694                   .dbline 1327
 2694           ;                Uart0TxData[6]=0xff;
 2694 8FEF              ldi R24,255
 2696 80932700          sts _Uart0TxData+6,R24
 269A                   .dbline 1328
 269A           ;                Uart0TxData[7]=0xff;
 269A 80932800          sts _Uart0TxData+7,R24
 269E                   .dbline 1329
 269E           ;                SendUart0_3(9,5000,9);// 最大超时40秒
 269E 89E0              ldi R24,9
 26A0 8883              std y+0,R24
 26A2 28E8              ldi R18,5000
 26A4 33E1              ldi R19,19
 26A6 09E0              ldi R16,9
 26A8 0E94E700          xcall _SendUart0_3
 26AC                   .dbline 1330
 26AC           ;                if((Uart0RxCounter==9)&&(Uart0RxData[0]==0x55)&&(Uart0RxData[1]==0x40)&&(Uart0RxData[2]==0x8c))
 26AC 8091E301          lds R24,_Uart0RxCounter
 26B0 8930              cpi R24,9
 26B2 99F4              brne L552
 26B4           X199:
 26B4 8091E401          lds R24,_Uart0RxData
 26B8 8535              cpi R24,85
 26BA 79F4              brne L552
 26BC           X200:
 26BC 8091E501          lds R24,_Uart0RxData+1
 26C0 8034              cpi R24,64
 26C2 59F4              brne L552
 26C4           X201:
 26C4 8091E601          lds R24,_Uart0RxData+2
 26C8 8C38              cpi R24,140
 26CA 39F4              brne L552
 26CC           X202:
 26CC                   .dbline 1331
 26CC           ;                {T_dat=0x0000;}
 26CC                   .dbline 1331
 26CC 2224              clr R2
 26CE 3324              clr R3
 26D0 3092D001          sts _T_dat+1,R3
 26D4 2092CF01          sts _T_dat,R2
 26D8                   .dbline 1331
 26D8 06C0              xjmp L553
 26DA           L552:
 26DA                   .dbline 1333
 26DA           ;                else
 26DA           ;                {T_dat=0xffff;}
 26DA                   .dbline 1333
 26DA 8FEF              ldi R24,65535
 26DC 9FEF              ldi R25,255
 26DE 9093D001          sts _T_dat+1,R25
 26E2 8093CF01          sts _T_dat,R24
 26E6                   .dbline 1333
 26E6           L553:
 26E6                   .dbline 1334
 26E6           ;                SendManchester();       
 26E6 0E94C21D          xcall _SendManchester
 26EA                   .dbline 1335
 26EA           ;         }
 26EA C1C7              xjmp L372
 26EC           L543:
 26EC                   .dbline 1336
 26EC           ;          else if(R_dat==0x93)//上传全部系数，共256字节分128帧上传
 26EC 8091CD01          lds R24,_R_dat
 26F0 9091CE01          lds R25,_R_dat+1
 26F4 8339              cpi R24,147
 26F6 E0E0              ldi R30,0
 26F8 9E07              cpc R25,R30
 26FA 09F0              breq X281
 26FC 26C1              xjmp L556
 26FE           X281:
 26FE           X203:
 26FE                   .dbline 1337
 26FE           ;          {
 26FE                   .dbline 1338
 26FE           ;            Uart0TxData[0]=0xE8;
 26FE 88EE              ldi R24,232
 2700 80932100          sts _Uart0TxData,R24
 2704                   .dbline 1339
 2704           ;                Uart0TxData[1]=0x40;
 2704 80E4              ldi R24,64
 2706 80932200          sts _Uart0TxData+1,R24
 270A                   .dbline 1340
 270A           ;                Uart0TxData[2]=0x87;
 270A 87E8              ldi R24,135
 270C 80932300          sts _Uart0TxData+2,R24
 2710                   .dbline 1341
 2710           ;                Uart0TxData[3]=0;//系数包0
 2710 2224              clr R2
 2712 20922400          sts _Uart0TxData+3,R2
 2716                   .dbline 1342
 2716           ;                SendUart0_2(9,4);// 超时32ms   
 2716 24E0              ldi R18,4
 2718 30E0              ldi R19,0
 271A 09E0              ldi R16,9
 271C 0E949700          xcall _SendUart0_2
 2720                   .dbline 1343
 2720           ;                if(Uart0RxCounter==64) 
 2720 8091E301          lds R24,_Uart0RxCounter
 2724 8034              cpi R24,64
 2726 A1F5              brne L561
 2728           X204:
 2728                   .dbline 1344
 2728           ;                 {
 2728                   .dbline 1345
 2728           ;                  for(i=0;i<32;i++)
 2728 AA24              clr R10
 272A 2FC0              xjmp L566
 272C           L563:
 272C                   .dbline 1346
 272C           ;                  {
 272C                   .dbline 1347
 272C           ;                  CheckMotor(20);
 272C 04E1              ldi R16,20
 272E 10E0              ldi R17,0
 2730 0E94D502          xcall _CheckMotor
 2734                   .dbline 1348
 2734           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2734 80E0              ldi R24,<_Uart0RxData+1
 2736 90E0              ldi R25,>_Uart0RxData+1
 2738 EA2D              mov R30,R10
 273A FF27              clr R31
 273C EE0F              lsl R30
 273E FF1F              rol R31
 2740 E80F              add R30,R24
 2742 F91F              adc R31,R25
 2744 2080              ldd R2,z+0
 2746 3324              clr R3
 2748 3092D001          sts _T_dat+1,R3
 274C 2092CF01          sts _T_dat,R2
 2750                   .dbline 1349
 2750           ;                  T_dat<<=8;
 2750 322C              mov R3,R2
 2752 2224              clr R2
 2754 3092D001          sts _T_dat+1,R3
 2758 2092CF01          sts _T_dat,R2
 275C                   .dbline 1350
 275C           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 275C 80E0              ldi R24,<_Uart0RxData
 275E 90E0              ldi R25,>_Uart0RxData
 2760 EA2D              mov R30,R10
 2762 FF27              clr R31
 2764 EE0F              lsl R30
 2766 FF1F              rol R31
 2768 E80F              add R30,R24
 276A F91F              adc R31,R25
 276C 2080              ldd R2,z+0
 276E 3324              clr R3
 2770 4090CF01          lds R4,_T_dat
 2774 5090D001          lds R5,_T_dat+1
 2778 4228              or R4,R2
 277A 5328              or R5,R3
 277C 5092D001          sts _T_dat+1,R5
 2780 4092CF01          sts _T_dat,R4
 2784                   .dbline 1351
 2784           ;                  SendManchester();             
 2784 0E94C21D          xcall _SendManchester
 2788                   .dbline 1352
 2788           ;                  }    
 2788           L564:
 2788                   .dbline 1345
 2788 A394              inc R10
 278A           L566:
 278A                   .dbline 1345
 278A 8A2D              mov R24,R10
 278C 8032              cpi R24,32
 278E 70F2              brlo L563
 2790           X205:
 2790                   .dbline 1353
 2790           ;                }      
 2790           L561:
 2790                   .dbline 1355
 2790           ;                
 2790           ;                Uart0TxData[0]=0xE8;
 2790 88EE              ldi R24,232
 2792 80932100          sts _Uart0TxData,R24
 2796                   .dbline 1356
 2796           ;                Uart0TxData[1]=0x40;
 2796 80E4              ldi R24,64
 2798 80932200          sts _Uart0TxData+1,R24
 279C                   .dbline 1357
 279C           ;                Uart0TxData[2]=0x87;
 279C 87E8              ldi R24,135
 279E 80932300          sts _Uart0TxData+2,R24
 27A2                   .dbline 1358
 27A2           ;                Uart0TxData[3]=1;//系数包1
 27A2 81E0              ldi R24,1
 27A4 80932400          sts _Uart0TxData+3,R24
 27A8                   .dbline 1359
 27A8           ;                SendUart0_2(9,4);// 超时32ms    
 27A8 24E0              ldi R18,4
 27AA 30E0              ldi R19,0
 27AC 09E0              ldi R16,9
 27AE 0E949700          xcall _SendUart0_2
 27B2                   .dbline 1360
 27B2           ;                if(Uart0RxCounter==64) 
 27B2 8091E301          lds R24,_Uart0RxCounter
 27B6 8034              cpi R24,64
 27B8 A1F5              brne L571
 27BA           X206:
 27BA                   .dbline 1361
 27BA           ;                 {
 27BA                   .dbline 1362
 27BA           ;                  for(i=0;i<32;i++)
 27BA AA24              clr R10
 27BC 2FC0              xjmp L576
 27BE           L573:
 27BE                   .dbline 1363
 27BE           ;                  {
 27BE                   .dbline 1364
 27BE           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 27BE 80E0              ldi R24,<_Uart0RxData+1
 27C0 90E0              ldi R25,>_Uart0RxData+1
 27C2 EA2D              mov R30,R10
 27C4 FF27              clr R31
 27C6 EE0F              lsl R30
 27C8 FF1F              rol R31
 27CA E80F              add R30,R24
 27CC F91F              adc R31,R25
 27CE 2080              ldd R2,z+0
 27D0 3324              clr R3
 27D2 3092D001          sts _T_dat+1,R3
 27D6 2092CF01          sts _T_dat,R2
 27DA                   .dbline 1365
 27DA           ;                  T_dat<<=8;
 27DA 322C              mov R3,R2
 27DC 2224              clr R2
 27DE 3092D001          sts _T_dat+1,R3
 27E2 2092CF01          sts _T_dat,R2
 27E6                   .dbline 1366
 27E6           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 27E6 80E0              ldi R24,<_Uart0RxData
 27E8 90E0              ldi R25,>_Uart0RxData
 27EA EA2D              mov R30,R10
 27EC FF27              clr R31
 27EE EE0F              lsl R30
 27F0 FF1F              rol R31
 27F2 E80F              add R30,R24
 27F4 F91F              adc R31,R25
 27F6 2080              ldd R2,z+0
 27F8 3324              clr R3
 27FA 4090CF01          lds R4,_T_dat
 27FE 5090D001          lds R5,_T_dat+1
 2802 4228              or R4,R2
 2804 5328              or R5,R3
 2806 5092D001          sts _T_dat+1,R5
 280A 4092CF01          sts _T_dat,R4
 280E                   .dbline 1367
 280E           ;                  SendManchester();
 280E 0E94C21D          xcall _SendManchester
 2812                   .dbline 1368
 2812           ;                  CheckMotor(20);
 2812 04E1              ldi R16,20
 2814 10E0              ldi R17,0
 2816 0E94D502          xcall _CheckMotor
 281A                   .dbline 1369
 281A           ;                 }
 281A           L574:
 281A                   .dbline 1362
 281A A394              inc R10
 281C           L576:
 281C                   .dbline 1362
 281C 8A2D              mov R24,R10
 281E 8032              cpi R24,32
 2820 70F2              brlo L573
 2822           X207:
 2822                   .dbline 1370
 2822           ;                }              
 2822           L571:
 2822                   .dbline 1372
 2822           ;                
 2822           ;                 Uart0TxData[0]=0xE8;
 2822 88EE              ldi R24,232
 2824 80932100          sts _Uart0TxData,R24
 2828                   .dbline 1373
 2828           ;                Uart0TxData[1]=0x40;
 2828 80E4              ldi R24,64
 282A 80932200          sts _Uart0TxData+1,R24
 282E                   .dbline 1374
 282E           ;                Uart0TxData[2]=0x87;
 282E 87E8              ldi R24,135
 2830 80932300          sts _Uart0TxData+2,R24
 2834                   .dbline 1375
 2834           ;                Uart0TxData[3]=2;//系数包2
 2834 82E0              ldi R24,2
 2836 80932400          sts _Uart0TxData+3,R24
 283A                   .dbline 1376
 283A           ;                SendUart0_2(9,4);// 超时32ms   
 283A 24E0              ldi R18,4
 283C 30E0              ldi R19,0
 283E 09E0              ldi R16,9
 2840 0E949700          xcall _SendUart0_2
 2844                   .dbline 1377
 2844           ;                if(Uart0RxCounter==64) 
 2844 8091E301          lds R24,_Uart0RxCounter
 2848 8034              cpi R24,64
 284A A1F5              brne L581
 284C           X208:
 284C                   .dbline 1378
 284C           ;                 {
 284C                   .dbline 1379
 284C           ;                  for(i=0;i<32;i++)
 284C AA24              clr R10
 284E 2FC0              xjmp L586
 2850           L583:
 2850                   .dbline 1380
 2850           ;                  {
 2850                   .dbline 1381
 2850           ;                  CheckMotor(20);
 2850 04E1              ldi R16,20
 2852 10E0              ldi R17,0
 2854 0E94D502          xcall _CheckMotor
 2858                   .dbline 1382
 2858           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2858 80E0              ldi R24,<_Uart0RxData+1
 285A 90E0              ldi R25,>_Uart0RxData+1
 285C EA2D              mov R30,R10
 285E FF27              clr R31
 2860 EE0F              lsl R30
 2862 FF1F              rol R31
 2864 E80F              add R30,R24
 2866 F91F              adc R31,R25
 2868 2080              ldd R2,z+0
 286A 3324              clr R3
 286C 3092D001          sts _T_dat+1,R3
 2870 2092CF01          sts _T_dat,R2
 2874                   .dbline 1383
 2874           ;                  T_dat<<=8;
 2874 322C              mov R3,R2
 2876 2224              clr R2
 2878 3092D001          sts _T_dat+1,R3
 287C 2092CF01          sts _T_dat,R2
 2880                   .dbline 1384
 2880           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2880 80E0              ldi R24,<_Uart0RxData
 2882 90E0              ldi R25,>_Uart0RxData
 2884 EA2D              mov R30,R10
 2886 FF27              clr R31
 2888 EE0F              lsl R30
 288A FF1F              rol R31
 288C E80F              add R30,R24
 288E F91F              adc R31,R25
 2890 2080              ldd R2,z+0
 2892 3324              clr R3
 2894 4090CF01          lds R4,_T_dat
 2898 5090D001          lds R5,_T_dat+1
 289C 4228              or R4,R2
 289E 5328              or R5,R3
 28A0 5092D001          sts _T_dat+1,R5
 28A4 4092CF01          sts _T_dat,R4
 28A8                   .dbline 1385
 28A8           ;                  SendManchester();             
 28A8 0E94C21D          xcall _SendManchester
 28AC                   .dbline 1386
 28AC           ;                  }    
 28AC           L584:
 28AC                   .dbline 1379
 28AC A394              inc R10
 28AE           L586:
 28AE                   .dbline 1379
 28AE 8A2D              mov R24,R10
 28B0 8032              cpi R24,32
 28B2 70F2              brlo L583
 28B4           X209:
 28B4                   .dbline 1387
 28B4           ;                }      
 28B4           L581:
 28B4                   .dbline 1389
 28B4           ; 
 28B4           ;                Uart0TxData[0]=0xE8;
 28B4 88EE              ldi R24,232
 28B6 80932100          sts _Uart0TxData,R24
 28BA                   .dbline 1390
 28BA           ;                Uart0TxData[1]=0x40;
 28BA 80E4              ldi R24,64
 28BC 80932200          sts _Uart0TxData+1,R24
 28C0                   .dbline 1391
 28C0           ;                Uart0TxData[2]=0x87;
 28C0 87E8              ldi R24,135
 28C2 80932300          sts _Uart0TxData+2,R24
 28C6                   .dbline 1392
 28C6           ;                Uart0TxData[3]=3;//系数包3
 28C6 83E0              ldi R24,3
 28C8 80932400          sts _Uart0TxData+3,R24
 28CC                   .dbline 1393
 28CC           ;                SendUart0_2(9,4);// 超时32ms    
 28CC 24E0              ldi R18,4
 28CE 30E0              ldi R19,0
 28D0 09E0              ldi R16,9
 28D2 0E949700          xcall _SendUart0_2
 28D6                   .dbline 1394
 28D6           ;                if(Uart0RxCounter==64) 
 28D6 8091E301          lds R24,_Uart0RxCounter
 28DA 8034              cpi R24,64
 28DC 09F0              breq X282
 28DE C7C6              xjmp L372
 28E0           X282:
 28E0           X210:
 28E0                   .dbline 1395
 28E0           ;                 {
 28E0                   .dbline 1396
 28E0           ;                  for(i=0;i<32;i++)
 28E0 AA24              clr R10
 28E2 2FC0              xjmp L596
 28E4           L593:
 28E4                   .dbline 1397
 28E4           ;                  {
 28E4                   .dbline 1398
 28E4           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 28E4 80E0              ldi R24,<_Uart0RxData+1
 28E6 90E0              ldi R25,>_Uart0RxData+1
 28E8 EA2D              mov R30,R10
 28EA FF27              clr R31
 28EC EE0F              lsl R30
 28EE FF1F              rol R31
 28F0 E80F              add R30,R24
 28F2 F91F              adc R31,R25
 28F4 2080              ldd R2,z+0
 28F6 3324              clr R3
 28F8 3092D001          sts _T_dat+1,R3
 28FC 2092CF01          sts _T_dat,R2
 2900                   .dbline 1399
 2900           ;                  T_dat<<=8;
 2900 322C              mov R3,R2
 2902 2224              clr R2
 2904 3092D001          sts _T_dat+1,R3
 2908 2092CF01          sts _T_dat,R2
 290C                   .dbline 1400
 290C           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 290C 80E0              ldi R24,<_Uart0RxData
 290E 90E0              ldi R25,>_Uart0RxData
 2910 EA2D              mov R30,R10
 2912 FF27              clr R31
 2914 EE0F              lsl R30
 2916 FF1F              rol R31
 2918 E80F              add R30,R24
 291A F91F              adc R31,R25
 291C 2080              ldd R2,z+0
 291E 3324              clr R3
 2920 4090CF01          lds R4,_T_dat
 2924 5090D001          lds R5,_T_dat+1
 2928 4228              or R4,R2
 292A 5328              or R5,R3
 292C 5092D001          sts _T_dat+1,R5
 2930 4092CF01          sts _T_dat,R4
 2934                   .dbline 1401
 2934           ;                  SendManchester();
 2934 0E94C21D          xcall _SendManchester
 2938                   .dbline 1402
 2938           ;                  CheckMotor(20);
 2938 04E1              ldi R16,20
 293A 10E0              ldi R17,0
 293C 0E94D502          xcall _CheckMotor
 2940                   .dbline 1403
 2940           ;                 }
 2940           L594:
 2940                   .dbline 1396
 2940 A394              inc R10
 2942           L596:
 2942                   .dbline 1396
 2942 8A2D              mov R24,R10
 2944 8032              cpi R24,32
 2946 70F2              brlo L593
 2948           X211:
 2948                   .dbline 1404
 2948           ;                }              
 2948                   .dbline 1405
 2948           ;          }
 2948 92C6              xjmp L372
 294A           L556:
 294A                   .dbline 1406
 294A           ;          else if(R_dat==0x9a)//电机断路电流为1档
 294A 8091CD01          lds R24,_R_dat
 294E 9091CE01          lds R25,_R_dat+1
 2952 8A39              cpi R24,154
 2954 E0E0              ldi R30,0
 2956 9E07              cpc R25,R30
 2958 B9F4              brne L598
 295A           X212:
 295A                   .dbline 1407
 295A           ;          {
 295A                   .dbline 1408
 295A           ;                 MotorIdelGear=1;
 295A 81E0              ldi R24,1
 295C 80933202          sts _MotorIdelGear,R24
 2960                   .dbline 1409
 2960           ;                 EEPROM_write(2,MotorIdelGear);  
 2960 282F              mov R18,R24
 2962 02E0              ldi R16,2
 2964 10E0              ldi R17,0
 2966 0E94C521          xcall _EEPROM_write
 296A                   .dbline 1410
 296A           ;                 Gear2Thr();
 296A 0E946505          xcall _Gear2Thr
 296E                   .dbline 1411
 296E           ;                 CheckMotor(30);//延迟30ms     
 296E 0EE1              ldi R16,30
 2970 10E0              ldi R17,0
 2972 0E94D502          xcall _CheckMotor
 2976                   .dbline 1412
 2976           ;                 T_dat=0;          
 2976 2224              clr R2
 2978 3324              clr R3
 297A 3092D001          sts _T_dat+1,R3
 297E 2092CF01          sts _T_dat,R2
 2982                   .dbline 1413
 2982           ;             SendManchester(); 
 2982 0E94C21D          xcall _SendManchester
 2986                   .dbline 1414
 2986           ;          }
 2986 73C6              xjmp L372
 2988           L598:
 2988                   .dbline 1415
 2988           ;          else if(R_dat==0x9b)//电机断路电流为2档
 2988 8091CD01          lds R24,_R_dat
 298C 9091CE01          lds R25,_R_dat+1
 2990 8B39              cpi R24,155
 2992 E0E0              ldi R30,0
 2994 9E07              cpc R25,R30
 2996 B9F4              brne L600
 2998           X213:
 2998                   .dbline 1416
 2998           ;          {
 2998                   .dbline 1417
 2998           ;                 MotorIdelGear=2;
 2998 82E0              ldi R24,2
 299A 80933202          sts _MotorIdelGear,R24
 299E                   .dbline 1418
 299E           ;                 EEPROM_write(2,MotorIdelGear);  
 299E 282F              mov R18,R24
 29A0 02E0              ldi R16,2
 29A2 10E0              ldi R17,0
 29A4 0E94C521          xcall _EEPROM_write
 29A8                   .dbline 1419
 29A8           ;                 Gear2Thr();
 29A8 0E946505          xcall _Gear2Thr
 29AC                   .dbline 1420
 29AC           ;                 CheckMotor(30);//延迟30ms     
 29AC 0EE1              ldi R16,30
 29AE 10E0              ldi R17,0
 29B0 0E94D502          xcall _CheckMotor
 29B4                   .dbline 1421
 29B4           ;                 T_dat=0;          
 29B4 2224              clr R2
 29B6 3324              clr R3
 29B8 3092D001          sts _T_dat+1,R3
 29BC 2092CF01          sts _T_dat,R2
 29C0                   .dbline 1422
 29C0           ;             SendManchester(); 
 29C0 0E94C21D          xcall _SendManchester
 29C4                   .dbline 1423
 29C4           ;          }
 29C4 54C6              xjmp L372
 29C6           L600:
 29C6                   .dbline 1424
 29C6           ;          else if(R_dat==0x9c)//电机断路电流为3档
 29C6 8091CD01          lds R24,_R_dat
 29CA 9091CE01          lds R25,_R_dat+1
 29CE 8C39              cpi R24,156
 29D0 E0E0              ldi R30,0
 29D2 9E07              cpc R25,R30
 29D4 B9F4              brne L602
 29D6           X214:
 29D6                   .dbline 1425
 29D6           ;          {
 29D6                   .dbline 1426
 29D6           ;                 MotorIdelGear=3;
 29D6 83E0              ldi R24,3
 29D8 80933202          sts _MotorIdelGear,R24
 29DC                   .dbline 1427
 29DC           ;                 EEPROM_write(2,MotorIdelGear);  
 29DC 282F              mov R18,R24
 29DE 02E0              ldi R16,2
 29E0 10E0              ldi R17,0
 29E2 0E94C521          xcall _EEPROM_write
 29E6                   .dbline 1428
 29E6           ;                 Gear2Thr();
 29E6 0E946505          xcall _Gear2Thr
 29EA                   .dbline 1429
 29EA           ;                 CheckMotor(30);//延迟30ms     
 29EA 0EE1              ldi R16,30
 29EC 10E0              ldi R17,0
 29EE 0E94D502          xcall _CheckMotor
 29F2                   .dbline 1430
 29F2           ;                 T_dat=0;          
 29F2 2224              clr R2
 29F4 3324              clr R3
 29F6 3092D001          sts _T_dat+1,R3
 29FA 2092CF01          sts _T_dat,R2
 29FE                   .dbline 1431
 29FE           ;             SendManchester(); 
 29FE 0E94C21D          xcall _SendManchester
 2A02                   .dbline 1432
 2A02           ;          }
 2A02 35C6              xjmp L372
 2A04           L602:
 2A04                   .dbline 1433
 2A04           ;          else if(R_dat==0x9d)//电机断路电流为4档
 2A04 8091CD01          lds R24,_R_dat
 2A08 9091CE01          lds R25,_R_dat+1
 2A0C 8D39              cpi R24,157
 2A0E E0E0              ldi R30,0
 2A10 9E07              cpc R25,R30
 2A12 B9F4              brne L604
 2A14           X215:
 2A14                   .dbline 1434
 2A14           ;          {
 2A14                   .dbline 1435
 2A14           ;                 MotorIdelGear=4;
 2A14 84E0              ldi R24,4
 2A16 80933202          sts _MotorIdelGear,R24
 2A1A                   .dbline 1436
 2A1A           ;                 EEPROM_write(2,MotorIdelGear);  
 2A1A 282F              mov R18,R24
 2A1C 02E0              ldi R16,2
 2A1E 10E0              ldi R17,0
 2A20 0E94C521          xcall _EEPROM_write
 2A24                   .dbline 1437
 2A24           ;                 Gear2Thr();
 2A24 0E946505          xcall _Gear2Thr
 2A28                   .dbline 1438
 2A28           ;                 CheckMotor(30);//延迟30ms     
 2A28 0EE1              ldi R16,30
 2A2A 10E0              ldi R17,0
 2A2C 0E94D502          xcall _CheckMotor
 2A30                   .dbline 1439
 2A30           ;                 T_dat=0;          
 2A30 2224              clr R2
 2A32 3324              clr R3
 2A34 3092D001          sts _T_dat+1,R3
 2A38 2092CF01          sts _T_dat,R2
 2A3C                   .dbline 1440
 2A3C           ;             SendManchester(); 
 2A3C 0E94C21D          xcall _SendManchester
 2A40                   .dbline 1441
 2A40           ;          }
 2A40 16C6              xjmp L372
 2A42           L604:
 2A42                   .dbline 1442
 2A42           ;          else if(R_dat==0x9e)//电机断路电流为5档
 2A42 8091CD01          lds R24,_R_dat
 2A46 9091CE01          lds R25,_R_dat+1
 2A4A 8E39              cpi R24,158
 2A4C E0E0              ldi R30,0
 2A4E 9E07              cpc R25,R30
 2A50 B9F4              brne L606
 2A52           X216:
 2A52                   .dbline 1443
 2A52           ;          {
 2A52                   .dbline 1444
 2A52           ;                 MotorIdelGear=5;
 2A52 85E0              ldi R24,5
 2A54 80933202          sts _MotorIdelGear,R24
 2A58                   .dbline 1445
 2A58           ;                 EEPROM_write(2,MotorIdelGear);  
 2A58 282F              mov R18,R24
 2A5A 02E0              ldi R16,2
 2A5C 10E0              ldi R17,0
 2A5E 0E94C521          xcall _EEPROM_write
 2A62                   .dbline 1446
 2A62           ;                 Gear2Thr();
 2A62 0E946505          xcall _Gear2Thr
 2A66                   .dbline 1447
 2A66           ;                 CheckMotor(30);//延迟30ms     
 2A66 0EE1              ldi R16,30
 2A68 10E0              ldi R17,0
 2A6A 0E94D502          xcall _CheckMotor
 2A6E                   .dbline 1448
 2A6E           ;                 T_dat=0;          
 2A6E 2224              clr R2
 2A70 3324              clr R3
 2A72 3092D001          sts _T_dat+1,R3
 2A76 2092CF01          sts _T_dat,R2
 2A7A                   .dbline 1449
 2A7A           ;             SendManchester(); 
 2A7A 0E94C21D          xcall _SendManchester
 2A7E                   .dbline 1450
 2A7E           ;          }
 2A7E F7C5              xjmp L372
 2A80           L606:
 2A80                   .dbline 1451
 2A80           ;          else if(R_dat==0x9f)//电机断路电流为6档
 2A80 8091CD01          lds R24,_R_dat
 2A84 9091CE01          lds R25,_R_dat+1
 2A88 8F39              cpi R24,159
 2A8A E0E0              ldi R30,0
 2A8C 9E07              cpc R25,R30
 2A8E 09F0              breq X283
 2A90 EEC5              xjmp L372
 2A92           X283:
 2A92           X217:
 2A92                   .dbline 1452
 2A92           ;          {
 2A92                   .dbline 1453
 2A92           ;                 MotorIdelGear=6;
 2A92 86E0              ldi R24,6
 2A94 80933202          sts _MotorIdelGear,R24
 2A98                   .dbline 1454
 2A98           ;                 EEPROM_write(2,MotorIdelGear);  
 2A98 282F              mov R18,R24
 2A9A 02E0              ldi R16,2
 2A9C 10E0              ldi R17,0
 2A9E 0E94C521          xcall _EEPROM_write
 2AA2                   .dbline 1455
 2AA2           ;                 Gear2Thr();
 2AA2 0E946505          xcall _Gear2Thr
 2AA6                   .dbline 1456
 2AA6           ;                 CheckMotor(30);//延迟30ms     
 2AA6 0EE1              ldi R16,30
 2AA8 10E0              ldi R17,0
 2AAA 0E94D502          xcall _CheckMotor
 2AAE                   .dbline 1457
 2AAE           ;                 T_dat=0;          
 2AAE 2224              clr R2
 2AB0 3324              clr R3
 2AB2 3092D001          sts _T_dat+1,R3
 2AB6 2092CF01          sts _T_dat,R2
 2ABA                   .dbline 1458
 2ABA           ;             SendManchester(); 
 2ABA 0E94C21D          xcall _SendManchester
 2ABE                   .dbline 1459
 2ABE           ;          }
 2ABE                   .dbline 1461
 2ABE           ;         
 2ABE           ;   break;
 2ABE D7C5              xjmp L372
 2AC0           L610:
 2AC0                   .dbline 1464
 2AC0           ;   
 2AC0           ;       case 0xa0://压力标定系数
 2AC0           ;          if(R_dat==0xa0)//下发全部标定系数，共128字节,20ms/帧，共2560ms   
 2AC0 8091CD01          lds R24,_R_dat
 2AC4 9091CE01          lds R25,_R_dat+1
 2AC8 803A              cpi R24,160
 2ACA E0E0              ldi R30,0
 2ACC 9E07              cpc R25,R30
 2ACE 29F5              brne L611
 2AD0           X218:
 2AD0                   .dbline 1465
 2AD0           ;          { 
 2AD0                   .dbline 1466
 2AD0           ;                DataFlag=1;
 2AD0 81E0              ldi R24,1
 2AD2 90E0              ldi R25,0
 2AD4 9093B401          sts _DataFlag+1,R25
 2AD8 8093B301          sts _DataFlag,R24
 2ADC                   .dbline 1467
 2ADC           ;                coeff_len=128;
 2ADC 80E8              ldi R24,128
 2ADE 90931F00          sts _coeff_len+1,R25
 2AE2 80931E00          sts _coeff_len,R24
 2AE6                   .dbline 1468
 2AE6           ;                coeff_count=0;
 2AE6 2224              clr R2
 2AE8 3324              clr R3
 2AEA 30921D00          sts _coeff_count+1,R3
 2AEE 20921C00          sts _coeff_count,R2
 2AF2                   .dbline 1469
 2AF2           ;                TimeOutFlag=0;
 2AF2 2092CB01          sts _TimeOutFlag,R2
 2AF6                   .dbline 1470
 2AF6           ;                Timer0Counter=1000;//8s定时
 2AF6 88EE              ldi R24,1000
 2AF8 93E0              ldi R25,3
 2AFA 90932F02          sts _Timer0Counter+1,R25
 2AFE 80932E02          sts _Timer0Counter,R24
 2B02                   .dbline 1471
 2B02           ;            TCNT0=0x06; //8ms
 2B02 86E0              ldi R24,6
 2B04 82BF              out 0x32,R24
 2B06                   .dbline 1472
 2B06           ;            TCCR0|=0x06;//256分频
 2B06 83B7              in R24,0x33
 2B08 8660              ori R24,6
 2B0A 83BF              out 0x33,R24
 2B0C                   .dbline 1473
 2B0C           ;            TIFR|=0x01; //清定时器0中断标志
 2B0C 86B7              in R24,0x36
 2B0E 8160              ori R24,1
 2B10 86BF              out 0x36,R24
 2B12                   .dbline 1474
 2B12           ;          TIMSK|=0x01;//使能定时器0中断                                    
 2B12 87B7              in R24,0x37
 2B14 8160              ori R24,1
 2B16 87BF              out 0x37,R24
 2B18                   .dbline 1475
 2B18           ;          }
 2B18 AAC5              xjmp L372
 2B1A           L611:
 2B1A                   .dbline 1476
 2B1A           ;         else if(R_dat==0xa1)//上传标定系数,28ms/帧 ，共64帧128字节
 2B1A 8091CD01          lds R24,_R_dat
 2B1E 9091CE01          lds R25,_R_dat+1
 2B22 813A              cpi R24,161
 2B24 E0E0              ldi R30,0
 2B26 9E07              cpc R25,R30
 2B28 09F0              breq X284
 2B2A A1C5              xjmp L372
 2B2C           X284:
 2B2C           X219:
 2B2C                   .dbline 1477
 2B2C           ;         {    
 2B2C                   .dbline 1478
 2B2C           ;                Uart0TxData[0]=0xE8;
 2B2C 88EE              ldi R24,232
 2B2E 80932100          sts _Uart0TxData,R24
 2B32                   .dbline 1479
 2B32           ;                Uart0TxData[1]=0x40;
 2B32 80E4              ldi R24,64
 2B34 80932200          sts _Uart0TxData+1,R24
 2B38                   .dbline 1480
 2B38           ;                Uart0TxData[2]=0x87;
 2B38 87E8              ldi R24,135
 2B3A 80932300          sts _Uart0TxData+2,R24
 2B3E                   .dbline 1481
 2B3E           ;                Uart0TxData[3]=0;//系数包0
 2B3E 2224              clr R2
 2B40 20922400          sts _Uart0TxData+3,R2
 2B44                   .dbline 1482
 2B44           ;                SendUart0_2(9,5);// 超时40ms   
 2B44 25E0              ldi R18,5
 2B46 30E0              ldi R19,0
 2B48 09E0              ldi R16,9
 2B4A 0E949700          xcall _SendUart0_2
 2B4E                   .dbline 1483
 2B4E           ;                if(Uart0RxCounter==64) 
 2B4E 8091E301          lds R24,_Uart0RxCounter
 2B52 8034              cpi R24,64
 2B54 99F5              brne L618
 2B56           X220:
 2B56                   .dbline 1484
 2B56           ;                 {
 2B56                   .dbline 1485
 2B56           ;                  for(i=0;i<32;i++)
 2B56 AA24              clr R10
 2B58 2EC0              xjmp L623
 2B5A           L620:
 2B5A                   .dbline 1486
 2B5A           ;                  {
 2B5A                   .dbline 1487
 2B5A           ;                  CheckMotor(20);
 2B5A 04E1              ldi R16,20
 2B5C 10E0              ldi R17,0
 2B5E 0E94D502          xcall _CheckMotor
 2B62                   .dbline 1488
 2B62           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2B62 80E0              ldi R24,<_Uart0RxData+1
 2B64 90E0              ldi R25,>_Uart0RxData+1
 2B66 EA2D              mov R30,R10
 2B68 FF27              clr R31
 2B6A EE0F              lsl R30
 2B6C FF1F              rol R31
 2B6E E80F              add R30,R24
 2B70 F91F              adc R31,R25
 2B72 2080              ldd R2,z+0
 2B74 3324              clr R3
 2B76 3092D001          sts _T_dat+1,R3
 2B7A 2092CF01          sts _T_dat,R2
 2B7E                   .dbline 1489
 2B7E           ;                  T_dat<<=8;
 2B7E 322C              mov R3,R2
 2B80 2224              clr R2
 2B82 3092D001          sts _T_dat+1,R3
 2B86 2092CF01          sts _T_dat,R2
 2B8A                   .dbline 1490
 2B8A           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2B8A 80E0              ldi R24,<_Uart0RxData
 2B8C 90E0              ldi R25,>_Uart0RxData
 2B8E EA2D              mov R30,R10
 2B90 FF27              clr R31
 2B92 EE0F              lsl R30
 2B94 FF1F              rol R31
 2B96 E80F              add R30,R24
 2B98 F91F              adc R31,R25
 2B9A 2080              ldd R2,z+0
 2B9C 3324              clr R3
 2B9E 4090CF01          lds R4,_T_dat
 2BA2 5090D001          lds R5,_T_dat+1
 2BA6 4228              or R4,R2
 2BA8 5328              or R5,R3
 2BAA 5092D001          sts _T_dat+1,R5
 2BAE 4092CF01          sts _T_dat,R4
 2BB2                   .dbline 1491
 2BB2           ;                  SendManchester();             
 2BB2 E8D7              xcall _SendManchester
 2BB4                   .dbline 1492
 2BB4           ;                  }    
 2BB4           L621:
 2BB4                   .dbline 1485
 2BB4 A394              inc R10
 2BB6           L623:
 2BB6                   .dbline 1485
 2BB6 8A2D              mov R24,R10
 2BB8 8032              cpi R24,32
 2BBA 78F2              brlo L620
 2BBC           X221:
 2BBC                   .dbline 1493
 2BBC           ;                }      
 2BBC           L618:
 2BBC                   .dbline 1495
 2BBC           ; 
 2BBC           ;                Uart0TxData[0]=0xE8;
 2BBC 88EE              ldi R24,232
 2BBE 80932100          sts _Uart0TxData,R24
 2BC2                   .dbline 1496
 2BC2           ;                Uart0TxData[1]=0x40;
 2BC2 80E4              ldi R24,64
 2BC4 80932200          sts _Uart0TxData+1,R24
 2BC8                   .dbline 1497
 2BC8           ;                Uart0TxData[2]=0x87;
 2BC8 87E8              ldi R24,135
 2BCA 80932300          sts _Uart0TxData+2,R24
 2BCE                   .dbline 1498
 2BCE           ;                Uart0TxData[3]=1;//系数包1
 2BCE 81E0              ldi R24,1
 2BD0 80932400          sts _Uart0TxData+3,R24
 2BD4                   .dbline 1499
 2BD4           ;                SendUart0_2(9,5);// 超时40ms            
 2BD4 25E0              ldi R18,5
 2BD6 30E0              ldi R19,0
 2BD8 09E0              ldi R16,9
 2BDA 0E949700          xcall _SendUart0_2
 2BDE                   .dbline 1500
 2BDE           ;                if(Uart0RxCounter==64) 
 2BDE 8091E301          lds R24,_Uart0RxCounter
 2BE2 8034              cpi R24,64
 2BE4 09F0              breq X285
 2BE6 43C5              xjmp L372
 2BE8           X285:
 2BE8           X222:
 2BE8                   .dbline 1501
 2BE8           ;                 {
 2BE8                   .dbline 1502
 2BE8           ;                  for(i=0;i<32;i++)
 2BE8 AA24              clr R10
 2BEA 2EC0              xjmp L633
 2BEC           L630:
 2BEC                   .dbline 1503
 2BEC           ;                  {
 2BEC                   .dbline 1504
 2BEC           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2BEC 80E0              ldi R24,<_Uart0RxData+1
 2BEE 90E0              ldi R25,>_Uart0RxData+1
 2BF0 EA2D              mov R30,R10
 2BF2 FF27              clr R31
 2BF4 EE0F              lsl R30
 2BF6 FF1F              rol R31
 2BF8 E80F              add R30,R24
 2BFA F91F              adc R31,R25
 2BFC 2080              ldd R2,z+0
 2BFE 3324              clr R3
 2C00 3092D001          sts _T_dat+1,R3
 2C04 2092CF01          sts _T_dat,R2
 2C08                   .dbline 1505
 2C08           ;                  T_dat<<=8;
 2C08 322C              mov R3,R2
 2C0A 2224              clr R2
 2C0C 3092D001          sts _T_dat+1,R3
 2C10 2092CF01          sts _T_dat,R2
 2C14                   .dbline 1506
 2C14           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2C14 80E0              ldi R24,<_Uart0RxData
 2C16 90E0              ldi R25,>_Uart0RxData
 2C18 EA2D              mov R30,R10
 2C1A FF27              clr R31
 2C1C EE0F              lsl R30
 2C1E FF1F              rol R31
 2C20 E80F              add R30,R24
 2C22 F91F              adc R31,R25
 2C24 2080              ldd R2,z+0
 2C26 3324              clr R3
 2C28 4090CF01          lds R4,_T_dat
 2C2C 5090D001          lds R5,_T_dat+1
 2C30 4228              or R4,R2
 2C32 5328              or R5,R3
 2C34 5092D001          sts _T_dat+1,R5
 2C38 4092CF01          sts _T_dat,R4
 2C3C                   .dbline 1507
 2C3C           ;                  SendManchester();
 2C3C A3D7              xcall _SendManchester
 2C3E                   .dbline 1508
 2C3E           ;                  CheckMotor(20);
 2C3E 04E1              ldi R16,20
 2C40 10E0              ldi R17,0
 2C42 0E94D502          xcall _CheckMotor
 2C46                   .dbline 1509
 2C46           ;                 }
 2C46           L631:
 2C46                   .dbline 1502
 2C46 A394              inc R10
 2C48           L633:
 2C48                   .dbline 1502
 2C48 8A2D              mov R24,R10
 2C4A 8032              cpi R24,32
 2C4C 78F2              brlo L630
 2C4E           X223:
 2C4E                   .dbline 1510
 2C4E           ;                }              
 2C4E                   .dbline 1511
 2C4E           ;         }
 2C4E                   .dbline 1512
 2C4E           ;       break;
 2C4E 0FC5              xjmp L372
 2C50           L635:
 2C50                   .dbline 1516
 2C50           ;       
 2C50           ;       
 2C50           ;       case 0xB0://流量相关
 2C50           ;         if(R_dat==0xb0) //下发流量系数
 2C50 8091CD01          lds R24,_R_dat
 2C54 9091CE01          lds R25,_R_dat+1
 2C58 803B              cpi R24,176
 2C5A E0E0              ldi R30,0
 2C5C 9E07              cpc R25,R30
 2C5E 29F5              brne L636
 2C60           X224:
 2C60                   .dbline 1517
 2C60           ;         {
 2C60                   .dbline 1518
 2C60           ;            DataFlag=2;
 2C60 82E0              ldi R24,2
 2C62 90E0              ldi R25,0
 2C64 9093B401          sts _DataFlag+1,R25
 2C68 8093B301          sts _DataFlag,R24
 2C6C                   .dbline 1519
 2C6C           ;                coeff_len=128;
 2C6C 80E8              ldi R24,128
 2C6E 90931F00          sts _coeff_len+1,R25
 2C72 80931E00          sts _coeff_len,R24
 2C76                   .dbline 1520
 2C76           ;                coeff_count=0;
 2C76 2224              clr R2
 2C78 3324              clr R3
 2C7A 30921D00          sts _coeff_count+1,R3
 2C7E 20921C00          sts _coeff_count,R2
 2C82                   .dbline 1521
 2C82           ;                TimeOutFlag=0;
 2C82 2092CB01          sts _TimeOutFlag,R2
 2C86                   .dbline 1522
 2C86           ;                Timer0Counter=1000;//8s定时
 2C86 88EE              ldi R24,1000
 2C88 93E0              ldi R25,3
 2C8A 90932F02          sts _Timer0Counter+1,R25
 2C8E 80932E02          sts _Timer0Counter,R24
 2C92                   .dbline 1523
 2C92           ;            TCNT0=0x06; //8ms
 2C92 86E0              ldi R24,6
 2C94 82BF              out 0x32,R24
 2C96                   .dbline 1524
 2C96           ;            TCCR0|=0x06;//256分频
 2C96 83B7              in R24,0x33
 2C98 8660              ori R24,6
 2C9A 83BF              out 0x33,R24
 2C9C                   .dbline 1525
 2C9C           ;            TIFR|=0x01; //清定时器0中断标志
 2C9C 86B7              in R24,0x36
 2C9E 8160              ori R24,1
 2CA0 86BF              out 0x36,R24
 2CA2                   .dbline 1526
 2CA2           ;          TIMSK|=0x01;//使能定时器0中断                
 2CA2 87B7              in R24,0x37
 2CA4 8160              ori R24,1
 2CA6 87BF              out 0x37,R24
 2CA8                   .dbline 1527
 2CA8           ;         }
 2CA8 E2C4              xjmp L372
 2CAA           L636:
 2CAA                   .dbline 1528
 2CAA           ;         else  if(R_dat==0xb1)//上提流量系数
 2CAA 8091CD01          lds R24,_R_dat
 2CAE 9091CE01          lds R25,_R_dat+1
 2CB2 813B              cpi R24,177
 2CB4 E0E0              ldi R30,0
 2CB6 9E07              cpc R25,R30
 2CB8 09F0              breq X286
 2CBA D9C4              xjmp L372
 2CBC           X286:
 2CBC           X225:
 2CBC                   .dbline 1529
 2CBC           ;         {
 2CBC                   .dbline 1530
 2CBC           ;            Uart0TxData[0]=0xE8;
 2CBC 88EE              ldi R24,232
 2CBE 80932100          sts _Uart0TxData,R24
 2CC2                   .dbline 1531
 2CC2           ;                Uart0TxData[1]=0x40;
 2CC2 80E4              ldi R24,64
 2CC4 80932200          sts _Uart0TxData+1,R24
 2CC8                   .dbline 1532
 2CC8           ;                Uart0TxData[2]=0x87;
 2CC8 87E8              ldi R24,135
 2CCA 80932300          sts _Uart0TxData+2,R24
 2CCE                   .dbline 1533
 2CCE           ;                Uart0TxData[3]=2;//系数包2
 2CCE 82E0              ldi R24,2
 2CD0 80932400          sts _Uart0TxData+3,R24
 2CD4                   .dbline 1534
 2CD4           ;                SendUart0_2(9,5);// 超时40ms   
 2CD4 25E0              ldi R18,5
 2CD6 30E0              ldi R19,0
 2CD8 09E0              ldi R16,9
 2CDA 0E949700          xcall _SendUart0_2
 2CDE                   .dbline 1535
 2CDE           ;                if(Uart0RxCounter==64) 
 2CDE 8091E301          lds R24,_Uart0RxCounter
 2CE2 8034              cpi R24,64
 2CE4 99F5              brne L643
 2CE6           X226:
 2CE6                   .dbline 1536
 2CE6           ;                 {
 2CE6                   .dbline 1537
 2CE6           ;                  for(i=0;i<32;i++)
 2CE6 AA24              clr R10
 2CE8 2EC0              xjmp L648
 2CEA           L645:
 2CEA                   .dbline 1538
 2CEA           ;                  {
 2CEA                   .dbline 1539
 2CEA           ;                  CheckMotor(20);
 2CEA 04E1              ldi R16,20
 2CEC 10E0              ldi R17,0
 2CEE 0E94D502          xcall _CheckMotor
 2CF2                   .dbline 1540
 2CF2           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2CF2 80E0              ldi R24,<_Uart0RxData+1
 2CF4 90E0              ldi R25,>_Uart0RxData+1
 2CF6 EA2D              mov R30,R10
 2CF8 FF27              clr R31
 2CFA EE0F              lsl R30
 2CFC FF1F              rol R31
 2CFE E80F              add R30,R24
 2D00 F91F              adc R31,R25
 2D02 2080              ldd R2,z+0
 2D04 3324              clr R3
 2D06 3092D001          sts _T_dat+1,R3
 2D0A 2092CF01          sts _T_dat,R2
 2D0E                   .dbline 1541
 2D0E           ;                  T_dat<<=8;
 2D0E 322C              mov R3,R2
 2D10 2224              clr R2
 2D12 3092D001          sts _T_dat+1,R3
 2D16 2092CF01          sts _T_dat,R2
 2D1A                   .dbline 1542
 2D1A           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2D1A 80E0              ldi R24,<_Uart0RxData
 2D1C 90E0              ldi R25,>_Uart0RxData
 2D1E EA2D              mov R30,R10
 2D20 FF27              clr R31
 2D22 EE0F              lsl R30
 2D24 FF1F              rol R31
 2D26 E80F              add R30,R24
 2D28 F91F              adc R31,R25
 2D2A 2080              ldd R2,z+0
 2D2C 3324              clr R3
 2D2E 4090CF01          lds R4,_T_dat
 2D32 5090D001          lds R5,_T_dat+1
 2D36 4228              or R4,R2
 2D38 5328              or R5,R3
 2D3A 5092D001          sts _T_dat+1,R5
 2D3E 4092CF01          sts _T_dat,R4
 2D42                   .dbline 1543
 2D42           ;                  SendManchester();             
 2D42 20D7              xcall _SendManchester
 2D44                   .dbline 1544
 2D44           ;                  }    
 2D44           L646:
 2D44                   .dbline 1537
 2D44 A394              inc R10
 2D46           L648:
 2D46                   .dbline 1537
 2D46 8A2D              mov R24,R10
 2D48 8032              cpi R24,32
 2D4A 78F2              brlo L645
 2D4C           X227:
 2D4C                   .dbline 1545
 2D4C           ;                }      
 2D4C           L643:
 2D4C                   .dbline 1547
 2D4C           ; 
 2D4C           ;                Uart0TxData[0]=0xE8;
 2D4C 88EE              ldi R24,232
 2D4E 80932100          sts _Uart0TxData,R24
 2D52                   .dbline 1548
 2D52           ;                Uart0TxData[1]=0x40;
 2D52 80E4              ldi R24,64
 2D54 80932200          sts _Uart0TxData+1,R24
 2D58                   .dbline 1549
 2D58           ;                Uart0TxData[2]=0x87;
 2D58 87E8              ldi R24,135
 2D5A 80932300          sts _Uart0TxData+2,R24
 2D5E                   .dbline 1550
 2D5E           ;                Uart0TxData[3]=3;//系数包3
 2D5E 83E0              ldi R24,3
 2D60 80932400          sts _Uart0TxData+3,R24
 2D64                   .dbline 1551
 2D64           ;                SendUart0_2(9,5);// 超时40ms    
 2D64 25E0              ldi R18,5
 2D66 30E0              ldi R19,0
 2D68 09E0              ldi R16,9
 2D6A 0E949700          xcall _SendUart0_2
 2D6E                   .dbline 1552
 2D6E           ;                if(Uart0RxCounter==64) 
 2D6E 8091E301          lds R24,_Uart0RxCounter
 2D72 8034              cpi R24,64
 2D74 09F0              breq X287
 2D76 7BC4              xjmp L372
 2D78           X287:
 2D78           X228:
 2D78                   .dbline 1553
 2D78           ;                 {
 2D78                   .dbline 1554
 2D78           ;                  for(i=0;i<32;i++)
 2D78 AA24              clr R10
 2D7A 2EC0              xjmp L658
 2D7C           L655:
 2D7C                   .dbline 1555
 2D7C           ;                  {
 2D7C                   .dbline 1556
 2D7C           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 2D7C 80E0              ldi R24,<_Uart0RxData+1
 2D7E 90E0              ldi R25,>_Uart0RxData+1
 2D80 EA2D              mov R30,R10
 2D82 FF27              clr R31
 2D84 EE0F              lsl R30
 2D86 FF1F              rol R31
 2D88 E80F              add R30,R24
 2D8A F91F              adc R31,R25
 2D8C 2080              ldd R2,z+0
 2D8E 3324              clr R3
 2D90 3092D001          sts _T_dat+1,R3
 2D94 2092CF01          sts _T_dat,R2
 2D98                   .dbline 1557
 2D98           ;                  T_dat<<=8;
 2D98 322C              mov R3,R2
 2D9A 2224              clr R2
 2D9C 3092D001          sts _T_dat+1,R3
 2DA0 2092CF01          sts _T_dat,R2
 2DA4                   .dbline 1558
 2DA4           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 2DA4 80E0              ldi R24,<_Uart0RxData
 2DA6 90E0              ldi R25,>_Uart0RxData
 2DA8 EA2D              mov R30,R10
 2DAA FF27              clr R31
 2DAC EE0F              lsl R30
 2DAE FF1F              rol R31
 2DB0 E80F              add R30,R24
 2DB2 F91F              adc R31,R25
 2DB4 2080              ldd R2,z+0
 2DB6 3324              clr R3
 2DB8 4090CF01          lds R4,_T_dat
 2DBC 5090D001          lds R5,_T_dat+1
 2DC0 4228              or R4,R2
 2DC2 5328              or R5,R3
 2DC4 5092D001          sts _T_dat+1,R5
 2DC8 4092CF01          sts _T_dat,R4
 2DCC                   .dbline 1559
 2DCC           ;                  SendManchester();
 2DCC DBD6              xcall _SendManchester
 2DCE                   .dbline 1560
 2DCE           ;                  CheckMotor(20);
 2DCE 04E1              ldi R16,20
 2DD0 10E0              ldi R17,0
 2DD2 0E94D502          xcall _CheckMotor
 2DD6                   .dbline 1561
 2DD6           ;                 }
 2DD6           L656:
 2DD6                   .dbline 1554
 2DD6 A394              inc R10
 2DD8           L658:
 2DD8                   .dbline 1554
 2DD8 8A2D              mov R24,R10
 2DDA 8032              cpi R24,32
 2DDC 78F2              brlo L655
 2DDE           X229:
 2DDE                   .dbline 1562
 2DDE           ;                }              
 2DDE                   .dbline 1563
 2DDE           ;         }
 2DDE                   .dbline 1589
 2DDE           ;       /*   if(R_dat==0xb1)//读幅值
 2DDE           ;          {
 2DDE           ;                SendUart0(0xb0,5);//40ms定时
 2DDE           ;                for(k=0;k<8;k+=2)
 2DDE           ;                 {
 2DDE           ;                 T_dat=Uart0RxData[k];
 2DDE           ;                 T_dat<<=8;
 2DDE           ;                 T_dat|=Uart0RxData[k+1];
 2DDE           ;                 SendManchester();
 2DDE           ;                 CheckMotor(40);
 2DDE           ;                 }
 2DDE           ;               }
 2DDE           ;               else  if((R_dat>0xb0) && (R_dat<0xb5) )//1800点提取,连续提取流量测试数据，4个通道分别提取，命令为0xB1-0xB4
 2DDE           ;         {   
 2DDE           ;                 SendUart0(R_dat,125);//1s定时  
 2DDE           ;                 for(k=0;k<1800;k++)//共1800帧数据，全部提取
 2DDE           ;                 {
 2DDE           ;                 SendUart0(0xFF,1);//8ms定时      
 2DDE           ;                 T_dat=Uart0RxData[0];
 2DDE           ;                 T_dat<<=8;
 2DDE           ;                 T_dat|=Uart0RxData[1];
 2DDE           ;                 SendManchester();
 2DDE           ;                 CheckMotor(42);
 2DDE           ;                 }
 2DDE           ;               } */  
 2DDE           ;       break;
 2DDE 47C4              xjmp L372
 2DE0           L660:
 2DE0                   .dbline 1592
 2DE0           ; 
 2DE0           ;     case 0xc0://所有参数全采，上传16字节共8帧
 2DE0           ;                if(R_dat==0xc0)
 2DE0 8091CD01          lds R24,_R_dat
 2DE4 9091CE01          lds R25,_R_dat+1
 2DE8 803C              cpi R24,192
 2DEA E0E0              ldi R30,0
 2DEC 9E07              cpc R25,R30
 2DEE 09F0              breq X288
 2DF0 9EC2              xjmp L661
 2DF2           X288:
 2DF2           X230:
 2DF2                   .dbline 1593
 2DF2           ;        {
 2DF2                   .dbline 1594
 2DF2           ;               Uart0TxData[0]=0xE8;
 2DF2 88EE              ldi R24,232
 2DF4 80932100          sts _Uart0TxData,R24
 2DF8                   .dbline 1595
 2DF8           ;               Uart0TxData[1]=0x40;
 2DF8 80E4              ldi R24,64
 2DFA 80932200          sts _Uart0TxData+1,R24
 2DFE                   .dbline 1596
 2DFE           ;               Uart0TxData[2]=0x89;
 2DFE 89E8              ldi R24,137
 2E00 80932300          sts _Uart0TxData+2,R24
 2E04                   .dbline 1597
 2E04           ;               Uart0TxData[3]=9;
 2E04 89E0              ldi R24,9
 2E06 80932400          sts _Uart0TxData+3,R24
 2E0A                   .dbline 1598
 2E0A           ;               SendUart0_2(9,50);//流量板直读检测，超时400ms
 2E0A 22E3              ldi R18,50
 2E0C 30E0              ldi R19,0
 2E0E 09E0              ldi R16,9
 2E10 0E949700          xcall _SendUart0_2
 2E14                   .dbline 1599
 2E14           ;               if(Uart0RxCounter==64)//成功接收到压力、温度、流量数据，先低字节后高字节
 2E14 8091E301          lds R24,_Uart0RxCounter
 2E18 8034              cpi R24,64
 2E1A 09F0              breq X289
 2E1C 28C4              xjmp L372
 2E1E           X289:
 2E1E           X231:
 2E1E                   .dbline 1600
 2E1E           ;               {
 2E1E                   .dbline 1601
 2E1E           ;                T_dat=Uart0RxData[1];
 2E1E 2090E501          lds R2,_Uart0RxData+1
 2E22 3324              clr R3
 2E24 3092D001          sts _T_dat+1,R3
 2E28 2092CF01          sts _T_dat,R2
 2E2C                   .dbline 1602
 2E2C           ;                T_dat<<=8;
 2E2C 2090CF01          lds R2,_T_dat
 2E30 3090D001          lds R3,_T_dat+1
 2E34 322C              mov R3,R2
 2E36 2224              clr R2
 2E38 3092D001          sts _T_dat+1,R3
 2E3C 2092CF01          sts _T_dat,R2
 2E40                   .dbline 1603
 2E40           ;                T_dat|=Uart0RxData[0];
 2E40 2090E401          lds R2,_Uart0RxData
 2E44 3324              clr R3
 2E46 4090CF01          lds R4,_T_dat
 2E4A 5090D001          lds R5,_T_dat+1
 2E4E 4228              or R4,R2
 2E50 5328              or R5,R3
 2E52 5092D001          sts _T_dat+1,R5
 2E56 4092CF01          sts _T_dat,R4
 2E5A                   .dbline 1604
 2E5A           ;                SendManchester();//压力
 2E5A 94D6              xcall _SendManchester
 2E5C                   .dbline 1605
 2E5C           ;                crc16array[0]=(unsigned char)(T_dat);
 2E5C 2090CF01          lds R2,_T_dat
 2E60 3090D001          lds R3,_T_dat+1
 2E64 20920000          sts _crc16array,R2
 2E68                   .dbline 1606
 2E68           ;                crc16array[1]=(unsigned char)(T_dat>>8);
 2E68 232C              mov R2,R3
 2E6A 3324              clr R3
 2E6C 27FC              sbrc R2,7
 2E6E 3094              com R3
 2E70 20920100          sts _crc16array+1,R2
 2E74                   .dbline 1609
 2E74           ;                
 2E74           ;                
 2E74           ;                CheckMotor(30);        
 2E74 0EE1              ldi R16,30
 2E76 10E0              ldi R17,0
 2E78 0E94D502          xcall _CheckMotor
 2E7C                   .dbline 1610
 2E7C           ;                T_dat=Uart0RxData[3];
 2E7C 2090E701          lds R2,_Uart0RxData+3
 2E80 3324              clr R3
 2E82 3092D001          sts _T_dat+1,R3
 2E86 2092CF01          sts _T_dat,R2
 2E8A                   .dbline 1611
 2E8A           ;                T_dat<<=8;
 2E8A 2090CF01          lds R2,_T_dat
 2E8E 3090D001          lds R3,_T_dat+1
 2E92 322C              mov R3,R2
 2E94 2224              clr R2
 2E96 3092D001          sts _T_dat+1,R3
 2E9A 2092CF01          sts _T_dat,R2
 2E9E                   .dbline 1612
 2E9E           ;                T_dat|=Uart0RxData[2];
 2E9E 2090E601          lds R2,_Uart0RxData+2
 2EA2 3324              clr R3
 2EA4 4090CF01          lds R4,_T_dat
 2EA8 5090D001          lds R5,_T_dat+1
 2EAC 4228              or R4,R2
 2EAE 5328              or R5,R3
 2EB0 5092D001          sts _T_dat+1,R5
 2EB4 4092CF01          sts _T_dat,R4
 2EB8                   .dbline 1613
 2EB8           ;                SendManchester();//温度
 2EB8 65D6              xcall _SendManchester
 2EBA                   .dbline 1614
 2EBA           ;                crc16array[2]=(unsigned char)(T_dat);
 2EBA 2090CF01          lds R2,_T_dat
 2EBE 3090D001          lds R3,_T_dat+1
 2EC2 20920200          sts _crc16array+2,R2
 2EC6                   .dbline 1615
 2EC6           ;                crc16array[3]=(unsigned char)(T_dat>>8);
 2EC6 232C              mov R2,R3
 2EC8 3324              clr R3
 2ECA 27FC              sbrc R2,7
 2ECC 3094              com R3
 2ECE 20920300          sts _crc16array+3,R2
 2ED2                   .dbline 1617
 2ED2           ;                
 2ED2           ;                 CheckMotor(30);       
 2ED2 0EE1              ldi R16,30
 2ED4 10E0              ldi R17,0
 2ED6 0E94D502          xcall _CheckMotor
 2EDA                   .dbline 1619
 2EDA           ;                 
 2EDA           ;                 lfib=Uart0RxData[5];
 2EDA 2090E901          lds R2,_Uart0RxData+5
 2EDE 3324              clr R3
 2EE0 4424              clr R4
 2EE2 5524              clr R5
 2EE4 30921500          sts _lfib+1,R3
 2EE8 20921400          sts _lfib,R2
 2EEC 50921700          sts _lfib+2+1,R5
 2EF0 40921600          sts _lfib+2,R4
 2EF4                   .dbline 1620
 2EF4           ;                 lfib<<=8;
 2EF4 88E0              ldi R24,8
 2EF6 90E0              ldi R25,0
 2EF8 20911600          lds R18,_lfib+2
 2EFC 30911700          lds R19,_lfib+2+1
 2F00 00911400          lds R16,_lfib
 2F04 10911500          lds R17,_lfib+1
 2F08 8A93              st -y,R24
 2F0A 0E940000          xcall lsl32
 2F0E 10931500          sts _lfib+1,R17
 2F12 00931400          sts _lfib,R16
 2F16 30931700          sts _lfib+2+1,R19
 2F1A 20931600          sts _lfib+2,R18
 2F1E                   .dbline 1621
 2F1E           ;                 lfib|=Uart0RxData[4];
 2F1E 2090E801          lds R2,_Uart0RxData+4
 2F22 3324              clr R3
 2F24 4424              clr R4
 2F26 5524              clr R5
 2F28 3801              movw R6,R16
 2F2A 4901              movw R8,R18
 2F2C 6228              or R6,R2
 2F2E 7328              or R7,R3
 2F30 8428              or R8,R4
 2F32 9528              or R9,R5
 2F34 70921500          sts _lfib+1,R7
 2F38 60921400          sts _lfib,R6
 2F3C 90921700          sts _lfib+2+1,R9
 2F40 80921600          sts _lfib+2,R8
 2F44                   .dbline 1622
 2F44           ;                 lfib&=0x0000ffff;
 2F44 4FEF              ldi R20,255
 2F46 5FEF              ldi R21,255
 2F48 60E0              ldi R22,0
 2F4A 70E0              ldi R23,0
 2F4C 1301              movw R2,R6
 2F4E 2401              movw R4,R8
 2F50 2422              and R2,R20
 2F52 3522              and R3,R21
 2F54 4622              and R4,R22
 2F56 5722              and R5,R23
 2F58 30921500          sts _lfib+1,R3
 2F5C 20921400          sts _lfib,R2
 2F60 50921700          sts _lfib+2+1,R5
 2F64 40921600          sts _lfib+2,R4
 2F68                   .dbline 1623
 2F68           ;                 myFIB.f=(unsigned long)lfib; 
 2F68 8101              movw R16,R2
 2F6A 9201              movw R18,R4
 2F6C 0E940000          xcall ulong2fp
 2F70 10933C02          sts _myFIB+1,R17
 2F74 00933B02          sts _myFIB,R16
 2F78 30933E02          sts _myFIB+2+1,R19
 2F7C 20933D02          sts _myFIB+2,R18
 2F80                   .dbline 1625
 2F80           ;                 
 2F80           ;                 T_dat=myFIB.i[1];
 2F80 20903D02          lds R2,_myFIB+2
 2F84 30903E02          lds R3,_myFIB+2+1
 2F88 3092D001          sts _T_dat+1,R3
 2F8C 2092CF01          sts _T_dat,R2
 2F90                   .dbline 1626
 2F90           ;                 SendManchester();//流量-时间1
 2F90 F9D5              xcall _SendManchester
 2F92                   .dbline 1627
 2F92           ;                 crc16array[4]=(unsigned char)(T_dat);
 2F92 2090CF01          lds R2,_T_dat
 2F96 3090D001          lds R3,_T_dat+1
 2F9A 20920400          sts _crc16array+4,R2
 2F9E                   .dbline 1628
 2F9E           ;                 crc16array[5]=(unsigned char)(T_dat>>8);
 2F9E 232C              mov R2,R3
 2FA0 3324              clr R3
 2FA2 27FC              sbrc R2,7
 2FA4 3094              com R3
 2FA6 20920500          sts _crc16array+5,R2
 2FAA                   .dbline 1630
 2FAA           ;                 
 2FAA           ;                 CheckMotor(30);       
 2FAA 0EE1              ldi R16,30
 2FAC 10E0              ldi R17,0
 2FAE 0E94D502          xcall _CheckMotor
 2FB2                   .dbline 1631
 2FB2           ;                 T_dat=myFIB.i[0];
 2FB2 20903B02          lds R2,_myFIB
 2FB6 30903C02          lds R3,_myFIB+1
 2FBA 3092D001          sts _T_dat+1,R3
 2FBE 2092CF01          sts _T_dat,R2
 2FC2                   .dbline 1632
 2FC2           ;                 SendManchester();//流量-时间2
 2FC2 E0D5              xcall _SendManchester
 2FC4                   .dbline 1633
 2FC4           ;                 crc16array[6]=(unsigned char)(T_dat);
 2FC4 2090CF01          lds R2,_T_dat
 2FC8 3090D001          lds R3,_T_dat+1
 2FCC 20920600          sts _crc16array+6,R2
 2FD0                   .dbline 1634
 2FD0           ;                 crc16array[7]=(unsigned char)(T_dat>>8);
 2FD0 232C              mov R2,R3
 2FD2 3324              clr R3
 2FD4 27FC              sbrc R2,7
 2FD6 3094              com R3
 2FD8 20920700          sts _crc16array+7,R2
 2FDC                   .dbline 1636
 2FDC           ;                 
 2FDC           ;                 CheckMotor(30);       
 2FDC 0EE1              ldi R16,30
 2FDE 10E0              ldi R17,0
 2FE0 0E94D502          xcall _CheckMotor
 2FE4                   .dbline 1638
 2FE4           ;                 
 2FE4           ;                 lfib=Uart0RxData[7];
 2FE4 2090EB01          lds R2,_Uart0RxData+7
 2FE8 3324              clr R3
 2FEA 4424              clr R4
 2FEC 5524              clr R5
 2FEE 30921500          sts _lfib+1,R3
 2FF2 20921400          sts _lfib,R2
 2FF6 50921700          sts _lfib+2+1,R5
 2FFA 40921600          sts _lfib+2,R4
 2FFE                   .dbline 1639
 2FFE           ;                 lfib<<=8;
 2FFE 88E0              ldi R24,8
 3000 90E0              ldi R25,0
 3002 20911600          lds R18,_lfib+2
 3006 30911700          lds R19,_lfib+2+1
 300A 00911400          lds R16,_lfib
 300E 10911500          lds R17,_lfib+1
 3012 8A93              st -y,R24
 3014 0E940000          xcall lsl32
 3018 10931500          sts _lfib+1,R17
 301C 00931400          sts _lfib,R16
 3020 30931700          sts _lfib+2+1,R19
 3024 20931600          sts _lfib+2,R18
 3028                   .dbline 1640
 3028           ;                 lfib|=Uart0RxData[6];
 3028 2090EA01          lds R2,_Uart0RxData+6
 302C 3324              clr R3
 302E 4424              clr R4
 3030 5524              clr R5
 3032 3801              movw R6,R16
 3034 4901              movw R8,R18
 3036 6228              or R6,R2
 3038 7328              or R7,R3
 303A 8428              or R8,R4
 303C 9528              or R9,R5
 303E 70921500          sts _lfib+1,R7
 3042 60921400          sts _lfib,R6
 3046 90921700          sts _lfib+2+1,R9
 304A 80921600          sts _lfib+2,R8
 304E                   .dbline 1641
 304E           ;                 lfib&=0x0000ffff;
 304E 4FEF              ldi R20,255
 3050 5FEF              ldi R21,255
 3052 60E0              ldi R22,0
 3054 70E0              ldi R23,0
 3056 1301              movw R2,R6
 3058 2401              movw R4,R8
 305A 2422              and R2,R20
 305C 3522              and R3,R21
 305E 4622              and R4,R22
 3060 5722              and R5,R23
 3062 30921500          sts _lfib+1,R3
 3066 20921400          sts _lfib,R2
 306A 50921700          sts _lfib+2+1,R5
 306E 40921600          sts _lfib+2,R4
 3072                   .dbline 1642
 3072           ;                 myFIB.f=(unsigned long)lfib; 
 3072 8101              movw R16,R2
 3074 9201              movw R18,R4
 3076 0E940000          xcall ulong2fp
 307A 10933C02          sts _myFIB+1,R17
 307E 00933B02          sts _myFIB,R16
 3082 30933E02          sts _myFIB+2+1,R19
 3086 20933D02          sts _myFIB+2,R18
 308A                   .dbline 1644
 308A           ;                 
 308A           ;                 T_dat=myFIB.i[1];
 308A 20903D02          lds R2,_myFIB+2
 308E 30903E02          lds R3,_myFIB+2+1
 3092 3092D001          sts _T_dat+1,R3
 3096 2092CF01          sts _T_dat,R2
 309A                   .dbline 1645
 309A           ;                 SendManchester();//流量-相位1
 309A 74D5              xcall _SendManchester
 309C                   .dbline 1646
 309C           ;                 crc16array[8]=(unsigned char)(T_dat);
 309C 2090CF01          lds R2,_T_dat
 30A0 3090D001          lds R3,_T_dat+1
 30A4 20920800          sts _crc16array+8,R2
 30A8                   .dbline 1647
 30A8           ;                 crc16array[9]=(unsigned char)(T_dat>>8);
 30A8 232C              mov R2,R3
 30AA 3324              clr R3
 30AC 27FC              sbrc R2,7
 30AE 3094              com R3
 30B0 20920900          sts _crc16array+9,R2
 30B4                   .dbline 1649
 30B4           ;                 
 30B4           ;                 CheckMotor(30);       
 30B4 0EE1              ldi R16,30
 30B6 10E0              ldi R17,0
 30B8 0E94D502          xcall _CheckMotor
 30BC                   .dbline 1650
 30BC           ;                 T_dat=myFIB.i[0];
 30BC 20903B02          lds R2,_myFIB
 30C0 30903C02          lds R3,_myFIB+1
 30C4 3092D001          sts _T_dat+1,R3
 30C8 2092CF01          sts _T_dat,R2
 30CC                   .dbline 1651
 30CC           ;                 SendManchester();//流量-相位2
 30CC 5BD5              xcall _SendManchester
 30CE                   .dbline 1652
 30CE           ;                 crc16array[10]=(unsigned char)(T_dat);
 30CE 2090CF01          lds R2,_T_dat
 30D2 3090D001          lds R3,_T_dat+1
 30D6 20920A00          sts _crc16array+10,R2
 30DA                   .dbline 1653
 30DA           ;                 crc16array[11]=(unsigned char)(T_dat>>8);
 30DA 232C              mov R2,R3
 30DC 3324              clr R3
 30DE 27FC              sbrc R2,7
 30E0 3094              com R3
 30E2 20920B00          sts _crc16array+11,R2
 30E6                   .dbline 1655
 30E6           ;                 
 30E6           ;                 CheckMotor(30);        
 30E6 0EE1              ldi R16,30
 30E8 10E0              ldi R17,0
 30EA 0E94D502          xcall _CheckMotor
 30EE                   .dbline 1656
 30EE           ;                 T_dat=Motor1Status.i;
 30EE 20903902          lds R2,_Motor1Status
 30F2 30903A02          lds R3,_Motor1Status+1
 30F6 3092D001          sts _T_dat+1,R3
 30FA 2092CF01          sts _T_dat,R2
 30FE                   .dbline 1657
 30FE           ;                 SendManchester();//收放电机状态
 30FE 42D5              xcall _SendManchester
 3100                   .dbline 1658
 3100           ;                 crc16array[12]=(unsigned char)(T_dat);
 3100 2090CF01          lds R2,_T_dat
 3104 3090D001          lds R3,_T_dat+1
 3108 20920C00          sts _crc16array+12,R2
 310C                   .dbline 1659
 310C           ;                 crc16array[13]=(unsigned char)(T_dat>>8);
 310C 232C              mov R2,R3
 310E 3324              clr R3
 3110 27FC              sbrc R2,7
 3112 3094              com R3
 3114 20920D00          sts _crc16array+13,R2
 3118                   .dbline 1661
 3118           ;                 
 3118           ;                 CheckMotor(30);        
 3118 0EE1              ldi R16,30
 311A 10E0              ldi R17,0
 311C 0E94D502          xcall _CheckMotor
 3120                   .dbline 1662
 3120           ;                 T_dat=Motor2Status.i;
 3120 20903702          lds R2,_Motor2Status
 3124 30903802          lds R3,_Motor2Status+1
 3128 3092D001          sts _T_dat+1,R3
 312C 2092CF01          sts _T_dat,R2
 3130                   .dbline 1663
 3130           ;                 SendManchester();//调节电机状态
 3130 29D5              xcall _SendManchester
 3132                   .dbline 1664
 3132           ;                 crc16array[14]=(unsigned char)(T_dat);
 3132 2090CF01          lds R2,_T_dat
 3136 3090D001          lds R3,_T_dat+1
 313A 20920E00          sts _crc16array+14,R2
 313E                   .dbline 1665
 313E           ;                 crc16array[15]=(unsigned char)(T_dat>>8);
 313E 232C              mov R2,R3
 3140 3324              clr R3
 3142 27FC              sbrc R2,7
 3144 3094              com R3
 3146 20920F00          sts _crc16array+15,R2
 314A                   .dbline 1667
 314A           ;                 
 314A           ;                 CheckMotor(30);       
 314A 0EE1              ldi R16,30
 314C 10E0              ldi R17,0
 314E 0E94D502          xcall _CheckMotor
 3152                   .dbline 1668
 3152           ;                 f=SampleADC(5);//Cable 
 3152 05E0              ldi R16,5
 3154 0E946802          xcall _SampleADC
 3158 C02E              mov R12,R16
 315A 1127              clr R17
 315C 0E940000          xcall int2fp
 3160 0983              std y+1,R16
 3162 1A83              std y+2,R17
 3164 2B83              std y+3,R18
 3166 3C83              std y+4,R19
 3168                   .dbline 1669
 3168           ;                 f=f*2.5;
 3168 00E0              ldi R16,<L392
 316A 10E0              ldi R17,>L392
 316C 0E940000          xcall elpm32
 3170 CE01              movw R24,R28
 3172 0196              adiw R24,1
 3174 9A93              st -y,R25
 3176 8A93              st -y,R24
 3178 0E940000          xcall fpmule1
 317C 0983              std y+1,R16
 317E 1A83              std y+2,R17
 3180 2B83              std y+3,R18
 3182 3C83              std y+4,R19
 3184                   .dbline 1670
 3184           ;                 f=f*67.666;
 3184 00E0              ldi R16,<L393
 3186 10E0              ldi R17,>L393
 3188 0E940000          xcall elpm32
 318C CE01              movw R24,R28
 318E 0196              adiw R24,1
 3190 9A93              st -y,R25
 3192 8A93              st -y,R24
 3194 0E940000          xcall fpmule1
 3198 0983              std y+1,R16
 319A 1A83              std y+2,R17
 319C 2B83              std y+3,R18
 319E 3C83              std y+4,R19
 31A0                   .dbline 1671
 31A0           ;                 f=f/256;
 31A0 2980              ldd R2,y+1
 31A2 3A80              ldd R3,y+2
 31A4 4B80              ldd R4,y+3
 31A6 5C80              ldd R5,y+4
 31A8 00E0              ldi R16,<L394
 31AA 10E0              ldi R17,>L394
 31AC 0E940000          xcall elpm32
 31B0 3A93              st -y,R19
 31B2 2A93              st -y,R18
 31B4 1A93              st -y,R17
 31B6 0A93              st -y,R16
 31B8 8101              movw R16,R2
 31BA 9201              movw R18,R4
 31BC 0E940000          xcall fpdiv2
 31C0 0983              std y+1,R16
 31C2 1A83              std y+2,R17
 31C4 2B83              std y+3,R18
 31C6 3C83              std y+4,R19
 31C8                   .dbline 1672
 31C8           ;                 T_dat=f;
 31C8 0981              ldd R16,y+1
 31CA 1A81              ldd R17,y+2
 31CC 2B81              ldd R18,y+3
 31CE 3C81              ldd R19,y+4
 31D0 0E940000          xcall fpint
 31D4 1093D001          sts _T_dat+1,R17
 31D8 0093CF01          sts _T_dat,R16
 31DC                   .dbline 1673
 31DC           ;                 CheckMotor(30);
 31DC 0EE1              ldi R16,30
 31DE 10E0              ldi R17,0
 31E0 0E94D502          xcall _CheckMotor
 31E4                   .dbline 1674
 31E4           ;                 T_dat<<=8;   
 31E4 2090CF01          lds R2,_T_dat
 31E8 3090D001          lds R3,_T_dat+1
 31EC 322C              mov R3,R2
 31EE 2224              clr R2
 31F0 3092D001          sts _T_dat+1,R3
 31F4 2092CF01          sts _T_dat,R2
 31F8                   .dbline 1675
 31F8           ;                 if( (PWM1_PIN==1) || (PWM2_PIN==1) )
 31F8 89B3              in R24,0x19
 31FA 8270              andi R24,2
 31FC 8695              lsr R24
 31FE 8130              cpi R24,1
 3200 39F0              breq L694
 3202           X232:
 3202 80B1              in R24,0x0
 3204 8470              andi R24,4
 3206 8695              lsr R24
 3208 8695              lsr R24
 320A 8130              cpi R24,1
 320C 09F0              breq X290
 320E 52C0              xjmp L692
 3210           X290:
 3210           X233:
 3210           L694:
 3210                   .dbline 1676
 3210           ;                 {
 3210                   .dbline 1677
 3210           ;                 f=SampleADC(4);//VIN / VR 
 3210 04E0              ldi R16,4
 3212 0E946802          xcall _SampleADC
 3216 C02E              mov R12,R16
 3218 1127              clr R17
 321A 0E940000          xcall int2fp
 321E 0983              std y+1,R16
 3220 1A83              std y+2,R17
 3222 2B83              std y+3,R18
 3224 3C83              std y+4,R19
 3226                   .dbline 1678
 3226           ;                 f=f*2.5;
 3226 00E0              ldi R16,<L392
 3228 10E0              ldi R17,>L392
 322A 0E940000          xcall elpm32
 322E CE01              movw R24,R28
 3230 0196              adiw R24,1
 3232 9A93              st -y,R25
 3234 8A93              st -y,R24
 3236 0E940000          xcall fpmule1
 323A 0983              std y+1,R16
 323C 1A83              std y+2,R17
 323E 2B83              std y+3,R18
 3240 3C83              std y+4,R19
 3242                   .dbline 1679
 3242           ;                 f=f*67.666;
 3242 00E0              ldi R16,<L393
 3244 10E0              ldi R17,>L393
 3246 0E940000          xcall elpm32
 324A CE01              movw R24,R28
 324C 0196              adiw R24,1
 324E 9A93              st -y,R25
 3250 8A93              st -y,R24
 3252 0E940000          xcall fpmule1
 3256 0983              std y+1,R16
 3258 1A83              std y+2,R17
 325A 2B83              std y+3,R18
 325C 3C83              std y+4,R19
 325E                   .dbline 1680
 325E           ;                 f=f/256;
 325E 2980              ldd R2,y+1
 3260 3A80              ldd R3,y+2
 3262 4B80              ldd R4,y+3
 3264 5C80              ldd R5,y+4
 3266 00E0              ldi R16,<L394
 3268 10E0              ldi R17,>L394
 326A 0E940000          xcall elpm32
 326E 3A93              st -y,R19
 3270 2A93              st -y,R18
 3272 1A93              st -y,R17
 3274 0A93              st -y,R16
 3276 8101              movw R16,R2
 3278 9201              movw R18,R4
 327A 0E940000          xcall fpdiv2
 327E 0983              std y+1,R16
 3280 1A83              std y+2,R17
 3282 2B83              std y+3,R18
 3284 3C83              std y+4,R19
 3286                   .dbline 1681
 3286           ;                 i=f;
 3286 0981              ldd R16,y+1
 3288 1A81              ldd R17,y+2
 328A 2B81              ldd R18,y+3
 328C 3C81              ldd R19,y+4
 328E 0E940000          xcall fpint
 3292 A02E              mov R10,R16
 3294                   .dbline 1682
 3294           ;                 i+=5;//本来就少2mA，再多+3mA为了好看些
 3294 8A2D              mov R24,R10
 3296 8B5F              subi R24,251    ; addi 5
 3298 A82E              mov R10,R24
 329A                   .dbline 1683
 329A           ;                 T_dat|=i; 
 329A 282E              mov R2,R24
 329C 3324              clr R3
 329E 4090CF01          lds R4,_T_dat
 32A2 5090D001          lds R5,_T_dat+1
 32A6 4228              or R4,R2
 32A8 5328              or R5,R3
 32AA 5092D001          sts _T_dat+1,R5
 32AE 4092CF01          sts _T_dat,R4
 32B2                   .dbline 1684
 32B2           ;                 }
 32B2 06C0              xjmp L693
 32B4           L692:
 32B4                   .dbline 1686
 32B4           ;                 else
 32B4           ;                 {
 32B4                   .dbline 1687
 32B4           ;                 T_dat=0;
 32B4 2224              clr R2
 32B6 3324              clr R3
 32B8 3092D001          sts _T_dat+1,R3
 32BC 2092CF01          sts _T_dat,R2
 32C0                   .dbline 1688
 32C0           ;                 }
 32C0           L693:
 32C0                   .dbline 1689
 32C0           ;                 SendManchester();//电机电压
 32C0 61D4              xcall _SendManchester
 32C2                   .dbline 1690
 32C2           ;                 crc16array[16]=(unsigned char)(T_dat);
 32C2 2090CF01          lds R2,_T_dat
 32C6 3090D001          lds R3,_T_dat+1
 32CA 20921000          sts _crc16array+16,R2
 32CE                   .dbline 1691
 32CE           ;                 crc16array[17]=(unsigned char)(T_dat>>8);
 32CE 232C              mov R2,R3
 32D0 3324              clr R3
 32D2 27FC              sbrc R2,7
 32D4 3094              com R3
 32D6 20921100          sts _crc16array+17,R2
 32DA                   .dbline 1693
 32DA           ;          
 32DA           ;                 CheckMotor(30);       
 32DA 0EE1              ldi R16,30
 32DC 10E0              ldi R17,0
 32DE 0E94D502          xcall _CheckMotor
 32E2                   .dbline 1694
 32E2           ;                 crc16(crc16array,18);//0.75ms
 32E2 22E1              ldi R18,18
 32E4 30E0              ldi R19,0
 32E6 00E0              ldi R16,<_crc16array
 32E8 10E0              ldi R17,>_crc16array
 32EA 0E94D421          xcall _crc16
 32EE                   .dbline 1695
 32EE           ;                 T_dat=crc16hi;
 32EE 20901300          lds R2,_crc16hi
 32F2 3324              clr R3
 32F4 3092D001          sts _T_dat+1,R3
 32F8 2092CF01          sts _T_dat,R2
 32FC                   .dbline 1696
 32FC           ;                 T_dat<<=8;
 32FC 2090CF01          lds R2,_T_dat
 3300 3090D001          lds R3,_T_dat+1
 3304 322C              mov R3,R2
 3306 2224              clr R2
 3308 3092D001          sts _T_dat+1,R3
 330C 2092CF01          sts _T_dat,R2
 3310                   .dbline 1697
 3310           ;                 T_dat|=crc16lo;         
 3310 20901200          lds R2,_crc16lo
 3314 3324              clr R3
 3316 4090CF01          lds R4,_T_dat
 331A 5090D001          lds R5,_T_dat+1
 331E 4228              or R4,R2
 3320 5328              or R5,R3
 3322 5092D001          sts _T_dat+1,R5
 3326 4092CF01          sts _T_dat,R4
 332A                   .dbline 1698
 332A           ;           SendManchester();//上传CRC校验共2字节
 332A 2CD4              xcall _SendManchester
 332C                   .dbline 1699
 332C           ;                }      
 332C                   .dbline 1700
 332C           ;               }
 332C A0C1              xjmp L372
 332E           L661:
 332E                   .dbline 1701
 332E           ;               else  if(R_dat==0xc5) //读仪器信息,共320字节，分5次从流量板中提取，每包64字节
 332E 8091CD01          lds R24,_R_dat
 3332 9091CE01          lds R25,_R_dat+1
 3336 853C              cpi R24,197
 3338 E0E0              ldi R30,0
 333A 9E07              cpc R25,R30
 333C 09F0              breq X291
 333E 6AC1              xjmp L697
 3340           X291:
 3340           X234:
 3340                   .dbline 1702
 3340           ;               {
 3340                   .dbline 1703
 3340           ;                Uart0TxData[0]=0xE8;
 3340 88EE              ldi R24,232
 3342 80932100          sts _Uart0TxData,R24
 3346                   .dbline 1704
 3346           ;                Uart0TxData[1]=0x40;
 3346 80E4              ldi R24,64
 3348 80932200          sts _Uart0TxData+1,R24
 334C                   .dbline 1705
 334C           ;                Uart0TxData[2]=0x83;
 334C 83E8              ldi R24,131
 334E 80932300          sts _Uart0TxData+2,R24
 3352                   .dbline 1706
 3352           ;                Uart0TxData[3]=0;//包0
 3352 2224              clr R2
 3354 20922400          sts _Uart0TxData+3,R2
 3358                   .dbline 1707
 3358           ;                SendUart0_2(9,5);// 超时40ms   
 3358 25E0              ldi R18,5
 335A 30E0              ldi R19,0
 335C 09E0              ldi R16,9
 335E 0E949700          xcall _SendUart0_2
 3362                   .dbline 1708
 3362           ;                if(Uart0RxCounter==64) 
 3362 8091E301          lds R24,_Uart0RxCounter
 3366 8034              cpi R24,64
 3368 99F5              brne L702
 336A           X235:
 336A                   .dbline 1709
 336A           ;                 {
 336A                   .dbline 1710
 336A           ;                  for(i=0;i<32;i++)
 336A AA24              clr R10
 336C 2EC0              xjmp L707
 336E           L704:
 336E                   .dbline 1711
 336E           ;                  {
 336E                   .dbline 1712
 336E           ;                  CheckMotor(20);
 336E 04E1              ldi R16,20
 3370 10E0              ldi R17,0
 3372 0E94D502          xcall _CheckMotor
 3376                   .dbline 1713
 3376           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 3376 80E0              ldi R24,<_Uart0RxData+1
 3378 90E0              ldi R25,>_Uart0RxData+1
 337A EA2D              mov R30,R10
 337C FF27              clr R31
 337E EE0F              lsl R30
 3380 FF1F              rol R31
 3382 E80F              add R30,R24
 3384 F91F              adc R31,R25
 3386 2080              ldd R2,z+0
 3388 3324              clr R3
 338A 3092D001          sts _T_dat+1,R3
 338E 2092CF01          sts _T_dat,R2
 3392                   .dbline 1714
 3392           ;                  T_dat<<=8;
 3392 322C              mov R3,R2
 3394 2224              clr R2
 3396 3092D001          sts _T_dat+1,R3
 339A 2092CF01          sts _T_dat,R2
 339E                   .dbline 1715
 339E           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 339E 80E0              ldi R24,<_Uart0RxData
 33A0 90E0              ldi R25,>_Uart0RxData
 33A2 EA2D              mov R30,R10
 33A4 FF27              clr R31
 33A6 EE0F              lsl R30
 33A8 FF1F              rol R31
 33AA E80F              add R30,R24
 33AC F91F              adc R31,R25
 33AE 2080              ldd R2,z+0
 33B0 3324              clr R3
 33B2 4090CF01          lds R4,_T_dat
 33B6 5090D001          lds R5,_T_dat+1
 33BA 4228              or R4,R2
 33BC 5328              or R5,R3
 33BE 5092D001          sts _T_dat+1,R5
 33C2 4092CF01          sts _T_dat,R4
 33C6                   .dbline 1716
 33C6           ;                  SendManchester();             
 33C6 DED3              xcall _SendManchester
 33C8                   .dbline 1717
 33C8           ;                  }    
 33C8           L705:
 33C8                   .dbline 1710
 33C8 A394              inc R10
 33CA           L707:
 33CA                   .dbline 1710
 33CA 8A2D              mov R24,R10
 33CC 8032              cpi R24,32
 33CE 78F2              brlo L704
 33D0           X236:
 33D0                   .dbline 1718
 33D0           ;                }      
 33D0           L702:
 33D0                   .dbline 1720
 33D0           ; 
 33D0           ;                Uart0TxData[0]=0xE8;
 33D0 88EE              ldi R24,232
 33D2 80932100          sts _Uart0TxData,R24
 33D6                   .dbline 1721
 33D6           ;                Uart0TxData[1]=0x40;
 33D6 80E4              ldi R24,64
 33D8 80932200          sts _Uart0TxData+1,R24
 33DC                   .dbline 1722
 33DC           ;                Uart0TxData[2]=0x83;
 33DC 83E8              ldi R24,131
 33DE 80932300          sts _Uart0TxData+2,R24
 33E2                   .dbline 1723
 33E2           ;                Uart0TxData[3]=1;//包1
 33E2 81E0              ldi R24,1
 33E4 80932400          sts _Uart0TxData+3,R24
 33E8                   .dbline 1724
 33E8           ;                SendUart0_2(9,5);// 超时40ms    
 33E8 25E0              ldi R18,5
 33EA 30E0              ldi R19,0
 33EC 09E0              ldi R16,9
 33EE 0E949700          xcall _SendUart0_2
 33F2                   .dbline 1725
 33F2           ;                if(Uart0RxCounter==64) 
 33F2 8091E301          lds R24,_Uart0RxCounter
 33F6 8034              cpi R24,64
 33F8 99F5              brne L712
 33FA           X237:
 33FA                   .dbline 1726
 33FA           ;                 {
 33FA                   .dbline 1727
 33FA           ;                  for(i=0;i<32;i++)
 33FA AA24              clr R10
 33FC 2EC0              xjmp L717
 33FE           L714:
 33FE                   .dbline 1728
 33FE           ;                  {
 33FE                   .dbline 1729
 33FE           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 33FE 80E0              ldi R24,<_Uart0RxData+1
 3400 90E0              ldi R25,>_Uart0RxData+1
 3402 EA2D              mov R30,R10
 3404 FF27              clr R31
 3406 EE0F              lsl R30
 3408 FF1F              rol R31
 340A E80F              add R30,R24
 340C F91F              adc R31,R25
 340E 2080              ldd R2,z+0
 3410 3324              clr R3
 3412 3092D001          sts _T_dat+1,R3
 3416 2092CF01          sts _T_dat,R2
 341A                   .dbline 1730
 341A           ;                  T_dat<<=8;
 341A 322C              mov R3,R2
 341C 2224              clr R2
 341E 3092D001          sts _T_dat+1,R3
 3422 2092CF01          sts _T_dat,R2
 3426                   .dbline 1731
 3426           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 3426 80E0              ldi R24,<_Uart0RxData
 3428 90E0              ldi R25,>_Uart0RxData
 342A EA2D              mov R30,R10
 342C FF27              clr R31
 342E EE0F              lsl R30
 3430 FF1F              rol R31
 3432 E80F              add R30,R24
 3434 F91F              adc R31,R25
 3436 2080              ldd R2,z+0
 3438 3324              clr R3
 343A 4090CF01          lds R4,_T_dat
 343E 5090D001          lds R5,_T_dat+1
 3442 4228              or R4,R2
 3444 5328              or R5,R3
 3446 5092D001          sts _T_dat+1,R5
 344A 4092CF01          sts _T_dat,R4
 344E                   .dbline 1732
 344E           ;                  SendManchester();
 344E 9AD3              xcall _SendManchester
 3450                   .dbline 1733
 3450           ;                  CheckMotor(20);
 3450 04E1              ldi R16,20
 3452 10E0              ldi R17,0
 3454 0E94D502          xcall _CheckMotor
 3458                   .dbline 1734
 3458           ;                 }
 3458           L715:
 3458                   .dbline 1727
 3458 A394              inc R10
 345A           L717:
 345A                   .dbline 1727
 345A 8A2D              mov R24,R10
 345C 8032              cpi R24,32
 345E 78F2              brlo L714
 3460           X238:
 3460                   .dbline 1735
 3460           ;                }      
 3460           L712:
 3460                   .dbline 1737
 3460           ;                       
 3460           ;                Uart0TxData[0]=0xE8;
 3460 88EE              ldi R24,232
 3462 80932100          sts _Uart0TxData,R24
 3466                   .dbline 1738
 3466           ;                Uart0TxData[1]=0x40;
 3466 80E4              ldi R24,64
 3468 80932200          sts _Uart0TxData+1,R24
 346C                   .dbline 1739
 346C           ;                Uart0TxData[2]=0x83;
 346C 83E8              ldi R24,131
 346E 80932300          sts _Uart0TxData+2,R24
 3472                   .dbline 1740
 3472           ;                Uart0TxData[3]=2;//包2
 3472 82E0              ldi R24,2
 3474 80932400          sts _Uart0TxData+3,R24
 3478                   .dbline 1741
 3478           ;                SendUart0_2(9,5);// 超时40ms    
 3478 25E0              ldi R18,5
 347A 30E0              ldi R19,0
 347C 09E0              ldi R16,9
 347E 0E949700          xcall _SendUart0_2
 3482                   .dbline 1742
 3482           ;                if(Uart0RxCounter==64) 
 3482 8091E301          lds R24,_Uart0RxCounter
 3486 8034              cpi R24,64
 3488 99F5              brne L722
 348A           X239:
 348A                   .dbline 1743
 348A           ;                 {
 348A                   .dbline 1744
 348A           ;                  for(i=0;i<32;i++)
 348A AA24              clr R10
 348C 2EC0              xjmp L727
 348E           L724:
 348E                   .dbline 1745
 348E           ;                  {
 348E                   .dbline 1746
 348E           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 348E 80E0              ldi R24,<_Uart0RxData+1
 3490 90E0              ldi R25,>_Uart0RxData+1
 3492 EA2D              mov R30,R10
 3494 FF27              clr R31
 3496 EE0F              lsl R30
 3498 FF1F              rol R31
 349A E80F              add R30,R24
 349C F91F              adc R31,R25
 349E 2080              ldd R2,z+0
 34A0 3324              clr R3
 34A2 3092D001          sts _T_dat+1,R3
 34A6 2092CF01          sts _T_dat,R2
 34AA                   .dbline 1747
 34AA           ;                  T_dat<<=8;
 34AA 322C              mov R3,R2
 34AC 2224              clr R2
 34AE 3092D001          sts _T_dat+1,R3
 34B2 2092CF01          sts _T_dat,R2
 34B6                   .dbline 1748
 34B6           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 34B6 80E0              ldi R24,<_Uart0RxData
 34B8 90E0              ldi R25,>_Uart0RxData
 34BA EA2D              mov R30,R10
 34BC FF27              clr R31
 34BE EE0F              lsl R30
 34C0 FF1F              rol R31
 34C2 E80F              add R30,R24
 34C4 F91F              adc R31,R25
 34C6 2080              ldd R2,z+0
 34C8 3324              clr R3
 34CA 4090CF01          lds R4,_T_dat
 34CE 5090D001          lds R5,_T_dat+1
 34D2 4228              or R4,R2
 34D4 5328              or R5,R3
 34D6 5092D001          sts _T_dat+1,R5
 34DA 4092CF01          sts _T_dat,R4
 34DE                   .dbline 1749
 34DE           ;                  SendManchester();
 34DE 52D3              xcall _SendManchester
 34E0                   .dbline 1750
 34E0           ;                  CheckMotor(20);
 34E0 04E1              ldi R16,20
 34E2 10E0              ldi R17,0
 34E4 0E94D502          xcall _CheckMotor
 34E8                   .dbline 1751
 34E8           ;                 }
 34E8           L725:
 34E8                   .dbline 1744
 34E8 A394              inc R10
 34EA           L727:
 34EA                   .dbline 1744
 34EA 8A2D              mov R24,R10
 34EC 8032              cpi R24,32
 34EE 78F2              brlo L724
 34F0           X240:
 34F0                   .dbline 1752
 34F0           ;                }      
 34F0           L722:
 34F0                   .dbline 1754
 34F0           ;                
 34F0           ;                Uart0TxData[0]=0xE8;
 34F0 88EE              ldi R24,232
 34F2 80932100          sts _Uart0TxData,R24
 34F6                   .dbline 1755
 34F6           ;                Uart0TxData[1]=0x40;
 34F6 80E4              ldi R24,64
 34F8 80932200          sts _Uart0TxData+1,R24
 34FC                   .dbline 1756
 34FC           ;                Uart0TxData[2]=0x83;
 34FC 83E8              ldi R24,131
 34FE 80932300          sts _Uart0TxData+2,R24
 3502                   .dbline 1757
 3502           ;                Uart0TxData[3]=3;//包3
 3502 83E0              ldi R24,3
 3504 80932400          sts _Uart0TxData+3,R24
 3508                   .dbline 1758
 3508           ;                SendUart0_2(9,5);// 超时40ms    
 3508 25E0              ldi R18,5
 350A 30E0              ldi R19,0
 350C 09E0              ldi R16,9
 350E 0E949700          xcall _SendUart0_2
 3512                   .dbline 1759
 3512           ;                if(Uart0RxCounter==64) 
 3512 8091E301          lds R24,_Uart0RxCounter
 3516 8034              cpi R24,64
 3518 99F5              brne L732
 351A           X241:
 351A                   .dbline 1760
 351A           ;                 {
 351A                   .dbline 1761
 351A           ;                  for(i=0;i<32;i++)
 351A AA24              clr R10
 351C 2EC0              xjmp L737
 351E           L734:
 351E                   .dbline 1762
 351E           ;                  {
 351E                   .dbline 1763
 351E           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 351E 80E0              ldi R24,<_Uart0RxData+1
 3520 90E0              ldi R25,>_Uart0RxData+1
 3522 EA2D              mov R30,R10
 3524 FF27              clr R31
 3526 EE0F              lsl R30
 3528 FF1F              rol R31
 352A E80F              add R30,R24
 352C F91F              adc R31,R25
 352E 2080              ldd R2,z+0
 3530 3324              clr R3
 3532 3092D001          sts _T_dat+1,R3
 3536 2092CF01          sts _T_dat,R2
 353A                   .dbline 1764
 353A           ;                  T_dat<<=8;
 353A 322C              mov R3,R2
 353C 2224              clr R2
 353E 3092D001          sts _T_dat+1,R3
 3542 2092CF01          sts _T_dat,R2
 3546                   .dbline 1765
 3546           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 3546 80E0              ldi R24,<_Uart0RxData
 3548 90E0              ldi R25,>_Uart0RxData
 354A EA2D              mov R30,R10
 354C FF27              clr R31
 354E EE0F              lsl R30
 3550 FF1F              rol R31
 3552 E80F              add R30,R24
 3554 F91F              adc R31,R25
 3556 2080              ldd R2,z+0
 3558 3324              clr R3
 355A 4090CF01          lds R4,_T_dat
 355E 5090D001          lds R5,_T_dat+1
 3562 4228              or R4,R2
 3564 5328              or R5,R3
 3566 5092D001          sts _T_dat+1,R5
 356A 4092CF01          sts _T_dat,R4
 356E                   .dbline 1766
 356E           ;                  SendManchester();
 356E 0AD3              xcall _SendManchester
 3570                   .dbline 1767
 3570           ;                  CheckMotor(20);
 3570 04E1              ldi R16,20
 3572 10E0              ldi R17,0
 3574 0E94D502          xcall _CheckMotor
 3578                   .dbline 1768
 3578           ;                 }
 3578           L735:
 3578                   .dbline 1761
 3578 A394              inc R10
 357A           L737:
 357A                   .dbline 1761
 357A 8A2D              mov R24,R10
 357C 8032              cpi R24,32
 357E 78F2              brlo L734
 3580           X242:
 3580                   .dbline 1769
 3580           ;                }      
 3580           L732:
 3580                   .dbline 1771
 3580           ;                
 3580           ;                Uart0TxData[0]=0xE8;
 3580 88EE              ldi R24,232
 3582 80932100          sts _Uart0TxData,R24
 3586                   .dbline 1772
 3586           ;                Uart0TxData[1]=0x40;
 3586 80E4              ldi R24,64
 3588 80932200          sts _Uart0TxData+1,R24
 358C                   .dbline 1773
 358C           ;                Uart0TxData[2]=0x83;
 358C 83E8              ldi R24,131
 358E 80932300          sts _Uart0TxData+2,R24
 3592                   .dbline 1774
 3592           ;                Uart0TxData[3]=4;//包4
 3592 84E0              ldi R24,4
 3594 80932400          sts _Uart0TxData+3,R24
 3598                   .dbline 1775
 3598           ;                SendUart0_2(9,5);// 超时40ms    
 3598 25E0              ldi R18,5
 359A 30E0              ldi R19,0
 359C 09E0              ldi R16,9
 359E 0E949700          xcall _SendUart0_2
 35A2                   .dbline 1776
 35A2           ;                if(Uart0RxCounter==64) 
 35A2 8091E301          lds R24,_Uart0RxCounter
 35A6 8034              cpi R24,64
 35A8 09F0              breq X292
 35AA 61C0              xjmp L372
 35AC           X292:
 35AC           X243:
 35AC                   .dbline 1777
 35AC           ;                 {
 35AC                   .dbline 1778
 35AC           ;                  for(i=0;i<32;i++)
 35AC AA24              clr R10
 35AE 2EC0              xjmp L747
 35B0           L744:
 35B0                   .dbline 1779
 35B0           ;                  {
 35B0                   .dbline 1780
 35B0           ;                  T_dat=Uart0RxData[i*2+1];//高字节
 35B0 80E0              ldi R24,<_Uart0RxData+1
 35B2 90E0              ldi R25,>_Uart0RxData+1
 35B4 EA2D              mov R30,R10
 35B6 FF27              clr R31
 35B8 EE0F              lsl R30
 35BA FF1F              rol R31
 35BC E80F              add R30,R24
 35BE F91F              adc R31,R25
 35C0 2080              ldd R2,z+0
 35C2 3324              clr R3
 35C4 3092D001          sts _T_dat+1,R3
 35C8 2092CF01          sts _T_dat,R2
 35CC                   .dbline 1781
 35CC           ;                  T_dat<<=8;
 35CC 322C              mov R3,R2
 35CE 2224              clr R2
 35D0 3092D001          sts _T_dat+1,R3
 35D4 2092CF01          sts _T_dat,R2
 35D8                   .dbline 1782
 35D8           ;                  T_dat|=Uart0RxData[i*2+0];//低字节
 35D8 80E0              ldi R24,<_Uart0RxData
 35DA 90E0              ldi R25,>_Uart0RxData
 35DC EA2D              mov R30,R10
 35DE FF27              clr R31
 35E0 EE0F              lsl R30
 35E2 FF1F              rol R31
 35E4 E80F              add R30,R24
 35E6 F91F              adc R31,R25
 35E8 2080              ldd R2,z+0
 35EA 3324              clr R3
 35EC 4090CF01          lds R4,_T_dat
 35F0 5090D001          lds R5,_T_dat+1
 35F4 4228              or R4,R2
 35F6 5328              or R5,R3
 35F8 5092D001          sts _T_dat+1,R5
 35FC 4092CF01          sts _T_dat,R4
 3600                   .dbline 1783
 3600           ;                  SendManchester();
 3600 C1D2              xcall _SendManchester
 3602                   .dbline 1784
 3602           ;                  CheckMotor(20);
 3602 04E1              ldi R16,20
 3604 10E0              ldi R17,0
 3606 0E94D502          xcall _CheckMotor
 360A                   .dbline 1785
 360A           ;                 }
 360A           L745:
 360A                   .dbline 1778
 360A A394              inc R10
 360C           L747:
 360C                   .dbline 1778
 360C 8A2D              mov R24,R10
 360E 8032              cpi R24,32
 3610 78F2              brlo L744
 3612           X244:
 3612                   .dbline 1786
 3612           ;                }      
 3612                   .dbline 1788
 3612           ;                
 3612           ;               }
 3612 2DC0              xjmp L372
 3614           L697:
 3614                   .dbline 1789
 3614           ;               else  if(R_dat==0xca) //写仪器信息
 3614 8091CD01          lds R24,_R_dat
 3618 9091CE01          lds R25,_R_dat+1
 361C 8A3C              cpi R24,202
 361E E0E0              ldi R30,0
 3620 9E07              cpc R25,R30
 3622 29F5              brne L372
 3624           X245:
 3624                   .dbline 1790
 3624           ;               {
 3624                   .dbline 1791
 3624           ;                DataFlag=4;
 3624 84E0              ldi R24,4
 3626 90E0              ldi R25,0
 3628 9093B401          sts _DataFlag+1,R25
 362C 8093B301          sts _DataFlag,R24
 3630                   .dbline 1792
 3630           ;                coeff_len=320;
 3630 80E4              ldi R24,320
 3632 91E0              ldi R25,1
 3634 90931F00          sts _coeff_len+1,R25
 3638 80931E00          sts _coeff_len,R24
 363C                   .dbline 1793
 363C           ;                coeff_count=0;
 363C 2224              clr R2
 363E 3324              clr R3
 3640 30921D00          sts _coeff_count+1,R3
 3644 20921C00          sts _coeff_count,R2
 3648                   .dbline 1794
 3648           ;                TimeOutFlag=0;
 3648 2092CB01          sts _TimeOutFlag,R2
 364C                   .dbline 1795
 364C           ;                Timer0Counter=2000;//16s定时
 364C 80ED              ldi R24,2000
 364E 97E0              ldi R25,7
 3650 90932F02          sts _Timer0Counter+1,R25
 3654 80932E02          sts _Timer0Counter,R24
 3658                   .dbline 1796
 3658           ;            TCNT0=0x06; //8ms
 3658 86E0              ldi R24,6
 365A 82BF              out 0x32,R24
 365C                   .dbline 1797
 365C           ;            TCCR0|=0x06;//256分频
 365C 83B7              in R24,0x33
 365E 8660              ori R24,6
 3660 83BF              out 0x33,R24
 3662                   .dbline 1798
 3662           ;            TIFR|=0x01; //清定时器0中断标志
 3662 86B7              in R24,0x36
 3664 8160              ori R24,1
 3666 86BF              out 0x36,R24
 3668                   .dbline 1799
 3668           ;          TIMSK|=0x01;//使能定时器0中断                
 3668 87B7              in R24,0x37
 366A 8160              ori R24,1
 366C 87BF              out 0x37,R24
 366E                   .dbline 1800
 366E           ;               }
 366E                   .dbline 1801
 366E           ;       break;
 366E                   .dbline 1803
 366E           ;     default: 
 366E           ;       break;  
 366E           L372:
 366E                   .dbline 1805
 366E           ;    }
 366E           ;   }
 366E           L183:
 366E           L762:
 366E                   .dbline 1807
 366E           ; RDataEnd:
 366E           ;       IntFlag=0;
 366E 2224              clr R2
 3670 2092B101          sts _IntFlag,R2
 3674                   .dbline 1808
 3674           ;     EIFR|=0x08;//清INT3中断标志
 3674 88B7              in R24,0x38
 3676 8860              ori R24,8
 3678 88BF              out 0x38,R24
 367A                   .dbline 1809
 367A           ;     EIMSK|=0x08;//使能INT3中断 
 367A 89B7              in R24,0x39
 367C 8860              ori R24,8
 367E 89BF              out 0x39,R24
 3680                   .dbline 1810
 3680           ;   }  
 3680           L180:
 3680           L179:
 3680                   .dbline 1811
 3680           ;   }
 3680           L176:
 3680                   .dbline 550
 3680 0C94D405          xjmp L175
 3684           X246:
 3684                   .dbline -2
 3684           L169:
 3684                   .dbline 0 ; func end
 3684 2996              adiw R28,9
 3686 0895              ret
 3688                   .dbsym l l 5 l
 3688                   .dbsym l pt 2 i
 3688                   .dbsym l mk 2 i
 3688                   .dbsym l at 2 i
 3688                   .dbsym l add 2 i
 3688                   .dbsym r j 12 i
 3688                   .dbsym r TestDataBlockCount 12 i
 3688                   .dbsym r TestDataBlockIndex 10 i
 3688                   .dbsym l f 1 D
 3688                   .dbsym r i 10 c
 3688                   .dbend
                        .area vector(rom, abs)
                        .org 92
 005C 0C94441B          jmp _E_comp
                        .area text(rom, con, rel)
 3688                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 3688                   .dbfunc e E_comp _E_comp fV
                        .even
 3688           _E_comp::
 3688 1A92              st -y,R1
 368A 2A92              st -y,R2
 368C 8A93              st -y,R24
 368E 9A93              st -y,R25
 3690 1FB6              IN R1,63
 3692 1A92              st -y,R1
 3694                   .dbline -1
 3694                   .dbline 1816
 3694           ; }
 3694           ; 
 3694           ; #pragma interrupt_handler E_comp:24
 3694           ; void E_comp(void)  //模拟比较器中断,总线电压被拉低到28.5V后，立即停电机
 3694           ; {   
 3694                   .dbline 1817
 3694           ;   if(PWM1_PIN==1)//收放电机欠压堵转
 3694 89B3              in R24,0x19
 3696 8270              andi R24,2
 3698 8695              lsr R24
 369A 8130              cpi R24,1
 369C 49F4              brne L764
 369E           X293:
 369E                   .dbline 1818
 369E           ;    {
 369E                   .dbline 1819
 369E           ;        Motor1Status.s.UnderVoltage=1;
 369E 80913902          lds R24,_Motor1Status
 36A2 90913A02          lds R25,_Motor1Status+1
 36A6 8062              ori R24,32
 36A8 90933A02          sts _Motor1Status+1,R25
 36AC 80933902          sts _Motor1Status,R24
 36B0                   .dbline 1820
 36B0           ;    }
 36B0           L764:
 36B0                   .dbline 1821
 36B0           ;   if(PWM2_PIN==1)//调节电机欠压堵转
 36B0 80B1              in R24,0x0
 36B2 8470              andi R24,4
 36B4 8695              lsr R24
 36B6 8695              lsr R24
 36B8 8130              cpi R24,1
 36BA 49F4              brne L766
 36BC           X294:
 36BC                   .dbline 1822
 36BC           ;    { 
 36BC                   .dbline 1823
 36BC           ;       Motor2Status.s.UnderVoltage=1;
 36BC 80913702          lds R24,_Motor2Status
 36C0 90913802          lds R25,_Motor2Status+1
 36C4 8062              ori R24,32
 36C6 90933802          sts _Motor2Status+1,R25
 36CA 80933702          sts _Motor2Status,R24
 36CE                   .dbline 1824
 36CE           ;    } 
 36CE           L766:
 36CE                   .dbline 1825
 36CE           ;    MOTORSTOP  //关电机 
 36CE                   .dbline 1825
 36CE 8AB3              in R24,0x1a
 36D0 8760              ori R24,7
 36D2 8ABB              out 0x1a,R24
 36D4                   .dbline 1825
 36D4 8BB3              in R24,0x1b
 36D6 8D7F              andi R24,253
 36D8 8BBB              out 0x1b,R24
 36DA                   .dbline 1825
 36DA 8BB3              in R24,0x1b
 36DC 887F              andi R24,248
 36DE 8BBB              out 0x1b,R24
 36E0                   .dbline 1825
 36E0 80916100          lds R24,97
 36E4 8760              ori R24,7
 36E6 80936100          sts 97,R24
 36EA                   .dbline 1825
 36EA 80916200          lds R24,98
 36EE 8B7F              andi R24,251
 36F0 80936200          sts 98,R24
 36F4                   .dbline 1825
 36F4 80916200          lds R24,98
 36F8 887F              andi R24,248
 36FA 80936200          sts 98,R24
 36FE                   .dbline 1825
 36FE BF9A              sbi 0x17,7
 3700                   .dbline 1825
 3700 88B3              in R24,0x18
 3702 8F77              andi R24,127
 3704 88BB              out 0x18,R24
 3706                   .dbline 1825
 3706                   .dbline -2
 3706           L763:
 3706                   .dbline 0 ; func end
 3706 1990              ld R1,y+
 3708 1FBE              OUT 63,R1
 370A 9991              ld R25,y+
 370C 8991              ld R24,y+
 370E 2990              ld R2,y+
 3710 1990              ld R1,y+
 3712 1895              reti
 3714                   .dbend
                        .area vector(rom, abs)
                        .org 72
 0048 0C948A1B          jmp _usart0_isr
                        .area text(rom, con, rel)
 3714                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 3714                   .dbfunc e usart0_isr _usart0_isr fV
                        .even
 3714           _usart0_isr::
 3714 2A92              st -y,R2
 3716 8A93              st -y,R24
 3718 9A93              st -y,R25
 371A EA93              st -y,R30
 371C FA93              st -y,R31
 371E 2FB6              IN R2,63
 3720 2A92              st -y,R2
 3722                   .dbline -1
 3722                   .dbline 1856
 3722           ; }
 3722           ; 
 3722           ; /*
 3722           ; #pragma interrupt_handler int0_isr:2
 3722           ; void int0_isr(void)//外部中断0，过流堵转
 3722           ; {
 3722           ;   CompCounter++; 
 3722           ;   if(CompCounter>1000)
 3722           ;   {
 3722           ;    MOTORSTOP  //关电机
 3722           ;   
 3722           ;    if(Motor1Status.s.ThisRun>0)//收放电机过流堵转
 3722           ;     {
 3722           ;        Motor1Status.s.ThisRun=0;
 3722           ;        Motor1Status.s.CommandStop=0;
 3722           ;        Motor1Status.s.OverCurrent=1;
 3722           ;        Motor1Status.s.UnderVoltage=0;
 3722           ;       }
 3722           ;    if(Motor2Status.s.ThisRun>0)//调节电机过流堵转
 3722           ;     {
 3722           ;         Motor2Status.s.ThisRun=0;
 3722           ;         Motor2Status.s.CommandStop=0;
 3722           ;         Motor2Status.s.OverCurrent=1;
 3722           ;         Motor2Status.s.UnderVoltage=0;
 3722           ;       }
 3722           ;   }
 3722           ; }
 3722           ; */
 3722           ; #pragma interrupt_handler usart0_isr:19
 3722           ; void usart0_isr(void) //串口接收中断
 3722           ; {
 3722                   .dbline 1857
 3722           ;     if(Uart0RxCounter<74)
 3722 8091E301          lds R24,_Uart0RxCounter
 3726 8A34              cpi R24,74
 3728 70F4              brsh L769
 372A           X295:
 372A                   .dbline 1858
 372A           ;       {
 372A                   .dbline 1859
 372A           ;     Uart0RxData[Uart0RxCounter]=UDR0;//接收串口数据,同时清空串口接收中断标志
 372A 80E0              ldi R24,<_Uart0RxData
 372C 90E0              ldi R25,>_Uart0RxData
 372E E091E301          lds R30,_Uart0RxCounter
 3732 FF27              clr R31
 3734 E80F              add R30,R24
 3736 F91F              adc R31,R25
 3738 2CB0              in R2,0xc
 373A 2082              std z+0,R2
 373C                   .dbline 1860
 373C           ;       Uart0RxCounter++;
 373C 8091E301          lds R24,_Uart0RxCounter
 3740 8F5F              subi R24,255    ; addi 1
 3742 8093E301          sts _Uart0RxCounter,R24
 3746                   .dbline 1861
 3746           ;       }
 3746           L769:
 3746                   .dbline -2
 3746           L768:
 3746                   .dbline 0 ; func end
 3746 2990              ld R2,y+
 3748 2FBE              OUT 63,R2
 374A F991              ld R31,y+
 374C E991              ld R30,y+
 374E 9991              ld R25,y+
 3750 8991              ld R24,y+
 3752 2990              ld R2,y+
 3754 1895              reti
 3756                   .dbend
                        .area vector(rom, abs)
                        .org 16
 0010 0C94AB1B          jmp _int3_isr
                        .area text(rom, con, rel)
 3756                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 3756                   .dbfunc e int3_isr _int3_isr fV
                        .even
 3756           _int3_isr::
 3756 2A92              st -y,R2
 3758 3A92              st -y,R3
 375A 0A93              st -y,R16
 375C 1A93              st -y,R17
 375E 8A93              st -y,R24
 3760 9A93              st -y,R25
 3762 AA93              st -y,R26
 3764 EA93              st -y,R30
 3766 FA93              st -y,R31
 3768 2FB6              IN R2,63
 376A 2A92              st -y,R2
 376C                   .dbline -1
 376C                   .dbline 1884
 376C           ; }
 376C           ; 
 376C           ; /*
 376C           ; #pragma interrupt_handler ad_isr:22
 376C           ; void ad_isr(void)  //ad转换中断
 376C           ; {
 376C           ;   ADCData[ADCCn]=ADCH;
 376C           ;   ADCData[ADCCn]<<=8;
 376C           ;   ADCData[ADCCn]|=ADCL;//读AD转换结果
 376C           ;   ADCCn++;
 376C           ;   ADCData[ADCCn]&=0x03ff;//10位有效转换结果
 376C           ;   if(ADCCn==129)
 376C           ;    { 
 376C           ;    ADCSRA&=0xF7;//关AD中断
 376C           ;    ADCSRA|=0x10;//清AD中断标志
 376C           ;    ADCSRA=0;//关ADC
 376C           ;    }
 376C           ; }
 376C           ; */
 376C           ; 
 376C           ; #pragma interrupt_handler int3_isr:iv_INT3
 376C           ; void int3_isr(void)//外部中断3
 376C           ; { 
 376C                   .dbline 1885
 376C           ;    SREG&=0x7f;//关总中断
 376C 8FB7              in R24,0x3f
 376E 8F77              andi R24,127
 3770 8FBF              out 0x3f,R24
 3772                   .dbline 1886
 3772           ;    EIMSK&=0xF7;//关INT3  
 3772 89B7              in R24,0x39
 3774 877F              andi R24,247
 3776 89BF              out 0x39,R24
 3778                   .dbline 1887
 3778           ;    TCCR2 = 0x00; //stop
 3778 2224              clr R2
 377A 25BC              out 0x25,R2
 377C                   .dbline 1889
 377C           ;   
 377C           ;   DELAY10
 377C 3324              clr R3
 377E 3092B001          sts _Tt+1,R3
 3782 2092AF01          sts _Tt,R2
 3786 09C0              xjmp L775
 3788           L772:
 3788                   .dbline 1889
 3788           L773:
 3788                   .dbline 1889
 3788 8091AF01          lds R24,_Tt
 378C 9091B001          lds R25,_Tt+1
 3790 0196              adiw R24,1
 3792 9093B001          sts _Tt+1,R25
 3796 8093AF01          sts _Tt,R24
 379A           L775:
 379A                   .dbline 1889
 379A 8091AF01          lds R24,_Tt
 379E 9091B001          lds R25,_Tt+1
 37A2 8430              cpi R24,4
 37A4 E0E0              ldi R30,0
 37A6 9E07              cpc R25,R30
 37A8 78F3              brlo L772
 37AA           X296:
 37AA                   .dbline 1890
 37AA           ;   EIFR|=0x08;//清INT3中断标志 
 37AA 88B7              in R24,0x38
 37AC 8860              ori R24,8
 37AE 88BF              out 0x38,R24
 37B0                   .dbline 1891
 37B0           ;   if((PIND&0x08)==0x00)//高脉冲不足10us则直接跳出
 37B0 8399              sbic 0x10,3
 37B2 01C0              rjmp L776
 37B4           X297:
 37B4                   .dbline 1892
 37B4           ;   {
 37B4                   .dbline 1893
 37B4           ;    goto End;
 37B4 CDC1              xjmp L778
 37B6           L776:
 37B6                   .dbline 1896
 37B6           ;   }
 37B6           ;    
 37B6           ;    TCNT2 = 0x00;  
 37B6 2224              clr R2
 37B8 24BC              out 0x24,R2
 37BA                   .dbline 1897
 37BA           ;    TCCR2 = 0x03; //64分频,8M时钟，每个CLOCK耗时8us，最大定时2048us，每周期10个计数
 37BA 83E0              ldi R24,3
 37BC 85BD              out 0x25,R24
 37BE 29C0              xjmp L780
 37C0           L779:
 37C0                   .dbline 1900
 37C0           ;    
 37C0           ;    while(1)
 37C0           ;    {
 37C0                   .dbline 1901
 37C0           ;      T2cn=TCNT2;
 37C0 24B4              in R2,0x24
 37C2 3324              clr R3
 37C4 3092AC01          sts _T2cn+1,R3
 37C8 2092AB01          sts _T2cn,R2
 37CC                   .dbline 1902
 37CC           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 37CC 80E5              ldi R24,80
 37CE 90E0              ldi R25,0
 37D0 8215              cp R24,R2
 37D2 9305              cpc R25,R3
 37D4 08F4              brsh L782
 37D6           X298:
 37D6                   .dbline 1903
 37D6           ;         {
 37D6                   .dbline 1904
 37D6           ;           goto End;
 37D6 BCC1              xjmp L778
 37D8           L782:
 37D8                   .dbline 1906
 37D8           ;         }
 37D8           ;      if((PIND&0x08)==0x00)
 37D8 8399              sbic 0x10,3
 37DA 1BC0              rjmp L784
 37DC           X299:
 37DC                   .dbline 1907
 37DC           ;        {
 37DC                   .dbline 1908
 37DC           ;          DELAY20
 37DC 2224              clr R2
 37DE 3324              clr R3
 37E0 3092B001          sts _Tt+1,R3
 37E4 2092AF01          sts _Tt,R2
 37E8 09C0              xjmp L789
 37EA           L786:
 37EA                   .dbline 1908
 37EA           L787:
 37EA                   .dbline 1908
 37EA 8091AF01          lds R24,_Tt
 37EE 9091B001          lds R25,_Tt+1
 37F2 0196              adiw R24,1
 37F4 9093B001          sts _Tt+1,R25
 37F8 8093AF01          sts _Tt,R24
 37FC           L789:
 37FC                   .dbline 1908
 37FC 8091AF01          lds R24,_Tt
 3800 9091B001          lds R25,_Tt+1
 3804 8430              cpi R24,4
 3806 E0E0              ldi R30,0
 3808 9E07              cpc R25,R30
 380A 78F3              brlo L786
 380C           X300:
 380C                   .dbline 1909
 380C           ;          if((PIND&0x08)==0x00)
 380C 8399              sbic 0x10,3
 380E 01C0              rjmp L790
 3810           X301:
 3810                   .dbline 1910
 3810           ;           {
 3810                   .dbline 1911
 3810           ;             break;
 3810 31C0              xjmp L793
 3812           L790:
 3812                   .dbline 1913
 3812           ;           }
 3812           ;        }
 3812           L784:
 3812                   .dbline 1914
 3812           ;    }
 3812           L780:
 3812                   .dbline 1899
 3812 D6CF              xjmp L779
 3814           L792:
 3814                   .dbline 1918
 3814           ;                  
 3814           ;     //开始判断同步头  
 3814           ;       while(1)//还没有上升沿到来,死等
 3814           ;       {
 3814                   .dbline 1919
 3814           ;         T2cn=TCNT2;
 3814 24B4              in R2,0x24
 3816 3324              clr R3
 3818 3092AC01          sts _T2cn+1,R3
 381C 2092AB01          sts _T2cn,R2
 3820                   .dbline 1920
 3820           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 3820 80E5              ldi R24,80
 3822 90E0              ldi R25,0
 3824 8215              cp R24,R2
 3826 9305              cpc R25,R3
 3828 08F4              brsh L795
 382A           X302:
 382A                   .dbline 1921
 382A           ;         {
 382A                   .dbline 1922
 382A           ;           goto End;
 382A 92C1              xjmp L778
 382C           L795:
 382C                   .dbline 1924
 382C           ;         }
 382C           ;         if((EIFR&0x08)==0x08)
 382C 88B7              in R24,0x38
 382E 8870              andi R24,8
 3830 8830              cpi R24,8
 3832 01F5              brne L797
 3834           X303:
 3834                   .dbline 1925
 3834           ;         {
 3834                   .dbline 1926
 3834           ;          DELAY10
 3834 2224              clr R2
 3836 3324              clr R3
 3838 3092B001          sts _Tt+1,R3
 383C 2092AF01          sts _Tt,R2
 3840 09C0              xjmp L802
 3842           L799:
 3842                   .dbline 1926
 3842           L800:
 3842                   .dbline 1926
 3842 8091AF01          lds R24,_Tt
 3846 9091B001          lds R25,_Tt+1
 384A 0196              adiw R24,1
 384C 9093B001          sts _Tt+1,R25
 3850 8093AF01          sts _Tt,R24
 3854           L802:
 3854                   .dbline 1926
 3854 8091AF01          lds R24,_Tt
 3858 9091B001          lds R25,_Tt+1
 385C 8430              cpi R24,4
 385E E0E0              ldi R30,0
 3860 9E07              cpc R25,R30
 3862 78F3              brlo L799
 3864           X304:
 3864                   .dbline 1927
 3864           ;          EIFR|=0x08;//清INT3中断标志 
 3864 88B7              in R24,0x38
 3866 8860              ori R24,8
 3868 88BF              out 0x38,R24
 386A                   .dbline 1928
 386A           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 386A 80B3              in R24,0x10
 386C 8870              andi R24,8
 386E 8830              cpi R24,8
 3870 09F4              brne L803
 3872           X305:
 3872                   .dbline 1929
 3872           ;            {
 3872                   .dbline 1930
 3872           ;            break;
 3872 01C0              xjmp L794
 3874           L803:
 3874                   .dbline 1932
 3874           ;                }
 3874           ;         }  
 3874           L797:
 3874                   .dbline 1933
 3874           ;       }
 3874           L793:
 3874                   .dbline 1917
 3874 CFCF              xjmp L792
 3876           L794:
 3876                   .dbline 1934
 3876           ;       T2cn=TCNT2;
 3876 24B4              in R2,0x24
 3878 3324              clr R3
 387A 3092AC01          sts _T2cn+1,R3
 387E 2092AB01          sts _T2cn,R2
 3882                   .dbline 1935
 3882           ;       TCNT2=0;
 3882 2224              clr R2
 3884 24BC              out 0x24,R2
 3886                   .dbline 1936
 3886           ;       if((T2cn<60)||(T2cn>80))//同步头本应是7个周期，但收到的结果为6~8个周期内都认可
 3886 2090AB01          lds R2,_T2cn
 388A 3090AC01          lds R3,_T2cn+1
 388E C101              movw R24,R2
 3890 8C33              cpi R24,60
 3892 E0E0              ldi R30,0
 3894 9E07              cpc R25,R30
 3896 28F0              brlo L807
 3898           X306:
 3898 80E5              ldi R24,80
 389A 90E0              ldi R25,0
 389C 8215              cp R24,R2
 389E 9305              cpc R25,R3
 38A0 08F4              brsh L805
 38A2           X307:
 38A2           L807:
 38A2                   .dbline 1937
 38A2           ;       {
 38A2                   .dbline 1938
 38A2           ;        goto End;//没有收到正确的同步头，直接跳出
 38A2 56C1              xjmp L778
 38A4           L805:
 38A4           L808:
 38A4                   .dbline 1942
 38A4           ;       }
 38A4           ;       
 38A4           ; Start:        //同步头解码正确，下面开始接收9位数据位 //按位从高到低接收数据位，8位数据加1位校验共9位                         
 38A4           ;   for(Int_count=9;Int_count>0;Int_count--)
 38A4 89E0              ldi R24,9
 38A6 8093B201          sts _Int_count,R24
 38AA B3C0              xjmp L812
 38AC           L813:
 38AC                   .dbline 1945
 38AC           ;   {   
 38AC           ;    while(1)
 38AC           ;    {
 38AC                   .dbline 1946
 38AC           ;      T2cn=TCNT2;
 38AC 24B4              in R2,0x24
 38AE 3324              clr R3
 38B0 3092AC01          sts _T2cn+1,R3
 38B4 2092AB01          sts _T2cn,R2
 38B8                   .dbline 1947
 38B8           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 38B8 80E5              ldi R24,80
 38BA 90E0              ldi R25,0
 38BC 8215              cp R24,R2
 38BE 9305              cpc R25,R3
 38C0 08F4              brsh L816
 38C2           X308:
 38C2                   .dbline 1948
 38C2           ;         {
 38C2                   .dbline 1949
 38C2           ;           goto End;
 38C2 46C1              xjmp L778
 38C4           L816:
 38C4                   .dbline 1951
 38C4           ;         }
 38C4           ;      if((PIND&0x08)==0x00)
 38C4 8399              sbic 0x10,3
 38C6 1BC0              rjmp L818
 38C8           X309:
 38C8                   .dbline 1952
 38C8           ;        {
 38C8                   .dbline 1953
 38C8           ;          DELAY20
 38C8 2224              clr R2
 38CA 3324              clr R3
 38CC 3092B001          sts _Tt+1,R3
 38D0 2092AF01          sts _Tt,R2
 38D4 09C0              xjmp L823
 38D6           L820:
 38D6                   .dbline 1953
 38D6           L821:
 38D6                   .dbline 1953
 38D6 8091AF01          lds R24,_Tt
 38DA 9091B001          lds R25,_Tt+1
 38DE 0196              adiw R24,1
 38E0 9093B001          sts _Tt+1,R25
 38E4 8093AF01          sts _Tt,R24
 38E8           L823:
 38E8                   .dbline 1953
 38E8 8091AF01          lds R24,_Tt
 38EC 9091B001          lds R25,_Tt+1
 38F0 8430              cpi R24,4
 38F2 E0E0              ldi R30,0
 38F4 9E07              cpc R25,R30
 38F6 78F3              brlo L820
 38F8           X310:
 38F8                   .dbline 1954
 38F8           ;          if((PIND&0x08)==0x00)
 38F8 8399              sbic 0x10,3
 38FA 01C0              rjmp L824
 38FC           X311:
 38FC                   .dbline 1955
 38FC           ;           {
 38FC                   .dbline 1956
 38FC           ;             break;
 38FC 31C0              xjmp L827
 38FE           L824:
 38FE                   .dbline 1958
 38FE           ;           }
 38FE           ;        }
 38FE           L818:
 38FE                   .dbline 1959
 38FE           ;    } 
 38FE           L814:
 38FE                   .dbline 1944
 38FE D6CF              xjmp L813
 3900           L826:
 3900                   .dbline 1961
 3900           ;    while(1)//还没有上升沿到来,死等
 3900           ;       {
 3900                   .dbline 1962
 3900           ;         T2cn=TCNT2;
 3900 24B4              in R2,0x24
 3902 3324              clr R3
 3904 3092AC01          sts _T2cn+1,R3
 3908 2092AB01          sts _T2cn,R2
 390C                   .dbline 1963
 390C           ;         if(T2cn>80)//设计值最多7个周期，在此多给一个周期，则超过8个周期还没来上升沿中断到来就直接跳出
 390C 80E5              ldi R24,80
 390E 90E0              ldi R25,0
 3910 8215              cp R24,R2
 3912 9305              cpc R25,R3
 3914 08F4              brsh L829
 3916           X312:
 3916                   .dbline 1964
 3916           ;         {
 3916                   .dbline 1965
 3916           ;           goto End;
 3916 1CC1              xjmp L778
 3918           L829:
 3918                   .dbline 1967
 3918           ;         }
 3918           ;         if((EIFR&0x08)==0x08)
 3918 88B7              in R24,0x38
 391A 8870              andi R24,8
 391C 8830              cpi R24,8
 391E 01F5              brne L831
 3920           X313:
 3920                   .dbline 1968
 3920           ;         {
 3920                   .dbline 1969
 3920           ;          DELAY10
 3920 2224              clr R2
 3922 3324              clr R3
 3924 3092B001          sts _Tt+1,R3
 3928 2092AF01          sts _Tt,R2
 392C 09C0              xjmp L836
 392E           L833:
 392E                   .dbline 1969
 392E           L834:
 392E                   .dbline 1969
 392E 8091AF01          lds R24,_Tt
 3932 9091B001          lds R25,_Tt+1
 3936 0196              adiw R24,1
 3938 9093B001          sts _Tt+1,R25
 393C 8093AF01          sts _Tt,R24
 3940           L836:
 3940                   .dbline 1969
 3940 8091AF01          lds R24,_Tt
 3944 9091B001          lds R25,_Tt+1
 3948 8430              cpi R24,4
 394A E0E0              ldi R30,0
 394C 9E07              cpc R25,R30
 394E 78F3              brlo L833
 3950           X314:
 3950                   .dbline 1970
 3950           ;          EIFR|=0x08;//清INT3中断标志 
 3950 88B7              in R24,0x38
 3952 8860              ori R24,8
 3954 88BF              out 0x38,R24
 3956                   .dbline 1971
 3956           ;          if((PIND&0x08)==0x08)//高脉冲维持了10us，则认为是下一个有效上升沿到来
 3956 80B3              in R24,0x10
 3958 8870              andi R24,8
 395A 8830              cpi R24,8
 395C 09F4              brne L837
 395E           X315:
 395E                   .dbline 1972
 395E           ;            {
 395E                   .dbline 1973
 395E           ;            break;
 395E 01C0              xjmp L828
 3960           L837:
 3960                   .dbline 1975
 3960           ;                }
 3960           ;         }  
 3960           L831:
 3960                   .dbline 1976
 3960           ;       }
 3960           L827:
 3960                   .dbline 1960
 3960 CFCF              xjmp L826
 3962           L828:
 3962                   .dbline 1977
 3962           ;       T2cn=TCNT2;
 3962 24B4              in R2,0x24
 3964 3324              clr R3
 3966 3092AC01          sts _T2cn+1,R3
 396A 2092AB01          sts _T2cn,R2
 396E                   .dbline 1978
 396E           ;       TCNT2=0;
 396E 2224              clr R2
 3970 24BC              out 0x24,R2
 3972                   .dbline 1979
 3972           ;       if(T2cn<20)//数据位最小是3位，可放宽到2位
 3972 8091AB01          lds R24,_T2cn
 3976 9091AC01          lds R25,_T2cn+1
 397A 8431              cpi R24,20
 397C E0E0              ldi R30,0
 397E 9E07              cpc R25,R30
 3980 20F4              brsh L839
 3982           X316:
 3982                   .dbline 1980
 3982           ;       {
 3982                   .dbline 1981
 3982           ;        IntFlag=3;//接收数据位不完整
 3982 83E0              ldi R24,3
 3984 8093B101          sts _IntFlag,R24
 3988                   .dbline 1982
 3988           ;        goto End;//数据位来得太早，退出
 3988 E3C0              xjmp L778
 398A           L839:
 398A                   .dbline 1984
 398A           ;       }
 398A           ;       else if((T2cn>=20)&&(T2cn<40))//数据位1本应是3个周期，在此我们认为2~4个周期都是可以的
 398A 2090AB01          lds R2,_T2cn
 398E 3090AC01          lds R3,_T2cn+1
 3992 C101              movw R24,R2
 3994 8431              cpi R24,20
 3996 E0E0              ldi R30,0
 3998 9E07              cpc R25,R30
 399A 70F0              brlo L841
 399C           X317:
 399C 8832              cpi R24,40
 399E E0E0              ldi R30,0
 39A0 9E07              cpc R25,R30
 39A2 50F4              brsh L841
 39A4           X318:
 39A4                   .dbline 1985
 39A4           ;       {
 39A4                   .dbline 1986
 39A4           ;        Rx[Int_count]=1;
 39A4 80E0              ldi R24,<_Rx
 39A6 90E0              ldi R25,>_Rx
 39A8 E091B201          lds R30,_Int_count
 39AC FF27              clr R31
 39AE E80F              add R30,R24
 39B0 F91F              adc R31,R25
 39B2 81E0              ldi R24,1
 39B4 8083              std z+0,R24
 39B6                   .dbline 1987
 39B6           ;       }
 39B6 28C0              xjmp L842
 39B8           L841:
 39B8                   .dbline 1988
 39B8           ;       else if((T2cn>=40)&&(T2cn<60))//数据位0本应是5个周期，在此我们认为4~6个周期都是可以的
 39B8 0091AB01          lds R16,_T2cn
 39BC 1091AC01          lds R17,_T2cn+1
 39C0 0832              cpi R16,40
 39C2 E0E0              ldi R30,0
 39C4 1E07              cpc R17,R30
 39C6 70F0              brlo L843
 39C8           X319:
 39C8 0C33              cpi R16,60
 39CA E0E0              ldi R30,0
 39CC 1E07              cpc R17,R30
 39CE 50F4              brsh L843
 39D0           X320:
 39D0                   .dbline 1989
 39D0           ;       {
 39D0                   .dbline 1990
 39D0           ;        Rx[Int_count]=0;
 39D0 80E0              ldi R24,<_Rx
 39D2 90E0              ldi R25,>_Rx
 39D4 E091B201          lds R30,_Int_count
 39D8 FF27              clr R31
 39DA E80F              add R30,R24
 39DC F91F              adc R31,R25
 39DE 2224              clr R2
 39E0 2082              std z+0,R2
 39E2                   .dbline 1991
 39E2           ;       }
 39E2 12C0              xjmp L844
 39E4           L843:
 39E4                   .dbline 1992
 39E4           ;       else if((T2cn>=60)&&(T2cn<=80))//同步位本应是7周期，在此我们认为6~8周期都是可以的
 39E4 0091AB01          lds R16,_T2cn
 39E8 1091AC01          lds R17,_T2cn+1
 39EC 0C33              cpi R16,60
 39EE E0E0              ldi R30,0
 39F0 1E07              cpc R17,R30
 39F2 30F0              brlo L845
 39F4           X321:
 39F4 80E5              ldi R24,80
 39F6 90E0              ldi R25,0
 39F8 8017              cp R24,R16
 39FA 9107              cpc R25,R17
 39FC 08F0              brlo L845
 39FE           X322:
 39FE                   .dbline 1993
 39FE           ;       {
 39FE                   .dbline 1994
 39FE           ;        goto Start;//在接收数据位时收到了同步位，跳到数据位解码起始位处
 39FE 52CF              xjmp L808
 3A00           L845:
 3A00                   .dbline 1997
 3A00           ;       }
 3A00           ;       else 
 3A00           ;       {
 3A00                   .dbline 1998
 3A00           ;        IntFlag=3;//接收数据位不完整
 3A00 83E0              ldi R24,3
 3A02 8093B101          sts _IntFlag,R24
 3A06                   .dbline 1999
 3A06           ;        goto End;//数据位来得太迟，退出
 3A06 A4C0              xjmp L778
 3A08           L844:
 3A08           L842:
 3A08                   .dbline 2001
 3A08           ;       }
 3A08           ;   }   
 3A08           L810:
 3A08                   .dbline 1942
 3A08 8091B201          lds R24,_Int_count
 3A0C 8150              subi R24,1
 3A0E 8093B201          sts _Int_count,R24
 3A12           L812:
 3A12                   .dbline 1942
 3A12 80E0              ldi R24,0
 3A14 2090B201          lds R2,_Int_count
 3A18 8215              cp R24,R2
 3A1A 08F4              brsh X334
 3A1C 70CF              xjmp L814
 3A1E           X334:
 3A1E           X323:
 3A1E                   .dbline 2003
 3A1E           ;       
 3A1E           ;     R_dat=0;
 3A1E 2224              clr R2
 3A20 3324              clr R3
 3A22 3092CE01          sts _R_dat+1,R3
 3A26 2092CD01          sts _R_dat,R2
 3A2A                   .dbline 2004
 3A2A           ;     if(Rx[2])
 3A2A 2090D301          lds R2,_Rx+2
 3A2E 2220              tst R2
 3A30 49F0              breq L847
 3A32           X324:
 3A32                   .dbline 2005
 3A32           ;           R_dat|=0x01;
 3A32 8091CD01          lds R24,_R_dat
 3A36 9091CE01          lds R25,_R_dat+1
 3A3A 8160              ori R24,1
 3A3C 9093CE01          sts _R_dat+1,R25
 3A40 8093CD01          sts _R_dat,R24
 3A44           L847:
 3A44                   .dbline 2006
 3A44           ;     if(Rx[3])
 3A44 2090D401          lds R2,_Rx+3
 3A48 2220              tst R2
 3A4A 49F0              breq L850
 3A4C           X325:
 3A4C                   .dbline 2007
 3A4C           ;           R_dat|=0x02;
 3A4C 8091CD01          lds R24,_R_dat
 3A50 9091CE01          lds R25,_R_dat+1
 3A54 8260              ori R24,2
 3A56 9093CE01          sts _R_dat+1,R25
 3A5A 8093CD01          sts _R_dat,R24
 3A5E           L850:
 3A5E                   .dbline 2008
 3A5E           ;     if(Rx[4])
 3A5E 2090D501          lds R2,_Rx+4
 3A62 2220              tst R2
 3A64 49F0              breq L853
 3A66           X326:
 3A66                   .dbline 2009
 3A66           ;           R_dat|=0x04;
 3A66 8091CD01          lds R24,_R_dat
 3A6A 9091CE01          lds R25,_R_dat+1
 3A6E 8460              ori R24,4
 3A70 9093CE01          sts _R_dat+1,R25
 3A74 8093CD01          sts _R_dat,R24
 3A78           L853:
 3A78                   .dbline 2010
 3A78           ;     if(Rx[5])
 3A78 2090D601          lds R2,_Rx+5
 3A7C 2220              tst R2
 3A7E 49F0              breq L856
 3A80           X327:
 3A80                   .dbline 2011
 3A80           ;           R_dat|=0x08;
 3A80 8091CD01          lds R24,_R_dat
 3A84 9091CE01          lds R25,_R_dat+1
 3A88 8860              ori R24,8
 3A8A 9093CE01          sts _R_dat+1,R25
 3A8E 8093CD01          sts _R_dat,R24
 3A92           L856:
 3A92                   .dbline 2012
 3A92           ;     if(Rx[6])
 3A92 2090D701          lds R2,_Rx+6
 3A96 2220              tst R2
 3A98 49F0              breq L859
 3A9A           X328:
 3A9A                   .dbline 2013
 3A9A           ;           R_dat|=0x10;
 3A9A 8091CD01          lds R24,_R_dat
 3A9E 9091CE01          lds R25,_R_dat+1
 3AA2 8061              ori R24,16
 3AA4 9093CE01          sts _R_dat+1,R25
 3AA8 8093CD01          sts _R_dat,R24
 3AAC           L859:
 3AAC                   .dbline 2014
 3AAC           ;     if(Rx[7])
 3AAC 2090D801          lds R2,_Rx+7
 3AB0 2220              tst R2
 3AB2 49F0              breq L862
 3AB4           X329:
 3AB4                   .dbline 2015
 3AB4           ;           R_dat|=0x20;
 3AB4 8091CD01          lds R24,_R_dat
 3AB8 9091CE01          lds R25,_R_dat+1
 3ABC 8062              ori R24,32
 3ABE 9093CE01          sts _R_dat+1,R25
 3AC2 8093CD01          sts _R_dat,R24
 3AC6           L862:
 3AC6                   .dbline 2016
 3AC6           ;     if(Rx[8])
 3AC6 2090D901          lds R2,_Rx+8
 3ACA 2220              tst R2
 3ACC 49F0              breq L865
 3ACE           X330:
 3ACE                   .dbline 2017
 3ACE           ;           R_dat|=0x40;
 3ACE 8091CD01          lds R24,_R_dat
 3AD2 9091CE01          lds R25,_R_dat+1
 3AD6 8064              ori R24,64
 3AD8 9093CE01          sts _R_dat+1,R25
 3ADC 8093CD01          sts _R_dat,R24
 3AE0           L865:
 3AE0                   .dbline 2018
 3AE0           ;     if(Rx[9])
 3AE0 2090DA01          lds R2,_Rx+9
 3AE4 2220              tst R2
 3AE6 49F0              breq L868
 3AE8           X331:
 3AE8                   .dbline 2019
 3AE8           ;           R_dat|=0x80;
 3AE8 8091CD01          lds R24,_R_dat
 3AEC 9091CE01          lds R25,_R_dat+1
 3AF0 8068              ori R24,128
 3AF2 9093CE01          sts _R_dat+1,R25
 3AF6 8093CD01          sts _R_dat,R24
 3AFA           L868:
 3AFA                   .dbline 2021
 3AFA           ;       
 3AFA           ;       Rx[0]=1;  
 3AFA 81E0              ldi R24,1
 3AFC 8093D101          sts _Rx,R24
 3B00                   .dbline 2022
 3B00           ;       for(Int_count=2;Int_count<10;Int_count++)  
 3B00 82E0              ldi R24,2
 3B02 8093B201          sts _Int_count,R24
 3B06 12C0              xjmp L874
 3B08           L871:
 3B08                   .dbline 2023
 3B08           ;        Rx[0]^=Rx[Int_count];  
 3B08 80E0              ldi R24,<_Rx
 3B0A 90E0              ldi R25,>_Rx
 3B0C E091B201          lds R30,_Int_count
 3B10 FF27              clr R31
 3B12 E80F              add R30,R24
 3B14 F91F              adc R31,R25
 3B16 2080              ldd R2,z+0
 3B18 3090D101          lds R3,_Rx
 3B1C 3224              eor R3,R2
 3B1E 3092D101          sts _Rx,R3
 3B22           L872:
 3B22                   .dbline 2022
 3B22 8091B201          lds R24,_Int_count
 3B26 8F5F              subi R24,255    ; addi 1
 3B28 8093B201          sts _Int_count,R24
 3B2C           L874:
 3B2C                   .dbline 2022
 3B2C 8091B201          lds R24,_Int_count
 3B30 8A30              cpi R24,10
 3B32 50F3              brlo L871
 3B34           X332:
 3B34                   .dbline 2025
 3B34           ;          
 3B34           ;       if(Rx[0]==Rx[1])
 3B34 2090D201          lds R2,_Rx+1
 3B38 3090D101          lds R3,_Rx
 3B3C 3214              cp R3,R2
 3B3E 21F4              brne L875
 3B40           X333:
 3B40                   .dbline 2026
 3B40           ;        {
 3B40                   .dbline 2027
 3B40           ;                IntFlag=1;//接收帧正常 
 3B40 81E0              ldi R24,1
 3B42 8093B101          sts _IntFlag,R24
 3B46                   .dbline 2028
 3B46           ;        }
 3B46 0FC0              xjmp L878
 3B48           L875:
 3B48                   .dbline 2030
 3B48           ;       else           
 3B48           ;        {
 3B48                   .dbline 2031
 3B48           ;                IntFlag=2;//接收帧校验错
 3B48 82E0              ldi R24,2
 3B4A 8093B101          sts _IntFlag,R24
 3B4E                   .dbline 2032
 3B4E           ;        }
 3B4E                   .dbline 2034
 3B4E           ;          
 3B4E           ;    goto End1;//只要接收到正常的同步头，不管校验位是对是错，都暂时不开放INT0中断
 3B4E 0BC0              xjmp L878
 3B50           L778:
 3B50                   .dbline 2037
 3B50           ;      
 3B50           ; End:
 3B50           ;  EIFR|=0x08;//清INT3中断标志 
 3B50 88B7              in R24,0x38
 3B52 8860              ori R24,8
 3B54 88BF              out 0x38,R24
 3B56                   .dbline 2038
 3B56           ;  EICRA|=0xc0; //INT3上升沿触发 
 3B56 80916A00          lds R24,106
 3B5A 806C              ori R24,192
 3B5C 80936A00          sts 106,R24
 3B60                   .dbline 2039
 3B60           ;  EIMSK|=0x08;//使能INT3中断 
 3B60 89B7              in R24,0x39
 3B62 8860              ori R24,8
 3B64 89BF              out 0x39,R24
 3B66           L878:
 3B66                   .dbline 2041
 3B66           ; End1:
 3B66           ;    TCCR2 = 0x00; //stop
 3B66 2224              clr R2
 3B68 25BC              out 0x25,R2
 3B6A                   .dbline 2042
 3B6A           ;    SREG|=0x80;//总中断使能;  
 3B6A 7894              bset 7
 3B6C                   .dbline -2
 3B6C           L771:
 3B6C                   .dbline 0 ; func end
 3B6C 2990              ld R2,y+
 3B6E 2FBE              OUT 63,R2
 3B70 F991              ld R31,y+
 3B72 E991              ld R30,y+
 3B74 A991              ld R26,y+
 3B76 9991              ld R25,y+
 3B78 8991              ld R24,y+
 3B7A 1991              ld R17,y+
 3B7C 0991              ld R16,y+
 3B7E 3990              ld R3,y+
 3B80 2990              ld R2,y+
 3B82 1895              reti
 3B84                   .dbend
 3B84                   .dbfunc e SendManchester _SendManchester fV
 3B84           ;              L -> R20
                        .even
 3B84           _SendManchester::
 3B84 4A93              st -y,R20
 3B86                   .dbline -1
 3B86                   .dbline 2046
 3B86           ; }
 3B86           ; 
 3B86           ; void SendManchester(void) //曼码发送程序,总耗时最大约120+560+8400+720=9800us，最小约120+560+5040+720=6440us
 3B86           ; { //每位80us
 3B86                   .dbline 2051
 3B86           ;  //同步：1高6低
 3B86           ;  //1:    1高2低
 3B86           ;  //0：   1高4低  
 3B86           ;   unsigned char L;
 3B86           ;   SREG&=0x7f;//关总中断 
 3B86 8FB7              in R24,0x3f
 3B88 8F77              andi R24,127
 3B8A 8FBF              out 0x3f,R24
 3B8C                   .dbline 2053
 3B8C           ;   
 3B8C           ;     M1_H //先给总线放电，耗时约120us
 3B8C 929A              sbi 0x12,2
 3B8E                   .dbline 2057
 3B8E           ;       
 3B8E           ;   //模拟同步头数据
 3B8E           ;       //4位命令
 3B8E           ;       T_dat_buf[21]=(T_com&0x08)>>3;
 3B8E 8091CC01          lds R24,_T_com
 3B92 8870              andi R24,8
 3B94 8695              lsr R24
 3B96 8695              lsr R24
 3B98 8695              lsr R24
 3B9A 8093CA01          sts _T_dat_buf+21,R24
 3B9E                   .dbline 2058
 3B9E           ;       T_dat_buf[20]=(T_com&0x04)>>2;
 3B9E 8091CC01          lds R24,_T_com
 3BA2 8470              andi R24,4
 3BA4 8695              lsr R24
 3BA6 8695              lsr R24
 3BA8 8093C901          sts _T_dat_buf+20,R24
 3BAC                   .dbline 2059
 3BAC           ;       T_dat_buf[19]=(T_com&0x02)>>1;
 3BAC 8091CC01          lds R24,_T_com
 3BB0 8270              andi R24,2
 3BB2 8695              lsr R24
 3BB4 8093C801          sts _T_dat_buf+19,R24
 3BB8                   .dbline 2060
 3BB8           ;       T_dat_buf[18]=T_com&0x01;
 3BB8 8091CC01          lds R24,_T_com
 3BBC 8170              andi R24,1
 3BBE 8093C701          sts _T_dat_buf+18,R24
 3BC2                   .dbline 2062
 3BC2           ;       //16位数据
 3BC2           ;       T_dat_buf[17]=(T_dat&0x8000)>>15;
 3BC2 2FE0              ldi R18,15
 3BC4 30E0              ldi R19,0
 3BC6 0091CF01          lds R16,_T_dat
 3BCA 1091D001          lds R17,_T_dat+1
 3BCE 0070              andi R16,0
 3BD0 1078              andi R17,128
 3BD2 0E940000          xcall lsr16
 3BD6 0093C601          sts _T_dat_buf+17,R16
 3BDA                   .dbline 2063
 3BDA           ;       T_dat_buf[16]=(T_dat&0x4000)>>14;
 3BDA 2EE0              ldi R18,14
 3BDC 30E0              ldi R19,0
 3BDE 0091CF01          lds R16,_T_dat
 3BE2 1091D001          lds R17,_T_dat+1
 3BE6 0070              andi R16,0
 3BE8 1074              andi R17,64
 3BEA 0E940000          xcall asr16
 3BEE 0093C501          sts _T_dat_buf+16,R16
 3BF2                   .dbline 2064
 3BF2           ;       T_dat_buf[15]=(T_dat&0x2000)>>13;
 3BF2 2DE0              ldi R18,13
 3BF4 30E0              ldi R19,0
 3BF6 0091CF01          lds R16,_T_dat
 3BFA 1091D001          lds R17,_T_dat+1
 3BFE 0070              andi R16,0
 3C00 1072              andi R17,32
 3C02 0E940000          xcall asr16
 3C06 0093C401          sts _T_dat_buf+15,R16
 3C0A                   .dbline 2065
 3C0A           ;       T_dat_buf[14]=(T_dat&0x1000)>>12;
 3C0A 2CE0              ldi R18,12
 3C0C 30E0              ldi R19,0
 3C0E 0091CF01          lds R16,_T_dat
 3C12 1091D001          lds R17,_T_dat+1
 3C16 0070              andi R16,0
 3C18 1071              andi R17,16
 3C1A 0E940000          xcall asr16
 3C1E 0093C301          sts _T_dat_buf+14,R16
 3C22                   .dbline 2066
 3C22           ;       T_dat_buf[13]=(T_dat&0x0800)>>11;
 3C22 2BE0              ldi R18,11
 3C24 30E0              ldi R19,0
 3C26 0091CF01          lds R16,_T_dat
 3C2A 1091D001          lds R17,_T_dat+1
 3C2E 0070              andi R16,0
 3C30 1870              andi R17,8
 3C32 0E940000          xcall asr16
 3C36 0093C201          sts _T_dat_buf+13,R16
 3C3A                   .dbline 2067
 3C3A           ;     T_dat_buf[12]=(T_dat&0x0400)>>10;
 3C3A 2AE0              ldi R18,10
 3C3C 30E0              ldi R19,0
 3C3E 0091CF01          lds R16,_T_dat
 3C42 1091D001          lds R17,_T_dat+1
 3C46 0070              andi R16,0
 3C48 1470              andi R17,4
 3C4A 0E940000          xcall asr16
 3C4E 0093C101          sts _T_dat_buf+12,R16
 3C52                   .dbline 2068
 3C52           ;     T_dat_buf[11]=(T_dat&0x0200)>>9;
 3C52 29E0              ldi R18,9
 3C54 30E0              ldi R19,0
 3C56 0091CF01          lds R16,_T_dat
 3C5A 1091D001          lds R17,_T_dat+1
 3C5E 0070              andi R16,0
 3C60 1270              andi R17,2
 3C62 0E940000          xcall asr16
 3C66 0093C001          sts _T_dat_buf+11,R16
 3C6A                   .dbline 2069
 3C6A           ;       T_dat_buf[10]=(T_dat&0x0100)>>8;
 3C6A 8091CF01          lds R24,_T_dat
 3C6E 9091D001          lds R25,_T_dat+1
 3C72 8070              andi R24,0
 3C74 9170              andi R25,1
 3C76 1C01              movw R2,R24
 3C78 232C              mov R2,R3
 3C7A 3324              clr R3
 3C7C 27FC              sbrc R2,7
 3C7E 3094              com R3
 3C80 2092BF01          sts _T_dat_buf+10,R2
 3C84                   .dbline 2070
 3C84           ;       T_dat_buf[9]=(T_dat&0x0080)>>7;
 3C84 27E0              ldi R18,7
 3C86 30E0              ldi R19,0
 3C88 0091CF01          lds R16,_T_dat
 3C8C 1091D001          lds R17,_T_dat+1
 3C90 0078              andi R16,128
 3C92 1070              andi R17,0
 3C94 0E940000          xcall asr16
 3C98 0093BE01          sts _T_dat_buf+9,R16
 3C9C                   .dbline 2071
 3C9C           ;       T_dat_buf[8]=(T_dat&0x0040)>>6;
 3C9C 26E0              ldi R18,6
 3C9E 30E0              ldi R19,0
 3CA0 0091CF01          lds R16,_T_dat
 3CA4 1091D001          lds R17,_T_dat+1
 3CA8 0074              andi R16,64
 3CAA 1070              andi R17,0
 3CAC 0E940000          xcall asr16
 3CB0 0093BD01          sts _T_dat_buf+8,R16
 3CB4                   .dbline 2072
 3CB4           ;       T_dat_buf[7]=(T_dat&0x0020)>>5;
 3CB4 25E0              ldi R18,5
 3CB6 30E0              ldi R19,0
 3CB8 0091CF01          lds R16,_T_dat
 3CBC 1091D001          lds R17,_T_dat+1
 3CC0 0072              andi R16,32
 3CC2 1070              andi R17,0
 3CC4 0E940000          xcall asr16
 3CC8 0093BC01          sts _T_dat_buf+7,R16
 3CCC                   .dbline 2073
 3CCC           ;       T_dat_buf[6]=(T_dat&0x0010)>>4;
 3CCC 8091CF01          lds R24,_T_dat
 3CD0 9091D001          lds R25,_T_dat+1
 3CD4 8071              andi R24,16
 3CD6 9070              andi R25,0
 3CD8 1C01              movw R2,R24
 3CDA 3594              asr R3
 3CDC 2794              ror R2
 3CDE 3594              asr R3
 3CE0 2794              ror R2
 3CE2 3594              asr R3
 3CE4 2794              ror R2
 3CE6 3594              asr R3
 3CE8 2794              ror R2
 3CEA 2092BB01          sts _T_dat_buf+6,R2
 3CEE                   .dbline 2074
 3CEE           ;       T_dat_buf[5]=(T_dat&0x0008)>>3;
 3CEE 8091CF01          lds R24,_T_dat
 3CF2 9091D001          lds R25,_T_dat+1
 3CF6 8870              andi R24,8
 3CF8 9070              andi R25,0
 3CFA 1C01              movw R2,R24
 3CFC 3594              asr R3
 3CFE 2794              ror R2
 3D00 3594              asr R3
 3D02 2794              ror R2
 3D04 3594              asr R3
 3D06 2794              ror R2
 3D08 2092BA01          sts _T_dat_buf+5,R2
 3D0C                   .dbline 2075
 3D0C           ;       T_dat_buf[4]=(T_dat&0x0004)>>2;
 3D0C 8091CF01          lds R24,_T_dat
 3D10 9091D001          lds R25,_T_dat+1
 3D14 8470              andi R24,4
 3D16 9070              andi R25,0
 3D18 1C01              movw R2,R24
 3D1A 3594              asr R3
 3D1C 2794              ror R2
 3D1E 3594              asr R3
 3D20 2794              ror R2
 3D22 2092B901          sts _T_dat_buf+4,R2
 3D26                   .dbline 2076
 3D26           ;       T_dat_buf[3]=(T_dat&0x0002)>>1;
 3D26 8091CF01          lds R24,_T_dat
 3D2A 9091D001          lds R25,_T_dat+1
 3D2E 8270              andi R24,2
 3D30 9070              andi R25,0
 3D32 1C01              movw R2,R24
 3D34 3594              asr R3
 3D36 2794              ror R2
 3D38 2092B801          sts _T_dat_buf+3,R2
 3D3C                   .dbline 2077
 3D3C           ;       T_dat_buf[2]=T_dat&0x0001;
 3D3C 8091CF01          lds R24,_T_dat
 3D40 9091D001          lds R25,_T_dat+1
 3D44 8170              andi R24,1
 3D46 9070              andi R25,0
 3D48 8093B701          sts _T_dat_buf+2,R24
 3D4C                   .dbline 2079
 3D4C           ;       //计算校验位，奇校验
 3D4C           ;       T_dat_buf[1]=1;
 3D4C 81E0              ldi R24,1
 3D4E 8093B601          sts _T_dat_buf+1,R24
 3D52                   .dbline 2080
 3D52           ;       for(L=2;L<22;L++)
 3D52 42E0              ldi R20,2
 3D54 0DC0              xjmp L904
 3D56           L901:
 3D56                   .dbline 2081
 3D56           ;               {T_dat_buf[1]^=T_dat_buf[L];}
 3D56                   .dbline 2081
 3D56 80E0              ldi R24,<_T_dat_buf
 3D58 90E0              ldi R25,>_T_dat_buf
 3D5A E42F              mov R30,R20
 3D5C FF27              clr R31
 3D5E E80F              add R30,R24
 3D60 F91F              adc R31,R25
 3D62 2080              ldd R2,z+0
 3D64 3090B601          lds R3,_T_dat_buf+1
 3D68 3224              eor R3,R2
 3D6A 3092B601          sts _T_dat_buf+1,R3
 3D6E                   .dbline 2081
 3D6E           L902:
 3D6E                   .dbline 2080
 3D6E 4395              inc R20
 3D70           L904:
 3D70                   .dbline 2080
 3D70 4631              cpi R20,22
 3D72 88F3              brlo L901
 3D74           X335:
 3D74                   .dbline 2082
 3D74           ;     DELAY80
 3D74 2224              clr R2
 3D76 3324              clr R3
 3D78 3092B001          sts _Tt+1,R3
 3D7C 2092AF01          sts _Tt,R2
 3D80 09C0              xjmp L909
 3D82           L906:
 3D82                   .dbline 2082
 3D82           L907:
 3D82                   .dbline 2082
 3D82 8091AF01          lds R24,_Tt
 3D86 9091B001          lds R25,_Tt+1
 3D8A 0196              adiw R24,1
 3D8C 9093B001          sts _Tt+1,R25
 3D90 8093AF01          sts _Tt,R24
 3D94           L909:
 3D94                   .dbline 2082
 3D94 8091AF01          lds R24,_Tt
 3D98 9091B001          lds R25,_Tt+1
 3D9C 8032              cpi R24,32
 3D9E E0E0              ldi R30,0
 3DA0 9E07              cpc R25,R30
 3DA2 78F3              brlo L906
 3DA4           X336:
 3DA4                   .dbline 2083
 3DA4           ;     M1_L
 3DA4 82B3              in R24,0x12
 3DA6 8B7F              andi R24,251
 3DA8 82BB              out 0x12,R24
 3DAA                   .dbline 2084
 3DAA           ;       DELAY40
 3DAA 2224              clr R2
 3DAC 3324              clr R3
 3DAE 3092B001          sts _Tt+1,R3
 3DB2 2092AF01          sts _Tt,R2
 3DB6 09C0              xjmp L913
 3DB8           L910:
 3DB8                   .dbline 2084
 3DB8           L911:
 3DB8                   .dbline 2084
 3DB8 8091AF01          lds R24,_Tt
 3DBC 9091B001          lds R25,_Tt+1
 3DC0 0196              adiw R24,1
 3DC2 9093B001          sts _Tt+1,R25
 3DC6 8093AF01          sts _Tt,R24
 3DCA           L913:
 3DCA                   .dbline 2084
 3DCA 8091AF01          lds R24,_Tt
 3DCE 9091B001          lds R25,_Tt+1
 3DD2 8031              cpi R24,16
 3DD4 E0E0              ldi R30,0
 3DD6 9E07              cpc R25,R30
 3DD8 78F3              brlo L910
 3DDA           X337:
 3DDA                   .dbline 2089
 3DDA           ;    
 3DDA           ;    
 3DDA           ;       //同步头,560us
 3DDA           ;       //充电开始，高80us       
 3DDA           ;       M2_H    
 3DDA 919A              sbi 0x12,1
 3DDC                   .dbline 2090
 3DDC           ;       DELAY80
 3DDC 2224              clr R2
 3DDE 3324              clr R3
 3DE0 3092B001          sts _Tt+1,R3
 3DE4 2092AF01          sts _Tt,R2
 3DE8 09C0              xjmp L917
 3DEA           L914:
 3DEA                   .dbline 2090
 3DEA           L915:
 3DEA                   .dbline 2090
 3DEA 8091AF01          lds R24,_Tt
 3DEE 9091B001          lds R25,_Tt+1
 3DF2 0196              adiw R24,1
 3DF4 9093B001          sts _Tt+1,R25
 3DF8 8093AF01          sts _Tt,R24
 3DFC           L917:
 3DFC                   .dbline 2090
 3DFC 8091AF01          lds R24,_Tt
 3E00 9091B001          lds R25,_Tt+1
 3E04 8032              cpi R24,32
 3E06 E0E0              ldi R30,0
 3E08 9E07              cpc R25,R30
 3E0A 78F3              brlo L914
 3E0C           X338:
 3E0C                   .dbline 2091
 3E0C           ;       M2_L   //充电结束       
 3E0C 82B3              in R24,0x12
 3E0E 8D7F              andi R24,253
 3E10 82BB              out 0x12,R24
 3E12                   .dbline 2093
 3E12           ;       //放电开始，低80*6=480us
 3E12           ;       DELAY40
 3E12 2224              clr R2
 3E14 3324              clr R3
 3E16 3092B001          sts _Tt+1,R3
 3E1A 2092AF01          sts _Tt,R2
 3E1E 09C0              xjmp L921
 3E20           L918:
 3E20                   .dbline 2093
 3E20           L919:
 3E20                   .dbline 2093
 3E20 8091AF01          lds R24,_Tt
 3E24 9091B001          lds R25,_Tt+1
 3E28 0196              adiw R24,1
 3E2A 9093B001          sts _Tt+1,R25
 3E2E 8093AF01          sts _Tt,R24
 3E32           L921:
 3E32                   .dbline 2093
 3E32 8091AF01          lds R24,_Tt
 3E36 9091B001          lds R25,_Tt+1
 3E3A 8031              cpi R24,16
 3E3C E0E0              ldi R30,0
 3E3E 9E07              cpc R25,R30
 3E40 78F3              brlo L918
 3E42           X339:
 3E42                   .dbline 2094
 3E42           ;       M1_H    
 3E42 929A              sbi 0x12,2
 3E44                   .dbline 2095
 3E44           ;     DELAY80
 3E44 2224              clr R2
 3E46 3324              clr R3
 3E48 3092B001          sts _Tt+1,R3
 3E4C 2092AF01          sts _Tt,R2
 3E50 09C0              xjmp L925
 3E52           L922:
 3E52                   .dbline 2095
 3E52           L923:
 3E52                   .dbline 2095
 3E52 8091AF01          lds R24,_Tt
 3E56 9091B001          lds R25,_Tt+1
 3E5A 0196              adiw R24,1
 3E5C 9093B001          sts _Tt+1,R25
 3E60 8093AF01          sts _Tt,R24
 3E64           L925:
 3E64                   .dbline 2095
 3E64 8091AF01          lds R24,_Tt
 3E68 9091B001          lds R25,_Tt+1
 3E6C 8032              cpi R24,32
 3E6E E0E0              ldi R30,0
 3E70 9E07              cpc R25,R30
 3E72 78F3              brlo L922
 3E74           X340:
 3E74                   .dbline 2096
 3E74           ;       DELAY80
 3E74 2224              clr R2
 3E76 3324              clr R3
 3E78 3092B001          sts _Tt+1,R3
 3E7C 2092AF01          sts _Tt,R2
 3E80 09C0              xjmp L929
 3E82           L926:
 3E82                   .dbline 2096
 3E82           L927:
 3E82                   .dbline 2096
 3E82 8091AF01          lds R24,_Tt
 3E86 9091B001          lds R25,_Tt+1
 3E8A 0196              adiw R24,1
 3E8C 9093B001          sts _Tt+1,R25
 3E90 8093AF01          sts _Tt,R24
 3E94           L929:
 3E94                   .dbline 2096
 3E94 8091AF01          lds R24,_Tt
 3E98 9091B001          lds R25,_Tt+1
 3E9C 8032              cpi R24,32
 3E9E E0E0              ldi R30,0
 3EA0 9E07              cpc R25,R30
 3EA2 78F3              brlo L926
 3EA4           X341:
 3EA4                   .dbline 2097
 3EA4           ;       DELAY80
 3EA4 2224              clr R2
 3EA6 3324              clr R3
 3EA8 3092B001          sts _Tt+1,R3
 3EAC 2092AF01          sts _Tt,R2
 3EB0 09C0              xjmp L933
 3EB2           L930:
 3EB2                   .dbline 2097
 3EB2           L931:
 3EB2                   .dbline 2097
 3EB2 8091AF01          lds R24,_Tt
 3EB6 9091B001          lds R25,_Tt+1
 3EBA 0196              adiw R24,1
 3EBC 9093B001          sts _Tt+1,R25
 3EC0 8093AF01          sts _Tt,R24
 3EC4           L933:
 3EC4                   .dbline 2097
 3EC4 8091AF01          lds R24,_Tt
 3EC8 9091B001          lds R25,_Tt+1
 3ECC 8032              cpi R24,32
 3ECE E0E0              ldi R30,0
 3ED0 9E07              cpc R25,R30
 3ED2 78F3              brlo L930
 3ED4           X342:
 3ED4                   .dbline 2098
 3ED4           ;       DELAY80
 3ED4 2224              clr R2
 3ED6 3324              clr R3
 3ED8 3092B001          sts _Tt+1,R3
 3EDC 2092AF01          sts _Tt,R2
 3EE0 09C0              xjmp L937
 3EE2           L934:
 3EE2                   .dbline 2098
 3EE2           L935:
 3EE2                   .dbline 2098
 3EE2 8091AF01          lds R24,_Tt
 3EE6 9091B001          lds R25,_Tt+1
 3EEA 0196              adiw R24,1
 3EEC 9093B001          sts _Tt+1,R25
 3EF0 8093AF01          sts _Tt,R24
 3EF4           L937:
 3EF4                   .dbline 2098
 3EF4 8091AF01          lds R24,_Tt
 3EF8 9091B001          lds R25,_Tt+1
 3EFC 8032              cpi R24,32
 3EFE E0E0              ldi R30,0
 3F00 9E07              cpc R25,R30
 3F02 78F3              brlo L934
 3F04           X343:
 3F04                   .dbline 2099
 3F04           ;       DELAY80
 3F04 2224              clr R2
 3F06 3324              clr R3
 3F08 3092B001          sts _Tt+1,R3
 3F0C 2092AF01          sts _Tt,R2
 3F10 09C0              xjmp L941
 3F12           L938:
 3F12                   .dbline 2099
 3F12           L939:
 3F12                   .dbline 2099
 3F12 8091AF01          lds R24,_Tt
 3F16 9091B001          lds R25,_Tt+1
 3F1A 0196              adiw R24,1
 3F1C 9093B001          sts _Tt+1,R25
 3F20 8093AF01          sts _Tt,R24
 3F24           L941:
 3F24                   .dbline 2099
 3F24 8091AF01          lds R24,_Tt
 3F28 9091B001          lds R25,_Tt+1
 3F2C 8032              cpi R24,32
 3F2E E0E0              ldi R30,0
 3F30 9E07              cpc R25,R30
 3F32 78F3              brlo L938
 3F34           X344:
 3F34                   .dbline 2100
 3F34           ;       M1_L    
 3F34 82B3              in R24,0x12
 3F36 8B7F              andi R24,251
 3F38 82BB              out 0x12,R24
 3F3A                   .dbline 2101
 3F3A           ;       DELAY40  //放电结束
 3F3A 2224              clr R2
 3F3C 3324              clr R3
 3F3E 3092B001          sts _Tt+1,R3
 3F42 2092AF01          sts _Tt,R2
 3F46 09C0              xjmp L945
 3F48           L942:
 3F48                   .dbline 2101
 3F48           L943:
 3F48                   .dbline 2101
 3F48 8091AF01          lds R24,_Tt
 3F4C 9091B001          lds R25,_Tt+1
 3F50 0196              adiw R24,1
 3F52 9093B001          sts _Tt+1,R25
 3F56 8093AF01          sts _Tt,R24
 3F5A           L945:
 3F5A                   .dbline 2101
 3F5A 8091AF01          lds R24,_Tt
 3F5E 9091B001          lds R25,_Tt+1
 3F62 8031              cpi R24,16
 3F64 E0E0              ldi R30,0
 3F66 9E07              cpc R25,R30
 3F68 78F3              brlo L942
 3F6A           X345:
 3F6A                   .dbline 2104
 3F6A           ;       
 3F6A           ;      //连续发送 ,全0时每位400us，共8400us，全1时每位240us，共5040us
 3F6A           ;       for(L=21;L>0;L--)
 3F6A 45E1              ldi R20,21
 3F6C 0CC1              xjmp L949
 3F6E           L946:
 3F6E                   .dbline 2105
 3F6E           ;       {   
 3F6E                   .dbline 2106
 3F6E           ;         if(T_dat_buf[L])//1，一高二低
 3F6E 80E0              ldi R24,<_T_dat_buf
 3F70 90E0              ldi R25,>_T_dat_buf
 3F72 E42F              mov R30,R20
 3F74 FF27              clr R31
 3F76 E80F              add R30,R24
 3F78 F91F              adc R31,R25
 3F7A 2080              ldd R2,z+0
 3F7C 2220              tst R2
 3F7E 09F4              brne X368
 3F80 69C0              xjmp L950
 3F82           X368:
 3F82           X346:
 3F82                   .dbline 2107
 3F82           ;         {                             
 3F82                   .dbline 2108
 3F82           ;               M2_H 
 3F82 919A              sbi 0x12,1
 3F84                   .dbline 2109
 3F84           ;               DELAY80
 3F84 2224              clr R2
 3F86 3324              clr R3
 3F88 3092B001          sts _Tt+1,R3
 3F8C 2092AF01          sts _Tt,R2
 3F90 09C0              xjmp L955
 3F92           L952:
 3F92                   .dbline 2109
 3F92           L953:
 3F92                   .dbline 2109
 3F92 8091AF01          lds R24,_Tt
 3F96 9091B001          lds R25,_Tt+1
 3F9A 0196              adiw R24,1
 3F9C 9093B001          sts _Tt+1,R25
 3FA0 8093AF01          sts _Tt,R24
 3FA4           L955:
 3FA4                   .dbline 2109
 3FA4 8091AF01          lds R24,_Tt
 3FA8 9091B001          lds R25,_Tt+1
 3FAC 8032              cpi R24,32
 3FAE E0E0              ldi R30,0
 3FB0 9E07              cpc R25,R30
 3FB2 78F3              brlo L952
 3FB4           X347:
 3FB4                   .dbline 2110
 3FB4           ;               M2_L
 3FB4 82B3              in R24,0x12
 3FB6 8D7F              andi R24,253
 3FB8 82BB              out 0x12,R24
 3FBA                   .dbline 2111
 3FBA           ;                       DELAY40
 3FBA 2224              clr R2
 3FBC 3324              clr R3
 3FBE 3092B001          sts _Tt+1,R3
 3FC2 2092AF01          sts _Tt,R2
 3FC6 09C0              xjmp L959
 3FC8           L956:
 3FC8                   .dbline 2111
 3FC8           L957:
 3FC8                   .dbline 2111
 3FC8 8091AF01          lds R24,_Tt
 3FCC 9091B001          lds R25,_Tt+1
 3FD0 0196              adiw R24,1
 3FD2 9093B001          sts _Tt+1,R25
 3FD6 8093AF01          sts _Tt,R24
 3FDA           L959:
 3FDA                   .dbline 2111
 3FDA 8091AF01          lds R24,_Tt
 3FDE 9091B001          lds R25,_Tt+1
 3FE2 8031              cpi R24,16
 3FE4 E0E0              ldi R30,0
 3FE6 9E07              cpc R25,R30
 3FE8 78F3              brlo L956
 3FEA           X348:
 3FEA                   .dbline 2112
 3FEA           ;               M1_H       
 3FEA 929A              sbi 0x12,2
 3FEC                   .dbline 2113
 3FEC           ;               DELAY80
 3FEC 2224              clr R2
 3FEE 3324              clr R3
 3FF0 3092B001          sts _Tt+1,R3
 3FF4 2092AF01          sts _Tt,R2
 3FF8 09C0              xjmp L963
 3FFA           L960:
 3FFA                   .dbline 2113
 3FFA           L961:
 3FFA                   .dbline 2113
 3FFA 8091AF01          lds R24,_Tt
 3FFE 9091B001          lds R25,_Tt+1
 4002 0196              adiw R24,1
 4004 9093B001          sts _Tt+1,R25
 4008 8093AF01          sts _Tt,R24
 400C           L963:
 400C                   .dbline 2113
 400C 8091AF01          lds R24,_Tt
 4010 9091B001          lds R25,_Tt+1
 4014 8032              cpi R24,32
 4016 E0E0              ldi R30,0
 4018 9E07              cpc R25,R30
 401A 78F3              brlo L960
 401C           X349:
 401C                   .dbline 2114
 401C           ;                       M1_L
 401C 82B3              in R24,0x12
 401E 8B7F              andi R24,251
 4020 82BB              out 0x12,R24
 4022                   .dbline 2115
 4022           ;                       DELAY40
 4022 2224              clr R2
 4024 3324              clr R3
 4026 3092B001          sts _Tt+1,R3
 402A 2092AF01          sts _Tt,R2
 402E 09C0              xjmp L967
 4030           L964:
 4030                   .dbline 2115
 4030           L965:
 4030                   .dbline 2115
 4030 8091AF01          lds R24,_Tt
 4034 9091B001          lds R25,_Tt+1
 4038 0196              adiw R24,1
 403A 9093B001          sts _Tt+1,R25
 403E 8093AF01          sts _Tt,R24
 4042           L967:
 4042                   .dbline 2115
 4042 8091AF01          lds R24,_Tt
 4046 9091B001          lds R25,_Tt+1
 404A 8031              cpi R24,16
 404C E0E0              ldi R30,0
 404E 9E07              cpc R25,R30
 4050 78F3              brlo L964
 4052           X350:
 4052                   .dbline 2116
 4052           ;               } 
 4052 98C0              xjmp L951
 4054           L950:
 4054                   .dbline 2118
 4054           ;        else           //0，一高四低                                           
 4054           ;         {
 4054                   .dbline 2119
 4054           ;                       M2_H 
 4054 919A              sbi 0x12,1
 4056                   .dbline 2120
 4056           ;               DELAY80
 4056 2224              clr R2
 4058 3324              clr R3
 405A 3092B001          sts _Tt+1,R3
 405E 2092AF01          sts _Tt,R2
 4062 09C0              xjmp L971
 4064           L968:
 4064                   .dbline 2120
 4064           L969:
 4064                   .dbline 2120
 4064 8091AF01          lds R24,_Tt
 4068 9091B001          lds R25,_Tt+1
 406C 0196              adiw R24,1
 406E 9093B001          sts _Tt+1,R25
 4072 8093AF01          sts _Tt,R24
 4076           L971:
 4076                   .dbline 2120
 4076 8091AF01          lds R24,_Tt
 407A 9091B001          lds R25,_Tt+1
 407E 8032              cpi R24,32
 4080 E0E0              ldi R30,0
 4082 9E07              cpc R25,R30
 4084 78F3              brlo L968
 4086           X351:
 4086                   .dbline 2121
 4086           ;               M2_L
 4086 82B3              in R24,0x12
 4088 8D7F              andi R24,253
 408A 82BB              out 0x12,R24
 408C                   .dbline 2122
 408C           ;                       DELAY40
 408C 2224              clr R2
 408E 3324              clr R3
 4090 3092B001          sts _Tt+1,R3
 4094 2092AF01          sts _Tt,R2
 4098 09C0              xjmp L975
 409A           L972:
 409A                   .dbline 2122
 409A           L973:
 409A                   .dbline 2122
 409A 8091AF01          lds R24,_Tt
 409E 9091B001          lds R25,_Tt+1
 40A2 0196              adiw R24,1
 40A4 9093B001          sts _Tt+1,R25
 40A8 8093AF01          sts _Tt,R24
 40AC           L975:
 40AC                   .dbline 2122
 40AC 8091AF01          lds R24,_Tt
 40B0 9091B001          lds R25,_Tt+1
 40B4 8031              cpi R24,16
 40B6 E0E0              ldi R30,0
 40B8 9E07              cpc R25,R30
 40BA 78F3              brlo L972
 40BC           X352:
 40BC                   .dbline 2123
 40BC           ;               M1_H       
 40BC 929A              sbi 0x12,2
 40BE                   .dbline 2124
 40BE           ;               DELAY80
 40BE 2224              clr R2
 40C0 3324              clr R3
 40C2 3092B001          sts _Tt+1,R3
 40C6 2092AF01          sts _Tt,R2
 40CA 09C0              xjmp L979
 40CC           L976:
 40CC                   .dbline 2124
 40CC           L977:
 40CC                   .dbline 2124
 40CC 8091AF01          lds R24,_Tt
 40D0 9091B001          lds R25,_Tt+1
 40D4 0196              adiw R24,1
 40D6 9093B001          sts _Tt+1,R25
 40DA 8093AF01          sts _Tt,R24
 40DE           L979:
 40DE                   .dbline 2124
 40DE 8091AF01          lds R24,_Tt
 40E2 9091B001          lds R25,_Tt+1
 40E6 8032              cpi R24,32
 40E8 E0E0              ldi R30,0
 40EA 9E07              cpc R25,R30
 40EC 78F3              brlo L976
 40EE           X353:
 40EE                   .dbline 2125
 40EE           ;                       DELAY80
 40EE 2224              clr R2
 40F0 3324              clr R3
 40F2 3092B001          sts _Tt+1,R3
 40F6 2092AF01          sts _Tt,R2
 40FA 09C0              xjmp L983
 40FC           L980:
 40FC                   .dbline 2125
 40FC           L981:
 40FC                   .dbline 2125
 40FC 8091AF01          lds R24,_Tt
 4100 9091B001          lds R25,_Tt+1
 4104 0196              adiw R24,1
 4106 9093B001          sts _Tt+1,R25
 410A 8093AF01          sts _Tt,R24
 410E           L983:
 410E                   .dbline 2125
 410E 8091AF01          lds R24,_Tt
 4112 9091B001          lds R25,_Tt+1
 4116 8032              cpi R24,32
 4118 E0E0              ldi R30,0
 411A 9E07              cpc R25,R30
 411C 78F3              brlo L980
 411E           X354:
 411E                   .dbline 2126
 411E           ;                       DELAY80
 411E 2224              clr R2
 4120 3324              clr R3
 4122 3092B001          sts _Tt+1,R3
 4126 2092AF01          sts _Tt,R2
 412A 09C0              xjmp L987
 412C           L984:
 412C                   .dbline 2126
 412C           L985:
 412C                   .dbline 2126
 412C 8091AF01          lds R24,_Tt
 4130 9091B001          lds R25,_Tt+1
 4134 0196              adiw R24,1
 4136 9093B001          sts _Tt+1,R25
 413A 8093AF01          sts _Tt,R24
 413E           L987:
 413E                   .dbline 2126
 413E 8091AF01          lds R24,_Tt
 4142 9091B001          lds R25,_Tt+1
 4146 8032              cpi R24,32
 4148 E0E0              ldi R30,0
 414A 9E07              cpc R25,R30
 414C 78F3              brlo L984
 414E           X355:
 414E                   .dbline 2127
 414E           ;                       M1_L
 414E 82B3              in R24,0x12
 4150 8B7F              andi R24,251
 4152 82BB              out 0x12,R24
 4154                   .dbline 2128
 4154           ;                       DELAY40
 4154 2224              clr R2
 4156 3324              clr R3
 4158 3092B001          sts _Tt+1,R3
 415C 2092AF01          sts _Tt,R2
 4160 09C0              xjmp L991
 4162           L988:
 4162                   .dbline 2128
 4162           L989:
 4162                   .dbline 2128
 4162 8091AF01          lds R24,_Tt
 4166 9091B001          lds R25,_Tt+1
 416A 0196              adiw R24,1
 416C 9093B001          sts _Tt+1,R25
 4170 8093AF01          sts _Tt,R24
 4174           L991:
 4174                   .dbline 2128
 4174 8091AF01          lds R24,_Tt
 4178 9091B001          lds R25,_Tt+1
 417C 8031              cpi R24,16
 417E E0E0              ldi R30,0
 4180 9E07              cpc R25,R30
 4182 78F3              brlo L988
 4184           X356:
 4184                   .dbline 2129
 4184           ;               }
 4184           L951:
 4184                   .dbline 2130
 4184           ;     }            
 4184           L947:
 4184                   .dbline 2104
 4184 4A95              dec R20
 4186           L949:
 4186                   .dbline 2104
 4186 80E0              ldi R24,0
 4188 8417              cp R24,R20
 418A 08F4              brsh X369
 418C F0CE              xjmp L946
 418E           X369:
 418E           X357:
 418E                   .dbline 2132
 418E           ;                  //结束位，一高八低，720us
 418E           ;                   M2_H 
 418E 919A              sbi 0x12,1
 4190                   .dbline 2133
 4190           ;                   DELAY80
 4190 2224              clr R2
 4192 3324              clr R3
 4194 3092B001          sts _Tt+1,R3
 4198 2092AF01          sts _Tt,R2
 419C 09C0              xjmp L995
 419E           L992:
 419E                   .dbline 2133
 419E           L993:
 419E                   .dbline 2133
 419E 8091AF01          lds R24,_Tt
 41A2 9091B001          lds R25,_Tt+1
 41A6 0196              adiw R24,1
 41A8 9093B001          sts _Tt+1,R25
 41AC 8093AF01          sts _Tt,R24
 41B0           L995:
 41B0                   .dbline 2133
 41B0 8091AF01          lds R24,_Tt
 41B4 9091B001          lds R25,_Tt+1
 41B8 8032              cpi R24,32
 41BA E0E0              ldi R30,0
 41BC 9E07              cpc R25,R30
 41BE 78F3              brlo L992
 41C0           X358:
 41C0                   .dbline 2134
 41C0           ;               M2_L
 41C0 82B3              in R24,0x12
 41C2 8D7F              andi R24,253
 41C4 82BB              out 0x12,R24
 41C6                   .dbline 2135
 41C6           ;                       DELAY40
 41C6 2224              clr R2
 41C8 3324              clr R3
 41CA 3092B001          sts _Tt+1,R3
 41CE 2092AF01          sts _Tt,R2
 41D2 09C0              xjmp L999
 41D4           L996:
 41D4                   .dbline 2135
 41D4           L997:
 41D4                   .dbline 2135
 41D4 8091AF01          lds R24,_Tt
 41D8 9091B001          lds R25,_Tt+1
 41DC 0196              adiw R24,1
 41DE 9093B001          sts _Tt+1,R25
 41E2 8093AF01          sts _Tt,R24
 41E6           L999:
 41E6                   .dbline 2135
 41E6 8091AF01          lds R24,_Tt
 41EA 9091B001          lds R25,_Tt+1
 41EE 8031              cpi R24,16
 41F0 E0E0              ldi R30,0
 41F2 9E07              cpc R25,R30
 41F4 78F3              brlo L996
 41F6           X359:
 41F6                   .dbline 2136
 41F6           ;               M1_H       
 41F6 929A              sbi 0x12,2
 41F8                   .dbline 2137
 41F8           ;               DELAY80
 41F8 2224              clr R2
 41FA 3324              clr R3
 41FC 3092B001          sts _Tt+1,R3
 4200 2092AF01          sts _Tt,R2
 4204 09C0              xjmp L1003
 4206           L1000:
 4206                   .dbline 2137
 4206           L1001:
 4206                   .dbline 2137
 4206 8091AF01          lds R24,_Tt
 420A 9091B001          lds R25,_Tt+1
 420E 0196              adiw R24,1
 4210 9093B001          sts _Tt+1,R25
 4214 8093AF01          sts _Tt,R24
 4218           L1003:
 4218                   .dbline 2137
 4218 8091AF01          lds R24,_Tt
 421C 9091B001          lds R25,_Tt+1
 4220 8032              cpi R24,32
 4222 E0E0              ldi R30,0
 4224 9E07              cpc R25,R30
 4226 78F3              brlo L1000
 4228           X360:
 4228                   .dbline 2138
 4228           ;                       DELAY80
 4228 2224              clr R2
 422A 3324              clr R3
 422C 3092B001          sts _Tt+1,R3
 4230 2092AF01          sts _Tt,R2
 4234 09C0              xjmp L1007
 4236           L1004:
 4236                   .dbline 2138
 4236           L1005:
 4236                   .dbline 2138
 4236 8091AF01          lds R24,_Tt
 423A 9091B001          lds R25,_Tt+1
 423E 0196              adiw R24,1
 4240 9093B001          sts _Tt+1,R25
 4244 8093AF01          sts _Tt,R24
 4248           L1007:
 4248                   .dbline 2138
 4248 8091AF01          lds R24,_Tt
 424C 9091B001          lds R25,_Tt+1
 4250 8032              cpi R24,32
 4252 E0E0              ldi R30,0
 4254 9E07              cpc R25,R30
 4256 78F3              brlo L1004
 4258           X361:
 4258                   .dbline 2139
 4258           ;                       DELAY80
 4258 2224              clr R2
 425A 3324              clr R3
 425C 3092B001          sts _Tt+1,R3
 4260 2092AF01          sts _Tt,R2
 4264 09C0              xjmp L1011
 4266           L1008:
 4266                   .dbline 2139
 4266           L1009:
 4266                   .dbline 2139
 4266 8091AF01          lds R24,_Tt
 426A 9091B001          lds R25,_Tt+1
 426E 0196              adiw R24,1
 4270 9093B001          sts _Tt+1,R25
 4274 8093AF01          sts _Tt,R24
 4278           L1011:
 4278                   .dbline 2139
 4278 8091AF01          lds R24,_Tt
 427C 9091B001          lds R25,_Tt+1
 4280 8032              cpi R24,32
 4282 E0E0              ldi R30,0
 4284 9E07              cpc R25,R30
 4286 78F3              brlo L1008
 4288           X362:
 4288                   .dbline 2140
 4288           ;                       DELAY80
 4288 2224              clr R2
 428A 3324              clr R3
 428C 3092B001          sts _Tt+1,R3
 4290 2092AF01          sts _Tt,R2
 4294 09C0              xjmp L1015
 4296           L1012:
 4296                   .dbline 2140
 4296           L1013:
 4296                   .dbline 2140
 4296 8091AF01          lds R24,_Tt
 429A 9091B001          lds R25,_Tt+1
 429E 0196              adiw R24,1
 42A0 9093B001          sts _Tt+1,R25
 42A4 8093AF01          sts _Tt,R24
 42A8           L1015:
 42A8                   .dbline 2140
 42A8 8091AF01          lds R24,_Tt
 42AC 9091B001          lds R25,_Tt+1
 42B0 8032              cpi R24,32
 42B2 E0E0              ldi R30,0
 42B4 9E07              cpc R25,R30
 42B6 78F3              brlo L1012
 42B8           X363:
 42B8                   .dbline 2141
 42B8           ;                       DELAY80
 42B8 2224              clr R2
 42BA 3324              clr R3
 42BC 3092B001          sts _Tt+1,R3
 42C0 2092AF01          sts _Tt,R2
 42C4 09C0              xjmp L1019
 42C6           L1016:
 42C6                   .dbline 2141
 42C6           L1017:
 42C6                   .dbline 2141
 42C6 8091AF01          lds R24,_Tt
 42CA 9091B001          lds R25,_Tt+1
 42CE 0196              adiw R24,1
 42D0 9093B001          sts _Tt+1,R25
 42D4 8093AF01          sts _Tt,R24
 42D8           L1019:
 42D8                   .dbline 2141
 42D8 8091AF01          lds R24,_Tt
 42DC 9091B001          lds R25,_Tt+1
 42E0 8032              cpi R24,32
 42E2 E0E0              ldi R30,0
 42E4 9E07              cpc R25,R30
 42E6 78F3              brlo L1016
 42E8           X364:
 42E8                   .dbline 2142
 42E8           ;                       DELAY80
 42E8 2224              clr R2
 42EA 3324              clr R3
 42EC 3092B001          sts _Tt+1,R3
 42F0 2092AF01          sts _Tt,R2
 42F4 09C0              xjmp L1023
 42F6           L1020:
 42F6                   .dbline 2142
 42F6           L1021:
 42F6                   .dbline 2142
 42F6 8091AF01          lds R24,_Tt
 42FA 9091B001          lds R25,_Tt+1
 42FE 0196              adiw R24,1
 4300 9093B001          sts _Tt+1,R25
 4304 8093AF01          sts _Tt,R24
 4308           L1023:
 4308                   .dbline 2142
 4308 8091AF01          lds R24,_Tt
 430C 9091B001          lds R25,_Tt+1
 4310 8032              cpi R24,32
 4312 E0E0              ldi R30,0
 4314 9E07              cpc R25,R30
 4316 78F3              brlo L1020
 4318           X365:
 4318                   .dbline 2143
 4318           ;                       DELAY80
 4318 2224              clr R2
 431A 3324              clr R3
 431C 3092B001          sts _Tt+1,R3
 4320 2092AF01          sts _Tt,R2
 4324 09C0              xjmp L1027
 4326           L1024:
 4326                   .dbline 2143
 4326           L1025:
 4326                   .dbline 2143
 4326 8091AF01          lds R24,_Tt
 432A 9091B001          lds R25,_Tt+1
 432E 0196              adiw R24,1
 4330 9093B001          sts _Tt+1,R25
 4334 8093AF01          sts _Tt,R24
 4338           L1027:
 4338                   .dbline 2143
 4338 8091AF01          lds R24,_Tt
 433C 9091B001          lds R25,_Tt+1
 4340 8032              cpi R24,32
 4342 E0E0              ldi R30,0
 4344 9E07              cpc R25,R30
 4346 78F3              brlo L1024
 4348           X366:
 4348                   .dbline 2144
 4348           ;                       M1_L
 4348 82B3              in R24,0x12
 434A 8B7F              andi R24,251
 434C 82BB              out 0x12,R24
 434E                   .dbline 2145
 434E           ;                       DELAY40
 434E 2224              clr R2
 4350 3324              clr R3
 4352 3092B001          sts _Tt+1,R3
 4356 2092AF01          sts _Tt,R2
 435A 09C0              xjmp L1031
 435C           L1028:
 435C                   .dbline 2145
 435C           L1029:
 435C                   .dbline 2145
 435C 8091AF01          lds R24,_Tt
 4360 9091B001          lds R25,_Tt+1
 4364 0196              adiw R24,1
 4366 9093B001          sts _Tt+1,R25
 436A 8093AF01          sts _Tt,R24
 436E           L1031:
 436E                   .dbline 2145
 436E 8091AF01          lds R24,_Tt
 4372 9091B001          lds R25,_Tt+1
 4376 8031              cpi R24,16
 4378 E0E0              ldi R30,0
 437A 9E07              cpc R25,R30
 437C 78F3              brlo L1028
 437E           X367:
 437E                   .dbline 2147
 437E           ;       
 437E           ;       EIFR|=0x08;//清INT3中断标志 
 437E 88B7              in R24,0x38
 4380 8860              ori R24,8
 4382 88BF              out 0x38,R24
 4384                   .dbline 2148
 4384           ;       SREG|=0x80; //开总中断
 4384 7894              bset 7
 4386                   .dbline -2
 4386           L879:
 4386                   .dbline 0 ; func end
 4386 4991              ld R20,y+
 4388 0895              ret
 438A                   .dbsym r L 20 c
 438A                   .dbend
 438A                   .dbfunc e EEPROM_write _EEPROM_write fV
 438A           ;           Data -> R18
 438A           ;        Address -> R16,R17
                        .even
 438A           _EEPROM_write::
 438A                   .dbline -1
 438A                   .dbline 2154
 438A           ; }
 438A           ; 
 438A           ; 
 438A           ; 
 438A           ; void EEPROM_write(unsigned int Address,unsigned char Data)    //内部EEPROM写
 438A           ; {//时钟频率为1MHz，典型的EEPROM字节写耗时约8.5ms
 438A           L1033:
 438A                   .dbline 2155
 438A           ;     while(EECR&0x02);                   // 等待上一次写操作结束
 438A           L1034:
 438A                   .dbline 2155
 438A E199              sbic 0x1c,1
 438C FECF              rjmp L1033
 438E           X370:
 438E                   .dbline 2156
 438E           ;     EEAR=Address;
 438E 1FBB              out 0x1f,R17
 4390 0EBB              out 0x1e,R16
 4392                   .dbline 2157
 4392           ;     EEDR=Data;                                // 设置地址和数据寄存器
 4392 2DBB              out 0x1d,R18
 4394                   .dbline 2158
 4394           ;     EECR|=0x04;                         //置位EEMWE
 4394 E29A              sbi 0x1c,2
 4396                   .dbline 2159
 4396           ;     EECR|=0x02;                         //置位EEWE 以启动写操作
 4396 E19A              sbi 0x1c,1
 4398                   .dbline -2
 4398           L1032:
 4398                   .dbline 0 ; func end
 4398 0895              ret
 439A                   .dbsym r Data 18 c
 439A                   .dbsym r Address 16 i
 439A                   .dbend
 439A                   .dbfunc e EEPROM_read _EEPROM_read fc
 439A           ;        Address -> R16,R17
                        .even
 439A           _EEPROM_read::
 439A                   .dbline -1
 439A                   .dbline 2163
 439A           ; }
 439A           ; 
 439A           ; unsigned char EEPROM_read(unsigned int Address)                               //内部EEPROM读
 439A           ; {
 439A           L1037:
 439A                   .dbline 2164
 439A           ;     while(EECR&0x02);                                 //等待上一次操作结束
 439A           L1038:
 439A                   .dbline 2164
 439A E199              sbic 0x1c,1
 439C FECF              rjmp L1037
 439E           X371:
 439E                   .dbline 2165
 439E           ;     EEAR = Address;                     //设置地址寄存器                                              
 439E 1FBB              out 0x1f,R17
 43A0 0EBB              out 0x1e,R16
 43A2                   .dbline 2166
 43A2           ;       EECR|=0x01;                                     //设置EERE 以启动读操作
 43A2 E09A              sbi 0x1c,0
 43A4                   .dbline 2167
 43A4           ;     return EEDR;                              //自数据寄存器返回数据
 43A4 0DB3              in R16,0x1d
 43A6                   .dbline -2
 43A6           L1036:
 43A6                   .dbline 0 ; func end
 43A6 0895              ret
 43A8                   .dbsym r Address 16 i
 43A8                   .dbend
 43A8                   .dbfunc e crc16 _crc16 fV
 43A8           ;             ii -> R20,R21
 43A8           ;             ch -> R10
 43A8           ;             cl -> R22
 43A8           ;         savelo -> R14
 43A8           ;         savehi -> y+0
 43A8           ;           flag -> R12,R13
 43A8           ;         length -> R18,R19
 43A8           ;         r_data -> y+11
                        .even
 43A8           _crc16::
 43A8 0E940000          xcall push_arg4
 43AC 0E940000          xcall push_xgsetF0FC
 43B0 2197              sbiw R28,1
 43B2                   .dbline -1
 43B2                   .dbline 2171
 43B2           ; }    
 43B2           ; 
 43B2           ; void crc16(unsigned char r_data[],unsigned int length)
 43B2           ; {
 43B2                   .dbline 2175
 43B2           ;         unsigned char cl,ch;
 43B2           ;         unsigned char savehi,savelo;
 43B2           ;         int ii,flag;
 43B2           ;         crc16hi=0xFF;
 43B2 8FEF              ldi R24,255
 43B4 80931300          sts _crc16hi,R24
 43B8                   .dbline 2176
 43B8           ;         crc16lo=0xFF;
 43B8 80931200          sts _crc16lo,R24
 43BC                   .dbline 2177
 43BC           ;         cl=0x1;
 43BC 61E0              ldi R22,1
 43BE                   .dbline 2178
 43BE           ;         ch=0xA0;
 43BE 80EA              ldi R24,160
 43C0 A82E              mov R10,R24
 43C2                   .dbline 2179
 43C2           ;         for (ii=0;ii<length-2;ii++)
 43C2 4427              clr R20
 43C4 5527              clr R21
 43C6 38C0              xjmp L1044
 43C8           L1041:
 43C8                   .dbline 2180
 43C8           ;         {
 43C8                   .dbline 2181
 43C8           ;             crc16lo=(crc16lo ^ r_data[ii]);
 43C8 FA01              movw R30,R20
 43CA 0B84              ldd R0,y+11
 43CC 1C84              ldd R1,y+12
 43CE E00D              add R30,R0
 43D0 F11D              adc R31,R1
 43D2 2080              ldd R2,z+0
 43D4 30901200          lds R3,_crc16lo
 43D8 3224              eor R3,R2
 43DA 30921200          sts _crc16lo,R3
 43DE                   .dbline 2182
 43DE           ;                 for (flag=0;flag<8;flag++)
 43DE CC24              clr R12
 43E0 DD24              clr R13
 43E2           L1045:
 43E2                   .dbline 2183
 43E2           ;                 {
 43E2                   .dbline 2184
 43E2           ;                        savehi=crc16hi;
 43E2 20901300          lds R2,_crc16hi
 43E6 2882              std y+0,R2
 43E8                   .dbline 2185
 43E8           ;                         savelo=crc16lo;
 43E8 E0901200          lds R14,_crc16lo
 43EC                   .dbline 2186
 43EC           ;                        crc16hi=(crc16hi>>1);
 43EC 2694              lsr R2
 43EE 20921300          sts _crc16hi,R2
 43F2                   .dbline 2187
 43F2           ;                        crc16lo=(crc16lo>>1);
 43F2 2E2C              mov R2,R14
 43F4 2694              lsr R2
 43F6 20921200          sts _crc16lo,R2
 43FA                   .dbline 2188
 43FA           ;                         if ((savehi & 0x01)==0x01)
 43FA 8881              ldd R24,y+0
 43FC 8170              andi R24,1
 43FE 8130              cpi R24,1
 4400 21F4              brne L1049
 4402           X372:
 4402                   .dbline 2189
 4402           ;                                 crc16lo=(crc16lo | 0x80);
 4402 822D              mov R24,R2
 4404 8068              ori R24,128
 4406 80931200          sts _crc16lo,R24
 440A           L1049:
 440A                   .dbline 2190
 440A           ;                         if        ((savelo & 0x01)==0x01)
 440A 8E2D              mov R24,R14
 440C 8170              andi R24,1
 440E 8130              cpi R24,1
 4410 51F4              brne L1051
 4412           X373:
 4412                   .dbline 2191
 4412           ;                         {
 4412                   .dbline 2192
 4412           ;                                 crc16hi = (crc16hi ^ ch);
 4412 20901300          lds R2,_crc16hi
 4416 2A24              eor R2,R10
 4418 20921300          sts _crc16hi,R2
 441C                   .dbline 2193
 441C           ;                                                               crc16lo = (crc16lo ^ cl);
 441C 20901200          lds R2,_crc16lo
 4420 2626              eor R2,R22
 4422 20921200          sts _crc16lo,R2
 4426                   .dbline 2194
 4426           ;                         }        
 4426           L1051:
 4426                   .dbline 2195
 4426           ;                 }
 4426           L1046:
 4426                   .dbline 2182
 4426 C601              movw R24,R12
 4428 0196              adiw R24,1
 442A 6C01              movw R12,R24
 442C                   .dbline 2182
 442C 8830              cpi R24,8
 442E E0E0              ldi R30,0
 4430 9E07              cpc R25,R30
 4432 BCF2              brlt L1045
 4434           X374:
 4434                   .dbline 2196
 4434           ;         }
 4434           L1042:
 4434                   .dbline 2179
 4434 4F5F              subi R20,255  ; offset = 1
 4436 5F4F              sbci R21,255
 4438           L1044:
 4438                   .dbline 2179
 4438 C901              movw R24,R18
 443A 0297              sbiw R24,2
 443C 4817              cp R20,R24
 443E 5907              cpc R21,R25
 4440 08F4              brsh X376
 4442 C2CF              xjmp L1041
 4444           X376:
 4444           X375:
 4444                   .dbline -2
 4444           L1040:
 4444                   .dbline 0 ; func end
 4444 2196              adiw R28,1
 4446 0E940000          xcall pop_xgsetF0FC
 444A 2496              adiw R28,4
 444C 0895              ret
 444E                   .dbsym r ii 20 I
 444E                   .dbsym r ch 10 c
 444E                   .dbsym r cl 22 c
 444E                   .dbsym r savelo 14 c
 444E                   .dbsym l savehi 0 c
 444E                   .dbsym r flag 12 I
 444E                   .dbsym r length 18 i
 444E                   .dbsym l r_data 11 pc
 444E                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile D:\chen\Core\FirmWare_CT\CTZK_PIC\main.c
 0000           _crc16array::
 0000                   .blkb 18
 0012                   .dbsym e crc16array _crc16array A[18:18]c
 0012           _crc16lo::
 0012                   .blkb 1
 0013                   .dbsym e crc16lo _crc16lo c
 0013           _crc16hi::
 0013                   .blkb 1
 0014                   .dbsym e crc16hi _crc16hi c
 0014           _lfib::
 0014                   .blkb 4
 0018                   .dbsym e lfib _lfib l
 0018           _bf::
 0018                   .blkb 2
 001A                   .dbsym e bf _bf i
 001A           _CompCounter::
 001A                   .blkb 2
 001C                   .dbsym e CompCounter _CompCounter i
 001C           _coeff_count::
 001C                   .blkb 2
 001E                   .dbsym e coeff_count _coeff_count i
 001E           _coeff_len::
 001E                   .blkb 2
 0020                   .dbsym e coeff_len _coeff_len i
 0020           _EEPAdd::
 0020                   .blkb 1
 0021                   .dbsym e EEPAdd _EEPAdd c
 0021           _Uart0TxData::
 0021                   .blkb 74
 006B                   .dbsym e Uart0TxData _Uart0TxData A[74:74]c
 006B           _coeffdata::
 006B                   .blkb 320
 01AB                   .dbsym e coeffdata _coeffdata A[320:320]c
 01AB           _T2cn::
 01AB                   .blkb 2
 01AD                   .dbsym e T2cn _T2cn i
 01AD           _k::
 01AD                   .blkb 2
 01AF                   .dbsym e k _k i
 01AF           _Tt::
 01AF                   .blkb 2
 01B1                   .dbsym e Tt _Tt i
 01B1           _IntFlag::
 01B1                   .blkb 1
 01B2                   .dbsym e IntFlag _IntFlag c
 01B2           _Int_count::
 01B2                   .blkb 1
 01B3                   .dbsym e Int_count _Int_count c
 01B3           _DataFlag::
 01B3                   .blkb 2
 01B5                   .dbsym e DataFlag _DataFlag i
 01B5           _T_dat_buf::
 01B5                   .blkb 22
 01CB                   .dbsym e T_dat_buf _T_dat_buf A[22:22]c
 01CB           _TimeOutFlag::
 01CB                   .blkb 1
 01CC                   .dbsym e TimeOutFlag _TimeOutFlag c
 01CC           _T_com::
 01CC                   .blkb 1
 01CD                   .dbsym e T_com _T_com c
 01CD           _R_dat::
 01CD                   .blkb 2
 01CF                   .dbsym e R_dat _R_dat I
 01CF           _T_dat::
 01CF                   .blkb 2
 01D1                   .dbsym e T_dat _T_dat I
 01D1           _Rx::
 01D1                   .blkb 18
 01E3                   .dbsym e Rx _Rx A[18:18]c
 01E3           _Uart0RxCounter::
 01E3                   .blkb 1
 01E4                   .dbsym e Uart0RxCounter _Uart0RxCounter c
 01E4           _Uart0RxData::
 01E4                   .blkb 74
 022E                   .dbsym e Uart0RxData _Uart0RxData A[74:74]c
 022E           _Timer0Counter::
 022E                   .blkb 2
 0230                   .dbsym e Timer0Counter _Timer0Counter i
 0230           _T_Flag::
 0230                   .blkb 1
 0231                   .dbsym e T_Flag _T_Flag c
 0231           _MotorIdelCur::
 0231                   .blkb 1
 0232                   .dbsym e MotorIdelCur _MotorIdelCur c
 0232           _MotorIdelGear::
 0232                   .blkb 1
 0233                   .dbsym e MotorIdelGear _MotorIdelGear c
 0233           _Motor2Thr::
 0233                   .blkb 1
 0234                   .dbsym e Motor2Thr _Motor2Thr c
 0234           _Motor1Thr::
 0234                   .blkb 1
 0235                   .dbsym e Motor1Thr _Motor1Thr c
 0235           _Motor2Gear::
 0235                   .blkb 1
 0236                   .dbsym e Motor2Gear _Motor2Gear c
 0236           _Motor1Gear::
 0236                   .blkb 1
 0237                   .dbsym e Motor1Gear _Motor1Gear c
 0237           _Motor2Status::
 0237                   .blkb 2
 0239                   .dbstruct 0 2 .1
 0239                   .dbfield 0 PWM F[0:1]
 0239                   .dbfield 0 DIR F[1:1]
 0239                   .dbfield 0 BrokenStop F[2:1]
 0239                   .dbfield 0 CommandStop F[3:1]
 0239                   .dbfield 0 OverCurrent F[4:1]
 0239                   .dbfield 0 UnderVoltage F[5:1]
 0239                   .dbfield 0 StartResult F[6:2]
 0239                   .dbfield 0 ThisCurrent F[8:8]
 0239                   .dbend
 0239                   .dbunion 0 2 MotorStatus
 0239                   .dbfield 0 i i
 0239                   .dbfield 0 s S[.1]
 0239                   .dbend
 0239                   .dbsym e Motor2Status _Motor2Status S[MotorStatus]
 0239           _Motor1Status::
 0239                   .blkb 2
 023B                   .dbsym e Motor1Status _Motor1Status S[MotorStatus]
 023B           _myFIB::
 023B                   .blkb 4
 023F                   .dbunion 0 4 FIB
 023F                   .dbfield 0 f D
 023F                   .dbfield 0 i A[4:2]i
 023F                   .dbfield 0 b A[4:4]c
 023F                   .dbend
 023F                   .dbsym e myFIB _myFIB S[FIB]
                        .area lit(rom, con, rel)
 0000           L395:
 0000 00000040          .word 0x0,0x4000
 0004           L394:
 0004 00008043          .word 0x0,0x4380
 0008           L393:
 0008 FE548742          .word 0x54fe,0x4287
 000C           L392:
 000C 00002040          .word 0x0,0x4020
 0010           L146:
 0010 1DC9A53F          .word 0xc91d,0x3fa5
 0014           L136:
 0014 0000FA40          .word 0x0,0x40fa
 0018           ; }
